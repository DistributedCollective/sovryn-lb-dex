{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "Uint128x128Math__PowUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_GetIdFromPrice",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapExactTokensForTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapNATIVEForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactNATIVE",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SwapTokensForExactTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:135;1903:54;;2005:17;555:19551:134;2005:17:135;;555:19551:134;2005:17:135;;;-1:-1:-1;;;3126:44:3;2005:17:135;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:135;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:135;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:135;;;555:19551:134;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:147;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:147;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:147:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:147;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:147:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:147;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:147:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:147;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:147:o;:::-;555:19551:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610620001df5760003560e01c806372b01c7a11620000ff578063b0464fdc1162000095578063ba414fa6116200006c578063ba414fa61462000503578063e20c9f71146200051b578063fa7626d41462000533578063fecaa223146200054f57600080fd5b8063b0464fdc14620004ae578063b5508aa914620004c6578063b89e023314620004de57600080fd5b8063889be5b711620000d6578063889be5b714620004105780638f8d57ea146200044a578063916a17c61462000462578063a7aa85e9146200048957600080fd5b806372b01c7a14620003b95780637594f3a114620003d157806385226c8114620003e957600080fd5b80633e5e3c2311620001755780634415cf9d116200014c5780634415cf9d146200032e57806349789ef9146200034657806366d9a9a0146200037a5780636d09084014620003a157600080fd5b80633e5e3c2314620002e65780633f6fb2f714620002fe5780633f7286f4146200031657600080fd5b80631ed7831c11620001b65780631ed7831c14620002685780632ade3880146200028f5780632debd6fd14620002b657806338a637ed14620002ce57600080fd5b806301ffc9a714620001ec578063061794b314620002365780630a9254e4146200025057600080fd5b36620001e757005b600080fd5b348015620001f957600080fd5b50620002216200020b36600462009f8b565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b3480156200024357600080fd5b506200024e62000574565b005b3480156200025d57600080fd5b506200024e62000729565b3480156200027557600080fd5b506200028062000bef565b6040516200022d919062009fb7565b3480156200029c57600080fd5b50620002a762000c53565b6040516200022d91906200a05a565b348015620002c357600080fd5b506200024e62000da1565b348015620002db57600080fd5b506200024e6200165e565b348015620002f357600080fd5b506200028062001f4d565b3480156200030b57600080fd5b506200024e62001faf565b3480156200032357600080fd5b506200028062002753565b3480156200033b57600080fd5b506200024e620027b5565b3480156200035357600080fd5b506200036b620003653660046200a132565b62002fa9565b6040519081526020016200022d565b3480156200038757600080fd5b506200039262002ffe565b6040516200022d91906200a1b1565b348015620003ae57600080fd5b506200024e62003177565b348015620003c657600080fd5b506200024e62003af7565b348015620003de57600080fd5b506200024e62004420565b348015620003f657600080fd5b506200040162004935565b6040516200022d91906200a23c565b3480156200041d57600080fd5b50620004356200042f3660046200a2b4565b62004a0f565b60405162ffffff90911681526020016200022d565b3480156200045757600080fd5b506200024e62004a6a565b3480156200046f57600080fd5b506200047a6200533d565b6040516200022d91906200a2f7565b3480156200049657600080fd5b506200024e620004a83660046200a380565b62005427565b348015620004bb57600080fd5b506200047a620058c8565b348015620004d357600080fd5b5062000401620059b2565b348015620004eb57600080fd5b5062000221620004fd3660046200a42f565b62005a8c565b3480156200051057600080fd5b506200022162005b0e565b3480156200052857600080fd5b506200028062005bc8565b3480156200054057600080fd5b50601f54620002219060ff1681565b3480156200055c57600080fd5b506200024e6200056e3660046200a44f565b62005c2a565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a6044820152600092919091169063704037bd90606401608060405180830381865afa158015620005d8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005fe91906200a53e565b6020015160285460405163f96fe92560e01b81526001600160a01b0380841660048301527002b78853aaac41bff0c3916eff1037c97a602483015292935091169063f96fe92590604401602060405180830381865afa15801562000666573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200068c91906200a5cb565b506028546001600160a01b031663d0e380f282620006b0628000006103e86200a601565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015262ffffff166024820152604401602060405180830381865afa158015620006ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200072591906200a620565b5050565b6200073362005f2f565b602754604051634cd161d360e01b8152600a6004820152600160248201526001600160a01b0390911690634cd161d390604401600060405180830381600087803b1580156200078157600080fd5b505af115801562000796573d6000803e3d6000fd5b505060285460215460205460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a60648201529116925063659ac74b91506084016020604051808303816000875af115801562000804573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200082a91906200a63a565b50602854601f5460205460405163659ac74b60e01b81526001600160a01b03610100909304831660048201529082166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af11580156200089a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008c091906200a63a565b50602854602654601f5460405163659ac74b60e01b81526001600160a01b03928316600482015261010090910482166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af115801562000930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095691906200a63a565b506020546dffffffffffffffffffffffffffff9062000980906001600160a01b0316308362007783565b60215462000999906001600160a01b0316308362007783565b602654620009b2906001600160a01b0316308362007783565b602154602054600091620009e4916001600160a01b03918216911668056bc75e2d6310000062800000600f8662007797565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000a179084906004016200a68c565b6000604051808303816000875af115801562000a37573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000a6191908101906200a852565b5050601f5460205462000a9e95506001600160a01b036101009092048216945016915068056bc75e2d63100000905062800000600f600062007797565b60285460608201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000ad99085906004016200a68c565b60006040518083038185885af115801562000af8573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000b2391908101906200a852565b5050602654601f5462000b6095506001600160a01b0391821694506101009004169150680ad78ebc5ac6200000905062800000600f600062007797565b60285460808201516040516323bf0acb60e21b81529293506001600160a01b0390911691638efc2b2c919062000b9b9085906004016200a68c565b60006040518083038185885af115801562000bba573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262000be591908101906200a852565b5050505050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562000c4957602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000c2a575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b8282101562000d9857600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000d8057838290600052602060002001805462000cec906200a8e2565b80601f016020809104026020016040519081016040528092919081815260200182805462000d1a906200a8e2565b801562000d6b5780601f1062000d3f5761010080835404028352916020019162000d6b565b820191906000526020600020905b81548152906001019060200180831162000d4d57829003601f168201915b50505050508152602001906001019062000cca565b50505050815250508152602001906001019062000c77565b50505050905090565b602754602654601f5460405163704037bd60e01b81526001600160a01b03928316600482015261010090910482166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562000e12573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e3891906200a53e565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa15801562000ea2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec891906200a936565b50601f546026549193506000925062000ef3916001600160a01b03610100909204821691166200792f565b905060008051602062020bf683398151915263f28dceb36313fab00360e21b8462000f206002826200a98d565b62000f2d9060016200a9b6565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262000f91916004016200a9d9565b600060405180830381600087803b15801562000fac57600080fd5b505af115801562000fc1573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b03861684843062000ff24260016200a9ee565b6040518663ffffffff1660e01b81526004016200101394939291906200aae6565b60206040518083038185885af115801562001032573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200105991906200a620565b506026546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015620010a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620010ca91906200a620565b6028549091506000906001600160a01b031663e038e6dc6001600160801b038816620010f86002886200a98d565b8630620011074260016200a9ee565b6040518663ffffffff1660e01b81526004016200112894939291906200aae6565b60206040518083038185885af115801562001147573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200116e91906200a620565b9050620011b881620011826002876200a98d565b6200118f9060016200a9b6565b6001600160801b03166040518060600160405280603d815260200162020ccd603d913962007aa6565b6026546040516370a0823160e01b815230600482015262001256916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001204573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200122a91906200a620565b6200123683856200a9ee565b6040518060600160405280603d815260200162020c90603d913962007aa6565b602154604084015180516001600160a01b03909216916000906200127e576200127e6200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b90921682526200130b916004016200a9d9565b600060405180830381600087803b1580156200132657600080fd5b505af11580156200133b573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b0388168686306200136c4260016200a9ee565b6040518663ffffffff1660e01b81526004016200138d94939291906200aae6565b60206040518083038185885af1158015620013ac573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620013d391906200a620565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b620013fe6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001459916004016200a9d9565b600060405180830381600087803b1580156200147457600080fd5b505af115801562001489573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b038816868630620014ba6001426200ab3c565b6040518663ffffffff1660e01b8152600401620014db94939291906200aae6565b60206040518083038185885af1158015620014fa573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200152191906200a620565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb3926200158d92016200a9d9565b600060405180830381600087803b158015620015a857600080fd5b505af1158015620015bd573d6000803e3d6000fd5b50506028546001600160a01b0316915063e038e6dc90506001600160801b038816868630620015ee4260016200a9ee565b6040518663ffffffff1660e01b81526004016200160f94939291906200aae6565b60206040518083038185885af11580156200162e573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906200165591906200a620565b50505050505050565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa158015620016cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016f591906200a53e565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa15801562001760573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200178691906200a936565b50601f5460205491935060009250620017b1916001600160a01b03610100909204821691166200792f565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562001800573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200182691906200a620565b6028549091506000906001600160a01b031663b066ea7c6001600160801b038816868630620018574260016200a9ee565b6040518663ffffffff1660e01b81526004016200187894939291906200aae6565b60206040518083038185885af115801562001897573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190620018be91906200a620565b90506200190b81856001600160801b03166040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3181525062007aa6565b6020546040516370a0823160e01b8152306004820152620019c5916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001957573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200197d91906200a620565b6200198983856200a9ee565b6040518060400160405280602081526020017f746573745f5377617045786163744e4154495645466f72546f6b656e733a3a3281525062007aa6565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa15801562001a26573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a4c91906200a936565b50945060008051602062020bf6833981519152905063f28dceb36313fab00360e21b62001a7b8760016200a9b6565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001ae0916004016200a9d9565b600060405180830381600087803b15801562001afb57600080fd5b505af115801562001b10573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881662001b3e8760016200a9b6565b863062001b4d4260016200a9ee565b6040518663ffffffff1660e01b815260040162001b6e94939291906200aae6565b60206040518083038185885af115801562001b8d573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001bb491906200a620565b50602154604084015180516001600160a01b039092169160009062001bdd5762001bdd6200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001c6a916004016200a9d9565b600060405180830381600087803b15801562001c8557600080fd5b505af115801562001c9a573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001ccb4260016200a9ee565b6040518663ffffffff1660e01b815260040162001cec94939291906200aae6565b60206040518083038185885af115801562001d0b573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001d3291906200a620565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b62001d5d6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262001db8916004016200a9d9565b600060405180830381600087803b15801562001dd357600080fd5b505af115801562001de8573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b03881686863062001e196001426200ab3c565b6040518663ffffffff1660e01b815260040162001e3a94939291906200aae6565b60206040518083038185885af115801562001e59573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019062001e8091906200a620565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb39262001eec92016200a9d9565b600060405180830381600087803b15801562001f0757600080fd5b505af115801562001f1c573d6000803e3d6000fd5b50506028546001600160a01b0316915063b066ea7c90506001600160801b038816868630620015ee4260016200a9ee565b6060601880548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b602754602654601f5460405163704037bd60e01b81526001600160a01b03928316600482015261010090910482166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562002020573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204691906200a53e565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa158015620020b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020d791906200a936565b50602654601f549193506000925062002103916001600160a01b0391821691610100909104166200792f565b905060008051602062020bf683398151915263f28dceb36313fab00360e21b84620021306002826200a98d565b6040516001600160801b0392831660248201529116604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002194916004016200a9d9565b600060405180830381600087803b158015620021af57600080fd5b505af1158015620021c4573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905085848430620021ec4260016200a9ee565b6040518663ffffffff1660e01b81526004016200220e9594939291906200ab52565b6020604051808303816000875af11580156200222e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200225491906200a620565b5060285447906000906001600160a01b0316631a24f9a987620022796002886200a98d565b8630620022884260016200a9ee565b6040518663ffffffff1660e01b8152600401620022aa9594939291906200ab52565b6020604051808303816000875af1158015620022ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620022f091906200a620565b90506200232d81620023046002876200a98d565b6001600160801b03166040518060600160405280603d815260200162020c53603d913962007aa6565b6200235e476200233e83856200a9ee565b6040518060600160405280603d815260200162020c16603d913962007aa6565b602154604084015180516001600160a01b039092169160019081106200238857620023886200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002415916004016200a9d9565b600060405180830381600087803b1580156200243057600080fd5b505af115801562002445573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a99050876200246a8760016200a9b6565b8630620024794260016200a9ee565b6040518663ffffffff1660e01b81526004016200249b9594939291906200ab52565b6020604051808303816000875af1158015620024bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024e191906200a620565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b6200250c6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002567916004016200a9d9565b600060405180830381600087803b1580156200258257600080fd5b505af115801562002597573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905087868630620025bf6001426200ab3c565b6040518663ffffffff1660e01b8152600401620025e19594939291906200ab52565b6020604051808303816000875af115801562002601573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200262791906200a620565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb3926200269392016200a9d9565b600060405180830381600087803b158015620026ae57600080fd5b505af1158015620026c3573d6000803e3d6000fd5b50506028546001600160a01b03169150631a24f9a9905087868630620026eb4260016200a9ee565b6040518663ffffffff1660e01b81526004016200270d9594939291906200ab52565b6020604051808303816000875af11580156200272d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200165591906200a620565b6060601780548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562002826573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200284c91906200a53e565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063a0d376cf90606401606060405180830381865afa158015620028b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028dc91906200a936565b50602054601f549193506000925062002908916001600160a01b0391821691610100909104166200792f565b60285490915047906000906001600160a01b0316639ab6156b87868630620029324260016200a9ee565b6040518663ffffffff1660e01b8152600401620029549594939291906200ab52565b6020604051808303816000875af115801562002974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200299a91906200a620565b9050620029e781856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3181525062007aa6565b62002a3447620029f883856200a9ee565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f724e41544956453a3a3281525062007aa6565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063a0d376cf90606401606060405180830381865afa15801562002a95573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002abb91906200a936565b50945060008051602062020bf6833981519152905063f28dceb36313fab00360e21b62002aea8760016200a9b6565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002b4f916004016200a9d9565b600060405180830381600087803b15801562002b6a57600080fd5b505af115801562002b7f573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508762002ba48760016200a9b6565b863062002bb34260016200a9ee565b6040518663ffffffff1660e01b815260040162002bd59594939291906200ab52565b6020604051808303816000875af115801562002bf5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002c1b91906200a620565b50602154604084015180516001600160a01b0390921691600190811062002c465762002c466200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002cd3916004016200a9d9565b600060405180830381600087803b15801562002cee57600080fd5b505af115801562002d03573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508762002d288760016200a9b6565b863062002d374260016200a9ee565b6040518663ffffffff1660e01b815260040162002d599594939291906200ab52565b6020604051808303816000875af115801562002d79573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002d9f91906200a620565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b62002dca6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262002e25916004016200a9d9565b600060405180830381600087803b15801562002e4057600080fd5b505af115801562002e55573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b90508786863062002e7d6001426200ab3c565b6040518663ffffffff1660e01b815260040162002e9f9594939291906200ab52565b6020604051808303816000875af115801562002ebf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ee591906200a620565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb39262002f5192016200a9d9565b600060405180830381600087803b15801562002f6c57600080fd5b505af115801562002f81573d6000803e3d6000fd5b50506028546001600160a01b03169150639ab6156b905087868630620026eb4260016200a9ee565b6000808360ff1611801562002fc1575060008260ff16115b62002fd85762002fd282846200ab9d565b62002ff2565b600162002fe683856200ab9d565b62002ff291906200abb9565b60ff1690505b92915050565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000d98578382906000526020600020906002020160405180604001604052908160008201805462003058906200a8e2565b80601f016020809104026020016040519081016040528092919081815260200182805462003086906200a8e2565b8015620030d75780601f10620030ab57610100808354040283529160200191620030d7565b820191906000526020600020905b815481529060010190602001808311620030b957829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200315e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200311f5790505b5050505050815250508152602001906001019062003022565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa158015620031e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200320e91906200a53e565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b03861660248301526000604483018190529394509091169063964f987c90606401606060405180830381865afa15801562003278573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200329e91906200a936565b5050602054601f54919250600091620032c9916001600160a01b03908116916101009004166200792f565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003318573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200333e91906200a620565b6028549091506000906001600160a01b0316633dc8f8ec87868630620033664260016200a9ee565b6040518663ffffffff1660e01b8152600401620033889594939291906200ab52565b6000604051808303816000875af1158015620033a8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620033d291908101906200abd5565b90506200343c81600081518110620033ee57620033ee6200ab26565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3181525062007aa6565b6020546040516370a0823160e01b815230600482015262003515916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003488573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034ae91906200a620565b82600081518110620034c457620034c46200ab26565b602002602001015184620034d991906200ab3c565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f7245786163744e41544956453a3a3281525062007aa6565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600060448301529091169063964f987c90606401606060405180830381865afa15801562003576573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200359c91906200a936565b5090945060008051602062020bf6833981519152905063f28dceb363194ee21960e31b620035cc6001886200ac0e565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003631916004016200a9d9565b600060405180830381600087803b1580156200364c57600080fd5b505af115801562003661573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e70905087620036866001886200ac0e565b8630620036954260016200a9ee565b6040518663ffffffff1660e01b8152600401620036b79594939291906200ab52565b6000604051808303816000875af1158015620036d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200370191908101906200abd5565b50602154604084015180516001600160a01b039092169160019081106200372c576200372c6200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620037b9916004016200a9d9565b600060405180830381600087803b158015620037d457600080fd5b505af1158015620037e9573d6000803e3d6000fd5b50506028546001600160a01b03169150633dc8f8ec905087868630620038114260016200a9ee565b6040518663ffffffff1660e01b8152600401620038339594939291906200ab52565b6000604051808303816000875af115801562003853573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200387d91908101906200abd5565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b620038a86001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003903916004016200a9d9565b600060405180830381600087803b1580156200391e57600080fd5b505af115801562003933573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e709050878686306200395b6001426200ab3c565b6040518663ffffffff1660e01b81526004016200397d9594939291906200ab52565b6000604051808303816000875af11580156200399d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620039c791908101906200abd5565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb39262003a3392016200a9d9565b600060405180830381600087803b15801562003a4e57600080fd5b505af115801562003a63573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e7090508786863062003a8b4260016200a9ee565b6040518663ffffffff1660e01b815260040162003aad9594939291906200ab52565b6000604051808303816000875af115801562003acd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200165591908101906200abd5565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562003b63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b8991906200a53e565b6020015160285460405163a0d376cf60e01b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063a0d376cf90606401606060405180830381865afa15801562003bf4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c1a91906200a936565b506021546020549193506000925062003c40916001600160a01b0391821691166200792f565b6020546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa15801562003c8f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003cb591906200a620565b6028549091506000906001600160a01b0316632a443fae8786863062003cdd4260016200a9ee565b6040518663ffffffff1660e01b815260040162003cff9594939291906200ab52565b6020604051808303816000875af115801562003d1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d4591906200a620565b905062003d9281856001600160801b03166040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3181525062007aa6565b6020546040516370a0823160e01b815230600482015262003e4c916001600160a01b0316906370a0823190602401602060405180830381865afa15801562003dde573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e0491906200a620565b62003e1083856200a9ee565b6040518060400160405280602081526020017f746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a3281525062007aa6565b60285460405163a0d376cf60e01b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063a0d376cf90606401606060405180830381865afa15801562003ead573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ed391906200a936565b50945060008051602062020bf6833981519152905063f28dceb36313fab00360e21b62003f028760016200a9b6565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262003f67916004016200a9d9565b600060405180830381600087803b15801562003f8257600080fd5b505af115801562003f97573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae90508762003fbc8760016200a9b6565b863062003fcb4260016200a9ee565b6040518663ffffffff1660e01b815260040162003fed9594939291906200ab52565b6020604051808303816000875af11580156200400d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200403391906200a620565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b6200405e6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620040b9916004016200a9d9565b600060405180830381600087803b158015620040d457600080fd5b505af1158015620040e9573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae905087868630620041116001426200ab3c565b6040518663ffffffff1660e01b8152600401620041339594939291906200ab52565b6020604051808303816000875af115801562004153573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200417991906200a620565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb392620041e592016200a9d9565b600060405180830381600087803b1580156200420057600080fd5b505af115801562004215573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae9050878686306200423d4260016200a9ee565b6040518663ffffffff1660e01b81526004016200425f9594939291906200ab52565b6020604051808303816000875af11580156200427f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620042a591906200a620565b5060408051600280825260608201835290916020830190803683375050506040840181905260215481516001600160a01b039091169190600090620042ee57620042ee6200ab26565b6001600160a01b0392831660209182029290920101526026546040850151805191909216919060019081106200432857620043286200ab26565b6001600160a01b03928316602091820292909201015260215460265460405191831660248301529091166044820152600a606482015260008051602062020bf68339815191529063f28dceb390636b2471d160e11b9060840160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620043c8916004016200a9d9565b600060405180830381600087803b158015620043e357600080fd5b505af1158015620043f8573d6000803e3d6000fd5b50506028546001600160a01b03169150632a443fae905087868630620026eb4260016200a9ee565b60275460215460205460405163704037bd60e01b81526001600160a01b0392831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa1580156200448c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620044b291906200a53e565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa1580156200451d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200454391906200a936565b505060215460205491925060009162004569916001600160a01b0390811691166200792f565b6021546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015620045b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620045de91906200a620565b6028549091506000906001600160a01b03166392fe8e7087868630620046064260016200a9ee565b6040518663ffffffff1660e01b8152600401620046289594939291906200ab52565b6000604051808303816000875af115801562004648573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200467291908101906200abd5565b9050620046dc816000815181106200468e576200468e6200ab26565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3181525062007aa6565b6021546040516370a0823160e01b8152306004820152620047b5916001600160a01b0316906370a0823190602401602060405180830381865afa15801562004728573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200474e91906200a620565b826000815181106200476457620047646200ab26565b6020026020010151846200477991906200ab3c565b6040518060400160405280602081526020017f746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a3281525062007aa6565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004816573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200483c91906200a936565b5090945060008051602062020bf6833981519152905063f28dceb363194ee21960e31b6200486c6001886200ac0e565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b9092168252620048d1916004016200a9d9565b600060405180830381600087803b158015620048ec57600080fd5b505af115801562004901573d6000803e3d6000fd5b50506028546001600160a01b031691506392fe8e70905087620049266001886200ac0e565b8630620038114260016200a9ee565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000d985783829060005260206000200180546200497b906200a8e2565b80601f0160208091040260200160405190810160405280929190818152602001828054620049a9906200a8e2565b8015620049fa5780601f10620049ce57610100808354040283529160200191620049fa565b820191906000526020600020905b815481529060010190602001808311620049dc57829003601f168201915b50505050508152602001906001019062004959565b60008062004a238462ffffff87166200a9ee565b905060008360ff161162004a38578062004a54565b62004a4760ff8416826200ab3c565b62004a549060016200a9ee565b905062004a618162007b0c565b95945050505050565b602754601f5460205460405163704037bd60e01b81526001600160a01b03610100909304831660048201529082166024820152600a60448201526801158e460913d0000092600092169063704037bd90606401608060405180830381865afa15801562004adb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b0191906200a53e565b60200151602854604051632593e61f60e21b81526001600160a01b0380841660048301526001600160801b0386166024830152600160448301529293506000929091169063964f987c90606401606060405180830381865afa15801562004b6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b9291906200a936565b5050601f5460205491925060009162004bbd916001600160a01b03610100909104811691166200792f565b60285490915047906000906001600160a01b0316632075ad2262004be38660646200a9b6565b6001600160801b031688863062004bfc4260016200a9ee565b6040518663ffffffff1660e01b815260040162004c1d94939291906200aae6565b60006040518083038185885af115801562004c3c573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004c6791908101906200abd5565b905062004cd18160008151811062004c835762004c836200ab26565b6020026020010151856001600160801b03166040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3181525062007aa6565b62004d3d478260008151811062004cec5762004cec6200ab26565b60200260200101518462004d0191906200ab3c565b6040518060400160405280602081526020017f746573745f537761704e4154495645466f724578616374546f6b656e733a3a3281525062007aa6565b602854604051632593e61f60e21b81526001600160a01b0387811660048301526001600160801b0389166024830152600160448301529091169063964f987c90606401606060405180830381865afa15801562004d9e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004dc491906200a936565b5090945060008051602062020bf6833981519152905063f28dceb363194ee21960e31b62004df46002886200a98d565b6040516001600160801b039182166024820152908816604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004e59916004016200a9d9565b600060405180830381600087803b15801562004e7457600080fd5b505af115801562004e89573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad22905062004ead6002876200a98d565b6001600160801b031688863062004ec64260016200a9ee565b6040518663ffffffff1660e01b815260040162004ee794939291906200aae6565b60006040518083038185885af115801562004f06573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405262004f3191908101906200abd5565b50602154604084015180516001600160a01b039092169160009062004f5a5762004f5a6200ab26565b6001600160a01b0392831660209182029290920101526021546040519116602482015260008051602062020bf68339815191529063f28dceb39063cfec0e0160e01b9060440160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262004fe7916004016200a9d9565b600060405180830381600087803b1580156200500257600080fd5b505af115801562005017573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b038616888630620050484260016200a9ee565b6040518663ffffffff1660e01b81526004016200506994939291906200aae6565b60006040518083038185885af115801562005088573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052620050b391908101906200abd5565b5060008051602062020bf683398151915263f28dceb363dae7ca7d60e01b620050de6001426200ab3c565b604051602481019190915242604482015260640160408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199485161790525160e084901b909216825262005139916004016200a9d9565b600060405180830381600087803b1580156200515457600080fd5b505af115801562005169573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b0386168886306200519a6001426200ab3c565b6040518663ffffffff1660e01b8152600401620051bb94939291906200aae6565b60006040518083038185885af1158015620051da573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526200520591908101906200abd5565b50604080516000815260208082018352858301919091528151600480825260248201845291810180516001600160e01b031663b91b4d4d60e01b179052915163f28dceb360e01b815260008051602062020bf68339815191529263f28dceb3926200527192016200a9d9565b600060405180830381600087803b1580156200528c57600080fd5b505af1158015620052a1573d6000803e3d6000fd5b50506028546001600160a01b03169150632075ad2290506001600160801b038616888630620052d24260016200a9ee565b6040518663ffffffff1660e01b8152600401620052f394939291906200aae6565b60006040518083038185885af115801562005312573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f191682016040526200165591908101906200abd5565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562000d985760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200540e57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620053cf5790505b5050505050815250508152602001906001019062005361565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562005468573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200548e91906200a63a565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620054d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620054f791906200a63a565b905062005506828b8862007783565b62005513818b8762007783565b600062005521858562002fa9565b905060008167ffffffffffffffff8111156200554157620055416200a4e3565b6040519080825280602002602001820160405280156200556b578160200160208202803683370190505b50905060005b828110156200566a576000620055898b838962004a0f565b905060008b62ffffff168262ffffff1610158015620055ab575060008960ff16115b620055b8576000620055d9565b620055d9620055d360ff8b16670de0b6b3a76400006200ac31565b62007b38565b905060008c62ffffff168362ffffff1611158015620055fb575060008960ff16115b6200560857600062005623565b62005623620055d360ff8b16670de0b6b3a76400006200ac31565b90506200563282828562007b64565b8585815181106200564757620056476200ab26565b6020026020010181815250505050508062005662906200ac48565b905062005571565b506040516303223eab60e11b81526001600160a01b038d16600482015260008051602062020bf6833981519152906306447d5690602401600060405180830381600087803b158015620056bc57600080fd5b505af1158015620056d1573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af115801562005725573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200574b91906200ac64565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af11580156200579c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620057c291906200ac64565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200582257600080fd5b505af115801562005837573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b81526004016200586d939291906200ac82565b6000604051808303816000875af11580156200588d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620058b791908101906200ace8565b505050505050505050505050505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101562000d985760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200599957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200595a5790505b50505050508152505081526020019060010190620058ec565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000d98578382906000526020600020018054620059f8906200a8e2565b80601f016020809104026020016040519081016040528092919081815260200182805462005a26906200a8e2565b801562005a775780601f1062005a4b5761010080835404028352916020019162005a77565b820191906000526020600020905b81548152906001019060200180831162005a5957829003601f168201915b505050505081526020019060010190620059d6565b602754604051632aaf12cf60e21b815261ffff831660048201526000916001600160a01b03169063aabc4b3c9060240161010060405180830381865afa15801562005adb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b0191906200ad3c565b9998505050505050505050565b60085460009060ff161562005b27575060085460ff1690565b604051630667f9d760e41b815260008051602062020bf6833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562005b9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bc191906200a620565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000c49576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000c2a575050505050905090565b670de0b6b3a764000083111562005c885760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062005c96838362002fa9565b905060008167ffffffffffffffff81111562005cb65762005cb66200a4e3565b60405190808252806020026020018201604052801562005ce0578160200160208202803683370190505b50905060008267ffffffffffffffff81111562005d015762005d016200a4e3565b60405190808252806020026020018201604052801562005d2b578160200160208202803683370190505b50905060005b8381101562005e3957600062005d4989838862004a0f565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562005d9f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005dc591906200a620565b90508162ffffff1685848151811062005de25762005de26200ab26565b602090810291909101015262005e02818a670de0b6b3a764000062007ba2565b84848151811062005e175762005e176200ab26565b60200260200101818152505050508062005e31906200ac48565b905062005d31565b5060405163ca669fa760e01b81526001600160a01b038b16600482015260008051602062020bf68339815191529063ca669fa790602401600060405180830381600087803b15801562005e8b57600080fd5b505af115801562005ea0573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062005ed8908d908d90879087906004016200ad96565b6000604051808303816000875af115801562005ef8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262005f2291908101906200abd5565b5050505050505050505050565b601f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1674b31f66aa3c1e785363f0875a1b74e27b85fd66c70017908190556001600160a01b03610100909104163b6000036200605757601f5460405160008051602062020bf68339815191529163b4d6c782916101009091046001600160a01b03169062005fc09062009e98565b604051809103906000f08015801562005fdd573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b8152600401620060229291906200add8565b600060405180830381600087803b1580156200603d57600080fd5b505af115801562006052573d6000803e3d6000fd5b505050505b6006604051620060679062009ea6565b60ff9091168152602001604051809103906000f0801580156200608e573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b0392909216919091179055604051600690620060c09062009ea6565b60ff9091168152602001604051809103906000f080158015620060e7573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b0392909216919091179055604051600890620061199062009ea6565b60ff9091168152602001604051809103906000f08015801562006140573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b0392909216919091179055604051601290620061729062009ea6565b60ff9091168152602001604051809103906000f08015801562006199573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b0392909216919091179055604051601290620061cb9062009ea6565b60ff9091168152602001604051809103906000f080158015620061f2573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b0392909216919091179055604051601290620062249062009ea6565b60ff9091168152602001604051809103906000f0801580156200624b573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169190911790556040516200627a9062009eb4565b604051809103906000f08015801562006297573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03928316179055601f54604080516318caf8e360e31b815261010090920490921660048201526024810191909152600760448201527f776e617469766500000000000000000000000000000000000000000000000000606482015260008051602062020bf68339815191529063c657c71890608401600060405180830381600087803b1580156200633d57600080fd5b505af115801562006352573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b158015620063ca57600080fd5b505af1158015620063df573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b1580156200645757600080fd5b505af11580156200646c573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b158015620064e457600080fd5b505af1158015620064f9573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b1580156200657157600080fd5b505af115801562006586573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b158015620065fe57600080fd5b505af115801562006613573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600360448201526231373160e91b606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b1580156200668857600080fd5b505af11580156200669d573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e000000000000000000000000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b1580156200672957600080fd5b505af11580156200673e573d6000803e3d6000fd5b5050602e80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602f8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040516000906200679b9062009ec2565b604051809103906000f080158015620067b8573d6000803e3d6000fd5b509050807f0000000000000000000000000000000000000000000000000000000000000000604051620067eb9062009ed0565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156200682e573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b0392909216918217905560405160009190620068609062009ede565b6001600160a01b039091168152602001604051809103906000f0801580156200688d573d6000803e3d6000fd5b5060275460405191925082917f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b031690620068d09062009eec565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200690d573d6000803e3d6000fd5b50602d80546001600160a01b0319166001600160a01b03928316908117909155602754604051632f880c2560e21b81527f000000000000000000000000000000000000000000000000000000000000000084166004820181905260248201526602d79883d20000604482015260648101929092529091169063be20309490608401600060405180830381600087803b158015620069a957600080fd5b505af1158015620069be573d6000803e3d6000fd5b50506027546040516001600160a01b039091169250620069df915062009ede565b6001600160a01b039091168152602001604051809103906000f08015801562006a0c573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b039290921691909117905562006a3762007bd0565b62006a43600a62007f86565b602754602f54601f546040516000936001600160a01b03908116938116926101009004169062006a739062009efa565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006ab0573d6000803e3d6000fd5b5060408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905191925082917f0000000000000000000000000000000000000000000000000000000000000000919062006b0e9062009ed0565b62006b1c939291906200adfc565b604051809103906000f08015801562006b39573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316908117909155602f546027546040519184169316919062006b749062009f08565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562006bb1573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b03928316179055602854604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f757465720000000000000000000000000000000000000000000000000000606482015260008051602062020bf68339815191529063c657c71890608401600060405180830381600087803b15801562006c5257600080fd5b505af115801562006c67573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f7465720000000000000000000000000000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b15801562006cf357600080fd5b505af115801562006d08573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201527f666163746f727900000000000000000000000000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b15801562006d9457600080fd5b505af115801562006da9573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e0000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b15801562006e3557600080fd5b505af115801562006e4a573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f757465725631000000000000000000000000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b15801562006ed657600080fd5b505af115801562006eeb573d6000803e3d6000fd5b5050602f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f727956310000000000000000000000000000000000000000000000606482015260008051602062020bf6833981519152925063c657c7189150608401600060405180830381600087803b15801562006f7757600080fd5b505af115801562006f8c573d6000803e3d6000fd5b5050601f54602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015261010090920416925063095ea7b391506044016020604051808303816000875af115801562006fec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200701291906200ac64565b50602054602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200706a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200709091906200ac64565b50602154602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620070e8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200710e91906200ac64565b50602254602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007166573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200718c91906200ac64565b50602554602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620071e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200720a91906200ac64565b50602354602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200728891906200ac64565b5060248054602e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af1158015620072e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200730891906200ac64565b50602654602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007360573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200738691906200ac64565b50601f5460285460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152610100909204169063095ea7b3906044016020604051808303816000875af1158015620073e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200740991906200ac64565b5060205460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007461573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200748791906200ac64565b5060215460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620074df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200750591906200ac64565b5060225460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200755d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200758391906200ac64565b5060255460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620075db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200760191906200ac64565b5060235460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007659573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200767f91906200ac64565b506024805460285460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af1158015620076d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620076ff91906200ac64565b5060265460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562007757573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200777d91906200ac64565b50505050565b6200779283838360006200802c565b505050565b62007835604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b60008060008062007849898989896200822f565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620078c78a876200853e90919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a0016200791e426103e86200a9ee565b90529b9a5050505050505050505050565b6200795460405180606001604052806060815260200160608152602001606081525090565b60408051600180825281830190925290602080830190803683375050508082528051600a91906000906200798c576200798c6200ab26565b60209081029190910101526040805160018082528183019092529081602001602082028036833750505060208201819052805160019190600090620079d557620079d56200ab26565b60200260200101906001811115620079f157620079f16200aa04565b9081600181111562007a075762007a076200aa04565b905250604080516002808252606082018352909160208301908036833750505060408201819052805184919060009062007a455762007a456200ab26565b60200260200101906001600160a01b031690816001600160a01b03168152505081816040015160018151811062007a805762007a806200ab26565b60200260200101906001600160a01b031690816001600160a01b03168152505092915050565b6040516388b44c8560e01b815260008051602062020bf6833981519152906388b44c859062007ade908690869086906004016200ae2a565b60006040518083038186803b15801562007af757600080fd5b505afa15801562001655573d6000803e3d6000fd5b8062ffffff8116811462007b3357604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff8116811462007b335760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b600080600062007bb3868662008602565b9150915062007bc6868686858562008621565b9695505050505050565b601f5461010090046001600160a01b03161562007c5057602754601f54604051635a44092360e01b81526001600160a01b0361010090920482166004820152911690635a44092390602401600060405180830381600087803b15801562007c3657600080fd5b505af115801562007c4b573d6000803e3d6000fd5b505050505b6020546001600160a01b03161562007cc657602754602054604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007cac57600080fd5b505af115801562007cc1573d6000803e3d6000fd5b505050505b6021546001600160a01b03161562007d3c57602754602154604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007d2257600080fd5b505af115801562007d37573d6000803e3d6000fd5b505050505b6022546001600160a01b03161562007db257602754602254604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007d9857600080fd5b505af115801562007dad573d6000803e3d6000fd5b505050505b6025546001600160a01b03161562007e2857602754602554604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007e0e57600080fd5b505af115801562007e23573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562007e9e57602754602354604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007e8457600080fd5b505af115801562007e99573d6000803e3d6000fd5b505050505b6024546001600160a01b03161562007f135760275460248054604051635a44092360e01b81526001600160a01b039182166004820152921691635a4409239101600060405180830381600087803b15801562007ef957600080fd5b505af115801562007f0e573d6000803e3d6000fd5b505050505b6026546001600160a01b03161562007f8457602754602654604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562007f6f57600080fd5b505af11580156200777d573d6000803e3d6000fd5b565b60275460405163379ee80360e01b815261ffff8316600482015261138860248201819052601e604483015261025860648301526084820152619c4060a48201526103e860c48201526205573060e482015260006101048201526001600160a01b039091169063379ee8039061012401600060405180830381600087803b1580156200801057600080fd5b505af115801562008025573d6000803e3d6000fd5b5050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162008082916200ae4b565b600060405180830381855afa9150503d8060008114620080bf576040519150601f19603f3d011682016040523d82523d6000602084013e620080c4565b606091505b50915050600081806020019051810190620080e091906200a620565b90506200811a8462008113876200810c6370a0823160e01b62008105600d8d620086d3565b90620086fb565b9062008719565b9062008745565b8215620082275760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200816591906200ae4b565b600060405180830381855afa9150503d8060008114620081a2576040519150601f19603f3d011682016040523d82523d6000602084013e620081a7565b606091505b50915050600081806020019051810190620081c391906200a620565b905082861015620081ee57620081da86846200ab3c565b620081e690826200ab3c565b905062008209565b620081fa83876200ab3c565b6200820690826200a9ee565b90505b62000be581620081136318160ddd60e01b62008105600d8d620086d3565b505050505050565b606080806000620082426002876200ae69565b62ffffff16600003620082985760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e73604482015260640162005c7f565b6000620082a76002886200ae8e565b90508662ffffff1667ffffffffffffffff811115620082ca57620082ca6200a4e3565b604051908082528060200260200182016040528015620082f4578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff8111156200831857620083186200a4e3565b60405190808252806020026020018201604052801562008342578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff8111156200836657620083666200a4e3565b60405190808252806020026020018201604052801562008390578160200160208202803683370190505b5092506000620083a28260016200a601565b620083bb9062ffffff16670de0b6b3a76400006200ac31565b90506000620083cc8360016200a601565b620083dd9062ffffff168c6200ac31565b905060005b8962ffffff168110156200852f57620083fd8960016200a601565b6200840e9062ffffff16826200aea7565b6200841b8a60016200a601565b6200842790866200aec1565b62008433908d6200aeeb565b62ffffff166200844491906200a9ee565b8882815181106200845957620084596200ab26565b6020026020010181815250508362ffffff1681116200849557828682815181106200848857620084886200ab26565b6020026020010181815250505b8362ffffff1681106200851a5782878281518110620084b857620084b86200ab26565b60200260200101818152505060008211620084d55760006200850b565b6200850b6080620085028a8481518110620084f457620084f46200ab26565b602002602001015162008751565b84919062008760565b6200851790866200a9ee565b94505b8062008526816200ac48565b915050620083e2565b50505050945094509450949050565b6060825167ffffffffffffffff8111156200855d576200855d6200a4e3565b60405190808252806020026020018201604052801562008587578160200160208202803683370190505b50905060005b8351811015620085fb578262ffffff16848281518110620085b257620085b26200ab26565b6020026020010151620085c691906200af0a565b828281518110620085db57620085db6200ab26565b602090810291909101015280620085f2816200ac48565b9150506200858d565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b60008160000362008647578383816200863e576200863e6200a977565b04905062004a61565b83821062008668576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6004820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60028201805463ffffffff191660e083901c179055600082620086f4565b6001808301805491820181556000908152602081206001600160a01b03841692019190915582620086f4565b6200072582826200878c565b600062002ff882600a62008c03565b600060ff831684811b9061ffff6101008290031686901c9062007bc69087906001901b86858562008621565b6004820154600283015460038401546001600160a01b039092169160e09190911b906000620087bb8662008c40565b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905193945092620087fc9185918791016200af2d565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200883c576200883a86600062008d58565b505b6001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909183916200887d9186918891016200af2d565b6040516020818303038152906040528051906020012081526020019081526020016000209050600081600201548260010154620088bb91906200a9ee565b1115620089b757600081600201548260010154620088da91906200a9ee565b620088e8906101006200ab3c565b620088f59060026200b04e565b60405163348051d760e11b8152600481018290529091508188109060008051602062020bf683398151915290636900a3ae90602401600060405180830381865afa15801562008948573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200897291908101906200b05c565b6040516020016200898491906200b0fb565b60405160208183030381529060405290620089b45760405162461bcd60e51b815260040162005c7f91906200a9d9565b50505b8054604051630667f9d760e41b81526001600160a01b0387166004820152602481019190915260009060008051602062020bf68339815191529063667f9d7090604401602060405180830381865afa15801562008a18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008a3e91906200a620565b6001838101546002850154929350600092908101610100039190911b60001901811b1983169089901b1783546040516370ca10bb60e01b81526001600160a01b038a16600482015260248101919091526044810182905290915060008051602062020bf6833981519152906370ca10bb90606401600060405180830381600087803b15801562008acd57600080fd5b505af115801562008ae2573d6000803e3d6000fd5b5050505060008062008af48b62008d6e565b9150915081158062008b065750898114155b1562008bf85784546040516370ca10bb60e01b81526001600160a01b038b16600482015260248101919091526044810185905260008051602062020bf6833981519152906370ca10bb90606401600060405180830381600087803b15801562008b6e57600080fd5b505af115801562008b83573d6000803e3d6000fd5b505060405162461bcd60e51b815260206004820152603360248201527f73746453746f726167652066696e642853746453746f72616765293a2046616960448201527f6c656420746f2077726974652076616c75652e000000000000000000000000006064820152608401915062005c7f9050565b62005f228b62008e45565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff190162004a61828262008e53565b606081600701805462008c53906200a8e2565b905060000362008cbc5762002ff88260010180548060200260200160405190810160405280929190818152602001828054801562008cb157602002820191906000526020600020905b81548152602001906001019080831162008c9c575b5050505050620090d2565b81600701805462008ccd906200a8e2565b80601f016020809104026020016040519081016040528092919081815260200182805462008cfb906200a8e2565b801562008d4c5780601f1062008d205761010080835404028352916020019162008d4c565b820191906000526020600020905b81548152906001019060200180831162008d2e57829003601f168201915b50505050509050919050565b600062008d6683836200917f565b549392505050565b60028101546000908190819060e01b62008d888562008c40565b60405160200162008d9b9291906200b18e565b60408051601f1981840301815290829052600486015490925060009182916001600160a01b03169062008dd09085906200ae4b565b600060405180830381855afa9150503d806000811462008e0d576040519150601f19603f3d011682016040523d82523d6000602084013e62008e12565b606091505b5091509150600062008e37828860030154602062008e3191906200aea7565b62009942565b929792965091945050505050565b62008e5081620099e4565b50565b60008060008360000362008e715750600160801b915062002ff89050565b5082600081121562008e84579015906000035b621000008110156200908a57600160801b9250846001600160801b0381111562008eb057911591600019045b600182161562008ec25792830260801c925b800260801c600282161562008ed95792830260801c925b800260801c600482161562008ef05792830260801c925b800260801c600882161562008f075792830260801c925b800260801c601082161562008f1e5792830260801c925b800260801c602082161562008f355792830260801c925b800260801c604082161562008f4c5792830260801c925b8002608090811c9082161562008f645792830260801c925b800260801c61010082161562008f7c5792830260801c925b800260801c61020082161562008f945792830260801c925b800260801c61040082161562008fac5792830260801c925b800260801c61080082161562008fc45792830260801c925b800260801c61100082161562008fdc5792830260801c925b800260801c61200082161562008ff45792830260801c925b800260801c6140008216156200900c5792830260801c925b800260801c618000821615620090245792830260801c925b800260801c620100008216156200903d5792830260801c925b800260801c62020000821615620090565792830260801c925b800260801c620400008216156200906f5792830260801c925b800260801c62080000821615620090885792830260801c925b505b82600003620090b757604051631dba598d60e11b8152600481018690526024810185905260440162005c7f565b81620090c4578262004a61565b62004a61836000196200ac31565b6060600082516020620090e691906200aea7565b67ffffffffffffffff8111156200910157620091016200a4e3565b6040519080825280601f01601f1916602001820160405280156200912c576020820181803683370190505b50905060005b8351811015620085fb5760008482815181106200915357620091536200ab26565b60200260200101519050808260200260200184015250808062009176906200ac48565b91505062009132565b6004820154600283015460038401546000926001600160a01b03169160e01b9083620091ab8762008c40565b6001600160a01b0385166000908152602089815260408083206001600160e01b0319881684528252808320905193945092620091ec9185918791016200af2d565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff1615620092a057851562009230576200923087620099e4565b6001600160a01b0384166000908152602088815260408083206001600160e01b03198716845282528083209051909291620092709185918791016200af2d565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062002ff8565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620092ff57600080fd5b505af115801562009314573d6000803e3d6000fd5b505050506000620093258862008d6e565b6040516365bc948160e01b81526001600160a01b03881660048201529092506000915060008051602062020bf6833981519152906365bc9481906024016000604051808303816000875af115801562009382573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620093ac91908101906200b1c1565b50905080516000036200942a576040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162005c7f565b60005b8151811015620097dd5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898585815181106200948157620094816200ab26565b60200260200101516040518363ffffffff1660e01b8152600401620094bb9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015620094d9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620094ff91906200a620565b90508062009569577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888484815181106200953e576200953e6200ab26565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b620095918b8484815181106200958357620095836200ab26565b602002602001015162009a3a565b6200959d5750620097c8565b60068b0154600090819060ff1615620095f3576000620095da8e878781518110620095cc57620095cc6200ab26565b602002602001015162009c23565b9094509250905080620095f15750505050620097c8565b505b6001828201610100031b60001901811b8316811c868114620096195750505050620097c8565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620096519291906200af2d565b604051602081830303815290604052805190602001208989815181106200967c576200967c6200ab26565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a16040518060800160405280878781518110620096e057620096e06200ab26565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c604051602001620097669291906200af2d565b60408051808303601f190181529181528151602092830120835282820193909352908201600020835181559083015160018201559082015160028201556060909101516003909101805460ff191691151591909117905550620097dd92505050565b80620097d4816200ac48565b9150506200942d565b506001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200981e9187918991016200af2d565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff16620098be5760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162005c7f565b8715620098d057620098d089620099e4565b6001600160a01b038616600090815260208a815260408083206001600160e01b03198916845282528083209051909291620099109187918991016200af2d565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b60008060006020855111620099595784516200995c565b60205b905060005b81811015620099da57620099778160086200aea7565b866200998483886200a9ee565b815181106200999757620099976200ab26565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620099d1816200ac48565b91505062009961565b5090949350505050565b6004810180546001600160a01b031916905560028101805463ffffffff1916905562009a1560018201600062009f16565b60006003820181905560068201805460ff1916905562008e5090600783019062009f36565b600482810154604051630667f9d760e41b81526001600160a01b039091169181019190915260248101829052600090819060008051602062020bf68339815191529063667f9d7090604401602060405180830381865afa15801562009aa3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009ac991906200a620565b905060008062009ad98662008d6e565b90925090506000811562009aef57600062009af3565b6000195b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062020bf6833981519152906370ca10bb90606401600060405180830381600087803b15801562009b5e57600080fd5b505af115801562009b73573d6000803e3d6000fd5b50505050600062009b848862008d6e565b60048a8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018a90526044810188905290925060008051602062020bf683398151915291506370ca10bb90606401600060405180830381600087803b15801562009bf057600080fd5b505af115801562009c05573d6000803e3d6000fd5b5050505083801562009c175750808314155b98975050505050505050565b600482810154604051630667f9d760e41b81526001600160a01b03909116918101919091526024810182905260009081908190819060008051602062020bf68339815191529063667f9d7090604401602060405180830381865afa15801562009c90573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009cb691906200a620565b905060008062009cc98888600162009d7f565b9150915060008062009cde8a8a600062009d7f565b60048c8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018c905260448101889052919350915060008051602062020bf6833981519152906370ca10bb90606401600060405180830381600087803b15801562009d4b57600080fd5b505af115801562009d60573d6000803e3d6000fd5b5050505083801562009d6f5750815b9a92995097509095505050505050565b60008060005b61010081101562009e875760008462009da2576001821b62009db4565b62009daf8260ff6200ab3c565b6001901b5b6004888101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018890526044810182905290915060008051602062020bf6833981519152906370ca10bb90606401600060405180830381600087803b15801562009e1f57600080fd5b505af115801562009e34573d6000803e3d6000fd5b5050505060008062009e468962008d6e565b9150915081801562009e5757508015155b1562009e6e57600184955095505050505062009e90565b505050808062009e7e906200ac48565b91505062009d85565b50600080915091505b935093915050565b610b08806200b22d83390190565b610bfd806200bd3583390190565b610c18806200c93283390190565b613c2a806200d54a83390190565b610f1f806201117483390190565b6167e6806201209383390190565b6108ff806201887983390190565b614e6b806201917883390190565b612c13806201dfe383390190565b508054600082559060005260206000209081019062008e50919062009f70565b50805462009f44906200a8e2565b6000825580601f1062009f55575050565b601f01602090049060005260206000209081019062008e5091905b5b8082111562009f87576000815560010162009f71565b5090565b60006020828403121562009f9e57600080fd5b81356001600160e01b031981168114620086f457600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562009ffa5783516001600160a01b03168352928401929184019160010162009fd3565b50909695505050505050565b60005b838110156200a0235781810151838201526020016200a009565b50506000910152565b600081518084526200a0468160208601602086016200a006565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200a11057603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200a0f957605f198985030183526200a0e68486516200a02c565b948e01949350918d01916001016200a0c7565b505050978a0197945050918801916001016200a081565b50919a9950505050505050505050565b803560ff8116811462007b3357600080fd5b600080604083850312156200a14657600080fd5b6200a151836200a120565b91506200a161602084016200a120565b90509250929050565b600081518084526020808501945080840160005b838110156200a1a65781516001600160e01b031916875295820195908201906001016200a17e565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200a22e57888303603f19018552815180518785526200a1ff888601826200a02c565b91890151858303868b01529190506200a21981836200a16a565b9689019694505050908601906001016200a1d8565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200a29557603f198886030184526200a2828583516200a02c565b945092850192908501906001016200a263565b5092979650505050505050565b62ffffff8116811462008e5057600080fd5b6000806000606084860312156200a2ca57600080fd5b83356200a2d7816200a2a2565b9250602084013591506200a2ee604085016200a120565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200a22e57888303603f19018552815180516001600160a01b031684528701518784018790526200a356878501826200a16a565b95880195935050908601906001016200a31e565b6001600160a01b038116811462008e5057600080fd5b600080600080600080600080610100898b0312156200a39e57600080fd5b88356200a3ab816200a36a565b975060208901356200a3bd816200a36a565b965060408901356200a3cf816200a36a565b955060608901356200a3e1816200a2a2565b94506080890135935060a089013592506200a3ff60c08a016200a120565b91506200a40f60e08a016200a120565b90509295985092959890939650565b61ffff8116811462008e5057600080fd5b6000602082840312156200a44257600080fd5b8135620086f4816200a41e565b600080600080600080600060e0888a0312156200a46b57600080fd5b87356200a478816200a36a565b965060208801356200a48a816200a36a565b955060408801356200a49c816200a36a565b945060608801356200a4ae816200a2a2565b9350608088013592506200a4c560a089016200a120565b91506200a4d560c089016200a120565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156200a525576200a5256200a4e3565b604052919050565b8051801515811462007b3357600080fd5b6000608082840312156200a55157600080fd5b6040516080810181811067ffffffffffffffff821117156200a577576200a5776200a4e3565b60405282516200a587816200a41e565b815260208301516200a599816200a36a565b60208201526200a5ac604084016200a52d565b60408201526200a5bf606084016200a52d565b60608201529392505050565b6000602082840312156200a5de57600080fd5b8151620086f4816200a2a2565b634e487b7160e01b600052601160045260246000fd5b62ffffff818116838216019080821115620085fb57620085fb6200a5eb565b6000602082840312156200a63357600080fd5b5051919050565b6000602082840312156200a64d57600080fd5b8151620086f4816200a36a565b600081518084526020808501945080840160005b838110156200a1a6578151875295820195908201906001016200a66e565b602081526200a6a76020820183516001600160a01b03169052565b600060208301516200a6c460408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e061014081818601526200a7356102008601846200a65a565b9250808601519050601f196101608187860301818801526200a75885846200a65a565b9450808801519250506101808187860301818801526200a77985846200a65a565b945080880151925050506101a06200a79b818701836001600160a01b03169052565b86015190506101c06200a7b8868201836001600160a01b03169052565b959095015193019290925250919050565b600082601f8301126200a7db57600080fd5b8151602067ffffffffffffffff8211156200a7fa576200a7fa6200a4e3565b8160051b6200a80b8282016200a4f9565b92835284810182019282810190878511156200a82657600080fd5b83870192505b848310156200a847578251825291830191908301906200a82c565b979650505050505050565b60008060008060008060c087890312156200a86c57600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200a8a157600080fd5b6200a8af8a838b016200a7c9565b935060a08901519150808211156200a8c657600080fd5b506200a8d589828a016200a7c9565b9150509295509295509295565b600181811c908216806200a8f757607f821691505b6020821081036200a91857634e487b7160e01b600052602260045260246000fd5b50919050565b80516001600160801b038116811462007b3357600080fd5b6000806000606084860312156200a94c57600080fd5b6200a957846200a91e565b92506200a967602085016200a91e565b91506200a2ee604085016200a91e565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b03808416806200a9aa576200a9aa6200a977565b92169190910492915050565b6001600160801b03818116838216019080821115620085fb57620085fb6200a5eb565b602081526000620086f460208301846200a02c565b8082018082111562002ff85762002ff86200a5eb565b634e487b7160e01b600052602160045260246000fd5b600081518084526020808501945080840160005b838110156200a1a65781516001600160a01b0316875295820195908201906001016200aa2e565b60008151606084526200aa6c60608501826200a65a565b6020848101518683038783015280518084529082019350909160009190830190825b818110156200aac9578551600281106200aab657634e487b7160e01b85526021600452602485fd5b835294840194918401916001016200aa8e565b50506040860151935086810360408801526200a84781856200aa1a565b6001600160801b03851681526080602082015260006200ab0a60808301866200aa55565b6001600160a01b03949094166040830152506060015292915050565b634e487b7160e01b600052603260045260246000fd5b8181038181111562002ff85762002ff86200a5eb565b60006001600160801b03808816835280871660208401525060a060408301526200ab8060a08301866200aa55565b6001600160a01b0394909416606083015250608001529392505050565b60ff818116838216019081111562002ff85762002ff86200a5eb565b60ff828116828216039081111562002ff85762002ff86200a5eb565b6000602082840312156200abe857600080fd5b815167ffffffffffffffff8111156200ac0057600080fd5b62007b9a848285016200a7c9565b6001600160801b03828116828216039080821115620085fb57620085fb6200a5eb565b6000826200ac43576200ac436200a977565b500490565b6000600182016200ac5d576200ac5d6200a5eb565b5060010190565b6000602082840312156200ac7757600080fd5b620086f4826200a52d565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156200accf578551835294830194918301916001016200acb1565b5050809450505080851660408501525050949350505050565b6000806000606084860312156200acfe57600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156200ad2457600080fd5b6200ad32868287016200a7c9565b9150509250925092565b600080600080600080600080610100898b0312156200ad5a57600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200a40f60e08a016200a52d565b60006001600160a01b038087168352808616602084015250608060408301526200adc460808301856200a65a565b82810360608401526200a84781856200a65a565b6001600160a01b038316815260406020820152600062007b9a60408301846200a02c565b60006001600160a01b0380861683528085166020840152506060604083015262004a6160608301846200a02c565b83815282602082015260606040820152600062004a6160608301846200a02c565b600082516200ae5f8184602087016200a006565b9190910192915050565b600062ffffff808416806200ae82576200ae826200a977565b92169190910692915050565b600062ffffff808416806200a9aa576200a9aa6200a977565b808202811582820484141762002ff85762002ff86200a5eb565b62ffffff8181168382160280821691908281146200aee3576200aee36200a5eb565b505092915050565b62ffffff828116828216039080821115620085fb57620085fb6200a5eb565b8181036000831280158383131683831282161715620085fb57620085fb6200a5eb565b600083516200af418184602088016200a006565b9190910191825250602001919050565b600181815b808511156200af925781600019048211156200af76576200af766200a5eb565b808516156200af8457918102915b93841c93908002906200af56565b509250929050565b6000826200afab5750600162002ff8565b816200afba5750600062002ff8565b81600181146200afd357600281146200afde576200affe565b600191505062002ff8565b60ff8411156200aff2576200aff26200a5eb565b50506001821b62002ff8565b5060208310610133831016604e8410600b84101617156200b023575081810a62002ff8565b6200b02f83836200af51565b80600019048211156200b046576200b0466200a5eb565b029392505050565b6000620086f483836200af9a565b6000602082840312156200b06f57600080fd5b815167ffffffffffffffff808211156200b08857600080fd5b818401915084601f8301126200b09d57600080fd5b8151818111156200b0b2576200b0b26200a4e3565b6200b0c7601f8201601f19166020016200a4f9565b91508082528560208285010111156200b0df57600080fd5b6200b0f28160208401602086016200a006565b50949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a2050616381527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e20000000000000000000000000000000000000000000006040820152600082516200b18181604a8501602087016200a006565b91909101604a0192915050565b6001600160e01b03198316815281516000906200b1b38160048501602087016200a006565b919091016004019392505050565b600080604083850312156200b1d557600080fd5b825167ffffffffffffffff808211156200b1ee57600080fd5b6200b1fc868387016200a7c9565b935060208501519150808211156200b21357600080fd5b506200b222858286016200a7c9565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212203676dca41fe70116d022466cee8163b666c31da9d26a6ab943091f2051f816da64736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea26469706673582212204baa56b0bfc1782b9bcd82e8fcd1181086fcb98288a997d94423795fd41ef93f64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea2646970667358221220f015b691ba74ea839179623d05ecb3712ba206b9d59193c1f36abb0a7dab1ec264736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613b4480620000e66000396000f3fe60806040523480156200001157600080fd5b5060043610620003315760003560e01c8063701ab8c111620001b1578063aabc4b3c11620000f5578063e203a31f11620000a3578063e92d0d5d116200007a578063e92d0d5d1462000757578063f2fde38b146200076e578063fd90c2be146200078557600080fd5b8063e203a31f146200071f578063e30c39781462000736578063e74b981b146200074057600080fd5b8063c1b931be11620000d8578063c1b931be14620006ca578063d547741f14620006f1578063ddbfd941146200070857600080fd5b8063aabc4b3c146200065e578063be20309414620006b357600080fd5b806380c5061e116200015f57806391d14854116200013657806391d14854146200062c578063a0a0ea391462000643578063a217fddf146200065557600080fd5b806380c5061e14620006095780638ce9aa1c14620006135780638da5cb5b146200062257600080fd5b8063715018a61162000194578063715018a614620005de57806379ba509714620005e85780637daf5d6614620005f257600080fd5b8063701ab8c114620005b0578063704037bd14620005b857600080fd5b80633a2f1a9111620002795780635a4409231162000227578063661d7ffb11620001fe578063661d7ffb146200054b5780636622e0d7146200057357806369d56ea3146200059957600080fd5b80635a44092314620005135780635b35875c146200052a578063659ac74b146200053457600080fd5b80634ccb20c0116200025c5780634ccb20c014620004e15780634cd161d314620004f35780634e937c3a146200050a57600080fd5b80633a2f1a9114620004b35780633c78a94114620004ca57600080fd5b8063248a9ca311620002e35780632f2ff15d11620002ba5780632f2ff15d146200046e57806336568abe1462000485578063379ee803146200049c57600080fd5b8063248a9ca314620003fb5780632772184214620004405780632cc06b8c146200045757600080fd5b80630752092b11620003185780630752092b146200037b578063093ff76914620003ab5780631af5bacc14620003c457600080fd5b806301ffc9a714620003365780630282c9c11462000362575b600080fd5b6200034d6200034736600462002c0f565b6200078e565b60405190151581526020015b60405180910390f35b6200036c620007c6565b60405162000359919062002c3b565b620003926200038c36600462002c81565b620008b6565b6040516001600160a01b03909116815260200162000359565b620003c2620003bc36600462002cd8565b620008c5565b005b620003ec7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000359565b620003ec6200040c36600462002c81565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b6200034d6200045136600462002dab565b620009d2565b620003c26200046836600462002dcb565b620009e1565b620003c26200047f36600462002e19565b62000a34565b620003c26200049636600462002e19565b62000a7c565b620003c2620004ad36600462002e5d565b62000ab7565b620003c2620004c436600462002f18565b62000bde565b620003c2620004db36600462002dab565b62000c96565b6000546001600160a01b031662000392565b620003c26200050436600462002fd4565b62000cf8565b600354620003ec565b620003c26200052436600462002dab565b62000dd0565b6200036c62000e48565b62000392620005453660046200300c565b62000e5b565b620003ec7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d81565b6200058a620005843660046200306d565b62001334565b604051620003599190620030a0565b620003c2620005aa36600462003117565b620014df565b6001620003ec565b620005cf620005c93660046200316d565b62001671565b604051620003599190620031b3565b620003c2620016aa565b620003c2620016c2565b620003926200060336600462002c81565b62001710565b620003ec62001743565b67016345785d8a0000620003ec565b6200039262001751565b6200034d6200063d36600462002e19565b62001786565b6002546001600160a01b031662000392565b620003ec600081565b620006756200066f36600462002c81565b62001801565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000359565b620003c2620006c4366004620031f0565b620018d6565b7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d620003ec565b620003c26200070236600462002e19565b62001aa6565b620003c26200071936600462002dab565b62001aee565b620003c2620007303660046200324a565b62001b66565b6200039262001bd8565b620003c26200075136600462002dab565b62001c02565b620003c26200076836600462002c81565b62001c17565b620003c26200077f36600462002dab565b62001cc8565b600154620003ec565b60006001600160e01b03198216637965db0b60e01b1480620007c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007d6600562001d51565b90508015620008b2578067ffffffffffffffff811115620007fb57620007fb62003268565b60405190808252806020026020018201604052801562000825578160200160208202803683370190505b5091506000805b82811015620008a2576000806200084560058462001d5e565b9092509050620008558162001d7c565b156200088c57818685815181106200087157620008716200327e565b6020908102919091010152836200088881620032aa565b9450505b5050806200089a90620032aa565b90506200082c565b5081811015620008b0578083525b505b5090565b6000620007c060088362001d89565b620008cf62001d97565b6000620008e28b8b8b61ffff1662001dcd565b6020015190506001600160a01b038116620009325760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009ac57600080fd5b505af1158015620009c1573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007c060088362001e79565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a0d8162001e9c565b6040805160008082526020820190925262000a2e9186918691869162001ea8565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a708162001e9c565b62000a2e838362001ffc565b6001600160a01b038116331462000aa65760405163334bd91960e11b815260040160405180910390fd5b62000ab2828262002029565b505050565b62000ac162001d97565b60018961ffff16101562000aef57604051634f958e7160e01b815261ffff8a16600482015260240162000929565b600062000b03818a8a8a8a8a8a8a620020c6565b9050811562000b1e5762000b1b81600160ff620021cb565b90505b62000b30600561ffff8c1683620021f5565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c0a8162001e9c565b6001600160a01b038416158062000c295750836001600160a01b031916155b1562000c485760405163d43a15d160e01b815260040160405180910390fd5b62000c8d8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062001ea892505050565b50505050505050565b62000ca062001d97565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cdc57600080fd5b505af115801562000cf1573d6000803e3d6000fd5b5050505050565b62000d0262001d97565b62000d13600561ffff841662002204565b62000d3857604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000d4b600561ffff851662002212565b905081151560ff82901c15150362000d76576040516311be38db60e11b815260040160405180910390fd5b62000d9761ffff841662000d8d838560ff620021cb565b60059190620021f5565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dda62001d97565b62000de760088262002220565b62000e11576040516303ce0ad960e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e56600562002237565b905090565b600062000e6e600561ffff841662002204565b62000e9357604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000ea6600561ffff851662002212565b9050600062000eb462001751565b6001600160a01b0316336001600160a01b031614905062000ed58262001d7c565b15801562000ee1575080155b1562000f0d576040516304fc2fe760e11b815233600482015261ffff8516602482015260440162000929565b62000f1a60088762001e79565b62000f4457604051638e888ef360e01b81526001600160a01b038716600482015260240162000929565b856001600160a01b0316876001600160a01b03160362000f8357604051632f9b185360e01b81526001600160a01b038816600482015260240162000929565b62000f8f858562002246565b5060008062000f9f89896200228c565b90925090506001600160a01b03821662000fcc57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010435760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff8716604482015260640162000929565b60006200105085620022b6565b6200105b86620022c3565b6200106687620022d4565b6200107188620022e5565b6200107c89620022f6565b620010878a62002308565b620010928b62002319565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e48201529089166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b17905260025490519192506001600160a01b0316908b908b908a908590620011439062002c01565b620011539594939291906200330e565b604051809103906000f08015801562001170573d6000803e3d6000fd5b506040805160808101825261ffff808b168083526001600160a01b0380861660208086018281528c15158789019081526000606089018181528e8716808352600486528b83208f89168085529087528c84208a855287528c84209b518c549651955193511515600160b81b0260ff60b81b19941515600160b01b02949094167fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff96909a1662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009097169b169a909a179490941792909216959095171790965560038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909217909155938152600a84528481209281529190925291909120919750620012b692506200232b565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff88600160038054905062001306919062003359565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200134585856200228c565b6001600160a01b038083166000908152600a6020908152604080832093851683529290529081209294509092506200137d8262002339565b90508015620014d5578067ffffffffffffffff811115620013a257620013a262003268565b604051908082528060200260200182016040528015620013f657816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181620013c15790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620014d2576000620014436200143d868462001d89565b62002344565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620014bd57620014bd6200327e565b60209081029190910101525060010162001422565b50505b5050505092915050565b620014e962001d97565b600080620014f886866200228c565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b9092049091161515606083015292945090925090620015b45760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff8616604482015260640162000929565b8315158160600151151503620015dc57604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b0260ff60b81b1990911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200166090871515815260200190565b60405180910390a250505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152620016a284848462001dcd565b949350505050565b620016b462001d97565b620016c060006200236f565b565b3380620016ce62001bd8565b6001600160a01b031614620017025760405163118cdaa760e01b81526001600160a01b038216600482015260240162000929565b6200170d816200236f565b50565b6000600382815481106200172857620017286200327e565b6000918252602090912001546001600160a01b031692915050565b600062000e56600862002339565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620017b4576200179862001751565b6001600160a01b0316826001600160a01b0316149050620007c0565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200181760058a62002204565b6200183957604051637d9160bf60e11b8152600481018a905260240162000929565b60006200184860058b62002212565b90506200185581620022b6565b61ffff1698506200186681620022c3565b61ffff1697506200187781620022d4565b61ffff1696506200188881620022e5565b61ffff1695506200189981620022f6565b62ffffff169450620018ab8162002308565b61ffff169350620018bc8162002319565b62ffffff16925060ff81901c915050919395975091939597565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015620019225750825b905060008267ffffffffffffffff166001148015620019405750303b155b9050811580156200194f575080155b156200196e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315620019a357845468ff00000000000000001916680100000000000000001785555b620019ae88620023ad565b67016345785d8a0000871115620019ea57604051635e8988c160e01b81526004810188905267016345785d8a0000602482015260440162000929565b620019f589620023c2565b6001879055600280546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001a9b57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001ae28162001e9c565b62000a2e838362002029565b62001af862001d97565b62001b0560088262002484565b62001b2f57604051638e888ef360e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001b7062001d97565b62001b81600561ffff83166200249b565b62001ba657604051637d9160bf60e11b815261ffff8216600482015260240162000929565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0062001776565b62001c0c62001d97565b6200170d81620023c2565b62001c2162001d97565b60015481810362001c4957604051631baa31e960e21b81526004810183905260240162000929565b67016345785d8a000082111562001c8557604051635e8988c160e01b81526004810183905267016345785d8a0000602482015260440162000929565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e5091015b60405180910390a15050565b62001cd262001d97565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001d1862001751565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007c082620024a9565b600080808062001d6f8686620024b6565b9097909650945050505050565b600060ff82901c620007c0565b6000620017fa8383620024e3565b3362001da262001751565b6001600160a01b031614620016c05760405163118cdaa760e01b815233600482015260240162000929565b60408051608081018252600080825260208201819052918101829052606081019190915262001dfd84846200228c565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620017fa565b6200170d813362002510565b600062001ebb86868661ffff1662001dcd565b6020015190506001600160a01b03811662001f075760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff8516604482015260640162000929565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001f47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f6d91906200336f565b0362001f905760405163b70cd0db60e01b81526004810184905260240162000929565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d9062001fc0908690869060040162003389565b600060405180830381600087803b15801562001fdb57600080fd5b505af115801562001ff0573d6000803e3d6000fd5b50505050505050505050565b6000826200201d57604051633e3253cf60e11b815260040160405180910390fd5b620017fa83836200254d565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b62680062002058848462001786565b15620020bb576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007c0565b6000915050620007c0565b60008561ffff168761ffff161180620020e45750610fff8661ffff16115b80620020f557506127108561ffff16115b806200210657506109c48361ffff16115b80620021195750620fffff8262ffffff16115b156200213857604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620016a28484620021e0576000620021e3565b60015b600180861b19929092169116841b1790565b6000620016a2848484620025ff565b6000620017fa83836200261e565b6000620017fa83836200262c565b6000620017fa836001600160a01b03841662002678565b60606000620017fa83620026ca565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620022838282620026d7565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620022ae579192915b509192909150565b600061ffff8216620007c0565b6000620007c08260101c610fff1690565b6000620007c082601c1c610fff1690565b6000620007c08260281c613fff1690565b6000620007c08260361c62ffffff1690565b6000620007c082604e1c613fff1690565b6000620007c082605c1c620fffff1690565b6000620017fa838362002678565b6000620007c0825490565b8061ffff811681146200236a576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620023a9826200295f565b5050565b620023b7620029d0565b6200170d8162002a1f565b6001600160a01b038116620023ea57604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200242b57600054604051634fcea97160e01b81526001600160a01b03909116600482015260240162000929565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001cbc565b6000620017fa836001600160a01b03841662002a55565b6000620017fa838362002b4e565b6000620007c08262002339565b60008080620024c6858562001d89565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620024fd57620024fd6200327e565b9060005260206000200154905092915050565b6200251c828262001786565b620023a95760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440162000929565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200257c848462001786565b620020bb576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620025b43390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007c0565b60008281526002840160205260408120829055620016a284846200232b565b6000620017fa838362002b6d565b6000818152600283016020526040812054801580156200265557506200265384846200261e565b155b15620017fa5760405163015ab34360e11b81526004810184905260240162000929565b6000818152600183016020526040812054620026c157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007c0565b506000620007c0565b6060620007c08262002b86565b600080600083600003620026f55750600160801b9150620007c09050565b5082600081121562002708579015906000035b621000008110156200291757600160801b9250846fffffffffffffffffffffffffffffffff8111156200273d57911591600019045b60018216156200274f5792830260801c925b800260801c6002821615620027665792830260801c925b800260801c60048216156200277d5792830260801c925b800260801c6008821615620027945792830260801c925b800260801c6010821615620027ab5792830260801c925b800260801c6020821615620027c25792830260801c925b800260801c6040821615620027d95792830260801c925b8002608090811c90821615620027f15792830260801c925b800260801c610100821615620028095792830260801c925b800260801c610200821615620028215792830260801c925b800260801c610400821615620028395792830260801c925b800260801c610800821615620028515792830260801c925b800260801c611000821615620028695792830260801c925b800260801c612000821615620028815792830260801c925b800260801c614000821615620028995792830260801c925b800260801c618000821615620028b15792830260801c925b800260801c62010000821615620028ca5792830260801c925b800260801c62020000821615620028e35792830260801c925b800260801c62040000821615620028fc5792830260801c925b800260801c62080000821615620029155792830260801c925b505b826000036200294457604051631dba598d60e11b8152600481018690526024810185905260440162000929565b8162002951578262002283565b6200228383600019620033a4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620016c057604051631afcd79f60e31b815260040160405180910390fd5b62002a29620029d0565b6001600160a01b0381166200170257604051631e4fbdf760e01b81526000600482015260240162000929565b60008181526001830160205260408120548015620020bb57600062002a7c60018362003359565b855490915060009062002a929060019062003359565b905080821462002afe57600086600001828154811062002ab65762002ab66200327e565b906000526020600020015490508087600001848154811062002adc5762002adc6200327e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002b125762002b12620033c7565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007c0565b60008181526002830160205260408120819055620017fa838362002b95565b60008181526001830160205260408120541515620017fa565b60606000620017fa8362002ba3565b6000620017fa838362002a55565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002bf557602002820191906000526020600020905b81548152602001906001019080831162002be0575b50505050509050919050565b61073180620033de83390190565b60006020828403121562002c2257600080fd5b81356001600160e01b031981168114620017fa57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002c755783518352928401929184019160010162002c57565b50909695505050505050565b60006020828403121562002c9457600080fd5b5035919050565b6001600160a01b03811681146200170d57600080fd5b803561ffff811681146200236a57600080fd5b803562ffffff811681146200236a57600080fd5b6000806000806000806000806000806101408b8d03121562002cf957600080fd5b8a3562002d068162002c9b565b995060208b013562002d188162002c9b565b985062002d2860408c0162002cb1565b975062002d3860608c0162002cb1565b965062002d4860808c0162002cb1565b955062002d5860a08c0162002cb1565b945062002d6860c08c0162002cb1565b935062002d7860e08c0162002cc4565b925062002d896101008c0162002cb1565b915062002d9a6101208c0162002cc4565b90509295989b9194979a5092959850565b60006020828403121562002dbe57600080fd5b8135620017fa8162002c9b565b60008060006060848603121562002de157600080fd5b833562002dee8162002c9b565b9250602084013562002e008162002c9b565b915062002e106040850162002cb1565b90509250925092565b6000806040838503121562002e2d57600080fd5b82359150602083013562002e418162002c9b565b809150509250929050565b803580151581146200236a57600080fd5b60008060008060008060008060006101208a8c03121562002e7d57600080fd5b62002e888a62002cb1565b985062002e9860208b0162002cb1565b975062002ea860408b0162002cb1565b965062002eb860608b0162002cb1565b955062002ec860808b0162002cb1565b945062002ed860a08b0162002cc4565b935062002ee860c08b0162002cb1565b925062002ef860e08b0162002cc4565b915062002f096101008b0162002e4c565b90509295985092959850929598565b60008060008060008060a0878903121562002f3257600080fd5b863562002f3f8162002c9b565b9550602087013562002f518162002c9b565b945062002f616040880162002cb1565b935060608701359250608087013567ffffffffffffffff8082111562002f8657600080fd5b818901915089601f83011262002f9b57600080fd5b81358181111562002fab57600080fd5b8a602082850101111562002fbe57600080fd5b6020830194508093505050509295509295509295565b6000806040838503121562002fe857600080fd5b62002ff38362002cb1565b9150620030036020840162002e4c565b90509250929050565b600080600080608085870312156200302357600080fd5b8435620030308162002c9b565b93506020850135620030428162002c9b565b9250620030526040860162002cc4565b9150620030626060860162002cb1565b905092959194509250565b600080604083850312156200308157600080fd5b82356200308e8162002c9b565b9150602083013562002e418162002c9b565b6020808252825182820181905260009190848201906040850190845b8181101562002c75576200310383855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620030bc565b600080600080608085870312156200312e57600080fd5b84356200313b8162002c9b565b935060208501356200314d8162002c9b565b92506200315d6040860162002cb1565b9150620030626060860162002e4c565b6000806000606084860312156200318357600080fd5b8335620031908162002c9b565b92506020840135620031a28162002c9b565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007c0565b600080600080608085870312156200320757600080fd5b8435620032148162002c9b565b93506020850135620032268162002c9b565b92506040850135915060608501356200323f8162002c9b565b939692955090935050565b6000602082840312156200325d57600080fd5b620017fa8262002cb1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620032bf57620032bf62003294565b5060010190565b6000815180845260005b81811015620032ee57602081850181015186830182015201620032d0565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200334e60a0830184620032c6565b979650505050505050565b81810381811115620007c057620007c062003294565b6000602082840312156200338257600080fd5b5051919050565b828152604060208201526000620016a26040830184620032c6565b600082620033c257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a060405260405161073138038061073183398101604081905261002291610416565b604080516020810190915260008152859061003d82826100cd565b506001600160a01b03166080527f3441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec318481557f7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582648481557fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427828481556100c088856100cd565b5050505050505050610548565b6100d68261018d565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156101815761017c826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610511565b826102a0565b505050565b610189610317565b5050565b806001600160a01b03163b6000036101c857604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610511565b9050806001600160a01b03163b60000361018957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016101bf565b6060600080846001600160a01b0316846040516102bd919061052c565b600060405180830381855af49150503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b50909250905061030e858383610338565b95945050505050565b34156103365760405163b398979f60e01b815260040160405180910390fd5b565b60608261034d5761034882610397565b610390565b815115801561036457506001600160a01b0384163b155b1561038d57604051639996b31560e01b81526001600160a01b03851660048201526024016101bf565b50805b9392505050565b8051156103a75780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146103d757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561040d5781810151838201526020016103f5565b50506000910152565b600080600080600060a0868803121561042e57600080fd5b610437866103c0565b9450610445602087016103c0565b9350610453604087016103c0565b9250606086015161ffff8116811461046a57600080fd5b60808701519092506001600160401b038082111561048757600080fd5b818801915088601f83011261049b57600080fd5b8151818111156104ad576104ad6103dc565b604051601f8201601f19908116603f011681019083821181831017156104d5576104d56103dc565b816040528281528b60208487010111156104ee57600080fd5b6104ff8360208301602088016103f2565b80955050505050509295509295909350565b60006020828403121561052357600080fd5b610390826103c0565b6000825161053e8184602087016103f2565b9190910192915050565b6080516101c9610568600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea2646970667358221220f0f37eb07b5c3cfec8f93a3926d8b9cc57e4663663fe0feb3212c78557ad130a64736f6c63430008140033a2646970667358221220440217821150de802aac920e0a7d0d0d30082ae791bf0e91dbdaac5d78def83164736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220007cf27b93d4d99a0e50a460fd5dd9899916fcdfcfaa03803d2c821c78b19ad564736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea264697066735822122009c44af5988384f46804759913ec6c7012105d278f0ccba385192cd92bf1dd6e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360a06040523480156200001157600080fd5b50604051620067e6380380620067e6833981016040819052620000349162000106565b6001600160a01b0381166080526200004b62000052565b5062000138565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011957600080fd5b81516001600160a01b03811681146200013157600080fd5b9392505050565b60805161667d620001696000396000818161048d0152818161158c015281816123d101526139b7015261667d6000f3fe608060405234801561001057600080fd5b506004361061025b5760003560e01c80638940a16a11610145578063d3b9fbe4116100bd578063e584b6541161008c578063e985e9c511610071578063e985e9c51461062a578063ea3446bf1461064d578063f5e293291461066057600080fd5b8063e584b65414610604578063e77366f81461061757600080fd5b8063d3b9fbe4146105e4578063d8dfcea0146105ec578063da10610c146105f4578063dbe65edc146105fc57600080fd5b8063a41a01fb11610114578063bd85b039116100f9578063bd85b0391461059e578063c7bd6586146105be578063c9939f5e146105d157600080fd5b8063a41a01fb1461053a578063abcd78301461056157600080fd5b80638940a16a146104b15780638d7024e5146104ef57806395d89b411461052a578063a1af5b9a1461053257600080fd5b806347973bff116101d857806355182894116101a7578063781a89151161018c578063781a89151461042f5780637ca0de301461043957806388cc58e41461048b57600080fd5b806355182894146103d75780636653851a1461041c57600080fd5b806347973bff1461037e5780634c7cffbd146103915780634e1273f4146103a457806353c059a0146103c457600080fd5b80630abe96881161022f57806317fad7fc1161021457806317fad7fc146103345780631b057f6d14610349578063383d15c51461035c57600080fd5b80630abe9688146102e357806317f11ecc1461031957600080fd5b8062fdd58e1461026057806305e8746d1461028657806306fdde03146102a65780630902f1ac146102bb575b600080fd5b61027361026e36600461587e565b610673565b6040519081526020015b60405180910390f35b61028e61069c565b6040516001600160a01b03909116815260200161027d565b6102ae6106b9565b60405161027d91906158ce565b6102c361074d565b604080516001600160801b0393841681529290911660208301520161027d565b6102c36102f1366004615914565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610321610787565b60405161ffff909116815260200161027d565b610347610342366004615974565b61079f565b005b610347610357366004615a4b565b6107fa565b61036f61036a366004615a97565b610919565b60405161027d93929190615b3a565b61034761038c366004615b6b565b610bbb565b61027361039f366004615914565b610ea6565b6103b76103b2366004615c02565b610ecd565b60405161027d9190615c6e565b6102736103d2366004615c91565b610fa3565b6103df6112e5565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a00161027d565b61034761042a366004615cc8565b61138f565b6201000954610273565b6104416113c8565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e00161027d565b7f000000000000000000000000000000000000000000000000000000000000000061028e565b6104c46104bf366004615d4e565b611430565b6040805167ffffffffffffffff9485168152928416602084015292169181019190915260600161027d565b6104f761152f565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff909116606082015260800161027d565b6102ae61156f565b610273611580565b61054d610548366004615d75565b611746565b60405162ffffff909116815260200161027d565b61057461056f366004615d9f565b611759565b604080516001600160801b039485168152928416602084015292169181019190915260600161027d565b6102736105ac366004615dd7565b60009081526001602052604090205490565b6103476105cc366004615df0565b6118f5565b6103b76105df366004615974565b61198b565b610347611cc3565b6102c3611d57565b61028e611d72565b61054d611d8a565b610347610612366004615e0b565b611d97565b610574610625366004615d9f565b611da6565b61063d610638366004615e29565b611ee3565b604051901515815260200161027d565b61034761065b366004615e47565b611eef565b61054d61066e366004615dd7565b6121ed565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006106b46000805160206166088339815191525490565b905090565b60606201000a80546106ca90615e97565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690615e97565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061077e61076a60055460045461220f90919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b60006106b46000805160206165e88339815191525490565b6107a7612249565b62010009546107bc8133898989898989612281565b6107ca878787878787612321565b6107e1600160008051602061662883398151915255565b6107f1813389898989898961237f565b50505050505050565b610802612249565b61080a6123c6565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108d35750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190615ecb565b6001600160a01b031614155b156108f157604051631b5de6eb60e01b815260040160405180910390fd5b6108fc84848461240f565b50610914600160008051602061662883398151915255565b505050565b60008060608661092881612436565b610930612249565b60008690036109525760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561097f5761097f615ee8565b6040519080825280602002602001820160405280156109a8578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109c7576109c7615ee8565b6040519080825280602002602001820160405280156109f0578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a0f57610a0f615ee8565b604051908082528060200260200182016040528015610a38578160200160208202803683370190505b509052600454909150610a72610a5a6000805160206166088339815191525490565b6000805160206165c883398151915254839190612472565b9650610a8283338d8d8d8c6124b2565b610a8f8a8a898e866124fc565b9550610aa5610a9e888861220f565b8290612628565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610af391908b90615efe565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b3f929190615efe565b60405180910390a38515610b7f57610b7f610b666000805160206166088339815191525490565b6000805160206165c8833981519152548891908b612662565b610b96600160008051602061662883398151915255565b610bad83338d8d8d610ba88d8d61220f565b6126c0565b505050509450945094915050565b610bc36123c6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c0e5750825b905060008267ffffffffffffffff166001148015610c2b5750303b155b905081158015610c39575080155b15610c575760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c8b57845468ff00000000000000001916680100000000000000001785555b610c93612702565b610cbf610cb3610cae8860035461271290919063ffffffff16565b612761565b8e8e8e8e8e8e8e6127b5565b6000610cd76000805160206166088339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3c9190810190615f23565b90506000610d566000805160206165c88339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dbb9190810190615f23565b90506000610ddd610dd86000805160206165e88339815191525490565b612933565b9050828282604051602001610df493929190615fc5565b6040516020818303038152906040526201000a9081610e13919061608e565b50828282604051602001610e299392919061614e565b6040516020818303038152906040526201000b9081610e48919061608e565b505050508315610e9757845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610696610ec16000805160206165e88339815191525490565b62ffffff841690612a60565b60608382610edb8282612a97565b8567ffffffffffffffff811115610ef457610ef4615ee8565b604051908082528060200260200182016040528015610f1d578160200160208202803683370190505b50925060005b86811015610f9857610f73888883818110610f4057610f406161b8565b9050602002016020810190610f5591906161ce565b878784818110610f6757610f676161b8565b90506020020135610673565b848281518110610f8557610f856161b8565b6020908102919091010152600101610f23565b505050949350505050565b6000610fad612249565b6201000954600454600554600086610fe457610fdf610fd86000805160206165c88339815191525490565b8490612ab7565b611004565b611004610ffd6000805160206166088339815191525490565b8490612aec565b9050600081900361102857604051637df801c760e01b815260040160405180910390fd5b866110368533898486612b1b565b6110408483612628565b600354909450600061105e6000805160206165e88339815191525490565b9050600061106b83612b7f565b90506110778342612b8b565b92505b62ffffff811660009081526006602052604090205461109a818615612c01565b6111be576110a88483612c30565b9350600080806110bc8488888b898e612cb8565b9194509250905082156111ba576110d3898461220f565b98506110df8d83612628565b9c5060006110fa6110ef89612ede565b839061ffff16612eee565b9050801561111b5761110c8b82612628565b9a50611118848261220f565b93505b61112f836111298787612628565b9061220f565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca7088878761117c8e612f64565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036111cd5750611217565b60006111d98684612f75565b905062ffffff811615806111f1575062ffffff818116145b1561120f57604051631a6d7fb160e31b815260040160405180910390fd5b91505061107a565b60008990036112395760405163439df85d60e11b815260040160405180910390fd5b611243878a61220f565b6004556005869055611257600a8483612f97565b92506112638382612712565b60035583156112925761128d6112856000805160206165c88339815191525490565b8a908c6130b2565b6112b3565b6112b36112ab6000805160206166088339815191525490565b8a908c6130f2565b6112ca600160008051602061662883398151915255565b6112d788338c878d613103565b505050505050505092915050565b600354607890600090819081908190816112fe82613160565b905061ffff811615611386576000611317600a83613170565b96509050611324816131ce565b965061132f816131da565b94508464ffffffffff1660000361134557600095505b61ffff861615611384576113768661ffff168361ffff1681611369576113696161eb565b600a9160019106016131fb565b9050611381816131da565b93505b505b50509091929394565b611397612249565b61139f6123c6565b6113b1600354888888888888886127b5565b6107f1600160008051602061662883398151915255565b60008060008060008060008060035490506113e2816131ce565b97506113ed8161322b565b96506113f88161323b565b95506114038161324b565b945061140e8161325b565b935061141981612ede565b92506114248161326c565b91505090919293949596565b6000806000806003549050600061144682613160565b905061ffff8116158061145f5750428664ffffffffff16115b156114765760008060009450945094505050611528565b6000611484600a838961327d565b91985096509450905064ffffffffff8088169082161015611524576114ba6114ab84612b7f565b849064ffffffffff8a166133a0565b925060006114c88289616217565b90508064ffffffffff166114db85612b7f565b62ffffff166114ea9190616235565b6114f49088616261565b96508064ffffffffff1661150785612f64565b62ffffff166115169190616235565b6115209087616261565b9550505b5050505b9193909250565b6000806000806000600354905061154581612f64565b9450611550816133b8565b935061155b816133c9565b9250611566816133da565b91505090919293565b60606201000b80546106ca90615e97565b600061158a612249565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190615ecb565b6001600160a01b0316336001600160a01b03161461163d57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c600061169882611660576000611663565b60015b60ff166000856001600160801b03161161167e576000611681565b60015b60ff169060801b6001600160801b03919091161790565b90506116a4848261220f565b945084156117285760058190556004546116be908661220f565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261172861170f6000805160206166088339815191525490565b6000805160206165c88339815191525487919033612662565b50505050611743600160008051602061662883398151915255565b90565b60006117528383612f75565b9392505050565b600354600090839082908161177a6000805160206165e88339815191525490565b9050600061178783612b7f565b90506117938342612b8b565b92505b62ffffff81166000908152600660205260408120546117b69089156133ed565b90506001600160801b0381161561189c5760006117d862ffffff841685612a60565b90506000876001600160801b0316836001600160801b0316116117fb57826117fd565b875b90506118098685612c30565b955060008a61182c576118276001600160801b03831684608061340d565b611841565b6118416001600160801b038316608085613443565b9050600061184f8888613479565b905060006118666001600160801b03841683613498565b90506118728184616282565b61187c908d616282565b9b50611888848c6162a2565b9a50611894818b616282565b995050505050505b856001600160801b03166000036118b357506118eb565b60006118bf8984612f75565b905062ffffff811615806118d7575062ffffff818116145b156118e35750506118eb565b915050611796565b5050509250925092565b6118fd612249565b600354600061190b82613160565b90508061ffff1660000361192a5750600161192682826134e1565b6003555b611936600a8285613530565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a25050611988600160008051602061662883398151915255565b50565b606086336119998282613619565b6119ce5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b6119d6612249565b8515806119e35750858414155b15611a0157604051633ab7870760e01b815260040160405180910390fd5b6201000954611a1681338c8c8c8c8c8c613665565b898767ffffffffffffffff811115611a3057611a30615ee8565b604051908082528060200260200182016040528015611a59578160200160208202803683370190505b5094506000805b89811015611bad576000611a8b8c8c84818110611a7f57611a7f6161b8565b905060200201356136ab565b905060008a8a84818110611aa157611aa16161b8565b90506020020135905080600003611ad257604051636996a92560e01b815262ffffff831660048201526024016119c5565b62ffffff82166000818152600660209081526040808320546001909252909120549091611b01908890856136d6565b6000611b0e838584613757565b90506000819003611b395760405163fd44792960e01b815262ffffff861660048201526024016119c5565b611b43838261220f565b9250838203611b5957611b576007866137cf565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611b8657611b866161b8565b6020908102919091010152611b9b8782612628565b96508560010195505050505050611a60565b50600454611bbb908261220f565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611c04908f908f908f908f9061630d565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611c5393929190616334565b60405180910390a3611c8d611c746000805160206166088339815191525490565b6000805160206165c8833981519152548391908e612662565b611ca4600160008051602061662883398151915255565b611cb48333848e8e8e8e8e613871565b50505050509695505050505050565b611ccb612249565b611cd36123c6565b600354611ce7611ce282612761565b6138b7565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611d15836133c9565b611d1e846133b8565b6040805162ffffff93841681529290911660208301520160405180910390a250611d55600160008051602061662883398151915255565b565b60055460009081906001600160801b0381169060801c61077e565b60006106b46000805160206165c88339815191525490565b60006106b4600354612b7f565b611da23383836138ec565b5050565b6000808080611dbe6001600160801b038716866139a1565b6003549091506000611ddc6000805160206165e88339815191525490565b90506000611de983612b7f565b9050611df58342612b8b565b92505b62ffffff8116600090815260066020526040902054611e18818a15612c01565b611e8557611e268483612c30565b935060008080611e3a8488888f898d612cb8565b919450925090508215611e8157611e51888461220f565b9750611e5e828d156133ed565b611e68908b616282565b9950611e74818d6133ed565b611e7e908a616282565b98505b5050505b6000859003611e945750611ecc565b6000611ea08a84612f75565b905062ffffff81161580611eb8575062ffffff818116145b15611ec4575050611ecc565b915050611df8565b611ed684896133ed565b9650505050509250925092565b60006117528383613619565b611ef7612249565b6000839003611f195760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611f2c866139b2565b9050611f3a83338989613aba565b611f6c611f536000805160206166088339815191525490565b6000805160206165c8833981519152548891908a612662565b6000806001600160a01b038916631faa6b8760e01b33611f986000805160206166088339815191525490565b6000805160206165c8833981519152548c888d8d604051602401611fc29796959493929190616383565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161201891906163c4565b6000604051808303816000865af19150503d8060008114612055576040519150601f19603f3d011682016040523d82523d6000602084013e61205a565b606091505b509150915081158061206e57508051602014155b806120ac57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2818060200190518101906120a991906163e0565b14155b156120ca57604051634a57011360e01b815260040160405180910390fd5b60006120fe6120e56000805160206166088339815191525490565b6000805160206165c88339815191525460009190612472565b905061211461210d8686612628565b8290613b0f565b1561213257604051630e3c717160e11b815260040160405180910390fd5b600061213e828761220f565b60048390556005549091506121539082612628565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d9061219190612b7f565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a36121d3600160008051602061662883398151915255565b6121e087338d8885613b53565b5050505050505050505050565b60006106966122086000805160206165e88339815191525490565b8390613baf565b8082038281118061222b57506001600160801b03808416908216115b156106965760405163e599af5560e01b815260040160405180910390fd5b60008051602061662883398151915280546001190161227b57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561231757612317886379c8ccf760e01b898989898989896040516024016122c897969594939291906163f9565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613bf4565b5050505050505050565b853361232d8282613619565b61235d5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044016119c5565b612317888888888888613c58565b600160008051602061662883398151915255565b750200000000000000000000000000000000000000000088161561231757612317886367ddb27860e01b898989898989896040516024016122c897969594939291906163f9565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d5557604051632486085360e01b815260040160405180910390fd5b82156109145761091483634e430b5a60e01b8585856040516024016122c89392919061644f565b6001600160a01b038116158061245457506001600160a01b03811630145b15611988576040516345c210e760e11b815260040160405180910390fd5b60006124aa8461112961248485613dbb565b61248d87613dbb565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156124f4576124f486630d4abdb360e01b87878787876040516024016122c8959493929190616469565b505050505050565b6000806125156000805160206165e88339815191525490565b600354909150600061252682612b7f565b905086935060005b8881101561261b576000806125648a8d8d8681811061254f5761254f6161b8565b90506020020135613e2a90919063ffffffff16565b91509150600080600061257a898886888c613e73565b9194509250905061258b8a8361220f565b99508362ffffff168b6000015187815181106125a9576125a96161b8565b602002602001018181525050808b6020015187815181106125cc576125cc6161b8565b602002602001018181525050828b6040015187815181106125ef576125ef6161b8565b60200260200101818152505061260b8c8562ffffff1685614081565b856001019550505050505061252e565b5050505095945050505050565b8181018281108061264457506001600160801b03808416908216105b15610696576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c8115612694576126946001600160a01b038616846001600160801b0385166140ce565b6001600160801b038116156124f4576124f46001600160a01b038516846001600160801b0384166140ce565b742000000000000000000000000000000000000000008616156124f4576124f486637a51a4c660e01b87878787876040516024016122c8959493929190616469565b61270a61411f565b611d5561416d565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611752565b60008061276d83612b7f565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611752565b61ffff87161580156127c9575061ffff8616155b80156127d7575061ffff8516155b80156127e5575061ffff8416155b80156127f4575062ffffff8316155b8015612802575061ffff8216155b8015612811575062ffffff8116155b1561282f576040516331375e0360e11b815260040160405180910390fd5b61283f8888888888888888614175565b975060006128596000805160206165e88339815191525490565b905060006128678a8461428e565b9050600061287582846142ec565b61287f838561432c565b61288991906164a8565b905067016345785d8a00008111156128b4576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b60608161ffff1660000361295e5750506040805180820190915260018152600360fc1b602082015290565b8160005b61ffff82161561298c5780612976816164bb565b91506129859050600a836164dc565b9150612962565b60008161ffff1667ffffffffffffffff8111156129ab576129ab615ee8565b6040519080825280601f01601f1916602001820160405280156129d5576020820181803683370190505b5090505b61ffff8516156124aa576129ee6001836164fd565b91506129fb600a86616518565b612a06906030616539565b60f81b818361ffff1681518110612a1f57612a1f6161b8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a59600a866164dc565b94506129d9565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff1901612a8e8282614350565b95945050505050565b808214611da2576040516340311ffd60e11b815260040160405180910390fd5b600080612ac48460801c90565b90506124aa81612ad385613dbb565b612add91906162a2565b6001600160801b031660801b90565b60006001600160801b0383166124aa81612b0585613dbb565b612b0f91906162a2565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b7890869063feee373560e01b9060a4016122c8565b5050505050565b600060e882901c610696565b600080612b97846133da565b612ba89064ffffffffff1684616554565b9050612bb38461322b565b61ffff168110612bf757612bc684612761565b9350612bd18461323b565b61ffff168110612beb57612be68460006145b0565b612bf4565b612bf4846138b7565b93505b6124aa848461461e565b600081612c2157612c128360801c90565b6001600160801b031615611752565b50506001600160801b03161590565b600080612c3c846133c9565b62ffffff169050600080828562ffffff1611612c5f578462ffffff168303612c68565b828562ffffff16035b91506127108202612c78876133b8565b62ffffff160190506000612c8b8761326c565b62ffffff169050808211612c9f5781612ca1565b805b9150612cad878361428e565b979650505050505050565b6000808080612ccc62ffffff871689612a60565b90506000612cdb8b89156133ed565b9050600088612d0657612d01612cfc6001600160801b03841685608061340d565b614677565b612d1e565b612d1e612cfc6001600160801b038416608086613443565b90506000612d2c8c8c613479565b90506000612d436001600160801b03841683613498565b9050612d4f8184616282565b92506000612d5d8a8d6133ed565b9050600080856001600160801b0316836001600160801b031610612d88575084915082905085612dfe565b612d9b6001600160801b038416866146a1565b91506000612da983856162a2565b6001600160801b031690508e612dcd57612dc8612cfc8260808c6146d8565b612ddc565b612ddc612cfc828b6080614702565b9150876001600160801b0316826001600160801b03161115612dfc578791505b505b8d612e3857612e16836001600160801b031660801b90565b6001600160801b038216612e33846001600160801b031660801b90565b612e60565b6001600160801b038316612e55826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612eb2612eac85611129888f61262890919063ffffffff16565b83614770565b1115612ed15760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061069682604e1c613fff1690565b6000816001600160801b0316600003612f0957506000610696565b6127106001600160801b038316811015612f3657604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006106968260701c620fffff1690565b600082612f8c57612f8760078361478c565b611752565b6117526007836148d8565b600080612fa384613160565b90508061ffff16600003612fba5783915050611752565b6000612fc686836131fb565b90506000612fd382614a08565b90506000612fe083614a14565b612fed9060ff1683616567565b90508064ffffffffff1661300042614a23565b64ffffffffff1611156130a65760008060006130458464ffffffffff1642036130288c612b7f565b6130318d612f64565b61303b8e8e614a4b565b8a93929190614a7b565b9250925092506000613056876131ce565b905064ffffffffff8616420360788111156130865750968790066001019642955060006130838c8a6134e1565b9b505b61309482868686858c614ae0565b975050505050506130a6888585614b84565b50949695505050505050565b60006130be8460801c90565b90506001600160801b038116156130ec576130ec6001600160a01b038416836001600160801b0384166140ce565b50505050565b60006001600160801b0384166130be565b74020000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b789086906353e8079b60e01b9060a4016122c8565b60006106968260d81c61ffff1690565b60008061317d84846131fb565b9150613188826131ce565b90508061ffff168361ffff16146131c7576131ab6131a685836131fb565b6131ce565b90508061ffff168361ffff16116131c257806131c4565b825b90505b9250929050565b600061ffff8216610696565b60006131e582614a14565b60ff166131f183614a08565b6106969190616567565b60008161320781614bb1565b8361ffff60001985018116908110613221576132216161b8565b0154949350505050565b60006106968260101c610fff1690565b600061069682601c1c610fff1690565b60006106968260281c613fff1690565b60006106968260361c62ffffff1690565b600061069682605c1c620fffff1690565b6000806000806000806132908989613170565b909250905064ffffffffff87166132c78a6132ab848c616518565b61ffff1661ffff81106132c0576132c06161b8565b01546131da565b64ffffffffff1611156132ed57604051631c4e7f9560e21b815260040160405180910390fd5b6132f6826131da565b95508664ffffffffff168664ffffffffff1611613338578561331783614bd6565b61332084614bec565b61332985614c02565b95509550955095505050613397565b86955060008061334a8b8b8b86614c18565b9150915060008961335a836131da565b6133649190616217565b90506000613371846131da565b61337b908c616217565b905061338984848484614d6a565b919a50985096505050505050505b93509350935093565b60006133ac8483612b8b565b93506124aa8484612c30565b60006106968260841c620fffff1690565b60006106968260981c62ffffff1690565b60006106968260b01c64ffffffffff1690565b6000816133fe57612f878360801c90565b6001600160801b038316611752565b600061341a848484614702565b9050600160ff83161b80613430576134306161eb565b83850915611752576124aa6001826164a8565b60006134508484846146d8565b90508180613460576134606161eb565b600160ff85161b850915611752576124aa6001826164a8565b600061175261348884846142ec565b613492858561432c565b01614677565b6000816134a481614ece565b6001600160801b03808416670de0b6b3a764000081900391829160001991881602820101816134d5576134d56161eb565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611752565b600061353c84846131fb565b90506000613549826131ce565b90508261ffff168161ffff161061357357604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146135a45761ffff82161561359d5761359886836131fb565b6135a6565b60006135a6565b825b905060006135b3826131ce565b61ffff169050808661ffff16116135ca57806135d0565b8561ffff165b905061ffff83165b8561ffff168110156136025781888261ffff81106135f8576135f86161b8565b01556001016135d8565b506107f1878761ffff868116881890891617614b84565b6000816001600160a01b0316836001600160a01b031614806117525750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b74400000000000000000000000000000000000000000881615612317576123178863ea9db9d360e01b898989898989896040516024016122c897969594939291906163f9565b8062ffffff811681146136d157604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561373357604051625b387760e31b81526001600160a01b038616600482015260248101859052604481018490526064016119c5565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c8280831561378a57613787612cfc886001600160801b03871689614f00565b91505b6001600160801b038316156137b3576137b0612cfc886001600160801b03861689614f00565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461386557600083815260028701602052604081208290558190036138595750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613857578654600160ff83161b191687555b505b60019350505050610696565b50600095945050505050565b74800000000000000000000000000000000000000000881615612317576123178863fdc2725760e01b898989898989896040516024016122c897969594939291906163f9565b6000806138c383612f64565b62ffffff16905060006138d58461324b565b61ffff16905061271082820204612a8e85826145b0565b826138f681612436565b826001600160a01b0316846001600160a01b0316036139335760405163782ee70760e01b81526001600160a01b03851660048201526024016119c5565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816133fe57612f878360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3791906163e0565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff90613a7090670de0b6b3a7640000908616850283015b04614677565b9250613aa2670de0b6b3a764000082866001600160801b0316856001600160801b0316020181613a6a57613a6a6161eb565b915050608081901b6001600160801b03831617612a8e565b740400000000000000000000000000000000000000008416156130ec576040516001600160a01b03808516602483015283166044820152606481018290526130ec90859063505d903360e01b906084016122c8565b60006001600160801b0383811690608085811c9185169085901c81841080612cad5750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612b78576040516001600160a01b038086166024830152841660448201526064810183905260848101829052612b789086906360bed5f360e01b9060a4016122c8565b600061271061ffff60801b608084901b1604600160801b0181613bd182614f20565b613bda86614f20565b613be49190616585565b9050612a8e8162800000016136ab565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613c28573d6000803e3d6000fd5b8060005160e01c14601f3d11168316925050816130ec57604051636c93cb9b60e01b815260040160405180910390fd5b8281613c648282612a97565b86613c6e81612436565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613d525760008a8a83818110613cad57613cad6161b8565b9050602002013590506000898984818110613cca57613cca6161b8565b600085815260208981526040909120549102929092013592505081811015613d27578e83836040516358b4690f60e01b81526004016119c5939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613c91565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613da6949392919061630d565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610696906001600160a01b038416906370a0823190602401602060405180830381865afa158015613e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfc91906163e0565b6000806000806000613e3b8761502d565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613e9a908b612a60565b90506000613eb98962ffffff1660009081526001602052604090205490565b9050613ec7838984846150d0565b909650945084935062ffffff808b16908a1603613fff57613ee9878a426133a0565b96506000613efb84898e89868c615256565b90508015613ff9576000613f1984613f13898561220f565b90614770565b90506000613f34613f298b612ede565b849061ffff16612eee565b90508015613f5a57613f46878261220f565b600554909750613f569082612628565b6005555b6000613f7486613f13613f6d878661220f565b8a90612628565b9050613f81838683614f00565b9950613f8f600a8c8f612f97565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613fed9392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b5061400a565b61400a858b8b61534b565b851580614015575083155b1561403a57604051634c98d35760e11b815262ffffff8a1660048201526024016119c5565b8060000361404f5761404d60078a6153b1565b505b6140598385612628565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b6000828152600160205260408120805483929061409f9084906164a8565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526130ec848261543e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611d5557604051631afcd79f60e31b815260040160405180910390fd5b61236b61411f565b60008561ffff168761ffff1611806141925750610fff8661ffff16115b806141a257506127108561ffff16115b806141b257506109c48361ffff16115b806141c45750620fffff8262ffffff16115b156141e257604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff1611156142b957604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611752565b6000806142f88461325b565b62ffffff16905080156134da5760008361ffff1661431586612f64565b62ffffff16029050606460638280028402016134d5565b60008161ffff1661433c846131ce565b61ffff16026402540be40002905092915050565b60008060008360000361436c5750600160801b91506106969050565b5082600081121561437e579015906000035b6210000081101561456e57600160801b9250846001600160801b038111156143a857911591600019045b60018216156143b95792830260801c925b800260801c60028216156143cf5792830260801c925b800260801c60048216156143e55792830260801c925b800260801c60088216156143fb5792830260801c925b800260801c60108216156144115792830260801c925b800260801c60208216156144275792830260801c925b800260801c604082161561443d5792830260801c925b8002608090811c908216156144545792830260801c925b800260801c61010082161561446b5792830260801c925b800260801c6102008216156144825792830260801c925b800260801c6104008216156144995792830260801c925b800260801c6108008216156144b05792830260801c925b800260801c6110008216156144c75792830260801c925b800260801c6120008216156144de5792830260801c925b800260801c6140008216156144f55792830260801c925b800260801c61800082161561450c5792830260801c925b800260801c620100008216156145245792830260801c925b800260801c6202000082161561453c5792830260801c925b800260801c620400008216156145545792830260801c925b800260801c6208000082161561456c5792830260801c925b505b8260000361459957604051631dba598d60e11b815260048101869052602481018590526044016119c5565b816145a45782612a8e565b612a8e836000196165b3565b6000620fffff8262ffffff1611156145db57604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611752565b60008061462a83614a23565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176124aa565b806001600160801b03811681146136d157604051632f45db3d60e21b815260040160405180910390fd5b6000816146ad81614ece565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612f5a9087906001901b8685856154ae565b6000806000614711868661555a565b9150915081600014614727578360ff1682901c92505b801561476757600160ff85161b811061475357604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c612a8e828286615579565b60008061ffff600884901c1660ff8085169081146147e157600082815260028701602052604081205493506147c184836155e4565b905060001981146147df5760089290921b9091179250610696915050565b505b5060ff80821690600883901c90821461485b576000818152600188016020526040812054945061481185846155e4565b9050600019811461485957600882901b8117600081815260028a01602052604090205495509350614841856155f3565b60ff1660088560001c901b1795505050505050610696565b505b60ff818116925082146148cb5786549350600061487885846155e4565b905060001981146148c957600081815260018901602052604090205494509050806148a2856155f3565b60ff16600883901b17600081815260028a01602052604090205495509350614841856155f3565b505b5060009695505050505050565b60008061ffff600884901c1660ff8416801561492b576000828152600287016020526040812054935061490b848361568f565b905060001981146149295760089290921b9091179250610696915050565b505b5060ff8116600882901c811561498a5760008181526001880160205260408120549450614958858461568f565b9050600019811461498857600882901b8117600081815260028a016020526040902054955093506148418561569f565b505b60ff8116915081156149f9578654935060006149a6858461568f565b905060001981146149f757600081815260018901602052604090205494509050806149d08561569f565b60ff16600883901b17600081815260028a016020526040902054955093506148418561569f565b505b5062ffffff9695505050505050565b600060d882901c610696565b60006106968260d01c60ff1690565b8064ffffffffff811681146136d1576040516350dbfc8760e11b815260040160405180910390fd5b600080614a5784612b7f565b90508062ffffff168362ffffff1611614a72578281036124aa565b90910392915050565b64ffffffffff841662ffffff848116820291848216810291841602614a9f88614bd6565b614aa99084616261565b9250614ab488614bec565b614abe9083616261565b9150614ac988614c02565b614ad39082616261565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612cad565b81614b8e81614bb1565b818461ffff60001986018116908110614ba957614ba96161b8565b015550505050565b8061ffff166000036119885760405163944e113960e01b815260040160405180910390fd5b60006106968260101c67ffffffffffffffff1690565b60006106968260501c67ffffffffffffffff1690565b60006106968260901c67ffffffffffffffff1690565b6000808080614c286001866164fd565b61ffff16905060008060008961ffff1690505b838511614ce65760006001614c5086886164a8565b901c9050888183089a508b61ffff808d16908110614c7057614c706161b8565b01549350614c7d846131da565b92508964ffffffffff168364ffffffffff161115614ca757614ca0600182616554565b9450614ce0565b8964ffffffffff168364ffffffffff161015614ccf57614cc88160016164a8565b9550614ce0565b838497509750505050505050614d61565b50614c3b565b8164ffffffffff168964ffffffffff161015614d37578961ffff16600003614d0c578799505b8a61ffff6000198c018116908110614d2657614d266161b8565b015483965096505050505050614d61565b8760018b089950828b61ffff808d16908110614d5557614d556161b8565b01549650965050505050505b94509492505050565b600080600080614d7988614bd6565b67ffffffffffffffff1690506000614d9089614bec565b67ffffffffffffffff1690506000614da78a614c02565b67ffffffffffffffff1690508664ffffffffff16600003614dce5791945092509050614ec4565b6000614dd98a614bd6565b67ffffffffffffffff1690506000614df08b614bec565b67ffffffffffffffff1690506000614e078c614c02565b67ffffffffffffffff1690508a64ffffffffff16600003614e325791975095509350614ec492505050565b6000614e4864ffffffffff808d16908e166164a8565b9050808b64ffffffffff1685028d64ffffffffff1689020181614e6d57614e6d6161eb565b049950808b64ffffffffff1684028d64ffffffffff1688020181614e9357614e936161eb565b049850808b64ffffffffff1683028d64ffffffffff1687020181614eb957614eb96161eb565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b0316111561198857604051638630bc6b60e01b815260040160405180910390fd5b6000806000614f0f868661555a565b91509150612f5a86868685856154ae565b600081600103614f335750607f19919050565b81600003614f545760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614f7c57506001614f97565b5060001982600160fe1b81614f9357614f936161eb565b0492505b6000614fa6607f85901c61569f565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114615022576f400000000000000000000000000000005b600081131561502057908002607f1c90600160801b8210615018579384019360019190911c905b60011d614ff1565b505b50500260011b919050565b600080806150458460581c67ffffffffffffffff1690565b925061505b8460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff8411806150965750670de0b6b3a76400008367ffffffffffffffff16115b806150b25750670de0b6b3a76400008267ffffffffffffffff16115b1561152857604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c826150ee838389615579565b905080600003615108575060009350839250614d61915050565b60006151148a89614770565b9050801580615121575086155b1561513d5761512f8261573a565b899550955050505050614d61565b615148828883614f00565b9550600061515787838a6157ac565b9050808311156151f657600061516d8285616554565b9050600160801b81106151ae57608081901c85811161518c578061518e565b855b905061519a8187616554565b95506151aa608082901b83616554565b9150505b8981106151e25760006151c18b836165b3565b90508681116151d057806151d2565b865b90506151de8188616554565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b6116152286152228d8d612628565b8b614770565b11156152475760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b60008160000361526857506000612f5a565b6001600160801b038416608085901c60008061529a61076a61528a8d8b612628565b88615295818c6164a8565b613757565b91509150836001600160801b0316826001600160801b031611156152fd5760006152e06152c78c8c613479565b6152d184876162a2565b6001600160801b0316906157c9565b90506152f5816001600160801b031660801b90565b95505061533d565b826001600160801b0316816001600160801b0316111561533d5760006153306153268c8c613479565b6152d185886162a2565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156153675750608083901b15155b8061538c57508162ffffff168162ffffff1611801561538c57506001600160801b0383115b156109145760405163227bd87160e21b815262ffffff821660048201526024016119c5565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b8117808214613865576000838152600287016020526040812082905582900361385957600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613857578654600160ff83161b1787555060019350505050610696565b600080600052602060008351602085016000875af1905080801561547f573d80156154725760016000511483169250615479565b843b151592505b5061548f565b3d1561548f573d6000803e3d6000fd5b50806109145760405163197138bd60e11b815260040160405180910390fd5b6000816000036154cf578383816154c7576154c76161eb565b049050612a8e565b8382106154ef576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156155b4575080830281848281615595576155956161eb565b04146155b4576040516363f1e01f60e01b815260040160405180910390fd5b82156117525760809290921b91820182811015611752576040516363f1e01f60e01b815260040160405180910390fd5b6000611752836001840161580a565b60008160801b801561560757608091508092505b8260401b9050801561561a579150604001815b8260201b9050801561562d579150602001815b8260101b90508015615640579150601001815b8260081b90508015615653579150600801815b8260041b90508015615666579150600401815b8260021b90508015615679579150600201815b508160011b15615687576001015b60ff03919050565b6000611752836000198401615838565b60006001600160801b038211156156b85750608090811c905b67ffffffffffffffff8211156156d057604091821c91015b63ffffffff8211156156e457602091821c91015b61ffff8211156156f657601091821c91015b60ff82111561570757600891821c91015b600f82111561571857600491821c91015b600382111561572957600291821c91015b60018211156136d157600101919050565b60008160000361574c57506000919050565b60006157578361569f565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106157a65782611752565b50919050565b60006157b9848484614f00565b90508180613430576134306161eb565b6000816157d581614ece565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a764000091909101026134d5565b60ff81169190911c906000821561582e5781615825846155f3565b0160ff16611752565b5060001992915050565b60ff8181031691821b91600090831561585e57806158558561569f565b60ff16036124aa565b506000199392505050565b6001600160a01b038116811461198857600080fd5b6000806040838503121561589157600080fd5b823561589c81615869565b946020939093013593505050565b60005b838110156158c55781810151838201526020016158ad565b50506000910152565b60208152600082518060208401526158ed8160408501602087016158aa565b601f01601f19169190910160400192915050565b803562ffffff811681146136d157600080fd5b60006020828403121561592657600080fd5b61175282615901565b60008083601f84011261594157600080fd5b50813567ffffffffffffffff81111561595957600080fd5b6020830191508360208260051b85010111156131c757600080fd5b6000806000806000806080878903121561598d57600080fd5b863561599881615869565b955060208701356159a881615869565b9450604087013567ffffffffffffffff808211156159c557600080fd5b6159d18a838b0161592f565b909650945060608901359150808211156159ea57600080fd5b506159f789828a0161592f565b979a9699509497509295939492505050565b60008083601f840112615a1b57600080fd5b50813567ffffffffffffffff811115615a3357600080fd5b6020830191508360208285010111156131c757600080fd5b600080600060408486031215615a6057600080fd5b83359250602084013567ffffffffffffffff811115615a7e57600080fd5b615a8a86828701615a09565b9497909650939450505050565b60008060008060608587031215615aad57600080fd5b8435615ab881615869565b9350602085013567ffffffffffffffff811115615ad457600080fd5b615ae08782880161592f565b9094509250506040850135615af481615869565b939692955090935050565b600081518084526020808501945080840160005b83811015615b2f57815187529582019590820190600101615b13565b509495945050505050565b838152826020820152606060408201526000612a8e6060830184615aff565b803561ffff811681146136d157600080fd5b600080600080600080600080610100898b031215615b8857600080fd5b615b9189615b59565b9750615b9f60208a01615b59565b9650615bad60408a01615b59565b9550615bbb60608a01615b59565b9450615bc960808a01615901565b9350615bd760a08a01615b59565b9250615be560c08a01615901565b9150615bf360e08a01615901565b90509295985092959890939650565b60008060008060408587031215615c1857600080fd5b843567ffffffffffffffff80821115615c3057600080fd5b615c3c8883890161592f565b90965094506020870135915080821115615c5557600080fd5b50615c628782880161592f565b95989497509550505050565b6020815260006117526020830184615aff565b803580151581146136d157600080fd5b60008060408385031215615ca457600080fd5b615cad83615c81565b91506020830135615cbd81615869565b809150509250929050565b600080600080600080600060e0888a031215615ce357600080fd5b615cec88615b59565b9650615cfa60208901615b59565b9550615d0860408901615b59565b9450615d1660608901615b59565b9350615d2460808901615901565b9250615d3260a08901615b59565b9150615d4060c08901615901565b905092959891949750929550565b600060208284031215615d6057600080fd5b813564ffffffffff8116811461175257600080fd5b60008060408385031215615d8857600080fd5b615d9183615c81565b91506131c460208401615901565b60008060408385031215615db257600080fd5b82356001600160801b0381168114615dc957600080fd5b91506131c460208401615c81565b600060208284031215615de957600080fd5b5035919050565b600060208284031215615e0257600080fd5b61175282615b59565b60008060408385031215615e1e57600080fd5b8235615dc981615869565b60008060408385031215615e3c57600080fd5b8235615cad81615869565b60008060008060608587031215615e5d57600080fd5b8435615e6881615869565b935060208501359250604085013567ffffffffffffffff811115615e8b57600080fd5b615c6287828801615a09565b600181811c90821680615eab57607f821691505b6020821081036157a657634e487b7160e01b600052602260045260246000fd5b600060208284031215615edd57600080fd5b815161175281615869565b634e487b7160e01b600052604160045260246000fd5b604081526000615f116040830185615aff565b8281036020840152612a8e8185615aff565b600060208284031215615f3557600080fd5b815167ffffffffffffffff80821115615f4d57600080fd5b818401915084601f830112615f6157600080fd5b815181811115615f7357615f73615ee8565b604051601f8201601f19908116603f01168101908382118183101715615f9b57615f9b615ee8565b81604052828152876020848701011115615fb457600080fd5b612cad8360208301602088016158aa565b7f4c697175696469747920426f6f6b20546f6b656e200000000000000000000000815260008451615ffd8160158501602089016158aa565b8083019050602f60f81b8060158301528551616020816016850160208a016158aa565b6016920191820152835161603b8160178401602088016158aa565b0160170195945050505050565b601f82111561091457600081815260208120601f850160051c8101602086101561606f5750805b601f850160051c820191505b818110156124f45782815560010161607b565b815167ffffffffffffffff8111156160a8576160a8615ee8565b6160bc816160b68454615e97565b84616048565b602080601f8311600181146160f157600084156160d95750858301515b600019600386901b1c1916600185901b1785556124f4565b600085815260208120601f198616915b8281101561612057888601518255948401946001909101908401616101565b508582101561613e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b81526000845161616d8160048501602089016158aa565b8083019050602f60f81b8060048301528551616190816005850160208a016158aa565b600592019182015283516161ab8160068401602088016158aa565b0160060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156161e057600080fd5b813561175281615869565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff8281168282160390808211156134da576134da616201565b67ffffffffffffffff81811683821602808216919082811461625957616259616201565b505092915050565b67ffffffffffffffff8181168382160190808211156134da576134da616201565b6001600160801b038181168382160190808211156134da576134da616201565b6001600160801b038281168282160390808211156134da576134da616201565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156162f457600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006163216040830186886162c2565b8281036020840152612cad8185876162c2565b6040815260006163486040830185876162c2565b8281036020840152612f5a8185615aff565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a083015261428160c08301848661635a565b600082516163d68184602087016158aa565b9190910192915050565b6000602082840312156163f257600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a0606083015261642e60a0830186886162c2565b82810360808401526164418185876162c2565b9a9950505050505050505050565b838152604060208201526000612a8e60408301848661635a565b60006001600160a01b038088168352808716602084015250608060408301526164966080830185876162c2565b90508260608301529695505050505050565b8082018082111561069657610696616201565b600061ffff8083168181036164d2576164d2616201565b6001019392505050565b600061ffff808416806164f1576164f16161eb565b92169190910492915050565b61ffff8281168282160390808211156134da576134da616201565b600061ffff8084168061652d5761652d6161eb565b92169190910692915050565b61ffff8181168382160190808211156134da576134da616201565b8181038181111561069657610696616201565b64ffffffffff8181168382160190808211156134da576134da616201565b600082616594576165946161eb565b600160ff1b8214600019841416156165ae576165ae616201565b500590565b6000826165c2576165c26161eb565b50049056fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa58264ff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427823441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212206076aa4d749410b596734f37ddf2e17219a4599a496e020148220c1b6532b2a064736f6c63430008140033608060405234801561001057600080fd5b506040516108ff3803806108ff83398101604081905261002f9161018a565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a8161009e565b50610074826100ee565b5050600380546001600160a01b0319166001600160a01b0392909216919091179055506101cd9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036101245760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461018557600080fd5b919050565b60008060006060848603121561019f57600080fd5b6101a88461016e565b92506101b66020850161016e565b91506101c46040850161016e565b90509250925092565b610723806101dc6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73e919920ae49d3027566025548f12cdab4e52b59581565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73e919920ae49d3027566025548f12cdab4e52b5956105b2565b600073e919920ae49d3027566025548f12cdab4e52b5956105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea264697066735822122017084a6a294c7c04d0d46769a1a24663539b83ae7dcec7f168ac0c3156b7598b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004e6b38038062004e6b83398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614c2a620002416000396000818161019f015281816102fe01528181610602015281816106e0015281816107bc015281816108ff01528181610c8c015281816113c20152818161145c015281816115c1015281816116440152818161198701528181611c1c01528181611f030152818161285c01528181612bfb0152612c790152600081816104b00152613b7a01526000818161037b0152818161104d015281816111fa015281816120fd01526134570152614c2a6000f3fe60806040526004361061018f5760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc14610514578063e9361c0814610527578063f96fe9251461054757600080fd5b8063bb558a9f146104a1578063c22159b6146104d4578063d0e380f2146104f457600080fd5b8063a0d376cf116100b0578063a0d376cf1461044e578063a3c7271a1461046e578063b066ea7c1461048e57600080fd5b806392fe8e70146103c4578063964f987c146103e45780639ab6156b1461042e57600080fd5b8063659ac74b1161013857806381c2fdfb1161011257806381c2fdfb1461033757806388cc58e41461036c5780638efc2b2c1461039f57600080fd5b8063659ac74b146102b75780636c9c0078146102ef5780638129fc1c1461032257600080fd5b80633dc8f8ec116101695780633dc8f8ec146102575780634b8018701461027757806362c067671461029757600080fd5b80631a24f9a9146101e45780632075ad22146102175780632a443fae1461023757600080fd5b366101df57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd57604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101f057600080fd5b506102046101ff36600461414d565b61057b565b6040519081526020015b60405180910390f35b61022a6102253660046141b8565b61087d565b60405161020e9190614254565b34801561024357600080fd5b5061020461025236600461414d565b610add565b34801561026357600080fd5b5061022a61027236600461414d565b610c0a565b34801561028357600080fd5b5061020461029236600461414d565b610e10565b3480156102a357600080fd5b506101dd6102b2366004614267565b61104b565b3480156102c357600080fd5b506102d76102d23660046142d4565b6111bb565b6040516001600160a01b03909116815260200161020e565b3480156102fb57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561032e57600080fd5b506101dd611272565b34801561034357600080fd5b50610357610352366004614330565b61138c565b6040805192835260208301919091520161020e565b34801561037857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b6103b26103ad3660046143eb565b6114e3565b60405161020e96959493929190614427565b3480156103d057600080fd5b5061022a6103df36600461414d565b611730565b3480156103f057600080fd5b506104046103ff366004614494565b611875565b604080516001600160801b039485168152928416602084015292169181019190915260600161020e565b34801561043a57600080fd5b5061020461044936600461414d565b611905565b34801561045a57600080fd5b50610404610469366004614494565b611a79565b34801561047a57600080fd5b506103b26104893660046143eb565b611abd565b61020461049c3660046141b8565b611b9a565b3480156104ad57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156104e057600080fd5b506103576104ef3660046144df565b611d14565b34801561050057600080fd5b5061020461050f3660046145a7565b611e08565b6102046105223660046141b8565b611e81565b34801561053357600080fd5b506101dd61054236600461462c565b6120fb565b34801561055357600080fd5b506105676105623660046146c1565b61221e565b60405162ffffff909116815260200161020e565b600081804211156105ad5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105c5575080515160208201515114155b806105e257506040810151518151516105df906001614703565b14155b156106005760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001518760000151518151811061064557610645614716565b60200260200101516001600160a01b0316146106a45760408601518651518151811061067357610673614716565b602002602001015160405163cfec0e0160e01b81526004016105a491906001600160a01b0391909116815260200190565b60006106bd87600001518860200151896040015161228a565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b919061472c565b9050610791886040015160008151811061076757610767614716565b6020026020010151338460008151811061078357610783614716565b60200260200101518d61239a565b6107a58289602001518a60400151306123bb565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f919061472c565b6108399190614745565b945084891115610866576040516313fab00360e21b8152600481018a9052602481018690526044016105a4565b610870878661283a565b5050505095945050505050565b606081804211156108aa5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b845151859015806108c2575080515160208201515114155b806108df57506040810151518151516108dc906001614703565b14155b156108fd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061093e5761093e614716565b60200260200101516001600160a01b03161461096b57856040015160008151811061067357610673614716565b600061098487600001518860200151896040015161228a565b905061099a87602001518289604001518b6128ce565b935034846000815181106109b0576109b0614716565b602002602001015111156109fe5734846000815181106109d2576109d2614716565b602002602001015160405163194ee21960e31b81526004016105a4929190918252602082015260400190565b610a3c81600081518110610a1457610a14614716565b602002602001015185600081518110610a2f57610a2f614716565b6020026020010151612bed565b6000610a538289602001518a60400151888b612ca4565b905088811015610a80576040516313fab00360e21b8152600481018a9052602481018290526044016105a4565b84600081518110610a9357610a93614716565b6020026020010151341115610ad157610ad13386600081518110610ab957610ab9614716565b602002602001015134610acc9190614745565b612fc1565b50505050949350505050565b60008180421115610b0a5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610b22575080515160208201515114155b80610b3f5750604081015151815151610b3c906001614703565b14155b15610b5d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b7687600001518860200151896040015161228a565b9050610bbc8760400151600081518110610b9257610b92614716565b60200260200101513383600081518110610bae57610bae614716565b60200260200101518c61239a565b610bd1898289602001518a604001518a613053565b935083881115610bfe576040516313fab00360e21b815260048101899052602481018590526044016105a4565b50505095945050505050565b60608180421115610c375760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610c4f575080515160208201515114155b80610c6c5750604081015151815151610c69906001614703565b14155b15610c8a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610ccf57610ccf614716565b60200260200101516001600160a01b031614610cfd5760408601518651518151811061067357610673614716565b6000610d1687600001518860200151896040015161228a565b9050610d2c87602001518289604001518c6128ce565b93508784600081518110610d4257610d42614716565b60200260200101511115610d645787846000815181106109d2576109d2614716565b610dc28760400151600081518110610d7e57610d7e614716565b60200260200101513383600081518110610d9a57610d9a614716565b602002602001015187600081518110610db557610db5614716565b602002602001015161239a565b6000610dd98289602001518a604001518830612ca4565b905089811015610e06576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b610870878261283a565b60008180421115610e3d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610e55575080515160208201515114155b80610e725750604081015151815151610e6f906001614703565b14155b15610e905760405163b91b4d4d60e01b815260040160405180910390fd5b6000610ea987600001518860200151896040015161228a565b905060008760400151825181518110610ec457610ec4614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f919061472c565b9050610f858960400151600081518110610f5b57610f5b614716565b60200260200101513385600081518110610f7757610f77614716565b60200260200101518e61239a565b610f99838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061472c565b6110109190614745565b9550858a111561103d576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd9190614758565b6001600160a01b0316336001600160a01b0316146110fe57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661112e57600019811461111b578061111d565b475b90506111298282612fc1565b505050565b600019811461113d57806111a5565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a5919061472c565b90506111296001600160a01b03841683836133c0565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190614758565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156112bd5750825b905060008267ffffffffffffffff1660011480156112da5750303b155b9050811580156112e8575080155b156113065760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561133a57845468ff00000000000000001916680100000000000000001785555b831561138557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60008082804211156113ba5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b60006113eb8c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff16613426565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190614758565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611490579899985b6000806114a1848e8e8e8e30613512565b91509150826114b15780826114b4565b81815b80975081985050505050506114ca8c8786613674565b6114d4868461283a565b50509850989650505050505050565b6000808080606080826115166114fc60208a018a614775565b61150c60408b0160208c01614775565b8a60400135613426565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190614758565b6001600160a01b031661159060208a018a614775565b6001600160a01b0316146115b75760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115ee60208a018a614775565b6001600160a01b03161480156116075750348860600135145b1561163a5761162b61161f60408a0160208b01614775565b33838b6080013561239a565b6116358134612bed565b611711565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661167460408a0160208b01614775565b6001600160a01b031614801561168d5750348860800135145b156116ae5761162b6116a260208a018a614775565b33838b6060013561239a565b6116bb6020890189614775565b6116cb60408a0160208b01614775565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a4016105a4565b61171b8882613695565b949d939c50919a509850965090945092505050565b6060818042111561175d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611775575080515160208201515114155b80611792575060408101515181515161178f906001614703565b14155b156117b05760405163b91b4d4d60e01b815260040160405180910390fd5b60006117c987600001518860200151896040015161228a565b90506117df87602001518289604001518c6128ce565b935087846000815181106117f5576117f5614716565b602002602001015111156118175787846000815181106109d2576109d2614716565b6118318760400151600081518110610d7e57610d7e614716565b60006118488289602001518a60400151888b612ca4565b905089811015610870576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa1580156118d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f69190614792565b91989097509095509350505050565b600081804211156119325760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b8451518590158061194a575080515160208201515114155b806119675750604081015151815151611964906001614703565b14155b156119855760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106119ca576119ca614716565b60200260200101516001600160a01b0316146119f85760408601518651518151811061067357610673614716565b6000611a1187600001518860200151896040015161228a565b9050611a2d8760400151600081518110610b9257610b92614716565b611a42898289602001518a6040015130613053565b935083881115611a6f576040516313fab00360e21b815260048101899052602481018590526044016105a4565b610bfe868561283a565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f8906044016118b5565b600080808060608082611ad66114fc60208a018a614775565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3a9190614758565b6001600160a01b0316611b5060208a018a614775565b6001600160a01b031614611b775760405163b33f8ab960e01b815260040160405180910390fd5b611b876116a260208a018a614775565b61171161161f60408a0160208b01614775565b60008180421115611bc75760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611bdf575080515160208201515114155b80611bfc5750604081015151815151611bf9906001614703565b14155b15611c1a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611c5b57611c5b614716565b60200260200101516001600160a01b031614611c8857856040015160008151811061067357610673614716565b6000611ca187600001518860200151896040015161228a565b9050611cc781600081518110611cb957611cb9614716565b602002602001015134612bed565b611cdc348289602001518a604001518a613053565b935083881115611d09576040516313fab00360e21b815260048101899052602481018590526044016105a4565b505050949350505050565b6000808280421115611d425760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6000611d538d8d8d61ffff16613426565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db99190614758565b6001600160a01b03168e6001600160a01b0316141590508015611dda579899985b611de8828c8c8c8c8c613512565b90955093508015611df7579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061472c565b90505b92915050565b60008180421115611eae5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611ec6575080515160208201515114155b80611ee35750604081015151815151611ee0906001614703565b14155b15611f015760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611f4257611f42614716565b60200260200101516001600160a01b031614611f6f57856040015160008151811061067357610673614716565b6000611f8887600001518860200151896040015161228a565b905060008760400151825181518110611fa357611fa3614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201e919061472c565b905061203683600081518110611cb957611cb9614716565b61204a838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015612093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b7919061472c565b6120c19190614745565b9550858a11156120ee576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217d9190614758565b6001600160a01b0316336001600160a01b0316146121ae57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906121e49030908990899089908990899060040161481f565b600060405180830381600087803b1580156121fe57600080fd5b505af1158015612212573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612266573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061485f565b6060835167ffffffffffffffff8111156122a6576122a6613ecb565b6040519080825280602002602001820160405280156122cf578160200160208202803683370190505b509050600080836000815181106122e8576122e8614716565b6020026020010151905060005b83518110156123905781925084816001018151811061231657612316614716565b6020026020010151915061235e838389848151811061233757612337614716565b602002602001015189858151811061235157612351614716565b6020026020010151613b39565b84828151811061237057612370614716565b6001600160a01b03909216602092830291909101909101526001016122f5565b5050509392505050565b80156123b5576123b56001600160a01b038516848484613c40565b50505050565b6000806000806000866000815181106123d6576123d6614716565b6020026020010151905060005b8951811015612212578981815181106123fe576123fe614716565b6020026020010151925088818151811061241a5761241a614716565b6020026020010151945081955087816001018151811061243c5761243c614716565b60200260200101519150895181600101146124735789816001018151811061246657612466614716565b6020026020010151612475565b865b9350600085600181111561248b5761248b61487c565b0361273157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156124d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f591906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561262a576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa158015612571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612595919061472c565b03905060006125a5828585613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561260b57600080fd5b505af115801561261f573d6000803e3d6000fd5b50505050505061272a565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612699919061472c565b03905060006126a9828486613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561270f57600080fd5b505af1158015612723573d6000803e3d6000fd5b5050505050505b5050612832565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a29190614758565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af115801561280c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612830919061472c565b505b6001016123e3565b80600003612846575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156128a857600080fd5b505af11580156128bc573d6000803e3d6000fd5b505050506128ca8282612fc1565b5050565b6060825167ffffffffffffffff8111156128ea576128ea613ecb565b604051908082528060200260200182016040528015612913578160200160208202803683370190505b509050818185518151811061292a5761292a614716565b602090810291909101015283515b8015612be45760008461294c600184614745565b8151811061295c5761295c614716565b602002602001015190506000876001846129769190614745565b8151811061298657612986614716565b602002602001015190506000876001856129a09190614745565b815181106129b0576129b0614716565b60200260200101519050600060018111156129cd576129cd61487c565b8260018111156129df576129df61487c565b03612b0157600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4991906148a9565b506001600160701b031691506001600160701b03169150888681518110612a7257612a72614716565b60200260200101516001600160a01b0316856001600160a01b03161115612a9557905b6000878781518110612aa957612aa9614716565b60200260200101519050612ac8838383613d489092919063ffffffff16565b6001600160801b031688612add60018a614745565b81518110612aed57612aed614716565b602002602001018181525050505050612bce565b612b9a81868681518110612b1757612b17614716565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8b9190614758565b6001600160a01b031614611875565b50506001600160801b031685612bb1600187614745565b81518110612bc157612bc1614716565b6020026020010181815250505b5050508080612bdc906148ee565b915050612938565b50949350505050565b80600003612bf9575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c5457600080fd5b505af1158015612c68573d6000803e3d6000fd5b506128ca9350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150849050836133c0565b60008060008060008088600081518110612cc057612cc0614716565b6020026020010151905060005b8b51811015612fb2578b8181518110612ce857612ce8614716565b602002602001015193508a8181518110612d0457612d04614716565b60200260200101519250819550898160010181518110612d2657612d26614716565b602002602001015191508b518160010114612d5d578b8160010181518110612d5057612d50614716565b6020026020010151612d5f565b875b94506000836001811115612d7557612d7561487c565b03612e8057888160010181518110612d8f57612d8f614716565b60200260200101519650816001600160a01b0316866001600160a01b03161015612e335760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612e1657600080fd5b505af1158015612e2a573d6000803e3d6000fd5b50505050612faa565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612dfc565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee49190614758565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612f7e918916906353c059a0906044015b6020604051808303816000875af1158015612f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f6a919061472c565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612fa257809950612fa6565b8199505b5050505b600101612ccd565b50505050505095945050505050565b80600003612fcd575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461301a576040519150601f19603f3d011682016040523d82523d6000602084013e61301f565b606091505b50509050806111295760405163047b96f760e41b81526001600160a01b0384166004820152602481018390526044016105a4565b6000806000806000808760008151811061306f5761306f614716565b602002602001015190508a955060005b8a51811015612fb2578a818151811061309a5761309a614716565b602002602001015192508981815181106130b6576130b6614716565b602002602001015194508195508881600101815181106130d8576130d8614716565b602002602001015191508a51816001011461310f578a816001018151811061310257613102614716565b6020026020010151613111565b875b935060008560018111156131275761312761487c565b036132e157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561316d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319191906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015613250576131cd898383613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561323357600080fd5b505af1158015613247573d6000803e3d6000fd5b505050506132da565b61325b898284613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156132c157600080fd5b505af11580156132d5573d6000803e3d6000fd5b505050505b50506133b8565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133459190614758565b60405163029e02cd60e51b81526001600160a01b03918216858316146004820181905287831660248301529250600091829161338c918816906353c059a090604401612f27565b6001600160801b031691506001600160801b0316915082156133b0578099506133b4565b8199505b5050505b60010161307f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123b58482613de7565b60405163704037bd60e01b81526001600160a01b0384811660048301528381166024830152604482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa1580156134a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c49190614905565b6020015190506001600160a01b03811661350b57604051636b2471d160e11b81526001600160a01b03808616600483015284166024820152604481018390526064016105a4565b9392505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613549949392919061498a565b6000604051808303816000875af1158015613568573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261359091908101906149c8565b905060005b8151811015613624576135c78282815181106135b3576135b3614716565b60200260200101516001600160801b031690565b6135da906001600160801b031685614703565b93506135ff8282815181106135f1576135f1614716565b602002602001015160801c90565b613612906001600160801b031684614703565b925061361d81614a4e565b9050613595565b508783108061363257508682105b15613668576040516318ccfb7760e11b8152600481018990526024810184905260448101889052606481018390526084016105a4565b50965096945050505050565b8060000361368157505050565b6111296001600160a01b03841683836133c0565b600080600080606080876101c00135804211156136ce5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6136dc6101408a018a614a67565b90506136ec6101208b018b614a67565b905014158061371957506137046101608a018a614a67565b90506137146101208b018b614a67565b905014155b156137375760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613753575062ffffff6101008a0135115b156137825760405163197a55c760e11b815260e08a013560048201526101008a013560248201526044016105a4565b60006137926101208b018b614a67565b905067ffffffffffffffff8111156137ac576137ac613ecb565b6040519080825280602002602001820160405280156137d5578160200160208202803683370190505b5090506137e66101208b018b614a67565b905067ffffffffffffffff81111561380057613800613ecb565b604051908082528060200260200182016040528015613829578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561386c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613890919061485f565b62ffffff169050808b61010001358c60e001350110806138ba57508a60e001358b61010001358201105b156138f057604051637d50edab60e11b815260e08c013560048201526101008c01356024820152604481018290526064016105a4565b60005b82518110156139f357600061390c6101208e018e614a67565b8381811061391c5761391c614716565b90506020020135830190506000811280613938575062ffffff81115b15613959576040516370a82e6160e11b8152600481018290526024016105a4565b8087838151811061396c5761396c614716565b60209081029190910101526139cd6139886101408f018f614a67565b8481811061399857613998614716565b905060200201358e8061016001906139b09190614a67565b858181106139c0576139c0614716565b9050602002013583613e57565b8483815181106139df576139df614716565b6020908102919091010152506001016138f3565b50506000808a6001600160a01b031663383d15c58d610180016020810190613a1b9190614775565b858f6101a0016020810190613a309190614775565b6040518463ffffffff1660e01b8152600401613a4e93929190614ab1565b6000604051808303816000875af1158015613a6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a959190810190614b15565b965090925090506000613aa88383613e91565b6001600160801b0381169b50608081901c9a50905060a08d01358b1080613ad257508c60c001358a105b15613b0e576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b90526084016105a4565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613b4e57613b4e61487c565b03613c2d5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613be59190614758565b90506001600160a01b038116613c2857604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b613c38565b611269858585613426565b949350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526113858582613de7565b600083600003613cd15760405163b937356b60e01b815260040160405180910390fd5b821580613cdc575081155b15613cfa57604051637b03555560e01b815260040160405180910390fd5b6000613d08856103e5614bbb565b90506000613d168483614bbb565b9050600082613d27876103e8614bbb565b613d319190614703565b9050613d3d8183614bd2565b979650505050505050565b600083600003613d6b5760405163b937356b60e01b815260040160405180910390fd5b821580613d76575081155b15613d9457604051637b03555560e01b815260040160405180910390fd5b6000613da08585614bbb565b613dac906103e8614bbb565b90506000613dba8685614745565b613dc6906103e5614bbb565b9050613dd28183614bd2565b613ddd906001614703565b9695505050505050565b600080600052602060008351602085016000875af19050808015613e28573d8015613e1b5760016000511483169250613e22565b843b151592505b50613e38565b3d15613e38573d6000803e3d6000fd5b50806111295760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff82168117613c38565b80820382811180613ead57506001600160801b03808416908216115b15611e7b5760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613f0457613f04613ecb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613f3357613f33613ecb565b604052919050565b600067ffffffffffffffff821115613f5557613f55613ecb565b5060051b60200190565b600082601f830112613f7057600080fd5b81356020613f85613f8083613f3b565b613f0a565b82815260059290921b84018101918181019086841115613fa457600080fd5b8286015b84811015613fbf5780358352918301918301613fa8565b509695505050505050565b6001600160a01b0381168114613fdf57600080fd5b50565b8035613fed81613fca565b919050565b600082601f83011261400357600080fd5b81356020614013613f8083613f3b565b82815260059290921b8401810191818101908684111561403257600080fd5b8286015b84811015613fbf57803561404981613fca565b8352918301918301614036565b60006060828403121561406857600080fd5b614070613ee1565b9050813567ffffffffffffffff8082111561408a57600080fd5b61409685838601613f5f565b83526020915081840135818111156140ad57600080fd5b8401601f810186136140be57600080fd5b80356140cc613f8082613f3b565b81815260059190911b820184019084810190888311156140eb57600080fd5b928501925b82841015614117578335600281106141085760008081fd5b825292850192908501906140f0565b808688015250505050604084013591508082111561413457600080fd5b5061414184828501613ff2565b60408301525092915050565b600080600080600060a0868803121561416557600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561418a57600080fd5b61419688828901614056565b93505060608601356141a781613fca565b949793965091946080013592915050565b600080600080608085870312156141ce57600080fd5b84359350602085013567ffffffffffffffff8111156141ec57600080fd5b6141f887828801614056565b935050604085013561420981613fca565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156142495781518752958201959082019060010161422d565b509495945050505050565b602081526000611e786020830184614219565b60008060006060848603121561427c57600080fd5b833561428781613fca565b9250602084013561429781613fca565b929592945050506040919091013590565b62ffffff81168114613fdf57600080fd5b61ffff81168114613fdf57600080fd5b8035613fed816142b9565b600080600080608085870312156142ea57600080fd5b84356142f581613fca565b9350602085013561430581613fca565b92506040850135614315816142a8565b91506060850135614325816142b9565b939692955090935050565b600080600080600080600080610100898b03121561434d57600080fd5b883561435881613fca565b97506020890135614368816142b9565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561439357600080fd5b61439f8c838d01613f5f565b955060a08b01359150808211156143b557600080fd5b506143c28b828c01613f5f565b93505060c08901356143d381613fca565b8092505060e089013590509295985092959890939650565b6000602082840312156143fd57600080fd5b813567ffffffffffffffff81111561441457600080fd5b82016101e0818503121561350b57600080fd5b86815285602082015284604082015283606082015260c06080820152600061445260c0830185614219565b82810360a08401526144648185614219565b9998505050505050505050565b6001600160801b0381168114613fdf57600080fd5b8015158114613fdf57600080fd5b6000806000606084860312156144a957600080fd5b83356144b481613fca565b925060208401356144c481614471565b915060408401356144d481614486565b809150509250925092565b60008060008060008060008060006101208a8c0312156144fe57600080fd5b893561450981613fca565b985060208a013561451981613fca565b975061452760408b016142c9565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561455257600080fd5b61455e8d838e01613f5f565b955060c08c013591508082111561457457600080fd5b506145818c828d01613f5f565b93505061459060e08b01613fe2565b91506101008a013590509295985092959850929598565b600080604083850312156145ba57600080fd5b82356145c581613fca565b915060208301356145d5816142a8565b809150509250929050565b60008083601f8401126145f257600080fd5b50813567ffffffffffffffff81111561460a57600080fd5b6020830191508360208260051b850101111561462557600080fd5b9250929050565b6000806000806000806080878903121561464557600080fd5b863561465081613fca565b9550602087013561466081613fca565b9450604087013567ffffffffffffffff8082111561467d57600080fd5b6146898a838b016145e0565b909650945060608901359150808211156146a257600080fd5b506146af89828a016145e0565b979a9699509497509295939492505050565b600080604083850312156146d457600080fd5b82356146df81613fca565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e7b57611e7b6146ed565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561473e57600080fd5b5051919050565b81810381811115611e7b57611e7b6146ed565b60006020828403121561476a57600080fd5b815161350b81613fca565b60006020828403121561478757600080fd5b813561350b81613fca565b6000806000606084860312156147a757600080fd5b83516147b281614471565b60208501519093506147c381614471565b60408501519092506144d481614471565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561480657600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b0380891683528088166020840152506080604083015261484c6080830186886147d4565b82810360608401526144648185876147d4565b60006020828403121561487157600080fd5b815161350b816142a8565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613fed57600080fd5b6000806000606084860312156148be57600080fd5b6148c784614892565b92506148d560208501614892565b9150604084015163ffffffff811681146144d457600080fd5b6000816148fd576148fd6146ed565b506000190190565b60006080828403121561491757600080fd5b6040516080810181811067ffffffffffffffff8211171561493a5761493a613ecb565b6040528251614948816142b9565b8152602083015161495881613fca565b6020820152604083015161496b81614486565b6040820152606083015161497e81614486565b60608201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526149b66080830185614219565b8281036060840152613d3d8185614219565b600060208083850312156149db57600080fd5b825167ffffffffffffffff8111156149f257600080fd5b8301601f81018513614a0357600080fd5b8051614a11613f8082613f3b565b81815260059190911b82018301908381019087831115614a3057600080fd5b928401925b82841015613d3d57835182529284019290840190614a35565b600060018201614a6057614a606146ed565b5060010190565b6000808335601e19843603018112614a7e57600080fd5b83018035915067ffffffffffffffff821115614a9957600080fd5b6020019150600581901b360382131561462557600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015614afc57855183529483019491830191600101614ae0565b5050809450505080851660408501525050949350505050565b600080600060608486031215614b2a57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614b5057600080fd5b8501601f81018713614b6157600080fd5b8051614b6f613f8082613f3b565b81815260059190911b82018301908381019089831115614b8e57600080fd5b928401925b82841015614bac57835182529284019290840190614b93565b80955050505050509250925092565b8082028115828204841417611e7b57611e7b6146ed565b600082614bef57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122031703d9b6019352fa237e87e1e6afd16841f62dde4538978d077f39402a1965b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220d4aa32d18c702b63dca8c26128a14e379148c534dea1c274c97ba208a69289c564736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31a2646970667358221220afb3aabb7af603913d0d9c8dbd4c218dc2c656cf0fce409e635d9767d4c0ad7864736f6c63430008140033",
    "sourceMap": "555:19551:134:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6334:149:135;;;;;;;;;;-1:-1:-1;6334:149:135;;;;;:::i;:::-;-1:-1:-1;;;;;;6435:41:135;-1:-1:-1;;;6435:41:135;;6334:149;;;;470:14:147;;463:22;445:41;;433:2;418:18;6334:149:135;;;;;;;;1791:273:134;;;;;;;;;;;;;:::i;:::-;;611:1174;;;;;;;;;;;;;:::i;2907:134:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3823:151::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;17182:2456:134:-;;;;;;;;;;;;;:::i;6465:2158::-;;;;;;;;;;;;;:::i;3684:133:6:-;;;;;;;;;;;;;:::i;14738:2438:134:-;;;;;;;;;;;;;:::i;3385:141:6:-;;;;;;;;;;;;;:::i;4279:2180:134:-;;;;;;;;;;;;;:::i;12754:168:135:-;;;;;;;;;;-1:-1:-1;12754:168:135;;;;;:::i;:::-;;:::i;:::-;;;4180:25:147;;;4168:2;4153:18;12754:168:135;4034:177:147;3193:186:6;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10409:2113:134:-;;;;;;;;;;;;;:::i;2070:2203::-;;;;;;;;;;;;;:::i;8629:1774::-;;;;;;;;;;;;;:::i;3047:140:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;12928:205:135:-;;;;;;;;;;-1:-1:-1;12928:205:135;;;;;:::i;:::-;;:::i;:::-;;;7366:8:147;7354:21;;;7336:40;;7324:2;7309:18;12928:205:135;7192:190:147;12528:2204:134;;;;;;;;;;;;;:::i;3532:146:6:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;10779:1171:135:-;;;;;;;;;;-1:-1:-1;10779:1171:135;;;;;:::i;:::-;;:::i;2754:147:6:-;;;;;;;;;;;;;:::i;2459:141::-;;;;;;;;;;;;;:::i;13139:134:135:-;;;;;;;;;;-1:-1:-1;13139:134:135;;;;;:::i;:::-;;:::i;1243:204:2:-;;;;;;;;;;;;;:::i;2606:142:6:-;;;;;;;;;;;;;:::i;1016:26:13:-;;;;;;;;;;-1:-1:-1;1016:26:13;;;;;;;;11956:792:135;;;;;;;;;;-1:-1:-1;11956:792:135;;;;;:::i;:::-;;:::i;1791:273:134:-;1859:7;;1888:4;;1894;;1859:58;;-1:-1:-1;;;1859:58:134;;-1:-1:-1;;;;;1888:4:134;;;1859:58;;;11192:34:147;1894:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;1844:12:134;;1859:7;;;;;:28;;11104:18:147;;1859:58:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;1935:6;;:68;;-1:-1:-1;;;1935:68:134;;-1:-1:-1;;;;;12999:55:147;;;1935:68:134;;;12981:74:147;1963:39:134;13071:18:147;;;13064:34;1859:65:134;;-1:-1:-1;1935:6:134;;;:21;;12954:18:147;;1935:68:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2014:6:134;;-1:-1:-1;;;;;2014:6:134;:21;2036:4;2042:14;1185:7:135;2042:5:134;:14;:::i;:::-;2014:43;;-1:-1:-1;;;;;;2014:43:134;;;;;;;-1:-1:-1;;;;;13877:55:147;;;2014:43:134;;;13859:74:147;13981:8;13969:21;13949:18;;;13942:49;13832:18;;2014:43:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1834:230;1791:273::o;611:1174::-;654:13;:11;:13::i;:::-;678:7;;:50;;-1:-1:-1;;;678:50:134;;1340:2:135;678:50:134;;;14357:38:147;678:7:134;14411:18:147;;;14404:50;-1:-1:-1;;;;;678:7:134;;;;:26;;14330:18:147;;678:50:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;773:6:134;;793:4;;799;;773:57;;-1:-1:-1;;;773:57:134;;-1:-1:-1;;;;;793:4:134;;;773:57;;;14793:34:147;799:4:134;;;14843:18:147;;;14836:43;1185:7:135;14895:18:147;;;14888:49;1340:2:135;14953:18:147;;;14946:47;773:6:134;;;-1:-1:-1;773:19:134;;-1:-1:-1;14704:19:147;;773:57:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;840:6:134;;860:7;;869:4;;840:60;;-1:-1:-1;;;840:60:134;;-1:-1:-1;;;;;840:6:134;860:7;;;;;840:60;;;14793:34:147;869:4:134;;;14843:18:147;;;14836:43;1185:7:135;14895:18:147;;;14888:49;1340:2:135;14953:18:147;;;14946:47;840:6:134;;;:19;;14704::147;;840:60:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;910:6:134;;930:8;;940:7;;910:64;;-1:-1:-1;;;910:64:134;;-1:-1:-1;;;;;930:8:134;;;910:64;;;14793:34:147;910:6:134;940:7;;;;;14843:18:147;;;14836:43;1185:7:135;14895:18:147;;;14888:49;1340:2:135;14953:18:147;;;14946:47;910:6:134;;;:19;;14704::147;;910:64:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1051:4:134;;1011:17;;1038:51;;-1:-1:-1;;;;;1051:4:134;1066;1011:17;1038:4;:51::i;:::-;1112:4;;1099:51;;-1:-1:-1;;;;;1112:4:134;1127;1134:15;1099:4;:51::i;:::-;1173:8;;1160:55;;-1:-1:-1;;;;;1173:8:134;1192:4;1199:15;1160:4;:55::i;:::-;1320:4;;1326;;1226:56;;1297:57;;-1:-1:-1;;;;;1320:4:134;;;;1326;1332:6;1185:7:135;1348:2:134;1226:56;1297:22;:57::i;:::-;1364:6;;:40;;-1:-1:-1;;;1364:40:134;;1226:128;;-1:-1:-1;;;;;;1364:6:134;;:19;;:40;;1226:128;;1364:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1364:40:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1460:7:134;;1469:4;;1437:60;;-1:-1:-1;;;;;;1460:7:134;;;;;;;-1:-1:-1;1469:4:134;;-1:-1:-1;1475:6:134;;-1:-1:-1;1185:7:135;1491:2:134;1469:4;1437:22;:60::i;:::-;1507:6;;1540:27;;;;1507:82;;-1:-1:-1;;;1507:82:134;;1415;;-1:-1:-1;;;;;;1507:6:134;;;;:25;;1540:27;1507:82;;1415;;1507;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1507:82:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1645:8:134;;1655:7;;1622:64;;-1:-1:-1;;;;;;1645:8:134;;;;-1:-1:-1;1645:8:134;1655:7;;;;-1:-1:-1;1664:6:134;;-1:-1:-1;1185:7:135;1680:2:134;1645:8;1622:22;:64::i;:::-;1696:6;;1729:27;;;;1696:82;;-1:-1:-1;;;1696:82:134;;1600:86;;-1:-1:-1;;;;;;1696:6:134;;;;:25;;1729:27;1696:82;;1600:86;;1696:82;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1696:82:134;;;;;;;;;;;;:::i;:::-;;;;;;;644:1141;;611:1174::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;17182:2456:134:-;17319:7;;17348:8;;17358:7;;17319:65;;-1:-1:-1;;;17319:65:134;;-1:-1:-1;;;;;17348:8:134;;;17319:65;;;11192:34:147;17319:7:134;17358;;;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;17288:5:134;;17269:16;;17319:7;;:28;;11104:18:147;;17319:65:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;17434:6;;:40;;-1:-1:-1;;;17434:40:134;;-1:-1:-1;;;;;21411:55:147;;;17434:40:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;17404:25:134;21567:18:147;;;21560:50;;;17319:72:134;;-1:-1:-1;17434:6:134;;;;:17;;21366:18:147;;17434:40:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17525:7:134;;17534:8;;17401:73;;-1:-1:-1;17485:26:134;;-1:-1:-1;17514:29:134;;-1:-1:-1;;;;;17525:7:134;;;;;;;17534:8;17514:10;:29::i;:::-;17485:58;-1:-1:-1;;;;;;;;;;;;17612:15:134;-1:-1:-1;;;17733:17:134;17752:21;17772:1;17733:17;17752:21;:::i;:::-;:25;;17776:1;17752:25;:::i;:::-;17641:150;;-1:-1:-1;;;;;23001:15:147;;;17641:150:134;;;22983:34:147;23053:15;;23033:18;;;23026:43;22903:18;;17641:150:134;;;-1:-1:-1;;17641:150:134;;;;;;;;;;;;;;-1:-1:-1;;;;;17641:150:134;-1:-1:-1;;;;;;17641:150:134;;;;;;17612:189;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17811:6:134;;-1:-1:-1;;;;;17811:6:134;;-1:-1:-1;17811:60:134;;-1:-1:-1;;;;;;17811:160:134;;17902:17;17921:4;17935;17942:19;:15;17811:6;17942:19;:::i;:::-;17811:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18006:8:134;;:33;;-1:-1:-1;;;18006:33:134;;18033:4;18006:33;;;25882:74:147;17982:21:134;;-1:-1:-1;;;;;18006:8:134;;:18;;25855::147;;18006:33:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18072:6;;17982:57;;-1:-1:-1;18051:17:134;;-1:-1:-1;;;;;18072:6:134;:60;-1:-1:-1;;;;;18072:164:134;;18163:21;18183:1;18163:17;:21;:::i;:::-;18186:4;18200;18207:19;:15;18225:1;18207:19;:::i;:::-;18072:164;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18050:186;-1:-1:-1;18247:111:134;18050:186;18267:21;18287:1;18267:17;:21;:::i;:::-;:25;;18291:1;18267:25;:::i;:::-;-1:-1:-1;;;;;18247:111:134;;;;;;;;;;;;;;;;;;:8;:111::i;:::-;18390:8;;:33;;-1:-1:-1;;;18390:33:134;;18417:4;18390:33;;;25882:74:147;18368:181:134;;-1:-1:-1;;;;;18390:8:134;;:18;;25855::147;;18390:33:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18437:25;18453:9;18437:13;:25;:::i;:::-;18368:181;;;;;;;;;;;;;;;;;:8;:181::i;:::-;18624:4;;18604:14;;;;:17;;-1:-1:-1;;;;;18624:4:134;;;;;;18604:17;;;;:::i;:::-;-1:-1:-1;;;;;18604:24:134;;;:17;;;;;;;;;:24;18732:4;;18654:84;;18732:4;;18654:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;18638:15:134;;;-1:-1:-1;;;18677:45:134;25855:18:147;;18654:84:134;;;-1:-1:-1;;18654:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;18654:84:134;-1:-1:-1;;;;;;18654:84:134;;;;;;18638:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18749:6:134;;-1:-1:-1;;;;;18749:6:134;;-1:-1:-1;18749:60:134;;-1:-1:-1;;;;;;18749:160:134;;18840:17;18859:4;18873;18880:19;:15;18749:6;18880:19;:::i;:::-;18749:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;18956:15:134;-1:-1:-1;;;19055:19:134;19073:1;19055:15;:19;:::i;:::-;18985:107;;;;;26406:25:147;;;;19076:15:134;26447:18:147;;;26440:34;26379:18;;18985:107:134;;;-1:-1:-1;;18985:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;18985:107:134;-1:-1:-1;;;;;;18985:107:134;;;;;;18956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19112:6:134;;-1:-1:-1;;;;;19112:6:134;;-1:-1:-1;19112:60:134;;-1:-1:-1;;;;;;19112:160:134;;19203:17;19222:4;19236;19243:19;19112:6;19243:15;:19;:::i;:::-;19112:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19351:15:134;;;19364:1;19351:15;;;;;;;;19334:14;;;:32;;;;19392:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;19392:68:134;-1:-1:-1;;;19392:68:134;;;19376:85;;-1:-1:-1;;;19376:85:134;;-1:-1:-1;;;;;;;;;;;19376:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19471:6:134;;-1:-1:-1;;;;;19471:6:134;;-1:-1:-1;19471:60:134;;-1:-1:-1;;;;;;19471:160:134;;19562:17;19581:4;19595;19602:19;:15;19471:6;19602:19;:::i;:::-;19471:160;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17259:2379;;;;;;17182:2456::o;6465:2158::-;6573:7;;6602;;6611:4;;6573:61;;-1:-1:-1;;;6573:61:134;;-1:-1:-1;;;;;6573:7:134;6602;;;;;6573:61;;;11192:34:147;6611:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;6542:5:134;;-1:-1:-1;;6573:7:134;;:28;;11104:18:147;;6573:61:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;6684:6;;:39;;-1:-1:-1;;;6684:39:134;;-1:-1:-1;;;;;21411:55:147;;;6684:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;6684:6:134;21567:18:147;;;21560:50;6573:68:134;;-1:-1:-1;6654:25:134;;6684:6;;;;:17;;21366:18:147;;6684:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6774:7:134;;6783:4;;6651:72;;-1:-1:-1;6734:26:134;;-1:-1:-1;6763:25:134;;-1:-1:-1;;;;;6774:7:134;;;;;;;6783:4;6763:10;:25::i;:::-;6823:4;;:29;;-1:-1:-1;;;6823:29:134;;6846:4;6823:29;;;25882:74:147;6734:54:134;;-1:-1:-1;6799:21:134;;-1:-1:-1;;;;;6823:4:134;;;;:14;;25855:18:147;;6823:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6885:6;;6799:53;;-1:-1:-1;6864:17:134;;-1:-1:-1;;;;;6885:6:134;:31;-1:-1:-1;;;;;6885:131:134;;6947:17;6966:4;6980;6987:19;:15;6885:6;6987:19;:::i;:::-;6885:131;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6863:153;;7027:74;7036:9;7047:17;-1:-1:-1;;;;;7027:74:134;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;7120:4;;:29;;-1:-1:-1;;;7120:29:134;;7143:4;7120:29;;;25882:74:147;7111:102:134;;-1:-1:-1;;;;;7120:4:134;;:14;;25855:18:147;;7120:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7151:25;7167:9;7151:13;:25;:::i;:::-;7111:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;7249:6;;:39;;-1:-1:-1;;;7249:39:134;;-1:-1:-1;;;;;21411:55:147;;;7249:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;7249:6:134;21567:18:147;;;21560:50;7249:6:134;;;;:17;;21366:18:147;;7249:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7224:64:134;-1:-1:-1;;;;;;;;;;;;7357:15:134;-1:-1:-1;7357:15:134;-1:-1:-1;;;7478:21:134;7224:64;7498:1;7478:21;:::i;:::-;7386:146;;-1:-1:-1;;;;;23001:15:147;;;7386:146:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;7386:146:134;;;-1:-1:-1;;7386:146:134;;;;;;;;;;;;;;-1:-1:-1;;;;;7386:146:134;-1:-1:-1;;;;;;7386:146:134;;;;;;7357:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7552:6:134;;-1:-1:-1;;;;;7552:6:134;;-1:-1:-1;7552:31:134;;-1:-1:-1;;;;;;7552:135:134;;7614:21;:17;7552:6;7614:21;:::i;:::-;7637:4;7651;7658:19;:15;7676:1;7658:19;:::i;:::-;7552:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7762:4:134;;7742:14;;;;:17;;-1:-1:-1;;;;;7762:4:134;;;;;;7742:17;;;;:::i;:::-;-1:-1:-1;;;;;7742:24:134;;;:17;;;;;;;;;:24;7870:4;;7792:84;;7870:4;;7792:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;7776:15:134;;;-1:-1:-1;;;7815:45:134;25855:18:147;;7792:84:134;;;-1:-1:-1;;7792:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;7792:84:134;-1:-1:-1;;;;;;7792:84:134;;;;;;7776:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7887:6:134;;-1:-1:-1;;;;;7887:6:134;;-1:-1:-1;7887:31:134;;-1:-1:-1;;;;;;7887:109:134;;7936:17;7955:4;7969;7976:19;:15;7887:6;7976:19;:::i;:::-;7887:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;8043:15:134;-1:-1:-1;;;8142:19:134;8160:1;8142:15;:19;:::i;:::-;8072:107;;;;;26406:25:147;;;;8163:15:134;26447:18:147;;;26440:34;26379:18;;8072:107:134;;;-1:-1:-1;;8072:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;8072:107:134;-1:-1:-1;;;;;;8072:107:134;;;;;;8043:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8199:6:134;;-1:-1:-1;;;;;8199:6:134;;-1:-1:-1;8199:31:134;;-1:-1:-1;;;;;;8199:109:134;;8248:17;8267:4;8281;8288:19;8199:6;8288:15;:19;:::i;:::-;8199:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8387:15:134;;;8400:1;8387:15;;;;;;;;8370:14;;;:32;;;;8428:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8428:68:134;-1:-1:-1;;;8428:68:134;;;8412:85;;-1:-1:-1;;;8412:85:134;;-1:-1:-1;;;;;;;;;;;8412:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8507:6:134;;-1:-1:-1;;;;;8507:6:134;;-1:-1:-1;8507:31:134;;-1:-1:-1;;;;;;8507:109:134;;8556:17;8575:4;8589;8596:19;:15;8507:6;8596:19;:::i;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;14738:2438:134:-;14875:7;;14904:8;;14914:7;;14875:65;;-1:-1:-1;;;14875:65:134;;-1:-1:-1;;;;;14904:8:134;;;14875:65;;;11192:34:147;14875:7:134;14914;;;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;14844:5:134;;14825:16;;14875:7;;:28;;11104:18:147;;14875:65:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:72;;;14990:6;;:39;;-1:-1:-1;;;14990:39:134;;-1:-1:-1;;;;;21411:55:147;;;14990:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;14990:6:134;21567:18:147;;;21560:50;14875:72:134;;-1:-1:-1;14960:25:134;;14990:6;;;;:17;;21366:18:147;;14990:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15080:8:134;;15090:7;;14957:72;;-1:-1:-1;15040:26:134;;-1:-1:-1;15069:29:134;;-1:-1:-1;;;;;15080:8:134;;;;;15090:7;;;;15069:10;:29::i;:::-;15040:58;-1:-1:-1;;;;;;;;;;;;15167:15:134;-1:-1:-1;;;15288:17:134;15307:21;15327:1;15288:17;15307:21;:::i;:::-;15196:146;;-1:-1:-1;;;;;23001:15:147;;;15196:146:134;;;22983:34:147;23053:15;;23033:18;;;23026:43;22903:18;;15196:146:134;;;-1:-1:-1;;15196:146:134;;;;;;;;;;;;;;-1:-1:-1;;;;;15196:146:134;-1:-1:-1;;;;;;15196:146:134;;;;;;15167:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;15362:6:134;;-1:-1:-1;;;;;15362:6:134;;-1:-1:-1;15362:60:134;;-1:-1:-1;15436:8:134;15446:17;15465:4;15487;15495:19;:15;15362:6;15495:19;:::i;:::-;15362:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;15613:6:134;;15559:21;;15535;;-1:-1:-1;;;;;15613:6:134;:60;15687:8;15697:21;15717:1;15697:17;:21;:::i;:::-;15720:4;15742;15750:19;:15;15768:1;15750:19;:::i;:::-;15613:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15591:188;-1:-1:-1;15790:107:134;15591:188;15810:21;15830:1;15810:17;:21;:::i;:::-;-1:-1:-1;;;;;15790:107:134;;;;;;;;;;;;;;;;;;:8;:107::i;:::-;15907:169;15929:21;15964:25;15980:9;15964:13;:25;:::i;:::-;15907:169;;;;;;;;;;;;;;;;;:8;:169::i;:::-;16152:4;;16132:14;;;;:17;;-1:-1:-1;;;;;16152:4:134;;;;;;16132:17;;;;;;:::i;:::-;-1:-1:-1;;;;;16132:24:134;;;:17;;;;;;;;;:24;16260:4;;16182:84;;16260:4;;16182:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;16166:15:134;;;-1:-1:-1;;;16205:45:134;25855:18:147;;16182:84:134;;;-1:-1:-1;;16182:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;16182:84:134;-1:-1:-1;;;;;;16182:84:134;;;;;;16166:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16277:6:134;;-1:-1:-1;;;;;16277:6:134;;-1:-1:-1;16277:60:134;;-1:-1:-1;16351:8:134;16361:21;:17;16277:6;16361:21;:::i;:::-;16384:4;16406;16414:19;:15;16432:1;16414:19;:::i;:::-;16277:166;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;16490:15:134;-1:-1:-1;;;16589:19:134;16607:1;16589:15;:19;:::i;:::-;16519:107;;;;;26406:25:147;;;;16610:15:134;26447:18:147;;;26440:34;26379:18;;16519:107:134;;;-1:-1:-1;;16519:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;16519:107:134;-1:-1:-1;;;;;;16519:107:134;;;;;;16490:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16646:6:134;;-1:-1:-1;;;;;16646:6:134;;-1:-1:-1;16646:60:134;;-1:-1:-1;16720:8:134;16730:17;16749:4;16771;16779:19;16646:6;16779:15;:19;:::i;:::-;16646:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16887:15:134;;;16900:1;16887:15;;;;;;;;16870:14;;;:32;;;;16928:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16928:68:134;-1:-1:-1;;;16928:68:134;;;16912:85;;-1:-1:-1;;;16912:85:134;;-1:-1:-1;;;;;;;;;;;16912:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17007:6:134;;-1:-1:-1;;;;;17007:6:134;;-1:-1:-1;17007:60:134;;-1:-1:-1;17081:8:134;17091:17;17110:4;17132;17140:19;:15;17007:6;17140:19;:::i;:::-;17007:162;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3385:141:6:-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;4279:2180:134:-;4387:7;;4416;;4425:4;;4387:61;;-1:-1:-1;;;4387:61:134;;-1:-1:-1;;;;;4387:7:134;4416;;;;;4387:61;;;11192:34:147;4425:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;4356:5:134;;-1:-1:-1;;4387:7:134;;:28;;11104:18:147;;4387:61:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;4498:6;;:40;;-1:-1:-1;;;4498:40:134;;-1:-1:-1;;;;;21411:55:147;;;4498:40:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;4468:25:134;21567:18:147;;;21560:50;;;4387:68:134;;-1:-1:-1;4498:6:134;;;;:17;;21366:18:147;;4498:40:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4589:4:134;;4595:7;;4465:73;;-1:-1:-1;4549:26:134;;-1:-1:-1;4578:25:134;;-1:-1:-1;;;;;4589:4:134;;;;;4595:7;;;;4578:10;:25::i;:::-;4692:6;;4549:54;;-1:-1:-1;4638:21:134;;4614;;-1:-1:-1;;;;;4692:6:134;:31;4737:8;4747:17;4549:54;4788:4;4796:19;:15;4692:6;4796:19;:::i;:::-;4692:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4670:155;;4836:74;4845:9;4856:17;-1:-1:-1;;;;;4836:74:134;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;4920:94;4929:21;4952:25;4968:9;4952:13;:25;:::i;:::-;4920:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;5108:6;;:40;;-1:-1:-1;;;5108:40:134;;-1:-1:-1;;;;;21411:55:147;;;5108:40:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;5108:6:134;21567:18:147;;;21560:50;5108:6:134;;;;:17;;21366:18:147;;5108:40:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5083:65:134;-1:-1:-1;;;;;;;;;;;;5158:15:134;-1:-1:-1;5158:15:134;-1:-1:-1;;;5279:21:134;5083:65;5299:1;5279:21;:::i;:::-;5187:146;;-1:-1:-1;;;;;23001:15:147;;;5187:146:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;5187:146:134;;;-1:-1:-1;;5187:146:134;;;;;;;;;;;;;;-1:-1:-1;;;;;5187:146:134;-1:-1:-1;;;;;;5187:146:134;;;;;;5158:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5353:6:134;;-1:-1:-1;;;;;5353:6:134;;-1:-1:-1;5353:31:134;;-1:-1:-1;5398:8:134;5408:21;:17;5353:6;5408:21;:::i;:::-;5431:4;5453;5461:19;:15;5479:1;5461:19;:::i;:::-;5353:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5566:4:134;;5546:14;;;;:17;;-1:-1:-1;;;;;5566:4:134;;;;;;5546:17;;;;;;:::i;:::-;-1:-1:-1;;;;;5546:24:134;;;:17;;;;;;;;;:24;5674:4;;5596:84;;5674:4;;5596:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;5580:15:134;;;-1:-1:-1;;;5619:45:134;25855:18:147;;5596:84:134;;;-1:-1:-1;;5596:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;5596:84:134;-1:-1:-1;;;;;;5596:84:134;;;;;;5580:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5691:6:134;;-1:-1:-1;;;;;5691:6:134;;-1:-1:-1;5691:31:134;;-1:-1:-1;5736:8:134;5746:21;:17;5691:6;5746:21;:::i;:::-;5769:4;5791;5799:19;:15;5817:1;5799:19;:::i;:::-;5691:137;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;5875:15:134;-1:-1:-1;;;5974:19:134;5992:1;5974:15;:19;:::i;:::-;5904:107;;;;;26406:25:147;;;;5995:15:134;26447:18:147;;;26440:34;26379:18;;5904:107:134;;;-1:-1:-1;;5904:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;5904:107:134;-1:-1:-1;;;;;;5904:107:134;;;;;;5875:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6031:6:134;;-1:-1:-1;;;;;6031:6:134;;-1:-1:-1;6031:31:134;;-1:-1:-1;6063:8:134;6073:17;6092:4;6114;6122:19;6031:6;6122:15;:19;:::i;:::-;6031:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6221:15:134;;;6234:1;6221:15;;;;;;;;6204:14;;;:32;;;;6262:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6262:68:134;-1:-1:-1;;;6262:68:134;;;6246:85;;-1:-1:-1;;;6246:85:134;;-1:-1:-1;;;;;;;;;;;6246:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6341:6:134;;-1:-1:-1;;;;;6341:6:134;;-1:-1:-1;6341:31:134;;-1:-1:-1;6373:8:134;6383:17;6402:4;6424;6432:19;:15;6341:6;6432:19;:::i;12754:168:135:-;12825:7;12860:1;12851:6;:10;;;:24;;;;;12874:1;12865:6;:10;;;12851:24;:64;;12900:15;12909:6;12900;:15;:::i;:::-;12851:64;;;12896:1;12878:15;12887:6;12878;:15;:::i;:::-;:19;;;;:::i;:::-;12844:71;;;;12754:168;;;;;:::o;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10409:2113:134;10518:7;;10547;;10556:4;;10518:61;;-1:-1:-1;;;10518:61:134;;-1:-1:-1;;;;;10518:7:134;10547;;;;;10518:61;;;11192:34:147;10556:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;10487:5:134;;-1:-1:-1;;10518:7:134;;:28;;11104:18:147;;10518:61:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;10627:6;;:40;;-1:-1:-1;;;10627:40:134;;-1:-1:-1;;;;;21411:55:147;;;10627:40:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;10597:24:134;21567:18:147;;;21560:50;;;10518:68:134;;-1:-1:-1;10627:6:134;;;;:16;;21366:18:147;;10627:40:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;10718:4:134;;10724:7;;10596:71;;-1:-1:-1;10678:26:134;;10707:25;;-1:-1:-1;;;;;10718:4:134;;;;;10724:7;;;10707:10;:25::i;:::-;10767:4;;:29;;-1:-1:-1;;;10767:29:134;;10790:4;10767:29;;;25882:74:147;10678:54:134;;-1:-1:-1;10743:21:134;;-1:-1:-1;;;;;10767:4:134;;;;:14;;25855:18:147;;10767:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10838:6;;10743:53;;-1:-1:-1;10808:26:134;;-1:-1:-1;;;;;10838:6:134;:31;10883:9;10894:16;10912:4;10934;10942:19;:15;10838:6;10942:19;:::i;:::-;10838:133;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10838:133:134;;;;;;;;;;;;:::i;:::-;10807:164;;10982:76;10991:9;11001:1;10991:12;;;;;;;;:::i;:::-;;;;;;;11005:16;-1:-1:-1;;;;;10982:76:134;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;11077:4;;:29;;-1:-1:-1;;;11077:29:134;;11100:4;11077:29;;;25882:74:147;11068:105:134;;-1:-1:-1;;;;;11077:4:134;;:14;;25855:18:147;;11077:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11124:9;11134:1;11124:12;;;;;;;;:::i;:::-;;;;;;;11108:13;:28;;;;:::i;:::-;11068:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;11207:6;;:40;;-1:-1:-1;;;11207:40:134;;-1:-1:-1;;;;;21411:55:147;;;11207:40:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;11207:6:134;21567:18:147;;;21560:50;11207:6:134;;;;:16;;21366:18:147;;11207:40:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11184:63:134;;-1:-1:-1;;;;;;;;;;;;11300:15:134;-1:-1:-1;11300:15:134;-1:-1:-1;;;11419:20:134;11438:1;11184:63;11419:20;:::i;:::-;11329:142;;-1:-1:-1;;;;;23001:15:147;;;11329:142:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;11329:142:134;;;-1:-1:-1;;11329:142:134;;;;;;;;;;;;;;-1:-1:-1;;;;;11329:142:134;-1:-1:-1;;;;;;11329:142:134;;;;;;11300:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:6:134;;-1:-1:-1;;;;;11491:6:134;;-1:-1:-1;11491:31:134;;-1:-1:-1;11523:9:134;11534:20;11491:6;11534:16;:20;:::i;:::-;11556:4;11570;11577:19;:15;11595:1;11577:19;:::i;:::-;11491:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11491:106:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11673:4:134;;11653:14;;;;:17;;-1:-1:-1;;;;;11673:4:134;;;;;;11653:17;;;;;;:::i;:::-;-1:-1:-1;;;;;11653:24:134;;;:17;;;;;;;;;:24;11781:4;;11703:84;;11781:4;;11703:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;11687:15:134;;;-1:-1:-1;;;11726:45:134;25855:18:147;;11703:84:134;;;-1:-1:-1;;11703:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;11703:84:134;-1:-1:-1;;;;;;11703:84:134;;;;;;11687:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:6:134;;-1:-1:-1;;;;;11798:6:134;;-1:-1:-1;11798:31:134;;-1:-1:-1;11830:9:134;11841:16;11859:4;11881;11889:19;:15;11798:6;11889:19;:::i;:::-;11798:111;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11798:111:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;11956:15:134;-1:-1:-1;;;12055:19:134;12073:1;12055:15;:19;:::i;:::-;11985:107;;;;;26406:25:147;;;;12076:15:134;26447:18:147;;;26440:34;26379:18;;11985:107:134;;;-1:-1:-1;;11985:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;11985:107:134;-1:-1:-1;;;;;;11985:107:134;;;;;;11956:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:6:134;;-1:-1:-1;;;;;12112:6:134;;-1:-1:-1;12112:31:134;;-1:-1:-1;12144:9:134;12155:16;12173:4;12187;12194:19;12112:6;12194:15;:19;:::i;:::-;12112:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12112:102:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12293:15:134;;;12306:1;12293:15;;;;;;;;12276:14;;;:32;;;;12334:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12334:68:134;-1:-1:-1;;;12334:68:134;;;12318:85;;-1:-1:-1;;;12318:85:134;;-1:-1:-1;;;;;;;;;;;12318:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:6:134;;-1:-1:-1;;;;;12413:6:134;;-1:-1:-1;12413:31:134;;-1:-1:-1;12445:9:134;12456:16;12474:4;12488;12495:19;:15;12413:6;12495:19;:::i;:::-;12413:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12413:102:134;;;;;;;;;;;;:::i;2070:2203::-;2178:7;;2207:4;;2213;;2178:58;;-1:-1:-1;;;2178:58:134;;-1:-1:-1;;;;;2207:4:134;;;2178:58;;;11192:34:147;2213:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;2147:5:134;;2128:16;;2178:7;;:28;;11104:18:147;;2178:58:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;2286:6;;:39;;-1:-1:-1;;;2286:39:134;;-1:-1:-1;;;;;21411:55:147;;;2286:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;2286:6:134;21567:18:147;;;21560:50;2178:65:134;;-1:-1:-1;2256:25:134;;2286:6;;;;:17;;21366:18:147;;2286:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2376:4:134;;2382;;2253:72;;-1:-1:-1;2336:26:134;;-1:-1:-1;2365:22:134;;-1:-1:-1;;;;;2376:4:134;;;;2382;2365:10;:22::i;:::-;2422:4;;:29;;-1:-1:-1;;;2422:29:134;;2445:4;2422:29;;;25882:74:147;2336:51:134;;-1:-1:-1;2398:21:134;;-1:-1:-1;;;;;2422:4:134;;;;:14;;25855:18:147;;2422:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2496:6;;2398:53;;-1:-1:-1;2463:17:134;;-1:-1:-1;;;;;2496:6:134;:31;2528:8;2538:17;2557:4;2571;2578:19;:15;2496:6;2578:19;:::i;:::-;2496:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2462:136;;2609:74;2618:9;2629:17;-1:-1:-1;;;;;2609:74:134;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;2702:4;;:29;;-1:-1:-1;;;2702:29:134;;2725:4;2702:29;;;25882:74:147;2693:102:134;;-1:-1:-1;;;;;2702:4:134;;:14;;25855:18:147;;2702:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2733:25;2749:9;2733:13;:25;:::i;:::-;2693:102;;;;;;;;;;;;;;;;;:8;:102::i;:::-;2889:6;;:39;;-1:-1:-1;;;2889:39:134;;-1:-1:-1;;;;;21411:55:147;;;2889:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;2889:6:134;21567:18:147;;;21560:50;2889:6:134;;;;:17;;21366:18:147;;2889:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2864:64:134;-1:-1:-1;;;;;;;;;;;;2938:15:134;-1:-1:-1;2938:15:134;-1:-1:-1;;;3059:21:134;2864:64;3079:1;3059:21;:::i;:::-;2967:146;;-1:-1:-1;;;;;23001:15:147;;;2967:146:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;2967:146:134;;;-1:-1:-1;;2967:146:134;;;;;;;;;;;;;;-1:-1:-1;;;;;2967:146:134;-1:-1:-1;;;;;;2967:146:134;;;;;;2938:185;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3133:6:134;;-1:-1:-1;;;;;3133:6:134;;-1:-1:-1;3133:31:134;;-1:-1:-1;3165:8:134;3175:21;:17;3133:6;3175:21;:::i;:::-;3198:4;3212;3219:19;:15;3237:1;3219:19;:::i;:::-;3133:106;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;3286:15:134;-1:-1:-1;;;3385:19:134;3403:1;3385:15;:19;:::i;:::-;3315:107;;;;;26406:25:147;;;;3406:15:134;26447:18:147;;;26440:34;26379:18;;3315:107:134;;;-1:-1:-1;;3315:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;3315:107:134;-1:-1:-1;;;;;;3315:107:134;;;;;;3286:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3442:6:134;;-1:-1:-1;;;;;3442:6:134;;-1:-1:-1;3442:31:134;;-1:-1:-1;3474:8:134;3484:17;3503:4;3517;3524:19;3442:6;3524:15;:19;:::i;:::-;3442:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3623:15:134;;;3636:1;3623:15;;;;;;;;3606:14;;;:32;;;;3664:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3664:68:134;-1:-1:-1;;;3664:68:134;;;3648:85;;-1:-1:-1;;;3648:85:134;;-1:-1:-1;;;;;;;;;;;3648:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3743:6:134;;-1:-1:-1;;;;;3743:6:134;;-1:-1:-1;3743:31:134;;-1:-1:-1;3775:8:134;3785:17;3804:4;3818;3825:19;:15;3743:6;3825:19;:::i;:::-;3743:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3917:15:134;;;3930:1;3917:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3900:14:134;;;:32;;;3962:4;;3942:17;;-1:-1:-1;;;;;3962:4:134;;;;3900:32;3962:4;;3942:17;;;;:::i;:::-;-1:-1:-1;;;;;3942:24:134;;;:17;;;;;;;;;:24;3996:8;;3976:14;;;;:17;;3996:8;;;;;3976:14;3996:8;;3976:17;;;;;;:::i;:::-;-1:-1:-1;;;;;3976:28:134;;;:17;;;;;;;;;:28;4111:4;;4117:8;;4043:101;;4111:4;;;4043:101;;;11192:34:147;4117:8:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;-1:-1:-1;;;;;;;;;;;4014:15:134;;;-1:-1:-1;;;4066:43:134;11104:18:147;;4043:101:134;;;-1:-1:-1;;4043:101:134;;;;;;;;;;;;;;-1:-1:-1;;;;;4043:101:134;-1:-1:-1;;;;;;4043:101:134;;;;;;4014:140;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4164:6:134;;-1:-1:-1;;;;;4164:6:134;;-1:-1:-1;4164:31:134;;-1:-1:-1;4196:8:134;4206:17;4225:4;4239;4246:19;:15;4164:6;4246:19;:::i;8629:1774::-;8738:7;;8767:4;;8773;;8738:58;;-1:-1:-1;;;8738:58:134;;-1:-1:-1;;;;;8767:4:134;;;8738:58;;;11192:34:147;8773:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;8707:5:134;;8687:17;;8738:7;;:28;;11104:18:147;;8738:58:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;8844:6;;:39;;-1:-1:-1;;;8844:39:134;;-1:-1:-1;;;;;21411:55:147;;;8844:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;8844:6:134;21567:18:147;;;21560:50;8738:65:134;;-1:-1:-1;8814:24:134;;8844:6;;;;:16;;21366:18:147;;8844:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;8934:4:134;;8940;;8813:70;;-1:-1:-1;8894:26:134;;8923:22;;-1:-1:-1;;;;;8934:4:134;;;;8940;8923:10;:22::i;:::-;8980:4;;:29;;-1:-1:-1;;;8980:29:134;;9003:4;8980:29;;;25882:74:147;8894:51:134;;-1:-1:-1;8956:21:134;;-1:-1:-1;;;;;8980:4:134;;;;:14;;25855:18:147;;8980:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9063:6;;8956:53;;-1:-1:-1;9021:26:134;;-1:-1:-1;;;;;9063:6:134;:31;9095:9;9106:16;9124:4;9138;9145:19;:15;9063:6;9145:19;:::i;:::-;9063:102;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9063:102:134;;;;;;;;;;;;:::i;:::-;9020:145;;9176:76;9185:9;9195:1;9185:12;;;;;;;;:::i;:::-;;;;;;;9199:16;-1:-1:-1;;;;;9176:76:134;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;9271:4;;:29;;-1:-1:-1;;;9271:29:134;;9294:4;9271:29;;;25882:74:147;9262:105:134;;-1:-1:-1;;;;;9271:4:134;;:14;;25855:18:147;;9271:29:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9318:9;9328:1;9318:12;;;;;;;;:::i;:::-;;;;;;;9302:13;:28;;;;:::i;:::-;9262:105;;;;;;;;;;;;;;;;;:8;:105::i;:::-;9401:6;;:39;;-1:-1:-1;;;9401:39:134;;-1:-1:-1;;;;;21411:55:147;;;9401:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;9401:6:134;21567:18:147;;;21560:50;9401:6:134;;;;:16;;21366:18:147;;9401:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9378:62:134;;-1:-1:-1;;;;;;;;;;;;9493:15:134;-1:-1:-1;9493:15:134;-1:-1:-1;;;9612:20:134;9631:1;9378:62;9612:20;:::i;:::-;9522:142;;-1:-1:-1;;;;;23001:15:147;;;9522:142:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;9522:142:134;;;-1:-1:-1;;9522:142:134;;;;;;;;;;;;;;-1:-1:-1;;;;;9522:142:134;-1:-1:-1;;;;;;9522:142:134;;;;;;9493:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9684:6:134;;-1:-1:-1;;;;;9684:6:134;;-1:-1:-1;9684:31:134;;-1:-1:-1;9716:9:134;9727:20;9684:6;9727:16;:20;:::i;:::-;9749:4;9763;9770:19;:15;9788:1;9770:19;:::i;3047:140:6:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12928:205:135;13006:6;;13037:12;13048:1;13037:12;;;;:::i;:::-;13024:25;;13073:1;13064:6;:10;;;:33;;13095:2;13064:33;;;13077:11;;;;:2;:11;:::i;:::-;:15;;13091:1;13077:15;:::i;:::-;13059:38;;13115:11;:2;:9;:11::i;:::-;13108:18;12928:205;-1:-1:-1;;;;;12928:205:135:o;12528:2204:134:-;12637:7;;12666;;12675:4;;12637:61;;-1:-1:-1;;;12637:61:134;;-1:-1:-1;;;;;12637:7:134;12666;;;;;12637:61;;;11192:34:147;12675:4:134;;;11242:18:147;;;11235:43;1340:2:135;11294:18:147;;;11287:47;12606:5:134;;-1:-1:-1;;12637:7:134;;:28;;11104:18:147;;12637:61:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:68;;;12746:6;;:39;;-1:-1:-1;;;12746:39:134;;-1:-1:-1;;;;;21411:55:147;;;12746:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;12746:6:134;21567:18:147;;;21560:50;12637:68:134;;-1:-1:-1;12716:24:134;;12746:6;;;;:16;;21366:18:147;;12746:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;12836:7:134;;12845:4;;12715:70;;-1:-1:-1;12796:26:134;;12825:25;;-1:-1:-1;;;;;12836:7:134;;;;;;;12845:4;12825:10;:25::i;:::-;13002:6;;12796:54;;-1:-1:-1;12885:21:134;;12861;;-1:-1:-1;;;;;13002:6:134;:31;13041:22;:16;13060:3;13041:22;:::i;:::-;-1:-1:-1;;;;;13002:137:134;13078:9;13089:4;13103;13110:19;:15;13128:1;13110:19;:::i;:::-;13002:137;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13002:137:134;;;;;;;;;;;;:::i;:::-;12971:168;;13150:76;13159:9;13169:1;13159:12;;;;;;;;:::i;:::-;;;;;;;13173:16;-1:-1:-1;;;;;13150:76:134;;;;;;;;;;;;;;;;;;:8;:76::i;:::-;13236:97;13245:21;13284:9;13294:1;13284:12;;;;;;;;:::i;:::-;;;;;;;13268:13;:28;;;;:::i;:::-;13236:97;;;;;;;;;;;;;;;;;:8;:97::i;:::-;13367:6;;:39;;-1:-1:-1;;;13367:39:134;;-1:-1:-1;;;;;21411:55:147;;;13367:39:134;;;21393:74:147;-1:-1:-1;;;;;21503:47:147;;21483:18;;;21476:75;13367:6:134;21567:18:147;;;21560:50;13367:6:134;;;;:16;;21366:18:147;;13367:39:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13344:62:134;;-1:-1:-1;;;;;;;;;;;;13470:15:134;-1:-1:-1;13470:15:134;-1:-1:-1;;;13589:20:134;13608:1;13344:62;13589:20;:::i;:::-;13499:142;;-1:-1:-1;;;;;23001:15:147;;;13499:142:134;;;22983:34:147;23053:15;;;23033:18;;;23026:43;22903:18;;13499:142:134;;;-1:-1:-1;;13499:142:134;;;;;;;;;;;;;;-1:-1:-1;;;;;13499:142:134;-1:-1:-1;;;;;;13499:142:134;;;;;;13470:181;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:6:134;;-1:-1:-1;;;;;13661:6:134;;-1:-1:-1;13661:31:134;;-1:-1:-1;13700:20:134;13719:1;13700:16;:20;:::i;:::-;-1:-1:-1;;;;;13661:135:134;13735:9;13746:4;13760;13767:19;:15;13785:1;13767:19;:::i;:::-;13661:135;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13661:135:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;13871:4:134;;13851:14;;;;:17;;-1:-1:-1;;;;;13871:4:134;;;;;;13851:17;;;;:::i;:::-;-1:-1:-1;;;;;13851:24:134;;;:17;;;;;;;;;:24;13979:4;;13901:84;;13979:4;;13901:84;;;25882:74:147;-1:-1:-1;;;;;;;;;;;13885:15:134;;;-1:-1:-1;;;13924:45:134;25855:18:147;;13901:84:134;;;-1:-1:-1;;13901:84:134;;;;;;;;;;;;;;-1:-1:-1;;;;;13901:84:134;-1:-1:-1;;;;;;13901:84:134;;;;;;13885:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:6:134;;-1:-1:-1;;;;;13996:6:134;;-1:-1:-1;13996:31:134;;-1:-1:-1;;;;;;13996:109:134;;14053:9;14064:4;14078;14085:19;:15;13996:6;14085:19;:::i;:::-;13996:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;13996:109:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;14152:15:134;-1:-1:-1;;;14251:19:134;14269:1;14251:15;:19;:::i;:::-;14181:107;;;;;26406:25:147;;;;14272:15:134;26447:18:147;;;26440:34;26379:18;;14181:107:134;;;-1:-1:-1;;14181:107:134;;;;;;;;;;;;;;-1:-1:-1;;;;;14181:107:134;-1:-1:-1;;;;;;14181:107:134;;;;;;14152:146;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:6:134;;-1:-1:-1;;;;;14308:6:134;;-1:-1:-1;14308:31:134;;-1:-1:-1;;;;;;14308:109:134;;14365:9;14376:4;14390;14397:19;14308:6;14397:15;:19;:::i;:::-;14308:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14308:109:134;;;;;;;;;;;;:::i;:::-;-1:-1:-1;14496:15:134;;;14509:1;14496:15;;;;;;;;14479:14;;;:32;;;;14537:68;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14537:68:134;-1:-1:-1;;;14537:68:134;;;14521:85;;-1:-1:-1;;;14521:85:134;;-1:-1:-1;;;;;;;;;;;14521:15:134;;;:85;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:6:134;;-1:-1:-1;;;;;14616:6:134;;-1:-1:-1;14616:31:134;;-1:-1:-1;;;;;;14616:109:134;;14673:9;14684:4;14698;14705:19;:15;14616:6;14705:19;:::i;:::-;14616:109;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14616:109:134;;;;;;;;;;;;:::i;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10779:1171:135;11008:13;11024:6;-1:-1:-1;;;;;11024:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11008:34;;11052:13;11068:6;-1:-1:-1;;;;;11068:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11052:34;;11097:36;11110:6;11119:4;11125:7;11097:4;:36::i;:::-;11143;11156:6;11165:4;11171:7;11143:4;:36::i;:::-;11190:13;11206:28;11219:6;11227;11206:12;:28::i;:::-;11190:44;;11245:40;11302:5;11288:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11288:20:135;;11245:63;;11324:9;11319:412;11339:5;11335:1;:9;11319:412;;;11365:9;11377:26;11383:8;11393:1;11396:6;11377:5;:26::i;:::-;11365:38;;11418:15;11442:8;11436:14;;:2;:14;;;;:28;;;;;11463:1;11454:6;:10;;;11436:28;:74;;11509:1;11436:74;;;11467:39;11468:28;;;;335:4:102;11468:28:135;:::i;:::-;11467:37;:39::i;:::-;11418:92;;11524:15;11548:8;11542:14;;:2;:14;;;;:28;;;;;11569:1;11560:6;:10;;;11542:28;:74;;11615:1;11542:74;;;11573:39;11574:28;;;;335:4:102;11574:28:135;:::i;11573:39::-;11524:92;;11660:60;11697:8;11707;11717:2;11660:36;:60::i;:::-;11631:23;11655:1;11631:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11351:380;;;11346:3;;;;:::i;:::-;;;11319:412;;;-1:-1:-1;11741:19:135;;-1:-1:-1;;;11741:19:135;;-1:-1:-1;;;;;25900:55:147;;11741:19:135;;;25882:74:147;-1:-1:-1;;;;;;;;;;;11741:13:135;;;25855:18:147;;11741:19:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11770:41:135;;-1:-1:-1;;;11770:41:135;;-1:-1:-1;;;;;12999:55:147;;;11770:41:135;;;12981:74:147;13071:18;;;13064:34;;;11770:15:135;;;-1:-1:-1;11770:15:135;;-1:-1:-1;12954:18:147;;11770:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11821:41:135;;-1:-1:-1;;;11821:41:135;;-1:-1:-1;;;;;12999:55:147;;;11821:41:135;;;12981:74:147;13071:18;;;13064:34;;;11821:15:135;;;;;12954:18:147;;11821:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11872:12:135;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11897:6;-1:-1:-1;;;;;11897:11:135;;11909:2;11913:23;11938:4;11897:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11897:46:135;;;;;;;;;;;;:::i;:::-;;;;10998:952;;;;10779:1171;;;;;;;;:::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13139:134:135;13240:7;;:26;;-1:-1:-1;;;13240:26:135;;32197:6:147;32185:19;;13240:26:135;;;32167:38:147;13198:11:135;;-1:-1:-1;;;;;13240:7:135;;:17;;32140:18:147;;13240:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13221:45;13139:134;-1:-1:-1;;;;;;;;;13139:134:135:o;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;12981:74:147;;;1398:17:2;13071:18:147;;;13064:34;1428:1:2;;1377:7;;12954:18:147;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;11956:792:135:-;335:4:102;12177:13:135;:36;;12169:73;;;;-1:-1:-1;;;12169:73:135;;33548:2:147;12169:73:135;;;33530:21:147;33587:2;33567:18;;;33560:30;33626:26;33606:18;;;33599:54;33670:18;;12169:73:135;;;;;;;;;12253:13;12269:28;12282:6;12290;12269:12;:28::i;:::-;12253:44;;12308:20;12345:5;12331:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12331:20:135;;12308:43;;12361:24;12402:5;12388:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12388:20:135;;12361:47;;12424:9;12419:253;12439:5;12435:1;:9;12419:253;;;12465:9;12477:26;12483:8;12493:1;12496:6;12477:5;:26::i;:::-;12529;;-1:-1:-1;;;12529:26:135;;-1:-1:-1;;;;;13877:55:147;;;12529:26:135;;;13859:74:147;13981:8;13969:21;;13949:18;;;13942:49;12465:38:135;;-1:-1:-1;12517:9:135;;12529:16;;;;;13832:18:147;;12529:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12517:38;;12579:2;12570:11;;:3;12574:1;12570:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12608:53;:1;12626:13;335:4:102;12608:17:135;:53::i;:::-;12595:7;12603:1;12595:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12451:221;;12446:3;;;;:::i;:::-;;;12419:253;;;-1:-1:-1;12682:14:135;;-1:-1:-1;;;12682:14:135;;-1:-1:-1;;;;;25900:55:147;;12682:14:135;;;25882:74:147;-1:-1:-1;;;;;;;;;;;12682:8:135;;;25855:18:147;;12682:14:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;-1:-1:-1;;;12706:35:135;;-1:-1:-1;;;;;12706:11:135;;;-1:-1:-1;12706:11:135;;-1:-1:-1;12706:35:135;;12718:4;;12724:2;;12728:3;;12733:7;;12706:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;;;;;;;;;;;:::i;:::-;;12159:589;;;11956:792;;;;;;;:::o;2821:3507::-;2863:7;:45;;;;;;;;;;-1:-1:-1;;;;;2863:45:135;2969:7;;;;2961:28;-1:-1:-1;2961:33:135;2957:118;;3026:7;;3044:13;;-1:-1:-1;;;;;;;;;;;3010:7:135;;;3026;;;;-1:-1:-1;;;;;3026:7:135;;3044:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3036:27:135;;;;;;;;;;;;;;;;;;;;;;;;3010:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:118;3130:1;3116:16;;;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3116:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3109:4:135;:23;;-1:-1:-1;;;;;;3109:23:135;-1:-1:-1;;;;;3109:23:135;;;;;;;;;;3149:16;;3163:1;;3149:16;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3149:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3142:4:135;:23;;-1:-1:-1;;;;;;3142:23:135;-1:-1:-1;;;;;3142:23:135;;;;;;;;;;3182:16;;3196:1;;3182:16;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3182:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:4:135;:23;;-1:-1:-1;;;;;;3175:23:135;-1:-1:-1;;;;;3175:23:135;;;;;;;;;;3215:17;;3229:2;;3215:17;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3215:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3208:4:135;:24;;-1:-1:-1;;;;;;3208:24:135;-1:-1:-1;;;;;3208:24:135;;;;;;;;;;3249:17;;3263:2;;3249:17;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3249:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3242:4:135;:24;;-1:-1:-1;;;;;;3242:24:135;-1:-1:-1;;;;;3242:24:135;;;;;;;;;;3282:17;;3296:2;;3282:17;;;:::i;:::-;35599:4:147;35587:17;;;35569:36;;35557:2;35542:18;3282:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3276:3:135;:23;;-1:-1:-1;;;;;;3276:23:135;-1:-1:-1;;;;;3276:23:135;;;;;;;;;;3320:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3309:8:135;:37;;-1:-1:-1;;;;;;3309:37:135;-1:-1:-1;;;;;3309:37:135;;;;;;3397:7;;3380:37;;;-1:-1:-1;;;3380:37:135;;3309;3397:7;;;;;;3380:37;;;36227:74:147;36317:18;;;36310:30;;;;36376:1;36356:18;;;36349:29;36414:9;36394:18;;;36387:37;-1:-1:-1;;;;;;;;;;;3380:8:135;;;36441:19:147;;3380:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3444:4:135;;3427:31;;;-1:-1:-1;;;3427:31:135;;-1:-1:-1;;;;;3444:4:135;;;3427:31;;;;36683:74:147;;;;36773:18;;;36766:30;;;;36812:18;;;36805:29;-1:-1:-1;;;36850:18:147;;;36843:34;-1:-1:-1;;;;;;;;;;;3427:8:135;-1:-1:-1;3427:8:135;;-1:-1:-1;36894:19:147;;3427:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3485:4:135;;3468:31;;;-1:-1:-1;;;3468:31:135;;-1:-1:-1;;;;;3485:4:135;;;3468:31;;;;37136:74:147;;;;37226:18;;;37219:30;;;;37265:18;;;37258:29;-1:-1:-1;;;37303:18:147;;;37296:34;-1:-1:-1;;;;;;;;;;;3468:8:135;-1:-1:-1;3468:8:135;;-1:-1:-1;37347:19:147;;3468:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3526:4:135;;3509:31;;;-1:-1:-1;;;3509:31:135;;-1:-1:-1;;;;;3526:4:135;;;3509:31;;;;37589:74:147;;;;37679:18;;;37672:30;;;;37718:18;;;37711:29;-1:-1:-1;;;37756:18:147;;;37749:34;-1:-1:-1;;;;;;;;;;;3509:8:135;-1:-1:-1;3509:8:135;;-1:-1:-1;37800:19:147;;3509:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3567:4:135;;3550:31;;;-1:-1:-1;;;3550:31:135;;-1:-1:-1;;;;;3567:4:135;;;3550:31;;;;38042:74:147;;;;38132:18;;;38125:30;;;;38171:18;;;38164:29;-1:-1:-1;;;38209:18:147;;;38202:34;-1:-1:-1;;;;;;;;;;;3550:8:135;-1:-1:-1;3550:8:135;;-1:-1:-1;38253:19:147;;3550:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3608:4:135;;3591:31;;;-1:-1:-1;;;3591:31:135;;-1:-1:-1;;;;;3608:4:135;;;3591:31;;;;38495:74:147;;;;38585:18;;;38578:30;;;;38624:18;;;38617:29;-1:-1:-1;;;38662:18:147;;;38655:34;-1:-1:-1;;;;;;;;;;;3591:8:135;-1:-1:-1;3591:8:135;;-1:-1:-1;38706:19:147;;3591:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3649:3:135;;;3632:29;;;-1:-1:-1;;;3632:29:135;;-1:-1:-1;;;;;3649:3:135;;;3632:29;;;38948:74:147;39038:18;;;39031:30;;;;39097:1;39077:18;;;39070:29;-1:-1:-1;;;39115:18:147;;;39108:33;-1:-1:-1;;;;;;;;;;;3632:8:135;-1:-1:-1;3632:8:135;;-1:-1:-1;39158:19:147;;3632:29:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3688:8:135;;3671:39;;;-1:-1:-1;;;3671:39:135;;-1:-1:-1;;;;;3688:8:135;;;3671:39;;;39400:74:147;39490:18;;;39483:30;39549:1;39529:18;;;39522:29;39587:10;39567:18;;;39560:38;-1:-1:-1;;;;;;;;;;;3671:8:135;-1:-1:-1;3671:8:135;;-1:-1:-1;39615:19:147;;3671:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3753:8:135;:67;;-1:-1:-1;;;;;;3753:67:135;;;335:42:137;3753:67:135;;;;3830:9;:70;;;;;240:42:137;3830:70:135;;;-1:-1:-1;;3961:15:135;;3753:8;;3961:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3937:39;;4054:11;4068:3;4014:62;;;;;:::i;:::-;-1:-1:-1;;;;;39971:15:147;;;39953:34;;40023:15;;40018:2;40003:18;;39996:43;40075:2;40070;40055:18;;40048:30;;;-1:-1:-1;40094:18:147;;;40087:29;40148:3;40133:19;4014:62:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3986:7:135;:92;;-1:-1:-1;;;;;;3986:92:135;-1:-1:-1;;;;;3986:92:135;;;;;;;;;4118:40;;-1:-1:-1;;3986:92:135;4118:40;;;:::i;:::-;-1:-1:-1;;;;;25900:55:147;;;25882:74;;25870:2;25855:18;4118:40:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4266:7:135;;4194:81;;4088:70;;-1:-1:-1;4088:70:135;;4253:3;;-1:-1:-1;;;;;4266:7:135;;4194:81;;;:::i;:::-;-1:-1:-1;;;;;40703:15:147;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4194:81:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4168:23:135;:107;;-1:-1:-1;;;;;;4168:107:135;-1:-1:-1;;;;;4168:107:135;;;;;;;;;4285:7;;:85;;-1:-1:-1;;;4285:85:135;;4304:3;41160:15:147;;4285:85:135;;;41142:34:147;;;41192:18;;;41185:43;1892:4:135;41244:18:147;;;41237:34;41287:18;;;41280:43;;;;4285:7:135;;;;:18;;41053:19:147;;4285:85:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4412:7:135;;4401:19;;-1:-1:-1;;;;;4412:7:135;;;;-1:-1:-1;4401:19:135;;-1:-1:-1;4401:19:135;:::i;:::-;-1:-1:-1;;;;;25900:55:147;;;25882:74;;25870:2;25855:18;4401:19:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4380:18:135;:40;;-1:-1:-1;;;;;;4380:40:135;-1:-1:-1;;;;;4380:40:135;;;;;;;;;;4456:30;:28;:30::i;:::-;4496:42;1340:2;4496:24;:42::i;:::-;4609:7;;4618:9;;4646:7;;4596:60;;4574:19;;-1:-1:-1;;;;;4609:7:135;;;;4618:9;;;4609:7;4646;;;;4596:60;;;:::i;:::-;-1:-1:-1;;;;;40703:15:147;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4596:60:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4758:39:135;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4758:39:135;-1:-1:-1;;;4758:39:135;;;4700:98;;4574:82;;-1:-1:-1;4574:82:135;;4753:3;;4758:39;4700:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4666:6:135;:135;;-1:-1:-1;;;;;;4666:135:135;-1:-1:-1;;;;;4666:135:135;;;;;;;;;4880:9;;4912:7;;4846:113;;4880:9;;;;4912:7;;4666:135;4846:113;;;:::i;:::-;-1:-1:-1;;;;;40703:15:147;;;40685:34;;40755:15;;;40750:2;40735:18;;40728:43;40807:15;;;40802:2;40787:18;;40780:43;40612:2;40597:18;4846:113:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4837:6:135;:122;;-1:-1:-1;;;;;;4837:122:135;-1:-1:-1;;;;;4837:122:135;;;;;;5023:6;;5006:35;;;-1:-1:-1;;;5006:35:135;;5023:6;;;;5006:35;;;43137:74:147;43227:18;;;43220:30;;;;43286:1;43266:18;;;43259:29;43324:8;43304:18;;;43297:36;-1:-1:-1;;;;;;;;;;;5006:8:135;;;43350:19:147;;5006:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5068:6:135;;5051:35;;;-1:-1:-1;;;5051:35:135;;-1:-1:-1;;;;;5068:6:135;;;5051:35;;;43592:74:147;43682:18;;;43675:30;43741:1;43721:18;;;43714:29;43779:8;43759:18;;;43752:36;-1:-1:-1;;;;;;;;;;;5051:8:135;-1:-1:-1;5051:8:135;;-1:-1:-1;43805:19:147;;5051:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5113:7:135;;5096:37;;;-1:-1:-1;;;5096:37:135;;-1:-1:-1;;;;;5113:7:135;;;5096:37;;;44047:74:147;44137:18;;;44130:30;44196:1;44176:18;;;44169:29;44234:9;44214:18;;;44207:37;-1:-1:-1;;;;;;;;;;;5096:8:135;-1:-1:-1;5096:8:135;;-1:-1:-1;44261:19:147;;5096:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5160:18:135;;5143:59;;;-1:-1:-1;;;5143:59:135;;-1:-1:-1;;;;;5160:18:135;;;5143:59;;;44503:74:147;44593:18;;;44586:30;44652:2;44632:18;;;44625:30;44691:20;44671:18;;;44664:48;-1:-1:-1;;;;;;;;;;;5143:8:135;-1:-1:-1;5143:8:135;;-1:-1:-1;44729:19:147;;5143:59:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5253:8:135;;5236:39;;;-1:-1:-1;;;5236:39:135;;-1:-1:-1;;;;;5253:8:135;;;5236:39;;;44971:74:147;45061:18;;;45054:30;45120:1;45100:18;;;45093:29;45158:10;45138:18;;;45131:38;-1:-1:-1;;;;;;;;;;;5236:8:135;-1:-1:-1;5236:8:135;;-1:-1:-1;45186:19:147;;5236:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5302:9:135;;5285:41;;;-1:-1:-1;;;5285:41:135;;-1:-1:-1;;;;;5302:9:135;;;5285:41;;;45428:74:147;45518:18;;;45511:30;45577:1;45557:18;;;45550:29;45615:11;45595:18;;;45588:39;-1:-1:-1;;;;;;;;;;;5285:8:135;-1:-1:-1;5285:8:135;;-1:-1:-1;45644:19:147;;5285:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5374:7:135;;5398:8;;5374:53;;-1:-1:-1;;;5374:53:135;;-1:-1:-1;;;;;5398:8:135;;;5374:53;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5374:7:135;;;;;;-1:-1:-1;5374:15:135;;-1:-1:-1;12954:18:147;;5374:53:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5437:4:135;;5458:8;;5437:50;;-1:-1:-1;;;5437:50:135;;-1:-1:-1;;;;;5458:8:135;;;5437:50;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5437:4:135;;;:12;;12954:18:147;;5437:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5497:4:135;;5518:8;;5497:50;;-1:-1:-1;;;5497:50:135;;-1:-1:-1;;;;;5518:8:135;;;5497:50;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5497:4:135;;;:12;;12954:18:147;;5497:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5557:4:135;;5578:8;;5557:50;;-1:-1:-1;;;5557:50:135;;-1:-1:-1;;;;;5578:8:135;;;5557:50;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5557:4:135;;;:12;;12954:18:147;;5557:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5617:4:135;;5638:8;;5617:50;;-1:-1:-1;;;5617:50:135;;-1:-1:-1;;;;;5638:8:135;;;5617:50;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5617:4:135;;;:12;;12954:18:147;;5617:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5677:4:135;;5698:8;;5677:50;;-1:-1:-1;;;5677:50:135;;-1:-1:-1;;;;;5698:8:135;;;5677:50;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5677:4:135;;;:12;;12954:18:147;;5677:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5737:3:135;;;5757:8;;5737:49;;-1:-1:-1;;;5737:49:135;;-1:-1:-1;;;;;5757:8:135;;;5737:49;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;;;;5737:3:135;;:11;;12954:18:147;;5737:49:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5796:8:135;;5821;;5796:54;;-1:-1:-1;;;5796:54:135;;-1:-1:-1;;;;;5821:8:135;;;5796:54;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5796:8:135;;;:16;;12954:18:147;;5796:54:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5861:7:135;;5885:6;;5861:51;;-1:-1:-1;;;5861:51:135;;-1:-1:-1;;;;;5885:6:135;;;5861:51;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5861:7:135;;;;;;:15;;12954:18:147;;5861:51:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5922:4:135;;5943:6;;5922:48;;-1:-1:-1;;;5922:48:135;;-1:-1:-1;;;;;5943:6:135;;;5922:48;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5922:4:135;;;:12;;12954:18:147;;5922:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5980:4:135;;6001:6;;5980:48;;-1:-1:-1;;;5980:48:135;;-1:-1:-1;;;;;6001:6:135;;;5980:48;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;5980:4:135;;;:12;;12954:18:147;;5980:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6038:4:135;;6059:6;;6038:48;;-1:-1:-1;;;6038:48:135;;-1:-1:-1;;;;;6059:6:135;;;6038:48;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;6038:4:135;;;:12;;12954:18:147;;6038:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6096:4:135;;6117:6;;6096:48;;-1:-1:-1;;;6096:48:135;;-1:-1:-1;;;;;6117:6:135;;;6096:48;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;6096:4:135;;;:12;;12954:18:147;;6096:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6154:4:135;;6175:6;;6154:48;;-1:-1:-1;;;6154:48:135;;-1:-1:-1;;;;;6175:6:135;;;6154:48;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;6154:4:135;;;:12;;12954:18:147;;6154:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6212:3:135;;;6232:6;;6212:47;;-1:-1:-1;;;6212:47:135;;-1:-1:-1;;;;;6232:6:135;;;6212:47;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;;;;6212:3:135;;:11;;12954:18:147;;6212:47:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6269:8:135;;6294:6;;6269:52;;-1:-1:-1;;;6269:52:135;;-1:-1:-1;;;;;6294:6:135;;;6269:52;;;12981:74:147;-1:-1:-1;;13071:18:147;;;13064:34;6269:8:135;;;:16;;12954:18:147;;6269:52:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2853:3475;;;2821:3507::o;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;8506:1036:135:-;8711:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:56:135;8780:20;8802:30;8834;8866:17;8899:52;8915:9;8926:7;8935:10;8947:3;8899:15;:52::i;:::-;8779:172;;;;;;;;8984:551;;;;;;;;9036:6;-1:-1:-1;;;;;8984:551:135;;;;;9064:6;-1:-1:-1;;;;;8984:551:135;;;;;1340:2;8984:551;;;;;;9132:9;8984:551;;;;9164:9;8984:551;;;;9199:1;8984:551;;;;9226:1;8984:551;;;;9258:7;8984:551;;;;;;9291:1;8984:551;;;;9316:30;9338:7;9316:3;:21;;:30;;;;:::i;:::-;8984:551;;;;;;;;;;;;;;-1:-1:-1;;;;;9448:3:135;8984:551;;;;;;;;;;;;;9502:22;:15;9520:4;9502:22;:::i;:::-;8984:551;;8962:573;8506:1036;-1:-1:-1;;;;;;;;;;;8506:1036:135:o;19644:425:134:-;19719:26;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;19719:26:134;19777:16;;;19791:1;19777:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19757:36:134;;;19803:20;;1340:2:135;;19757:36:134;:17;;19803:20;;;;:::i;:::-;;;;;;;;;;:39;19869:26;;;19893:1;19869:26;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19853:13:134;;;:42;;;19905:16;;19924:20;;19853:42;19919:1;;19905:16;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;19972:15:134;;;19985:1;19972:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19955:14:134;;;:32;;;19997:17;;20017:7;;19955:32;20012:1;;19997:17;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;19997:27:134;;;-1:-1:-1;;;;;19997:27:134;;;;;20054:8;20034:4;:14;;;20049:1;20034:17;;;;;;;;:::i;:::-;;;;;;:28;-1:-1:-1;;;;;20034:28:134;;;-1:-1:-1;;;;;20034:28:134;;;;;19644:425;;;;:::o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10208:135:117;10301:1;10282:20;;;;;10278:58;;10311:25;;-1:-1:-1;;;10311:25:117;;;;;;;;;;;10278:58;10208:135;;;:::o;8683:::-;8776:1;8757:20;;;;;8753:58;;8786:25;;-1:-1:-1;;;8786:25:117;;;;;;;;;;;1186:392:115;646:2;1370:29:114;;;;;703:2:115;1370:29:114;;;;;1355:45;1525:46:115;;;1355:45:114;;1525:46:115;1516:55;1186:392;-1:-1:-1;;;;1186:392:115:o;928:247:121:-;1019:14;1046:13;1061;1078:18;1091:1;1094;1078:12;:18::i;:::-;1045:51;;;;1114:54;1136:1;1139;1142:11;1155:5;1162;1114:21;:54::i;:::-;1107:61;928:247;-1:-1:-1;;;;;;928:247:121:o;6793:628:135:-;6864:7;;;;;-1:-1:-1;;;;;6864:7:135;6856:30;6852:66;;6888:7;;6910;;6888:30;;-1:-1:-1;;;6888:30:135;;-1:-1:-1;;;;;6888:7:135;6910;;;;;6888:30;;;25882:74:147;6888:7:135;;;:21;;25855:18:147;;6888:30:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6852:66;6940:4;;-1:-1:-1;;;;;6940:4:135;6932:27;6928:60;;6961:7;;6983:4;;6961:27;;-1:-1:-1;;;6961:27:135;;-1:-1:-1;;;;;6983:4:135;;;6961:27;;;25882:74:147;6961:7:135;;;:21;;25855:18:147;;6961:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:60;7010:4;;-1:-1:-1;;;;;7010:4:135;7002:27;6998:60;;7031:7;;7053:4;;7031:27;;-1:-1:-1;;;7031:27:135;;-1:-1:-1;;;;;7053:4:135;;;7031:27;;;25882:74:147;7031:7:135;;;:21;;25855:18:147;;7031:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6998:60;7080:4;;-1:-1:-1;;;;;7080:4:135;7072:27;7068:60;;7101:7;;7123:4;;7101:27;;-1:-1:-1;;;7101:27:135;;-1:-1:-1;;;;;7123:4:135;;;7101:27;;;25882:74:147;7101:7:135;;;:21;;25855:18:147;;7101:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7068:60;7150:4;;-1:-1:-1;;;;;7150:4:135;7142:27;7138:60;;7171:7;;7193:4;;7171:27;;-1:-1:-1;;;7171:27:135;;-1:-1:-1;;;;;7193:4:135;;;7171:27;;;25882:74:147;7171:7:135;;;:21;;25855:18:147;;7171:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:60;7220:4;;-1:-1:-1;;;;;7220:4:135;7212:27;7208:60;;7241:7;;7263:4;;7241:27;;-1:-1:-1;;;7241:27:135;;-1:-1:-1;;;;;7263:4:135;;;7241:27;;;25882:74:147;7241:7:135;;;:21;;25855:18:147;;7241:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208:60;7290:3;;-1:-1:-1;;;;;7290:3:135;7282:26;7278:58;;7310:7;;7332:3;;;7310:26;;-1:-1:-1;;;7310:26:135;;-1:-1:-1;;;;;7332:3:135;;;7310:26;;;25882:74:147;7310:7:135;;;:21;;25855:18:147;7310:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7278:58;7358:8;;-1:-1:-1;;;;;7358:8:135;7350:31;7346:68;;7383:7;;7405:8;;7383:31;;-1:-1:-1;;;7383:31:135;;-1:-1:-1;;;;;7405:8:135;;;7383:31;;;25882:74:147;7383:7:135;;;:21;;25855:18:147;;7383:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7346:68;6793:628::o;7427:422::-;7496:7;;:346;;-1:-1:-1;;;7496:346:135;;47162:6:147;47195:15;;7496:346:135;;;47177:34:147;1395:5:135;47227:18:147;;;47220:43;;;1455:2:135;47279:18:147;;;47272:43;1511:3:135;47331:18:147;;;47324:43;47383:19;;;47376:44;1639:6:135;47463:19:147;;;47456:44;1701:5:135;47516:19:147;;;47509:44;1774:7:135;47569:19:147;;;47562:44;7496:7:135;47622:19:147;;;47615:51;-1:-1:-1;;;;;7496:7:135;;;;:17;;47124:19:147;;7496:346:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:422;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;25900:55:147;;;27501:38:4;;;;25882:74:147;;;;27501:38:4;;;;;;;;;;25855:18:147;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;27748:414::-;27416:752;;27331:837;;;;:::o;9548:1225:135:-;9699:20;;;9821:17;9867:14;9880:1;9867:10;:14;:::i;:::-;:19;;9885:1;9867:19;9863:92;;9902:42;;-1:-1:-1;;;9902:42:135;;48357:2:147;9902:42:135;;;48339:21:147;;;48376:18;;;48369:30;48435:34;48415:18;;;48408:62;48487:18;;9902:42:135;48155:356:147;9863:92:135;9965:13;9981:14;9994:1;9981:10;:14;:::i;:::-;9965:30;;10025:10;10011:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10011:25:135;;10005:31;;10077:10;10063:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10063:25:135;;10047:41;;10128:10;10114:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10114:25:135;-1:-1:-1;10098:41:135;-1:-1:-1;10149:23:135;10198:10;:6;10207:1;10198:10;:::i;:::-;10175:34;;;;335:4:102;10175:34:135;:::i;:::-;10149:60;-1:-1:-1;10219:20:135;10255:10;:6;10264:1;10255:10;:::i;:::-;10242:24;;;;:9;:24;:::i;:::-;10219:47;;10282:9;10277:490;10297:10;10293:14;;:1;:14;10277:490;;;10373:7;10377:3;10373:1;:7;:::i;:::-;10368:13;;;;:1;:13;:::i;:::-;10357:7;10361:3;10357:1;:7;:::i;:::-;10347:18;;:6;:18;:::i;:::-;10337:28;;:7;:28;:::i;:::-;:44;;;;;;:::i;:::-;10328:3;10332:1;10328:6;;;;;;;;:::i;:::-;;;;;;:53;;;;;10405:6;10400:11;;:1;:11;10396:84;;10450:15;10431:13;10445:1;10431:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10396:84;10502:6;10497:11;;:1;:11;10493:264;;10547:15;10528:13;10542:1;10528:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10608:1;10593:12;:16;:149;;10741:1;10593:149;;;10632:86;230:3:102;10687:30:135;10709:3;10713:1;10709:6;;;;;;;;:::i;:::-;;;;;;;10687:14;:30::i;:::-;10632:12;;:86;:30;:86::i;:::-;10580:162;;;;:::i;:::-;;;10493:264;10309:3;;;;:::i;:::-;;;;10277:490;;;;9853:920;;;9548:1225;;;;;;;;;:::o;685:365:136:-;805:27;875:11;:18;862:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;862:32:136;;848:46;;909:9;904:140;928:11;:18;924:1;:22;904:140;;;1024:7;1016:16;;991:11;1003:1;991:14;;;;;;;;:::i;:::-;;;;;;;984:49;;;;:::i;:::-;967:11;979:1;967:14;;;;;;;;:::i;:::-;;;;;;;;;;:66;948:3;;;;:::i;:::-;;;;904:140;;;;685:365;;;;:::o;6192:547:121:-;6258:13;;-1:-1:-1;;6626:1:121;6623;6616:20;6665:1;6662;6658:9;6649:18;;6716:5;6712:2;6709:13;6701:5;6697:2;6693:14;6689:34;6680:43;;;6192:547;;;;;:::o;7180:3395::-;7330:14;7422:5;7431:1;7422:10;7418:3151;;7493:11;7485:5;:19;;;;;:::i;:::-;;7476:28;;7418:3151;;;7649:11;7640:5;:20;7636:66;;7669:33;;-1:-1:-1;;;7669:33:121;;;;;;;;;;;7636:66;7801:17;7936:11;7933:1;7930;7923:25;8515:1;8500:12;;:16;;8485:32;;8467:15;8916;;;8912:29;;;8908:37;;;8050:20;;;8039:32;;;9045:15;;;;8097:21;;8747:19;;;9036:24;;;;9431:1;8635:25;;;;9412:1;:15;;9411:21;;9675;;;9671:25;;9660:36;9748:21;;;9744:25;;9733:36;9822:21;;;9818:25;;9807:36;9896:21;;;9892:25;;9881:36;9970:21;;;9966:25;;9955:36;10045:21;;;10041:25;;;10030:36;;;10529:15;;;;;;-1:-1:-1;;;;7180:3395:121:o;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;13365:43;13259:156;-1:-1:-1;;;13259:156:9:o;13421:143::-;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;6489:146:135:-;6547:13;6580:48;6607:2;1340;6580:26;:48::i;4566:437:121:-;4662:14;4743:11;;;;;;;4841:19;4847:3;:12;;;4841:19;;;;;4932:64;;4743:1;;4957;:11;;4970;4743;4841:19;4932:21;:64::i;15439:1484:9:-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;4180:25:147;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;4153:18:147;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;12999:55:147;;16424:32:9;;;12981:74:147;13071:18;;;13064:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;12954:18:147;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;53024:55:147;;16587:43:9;;;53006:74:147;53096:18;;;53089:34;;;;53139:18;;;53132:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;52979:18:147;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;53024:55:147;;16769:41:9;;;53006:74:147;53096:18;;;53089:34;;;;53139:18;;;53132:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;52979:18:147;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;53379:2:147;16824:61:9;;;53361:21:147;53418:2;53398:18;;;53391:30;53457:34;53437:18;;;53430:62;53528:21;53508:18;;;53501:49;53567:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;53177:415:147;16720:176:9;16905:11;16911:4;16905:5;:11::i;784:217:108:-;858:13;595:6:102;1796:42:108;230:3:102;1796:42:108;;;;1795:72;-1:-1:-1;;;1777:90:108;2157:11;;;-1:-1:-1;;2150:35:108;976:18;1777:90;2150:35;976:8;:18::i;953:236:9:-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;4085:3600:120:-;4142:14;4168:11;4189:12;4216:1;4221;4216:6;4212:34;;-1:-1:-1;;;;273:17:102;-1:-1:-1;4224:22:120;;-1:-1:-1;4224:22:120;4212:34;-1:-1:-1;4288:1:120;4315;4305:12;;4302:109;;;4383:14;;;4348:1;4344:12;4302:109;4442:8;4435:4;:15;4431:3060;;;-1:-1:-1;;;273:17:102;-1:-1:-1;4546:1:120;-1:-1:-1;;;;;4567:41:120;;4564:161;;;4693:14;;;-1:-1:-1;;4642:20:120;4564:161;4756:3;4750:4;4746:14;4743:62;;;4782:20;;;4777:3;4773:30;;4743:62;4842:21;;4837:3;4833:31;4894:3;4884:14;;4881:62;;;4920:20;;;4915:3;4911:30;;4881:62;4980:21;;4975:3;4971:31;5032:3;5022:14;;5019:62;;;5058:20;;;5053:3;5049:30;;5019:62;5118:21;;5113:3;5109:31;5170:3;5160:14;;5157:62;;;5196:20;;;5191:3;5187:30;;5157:62;5256:21;;5251:3;5247:31;5308:4;5298:15;;5295:63;;;5335:20;;;5330:3;5326:30;;5295:63;5395:21;;5390:3;5386:31;5447:4;5437:15;;5434:63;;;5474:20;;;5469:3;5465:30;;5434:63;5534:21;;5529:3;5525:31;5586:4;5576:15;;5573:63;;;5613:20;;;5608:3;5604:30;;5573:63;5673:21;;5668:3;5664:31;;;;5715:15;;5712:63;;;5752:20;;;5747:3;5743:30;;5712:63;5812:21;;5807:3;5803:31;5864:5;5854:16;;5851:64;;;5892:20;;;5887:3;5883:30;;5851:64;5952:21;;5947:3;5943:31;6004:5;5994:16;;5991:64;;;6032:20;;;6027:3;6023:30;;5991:64;6092:21;;6087:3;6083:31;6144:5;6134:16;;6131:64;;;6172:20;;;6167:3;6163:30;;6131:64;6232:21;;6227:3;6223:31;6284:5;6274:16;;6271:64;;;6312:20;;;6307:3;6303:30;;6271:64;6372:21;;6367:3;6363:31;6424:6;6414:17;;6411:65;;;6453:20;;;6448:3;6444:30;;6411:65;6513:21;;6508:3;6504:31;6565:6;6555:17;;6552:65;;;6594:20;;;6589:3;6585:30;;6552:65;6654:21;;6649:3;6645:31;6706:6;6696:17;;6693:65;;;6735:20;;;6730:3;6726:30;;6693:65;6795:21;;6790:3;6786:31;6847:6;6837:17;;6834:65;;;6876:20;;;6871:3;6867:30;;6834:65;6936:21;;6931:3;6927:31;6988:7;6978:18;;6975:66;;;7018:20;;;7013:3;7009:30;;6975:66;7078:21;;7073:3;7069:31;7130:7;7120:18;;7117:66;;;7160:20;;;7155:3;7151:30;;7117:66;7220:21;;7215:3;7211:31;7272:7;7262:18;;7259:66;;;7302:20;;;7297:3;7293:30;;7259:66;7362:21;;7357:3;7353:31;7414:7;7404:18;;7401:66;;;7444:20;;;7439:3;7435:30;;7401:66;;4431:3060;7561:6;7571:1;7561:11;7557:59;;7581:35;;-1:-1:-1;;;7581:35:120;;;;;26406:25:147;;;26447:18;;;26440:34;;;26379:18;;7581:35:120;26232:248:147;7557:59:120;7634:6;:44;;7672:6;7634:44;;;7643:26;7663:6;-1:-1:-1;;7643:26:120;:::i;11187:393:9:-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;4249:2493;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;25900:55:147;;4911:25:9;;;25882:74:147;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;25855:18:147;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;55058:2:147;4984:74:9;;;55040:21:147;55077:18;;;55070:30;;;;55136:34;55116:18;;;55109:62;55207:34;55187:18;;;55180:62;55259:19;;4984:74:9;54856:428:147;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;12999:55:147;;;;12981:74;;13086:2;13071:18;;13064:34;12969:2;12954:18;;12744:360;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;12999:55:147;;;12981:74;;13071:18;;;13064:34;12954:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;55536:55:147;;;55518:74;;-1:-1:-1;;;;;;55628:33:147;;;55608:18;;;55601:61;;;;55678:18;;;55671:34;55736:2;55721:18;;55714:34;55505:3;55490:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;55961:2:147;6418:171:9;;;55943:21:147;56000:2;55980:18;;;55973:30;56039:34;56019:18;;;56012:62;56110:17;56090:18;;;56083:45;56145:19;;6418:171:9;55759:411:147;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;12981:74:147;;;;13071:18;;;13064:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;12954:18:147;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;53006:74:147;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;52979:18:147;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;53006:74:147;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;52979:18:147;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;12981:74:147;;;;13071:18;;;13064:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;12954:18:147;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;53006:74:147;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;52979:18:147;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;53006:74:147;;;;53096:18;;;53089:34;;;53139:18;;;53132:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;52979:18:147;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:147:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:147;;209:43;;199:71;;266:1;263;256:12;629:681;800:2;852:21;;;922:13;;825:18;;;944:22;;;771:4;;800:2;1023:15;;;;997:2;982:18;;;771:4;1066:218;1080:6;1077:1;1074:13;1066:218;;;1145:13;;-1:-1:-1;;;;;1141:62:147;1129:75;;1259:15;;;;1224:12;;;;1102:1;1095:9;1066:218;;;-1:-1:-1;1301:3:147;;629:681;-1:-1:-1;;;;;;629:681:147:o;1315:250::-;1400:1;1410:113;1424:6;1421:1;1418:13;1410:113;;;1500:11;;;1494:18;1481:11;;;1474:39;1446:2;1439:10;1410:113;;;-1:-1:-1;;1557:1:147;1539:16;;1532:27;1315:250::o;1570:271::-;1612:3;1650:5;1644:12;1677:6;1672:3;1665:19;1693:76;1762:6;1755:4;1750:3;1746:14;1739:4;1732:5;1728:16;1693:76;:::i;:::-;1823:2;1802:15;-1:-1:-1;;1798:29:147;1789:39;;;;1830:4;1785:50;;1570:271;-1:-1:-1;;1570:271:147:o;1846:1765::-;2079:2;2131:21;;;2201:13;;2104:18;;;2223:22;;;2050:4;;2079:2;2264;;2282:18;;;;2319:1;2362:15;;;2347:31;;2343:40;;2406:15;;;2050:4;;2470:1112;2486:6;2481:3;2478:15;2470:1112;;;-1:-1:-1;;2555:22:147;;;2551:36;2539:49;;2611:13;;2698:9;;-1:-1:-1;;;;;2694:58:147;2679:74;;2792:11;;2786:18;2824:15;;;2817:27;;;2905:19;;2651:15;;;2937:24;;;3118:21;;;;2984:2;3066:17;;;3054:30;;3050:39;;;3008:15;;;;3163:1;3177:296;3193:8;3188:3;3185:17;3177:296;;;3299:2;3295:7;3286:6;3278;3274:19;3270:33;3263:5;3256:48;3331:42;3366:6;3355:8;3349:15;3331:42;:::i;:::-;3402:17;;;;3321:52;-1:-1:-1;3445:14:147;;;;3221:1;3212:11;3177:296;;;-1:-1:-1;;;3560:12:147;;;;3496:6;-1:-1:-1;;3525:15:147;;;;2512:1;2503:11;2470:1112;;;-1:-1:-1;3599:6:147;;1846:1765;-1:-1:-1;;;;;;;;;;1846:1765:147:o;3616:156::-;3682:20;;3742:4;3731:16;;3721:27;;3711:55;;3762:1;3759;3752:12;3777:252;3841:6;3849;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3941:27;3958:9;3941:27;:::i;:::-;3931:37;;3987:36;4019:2;4008:9;4004:18;3987:36;:::i;:::-;3977:46;;3777:252;;;;;:::o;4216:461::-;4268:3;4306:5;4300:12;4333:6;4328:3;4321:19;4359:4;4388:2;4383:3;4379:12;4372:19;;4425:2;4418:5;4414:14;4446:1;4456:196;4470:6;4467:1;4464:13;4456:196;;;4535:13;;-1:-1:-1;;;;;;4531:40:147;4519:53;;4592:12;;;;4627:15;;;;4492:1;4485:9;4456:196;;;-1:-1:-1;4668:3:147;;4216:461;-1:-1:-1;;;;;4216:461:147:o;4682:1185::-;4900:4;4929:2;4969;4958:9;4954:18;4999:2;4988:9;4981:21;5022:6;5057;5051:13;5088:6;5080;5073:22;5114:2;5104:12;;5147:2;5136:9;5132:18;5125:25;;5209:2;5199:6;5196:1;5192:14;5181:9;5177:30;5173:39;5247:2;5239:6;5235:15;5268:1;5278:560;5292:6;5289:1;5286:13;5278:560;;;5357:22;;;-1:-1:-1;;5353:36:147;5341:49;;5413:13;;5459:9;;5481:18;;;5526:48;5558:15;;;5459:9;5526:48;:::i;:::-;5615:11;;;5609:18;5664:19;;;5647:15;;;5640:44;5609:18;5512:62;-1:-1:-1;5707:51:147;5512:62;5609:18;5707:51;:::i;:::-;5816:12;;;;5697:61;-1:-1:-1;;;5781:15:147;;;;5314:1;5307:9;5278:560;;;-1:-1:-1;5855:6:147;;4682:1185;-1:-1:-1;;;;;;;;4682:1185:147:o;5872:803::-;6034:4;6063:2;6103;6092:9;6088:18;6133:2;6122:9;6115:21;6156:6;6191;6185:13;6222:6;6214;6207:22;6260:2;6249:9;6245:18;6238:25;;6322:2;6312:6;6309:1;6305:14;6294:9;6290:30;6286:39;6272:53;;6360:2;6352:6;6348:15;6381:1;6391:255;6405:6;6402:1;6399:13;6391:255;;;6498:2;6494:7;6482:9;6474:6;6470:22;6466:36;6461:3;6454:49;6526:40;6559:6;6550;6544:13;6526:40;:::i;:::-;6516:50;-1:-1:-1;6624:12:147;;;;6589:15;;;;6427:1;6420:9;6391:255;;;-1:-1:-1;6663:6:147;;5872:803;-1:-1:-1;;;;;;;5872:803:147:o;6680:119::-;6765:8;6758:5;6754:20;6747:5;6744:31;6734:59;;6789:1;6786;6779:12;6804:383;6878:6;6886;6894;6947:2;6935:9;6926:7;6922:23;6918:32;6915:52;;;6963:1;6960;6953:12;6915:52;7002:9;6989:23;7021:30;7045:5;7021:30;:::i;:::-;7070:5;-1:-1:-1;7122:2:147;7107:18;;7094:32;;-1:-1:-1;7145:36:147;7177:2;7162:18;;7145:36;:::i;:::-;7135:46;;6804:383;;;;;:::o;7387:1096::-;7589:4;7618:2;7658;7647:9;7643:18;7688:2;7677:9;7670:21;7711:6;7746;7740:13;7777:6;7769;7762:22;7803:2;7793:12;;7836:2;7825:9;7821:18;7814:25;;7898:2;7888:6;7885:1;7881:14;7870:9;7866:30;7862:39;7936:2;7928:6;7924:15;7957:1;7967:487;7981:6;7978:1;7975:13;7967:487;;;8046:22;;;-1:-1:-1;;8042:36:147;8030:49;;8102:13;;8147:9;;-1:-1:-1;;;;;8143:58:147;8128:74;;8241:11;;8235:18;8273:15;;;8266:27;;;8316:58;8358:15;;;8235:18;8316:58;:::i;:::-;8432:12;;;;8306:68;-1:-1:-1;;8397:15:147;;;;8003:1;7996:9;7967:487;;8488:154;-1:-1:-1;;;;;8567:5:147;8563:54;8556:5;8553:65;8543:93;;8632:1;8629;8622:12;8647:965;8780:6;8788;8796;8804;8812;8820;8828;8836;8889:3;8877:9;8868:7;8864:23;8860:33;8857:53;;;8906:1;8903;8896:12;8857:53;8945:9;8932:23;8964:31;8989:5;8964:31;:::i;:::-;9014:5;-1:-1:-1;9071:2:147;9056:18;;9043:32;9084:33;9043:32;9084:33;:::i;:::-;9136:7;-1:-1:-1;9195:2:147;9180:18;;9167:32;9208:33;9167:32;9208:33;:::i;:::-;9260:7;-1:-1:-1;9319:2:147;9304:18;;9291:32;9332;9291;9332;:::i;:::-;9383:7;-1:-1:-1;9437:3:147;9422:19;;9409:33;;-1:-1:-1;9489:3:147;9474:19;;9461:33;;-1:-1:-1;9513:37:147;9545:3;9530:19;;9513:37;:::i;:::-;9503:47;;9569:37;9601:3;9590:9;9586:19;9569:37;:::i;:::-;9559:47;;8647:965;;;;;;;;;;;:::o;9617:117::-;9702:6;9695:5;9691:18;9684:5;9681:29;9671:57;;9724:1;9721;9714:12;9739:245;9797:6;9850:2;9838:9;9829:7;9825:23;9821:32;9818:52;;;9866:1;9863;9856:12;9818:52;9905:9;9892:23;9924:30;9948:5;9924:30;:::i;9989:896::-;10113:6;10121;10129;10137;10145;10153;10161;10214:3;10202:9;10193:7;10189:23;10185:33;10182:53;;;10231:1;10228;10221:12;10182:53;10270:9;10257:23;10289:31;10314:5;10289:31;:::i;:::-;10339:5;-1:-1:-1;10396:2:147;10381:18;;10368:32;10409:33;10368:32;10409:33;:::i;:::-;10461:7;-1:-1:-1;10520:2:147;10505:18;;10492:32;10533:33;10492:32;10533:33;:::i;:::-;10585:7;-1:-1:-1;10644:2:147;10629:18;;10616:32;10657;10616;10657;:::i;:::-;10708:7;-1:-1:-1;10762:3:147;10747:19;;10734:33;;-1:-1:-1;10786:37:147;10818:3;10803:19;;10786:37;:::i;:::-;10776:47;;10842:37;10874:3;10863:9;10859:19;10842:37;:::i;:::-;10832:47;;9989:896;;;;;;;;;;:::o;11345:127::-;11406:10;11401:3;11397:20;11394:1;11387:31;11437:4;11434:1;11427:15;11461:4;11458:1;11451:15;11477:275;11548:2;11542:9;11613:2;11594:13;;-1:-1:-1;;11590:27:147;11578:40;;11648:18;11633:34;;11669:22;;;11630:62;11627:88;;;11695:18;;:::i;:::-;11731:2;11724:22;11477:275;;-1:-1:-1;11477:275:147:o;11757:164::-;11833:13;;11882;;11875:21;11865:32;;11855:60;;11911:1;11908;11901:12;11926:813;12032:6;12085:3;12073:9;12064:7;12060:23;12056:33;12053:53;;;12102:1;12099;12092:12;12053:53;12135:2;12129:9;12177:3;12169:6;12165:16;12247:6;12235:10;12232:22;12211:18;12199:10;12196:34;12193:62;12190:88;;;12258:18;;:::i;:::-;12294:2;12287:22;12331:16;;12356:30;12331:16;12356:30;:::i;:::-;12395:21;;12461:2;12446:18;;12440:25;12474:33;12440:25;12474:33;:::i;:::-;12535:2;12523:15;;12516:32;12581:46;12623:2;12608:18;;12581:46;:::i;:::-;12576:2;12568:6;12564:15;12557:71;12661:46;12703:2;12692:9;12688:18;12661:46;:::i;:::-;12656:2;12644:15;;12637:71;12648:6;11926:813;-1:-1:-1;;;11926:813:147:o;13109:249::-;13178:6;13231:2;13219:9;13210:7;13206:23;13202:32;13199:52;;;13247:1;13244;13237:12;13199:52;13279:9;13273:16;13298:30;13322:5;13298:30;:::i;13363:127::-;13424:10;13419:3;13415:20;13412:1;13405:31;13455:4;13452:1;13445:15;13479:4;13476:1;13469:15;13495:170;13562:8;13590:10;;;13602;;;13586:27;;13625:11;;;13622:37;;;13639:18;;:::i;14002:184::-;14072:6;14125:2;14113:9;14104:7;14100:23;14096:32;14093:52;;;14141:1;14138;14131:12;14093:52;-1:-1:-1;14164:16:147;;14002:184;-1:-1:-1;14002:184:147:o;15004:268::-;15091:6;15144:2;15132:9;15123:7;15119:23;15115:32;15112:52;;;15160:1;15157;15150:12;15112:52;15192:9;15186:16;15211:31;15236:5;15211:31;:::i;16362:434::-;16414:3;16452:5;16446:12;16479:6;16474:3;16467:19;16505:4;16534:2;16529:3;16525:12;16518:19;;16571:2;16564:5;16560:14;16592:1;16602:169;16616:6;16613:1;16610:13;16602:169;;;16677:13;;16665:26;;16711:12;;;;16746:15;;;;16638:1;16631:9;16602:169;;16801:1945;17006:2;16995:9;16988:21;17018:53;17067:2;17056:9;17052:18;17043:6;17037:13;-1:-1:-1;;;;;563:54:147;551:67;;497:127;17018:53;16969:4;17118:2;17110:6;17106:15;17100:22;17131:52;17179:2;17168:9;17164:18;17150:12;-1:-1:-1;;;;;563:54:147;551:67;;497:127;17131:52;;17237:2;17229:6;17225:15;17219:22;17214:2;17203:9;17199:18;17192:50;17297:2;17289:6;17285:15;17279:22;17273:3;17262:9;17258:19;17251:51;17357:3;17349:6;17345:16;17339:23;17333:3;17322:9;17318:19;17311:52;17418:3;17410:6;17406:16;17400:23;17394:3;17383:9;17379:19;17372:52;17479:3;17471:6;17467:16;17461:23;17455:3;17444:9;17440:19;17433:52;17522:3;17514:6;17510:16;17504:23;17546:3;17585:2;17580;17569:9;17565:18;17558:30;17625:2;17617:6;17613:15;17607:22;17597:32;;;17648:3;17687:2;17682;17671:9;17667:18;17660:30;17739:2;17731:6;17727:15;17721:22;17699:44;;;17762:6;17787:3;17826:2;17821;17810:9;17806:18;17799:30;17852:64;17911:3;17900:9;17896:19;17880:14;17852:64;:::i;:::-;17838:78;;17965:2;17957:6;17953:15;17947:22;17925:44;;17992:2;17988:7;18014:3;18081:2;18069:9;18061:6;18057:22;18053:31;18048:2;18037:9;18033:18;18026:59;18108:51;18152:6;18136:14;18108:51;:::i;:::-;18094:65;;18208:2;18200:6;18196:15;18190:22;18168:44;;;18231:3;18298:2;18286:9;18278:6;18274:22;18270:31;18265:2;18254:9;18250:18;18243:59;18325:51;18369:6;18353:14;18325:51;:::i;:::-;18311:65;;18425:2;18417:6;18413:15;18407:22;18385:44;;;;18449:3;18461:55;18511:3;18500:9;18496:19;18480:14;-1:-1:-1;;;;;563:54:147;551:67;;497:127;18461:55;18553:16;;18547:23;;-1:-1:-1;18590:3:147;18602:55;18637:19;;;18547:23;-1:-1:-1;;;;;563:54:147;551:67;;497:127;18602:55;18699:16;;;;18693:23;18673:18;;18666:51;;;;-1:-1:-1;18734:6:147;16801:1945;-1:-1:-1;16801:1945:147:o;18751:709::-;18816:5;18869:3;18862:4;18854:6;18850:17;18846:27;18836:55;;18887:1;18884;18877:12;18836:55;18916:6;18910:13;18942:4;18965:18;18961:2;18958:26;18955:52;;;18987:18;;:::i;:::-;19033:2;19030:1;19026:10;19056:28;19080:2;19076;19072:11;19056:28;:::i;:::-;19118:15;;;19188;;;19184:24;;;19149:12;;;;19220:15;;;19217:35;;;19248:1;19245;19238:12;19217:35;19284:2;19276:6;19272:15;19261:26;;19296:135;19312:6;19307:3;19304:15;19296:135;;;19378:10;;19366:23;;19329:12;;;;19409;;;;19296:135;;;19449:5;18751:709;-1:-1:-1;;;;;;;18751:709:147:o;19465:861::-;19630:6;19638;19646;19654;19662;19670;19723:3;19711:9;19702:7;19698:23;19694:33;19691:53;;;19740:1;19737;19730:12;19691:53;19769:9;19763:16;19753:26;;19819:2;19808:9;19804:18;19798:25;19788:35;;19863:2;19852:9;19848:18;19842:25;19832:35;;19907:2;19896:9;19892:18;19886:25;19876:35;;19955:3;19944:9;19940:19;19934:26;19979:18;20020:2;20012:6;20009:14;20006:34;;;20036:1;20033;20026:12;20006:34;20059:72;20123:7;20114:6;20103:9;20099:22;20059:72;:::i;:::-;20049:82;;20177:3;20166:9;20162:19;20156:26;20140:42;;20207:2;20197:8;20194:16;20191:36;;;20223:1;20220;20213:12;20191:36;;20246:74;20312:7;20301:8;20290:9;20286:24;20246:74;:::i;:::-;20236:84;;;19465:861;;;;;;;;:::o;20331:380::-;20410:1;20406:12;;;;20453;;;20474:61;;20528:4;20520:6;20516:17;20506:27;;20474:61;20581:2;20573:6;20570:14;20550:18;20547:38;20544:161;;20627:10;20622:3;20618:20;20615:1;20608:31;20662:4;20659:1;20652:15;20690:4;20687:1;20680:15;20544:161;;20331:380;;;:::o;21621:192::-;21700:13;;-1:-1:-1;;;;;21742:46:147;;21732:57;;21722:85;;21803:1;21800;21793:12;21818:378;21906:6;21914;21922;21975:2;21963:9;21954:7;21950:23;21946:32;21943:52;;;21991:1;21988;21981:12;21943:52;22014:40;22044:9;22014:40;:::i;:::-;22004:50;;22073:49;22118:2;22107:9;22103:18;22073:49;:::i;:::-;22063:59;;22141:49;22186:2;22175:9;22171:18;22141:49;:::i;22201:127::-;22262:10;22257:3;22253:20;22250:1;22243:31;22293:4;22290:1;22283:15;22317:4;22314:1;22307:15;22333:216;22373:1;-1:-1:-1;;;;;22460:2:147;22457:1;22453:10;22482:3;22472:37;;22489:18;;:::i;:::-;22527:10;;22523:20;;;;;22333:216;-1:-1:-1;;22333:216:147:o;22554:197::-;-1:-1:-1;;;;;22676:10:147;;;22688;;;22672:27;;22711:11;;;22708:37;;;22725:18;;:::i;23080:218::-;23227:2;23216:9;23209:21;23190:4;23247:45;23288:2;23277:9;23273:18;23265:6;23247:45;:::i;23303:125::-;23368:9;;;23389:10;;;23386:36;;;23402:18;;:::i;23433:127::-;23494:10;23489:3;23485:20;23482:1;23475:31;23525:4;23522:1;23515:15;23549:4;23546:1;23539:15;23565:492;23626:3;23664:5;23658:12;23691:6;23686:3;23679:19;23717:4;23746:2;23741:3;23737:12;23730:19;;23783:2;23776:5;23772:14;23804:1;23814:218;23828:6;23825:1;23822:13;23814:218;;;23893:13;;-1:-1:-1;;;;;23889:62:147;23877:75;;23972:12;;;;24007:15;;;;23850:1;23843:9;23814:218;;24062:1108;24109:3;24153:5;24147:12;24180:4;24175:3;24168:17;24206:57;24257:4;24252:3;24248:14;24234:12;24206:57;:::i;:::-;24282:4;24323:14;;;24317:21;24368:14;;;24354:12;;;24347:36;24432:21;;24462:20;;;24536:23;;;;-1:-1:-1;24282:4:147;;-1:-1:-1;;24500:13:147;;;;-1:-1:-1;24608:379:147;24624:6;24619:3;24616:15;24608:379;;;24693:6;24687:13;24730:1;24726:2;24723:9;24713:160;;-1:-1:-1;;;24764:31:147;;24822:4;24819:1;24812:15;24854:4;24771:1;24844:15;24713:160;24886:17;;24962:15;;;;24925:14;;;;24650:1;24641:11;24608:379;;;24612:3;;25035:4;25028:5;25024:16;25018:23;24996:45;;25084:3;25077:5;25073:15;25066:4;25061:3;25057:14;25050:39;25105:59;25158:5;25142:14;25105:59;:::i;25175:556::-;-1:-1:-1;;;;;25438:6:147;25434:47;25423:9;25416:66;25518:3;25513:2;25502:9;25498:18;25491:31;25397:4;25539:51;25585:3;25574:9;25570:19;25562:6;25539:51;:::i;:::-;-1:-1:-1;;;;;25626:55:147;;;;25621:2;25606:18;;25599:83;-1:-1:-1;25713:2:147;25698:18;25691:34;25531:59;25175:556;-1:-1:-1;;25175:556:147:o;25967:127::-;26028:10;26023:3;26019:20;26016:1;26009:31;26059:4;26056:1;26049:15;26083:4;26080:1;26073:15;26099:128;26166:9;;;26187:11;;;26184:37;;;26201:18;;:::i;26938:674::-;27204:4;-1:-1:-1;;;;;27306:2:147;27298:6;27294:15;27283:9;27276:34;27358:2;27350:6;27346:15;27341:2;27330:9;27326:18;27319:43;;27398:3;27393:2;27382:9;27378:18;27371:31;27419:51;27465:3;27454:9;27450:19;27442:6;27419:51;:::i;:::-;-1:-1:-1;;;;;27506:55:147;;;;27501:2;27486:18;;27479:83;-1:-1:-1;27593:3:147;27578:19;27571:35;27411:59;26938:674;-1:-1:-1;;;26938:674:147:o;27617:148::-;27705:4;27684:12;;;27698;;;27680:31;;27723:13;;27720:39;;;27739:18;;:::i;27770:151::-;27860:4;27853:12;;;27839;;;27835:31;;27878:14;;27875:40;;;27895:18;;:::i;27926:363::-;28021:6;28074:2;28062:9;28053:7;28049:23;28045:32;28042:52;;;28090:1;28087;28080:12;28042:52;28123:9;28117:16;28156:18;28148:6;28145:30;28142:50;;;28188:1;28185;28178:12;28142:50;28211:72;28275:7;28266:6;28255:9;28251:22;28211:72;:::i;28294:200::-;-1:-1:-1;;;;;28430:10:147;;;28418;;;28414:27;;28453:12;;;28450:38;;;28468:18;;:::i;29899:120::-;29939:1;29965;29955:35;;29970:18;;:::i;:::-;-1:-1:-1;30004:9:147;;29899:120::o;30024:135::-;30063:3;30084:17;;;30081:43;;30104:18;;:::i;:::-;-1:-1:-1;30151:1:147;30140:13;;30024:135::o;30466:202::-;30533:6;30586:2;30574:9;30565:7;30561:23;30557:32;30554:52;;;30602:1;30599;30592:12;30554:52;30625:37;30652:9;30625:37;:::i;30673:854::-;30871:4;30919:2;30908:9;30904:18;-1:-1:-1;;;;;31022:2:147;31014:6;31010:15;30999:9;30992:34;31045:2;31083;31078;31067:9;31063:18;31056:30;31106:6;31141;31135:13;31172:6;31164;31157:22;31210:3;31199:9;31195:19;31188:26;;31249:2;31241:6;31237:15;31223:29;;31270:1;31280:169;31294:6;31291:1;31288:13;31280:169;;;31355:13;;31343:26;;31424:15;;;;31389:12;;;;31316:1;31309:9;31280:169;;;31284:3;;31466;31458:11;;;;31517:2;31509:6;31505:15;31500:2;31489:9;31485:18;31478:43;;;30673:854;;;;;;:::o;31532:485::-;31645:6;31653;31661;31714:2;31702:9;31693:7;31689:23;31685:32;31682:52;;;31730:1;31727;31720:12;31682:52;31759:9;31753:16;31743:26;;31809:2;31798:9;31794:18;31788:25;31778:35;;31857:2;31846:9;31842:18;31836:25;31884:18;31876:6;31873:30;31870:50;;;31916:1;31913;31906:12;31870:50;31939:72;32003:7;31994:6;31983:9;31979:22;31939:72;:::i;:::-;31929:82;;;31532:485;;;;;:::o;32216:634::-;32346:6;32354;32362;32370;32378;32386;32394;32402;32455:3;32443:9;32434:7;32430:23;32426:33;32423:53;;;32472:1;32469;32462:12;32423:53;32501:9;32495:16;32485:26;;32551:2;32540:9;32536:18;32530:25;32520:35;;32595:2;32584:9;32580:18;32574:25;32564:35;;32639:2;32628:9;32624:18;32618:25;32608:35;;32683:3;32672:9;32668:19;32662:26;32652:36;;32728:3;32717:9;32713:19;32707:26;32697:36;;32773:3;32762:9;32758:19;32752:26;32742:36;;32797:47;32839:3;32828:9;32824:19;32797:47;:::i;34015:686::-;34291:4;-1:-1:-1;;;;;34401:2:147;34393:6;34389:15;34378:9;34371:34;34453:2;34445:6;34441:15;34436:2;34425:9;34421:18;34414:43;;34493:3;34488:2;34477:9;34473:18;34466:31;34520:56;34571:3;34560:9;34556:19;34548:6;34520:56;:::i;:::-;34624:9;34616:6;34612:22;34607:2;34596:9;34592:18;34585:50;34652:43;34688:6;34680;34652:43;:::i;35074:338::-;-1:-1:-1;;;;;35253:6:147;35249:55;35238:9;35231:74;35341:2;35336;35325:9;35321:18;35314:30;35212:4;35361:45;35402:2;35391:9;35387:18;35379:6;35361:45;:::i;42061:447::-;42235:4;-1:-1:-1;;;;;42345:2:147;42337:6;42333:15;42322:9;42315:34;42397:2;42389:6;42385:15;42380:2;42369:9;42365:18;42358:43;;42437:2;42432;42421:9;42417:18;42410:30;42457:45;42498:2;42487:9;42483:18;42475:6;42457:45;:::i;45674:362::-;45879:6;45868:9;45861:25;45922:6;45917:2;45906:9;45902:18;45895:34;45965:2;45960;45949:9;45945:18;45938:30;45842:4;45985:45;46026:2;46015:9;46011:18;46003:6;45985:45;:::i;47677:287::-;47806:3;47844:6;47838:13;47860:66;47919:6;47914:3;47907:4;47899:6;47895:17;47860:66;:::i;:::-;47942:16;;;;;47677:287;-1:-1:-1;;47677:287:147:o;47969:181::-;48000:1;48026:8;48061:2;48058:1;48054:10;48083:3;48073:37;;48090:18;;:::i;:::-;48128:10;;48124:20;;;;;47969:181;-1:-1:-1;;47969:181:147:o;48516:189::-;48555:1;48581:8;48616:2;48613:1;48609:10;48638:3;48628:37;;48645:18;;:::i;48710:168::-;48783:9;;;48814;;48831:15;;;48825:22;;48811:37;48801:71;;48852:18;;:::i;48883:247::-;48954:8;48994:10;;;49006;;;48990:27;49037:20;;;;48954:8;49076:24;;;49066:58;;49104:18;;:::i;:::-;49066:58;;48883:247;;;;:::o;49135:173::-;49203:8;49244:10;;;49232;;;49228:27;;49267:12;;;49264:38;;;49282:18;;:::i;49313:200::-;49379:9;;;49352:4;49407:9;;49435:10;;49447:12;;;49431:29;49470:12;;;49462:21;;49428:56;49425:82;;;49487:18;;:::i;49518:383::-;49675:3;49713:6;49707:13;49729:66;49788:6;49783:3;49776:4;49768:6;49764:17;49729:66;:::i;:::-;49817:16;;;;49842:21;;;-1:-1:-1;49890:4:147;49879:16;;49518:383;-1:-1:-1;49518:383:147:o;49906:422::-;49995:1;50038:5;49995:1;50052:270;50073:7;50063:8;50060:21;50052:270;;;50132:4;50128:1;50124:6;50120:17;50114:4;50111:27;50108:53;;;50141:18;;:::i;:::-;50191:7;50181:8;50177:22;50174:55;;;50211:16;;;;50174:55;50290:22;;;;50250:15;;;;50052:270;;;50056:3;49906:422;;;;;:::o;50333:806::-;50382:5;50412:8;50402:80;;-1:-1:-1;50453:1:147;50467:5;;50402:80;50501:4;50491:76;;-1:-1:-1;50538:1:147;50552:5;;50491:76;50583:4;50601:1;50596:59;;;;50669:1;50664:130;;;;50576:218;;50596:59;50626:1;50617:10;;50640:5;;;50664:130;50701:3;50691:8;50688:17;50685:43;;;50708:18;;:::i;:::-;-1:-1:-1;;50764:1:147;50750:16;;50779:5;;50576:218;;50878:2;50868:8;50865:16;50859:3;50853:4;50850:13;50846:36;50840:2;50830:8;50827:16;50822:2;50816:4;50813:12;50809:35;50806:77;50803:159;;;-1:-1:-1;50915:19:147;;;50947:5;;50803:159;50994:34;51019:8;51013:4;50994:34;:::i;:::-;51064:6;51060:1;51056:6;51052:19;51043:7;51040:32;51037:58;;;51075:18;;:::i;:::-;51113:20;;50333:806;-1:-1:-1;;;50333:806:147:o;51144:131::-;51204:5;51233:36;51260:8;51254:4;51233:36;:::i;51280:719::-;51360:6;51413:2;51401:9;51392:7;51388:23;51384:32;51381:52;;;51429:1;51426;51419:12;51381:52;51462:9;51456:16;51491:18;51532:2;51524:6;51521:14;51518:34;;;51548:1;51545;51538:12;51518:34;51586:6;51575:9;51571:22;51561:32;;51631:7;51624:4;51620:2;51616:13;51612:27;51602:55;;51653:1;51650;51643:12;51602:55;51682:2;51676:9;51704:2;51700;51697:10;51694:36;;;51710:18;;:::i;:::-;51752:53;51795:2;51776:13;;-1:-1:-1;;51772:27:147;51801:2;51768:36;51752:53;:::i;:::-;51739:66;;51828:2;51821:5;51814:17;51868:7;51863:2;51858;51854;51850:11;51846:20;51843:33;51840:53;;;51889:1;51886;51879:12;51840:53;51902:67;51966:2;51961;51954:5;51950:14;51945:2;51941;51937:11;51902:67;:::i;:::-;-1:-1:-1;51988:5:147;51280:719;-1:-1:-1;;;;51280:719:147:o;52004:570::-;52266:34;52261:3;52254:47;52331:34;52326:2;52321:3;52317:12;52310:56;52396:12;52391:2;52386:3;52382:12;52375:34;52236:3;52438:6;52432:13;52454:73;52520:6;52515:2;52510:3;52506:12;52501:2;52493:6;52489:15;52454:73;:::i;:::-;52547:16;;;;52565:2;52543:25;;52004:570;-1:-1:-1;;52004:570:147:o;53597:384::-;-1:-1:-1;;;;;;53782:33:147;;53770:46;;53839:13;;53752:3;;53861:74;53839:13;53924:1;53915:11;;53908:4;53896:17;;53861:74;:::i;:::-;53955:16;;;;53973:1;53951:24;;53597:384;-1:-1:-1;;;53597:384:147:o;54237:614::-;54366:6;54374;54427:2;54415:9;54406:7;54402:23;54398:32;54395:52;;;54443:1;54440;54433:12;54395:52;54476:9;54470:16;54505:18;54546:2;54538:6;54535:14;54532:34;;;54562:1;54559;54552:12;54532:34;54585:72;54649:7;54640:6;54629:9;54625:22;54585:72;:::i;:::-;54575:82;;54703:2;54692:9;54688:18;54682:25;54666:41;;54732:2;54722:8;54719:16;54716:36;;;54748:1;54745;54738:12;54716:36;;54771:74;54837:7;54826:8;54815:9;54811:24;54771:74;:::i;:::-;54761:84;;;54237:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "99509": [
        {
          "start": 26558,
          "length": 32
        },
        {
          "start": 26779,
          "length": 32
        },
        {
          "start": 26943,
          "length": 32
        },
        {
          "start": 27362,
          "length": 32
        },
        {
          "start": 30945,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_GetIdFromPrice()": "061794b3",
    "test_SwapExactNATIVEForTokens()": "38a637ed",
    "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens()": "2debd6fd",
    "test_SwapExactTokensForNATIVE()": "4415cf9d",
    "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens()": "3f6fb2f7",
    "test_SwapExactTokensForTokens()": "72b01c7a",
    "test_SwapNATIVEForExactTokens()": "8f8d57ea",
    "test_SwapTokensForExactNATIVE()": "6d090840",
    "test_SwapTokensForExactTokens()": "7594f3a1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Uint128x128Math__PowUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_GetIdFromPrice\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapExactTokensForTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapNATIVEForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactNATIVE\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_SwapTokensForExactTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This file only test single hop swaps using V2.1 pairs Test scenarios: 1. swapExactTokensForTokens 2. swapExactTokensForNATIVE 3. swapExactNATIVEForTokens 4. swapTokensForExactTokens 5. swapTokensForExactNATIVE 6. swapNATIVEForExactTokens 7. swapExactTokensForTokensSupportingFeeOnTransferTokens 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBRouter.Swap.t.sol\":\"LiquidityBinRouterSwapTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4\",\"dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415\",\"dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97\",\"dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044\",\"dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a\",\"dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e\",\"dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4\",\"dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2\",\"dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof\"]},\"src/LBToken.sol\":{\"keccak256\":\"0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8\",\"dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e\",\"dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a\",\"dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490\",\"dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262\",\"dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0\",\"dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f\",\"dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3\",\"dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6\",\"dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12\",\"dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65\",\"dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a\",\"dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a\",\"dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8\",\"dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b\",\"dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f\",\"dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea\",\"dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ\"]},\"src/libraries/StringUtils.sol\":{\"keccak256\":\"0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f\",\"dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a\",\"dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d\",\"dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1\",\"dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f\",\"dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0\",\"dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e\",\"dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97\",\"dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126\",\"dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94\",\"dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea\",\"dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M\"]},\"test/LBRouter.Swap.t.sol\":{\"keccak256\":\"0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85\",\"dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a\",\"dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12\",\"dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211\",\"dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "Uint128x128Math__PowUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_GetIdFromPrice"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapExactTokensForTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapNATIVEForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactNATIVE"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_SwapTokensForExactTokens"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBRouter.Swap.t.sol": "LiquidityBinRouterSwapTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2",
        "urls": [
          "bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4",
          "dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd",
        "urls": [
          "bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415",
          "dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520",
        "urls": [
          "bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97",
          "dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f",
        "urls": [
          "bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044",
          "dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310",
        "urls": [
          "bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a",
          "dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22",
        "urls": [
          "bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e",
          "dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94",
        "urls": [
          "bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4",
          "dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae",
        "urls": [
          "bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2",
          "dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434",
        "urls": [
          "bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8",
          "dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53",
        "urls": [
          "bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e",
          "dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b",
        "urls": [
          "bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a",
          "dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388",
        "urls": [
          "bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490",
          "dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4",
        "urls": [
          "bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262",
          "dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e",
        "urls": [
          "bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0",
          "dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f",
        "urls": [
          "bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f",
          "dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da",
        "urls": [
          "bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3",
          "dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7",
        "urls": [
          "bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6",
          "dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1",
        "urls": [
          "bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12",
          "dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401",
        "urls": [
          "bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65",
          "dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365",
        "urls": [
          "bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a",
          "dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd",
        "urls": [
          "bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a",
          "dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42",
        "urls": [
          "bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8",
          "dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71",
        "urls": [
          "bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b",
          "dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6",
        "urls": [
          "bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f",
          "dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0",
        "urls": [
          "bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea",
          "dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/StringUtils.sol": {
        "keccak256": "0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4",
        "urls": [
          "bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f",
          "dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89",
        "urls": [
          "bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a",
          "dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546",
        "urls": [
          "bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d",
          "dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee",
        "urls": [
          "bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1",
          "dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f",
        "urls": [
          "bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f",
          "dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a",
        "urls": [
          "bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0",
          "dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257",
        "urls": [
          "bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e",
          "dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9",
        "urls": [
          "bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97",
          "dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a",
        "urls": [
          "bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126",
          "dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a",
        "urls": [
          "bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94",
          "dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f",
        "urls": [
          "bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea",
          "dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M"
        ],
        "license": "MIT"
      },
      "test/LBRouter.Swap.t.sol": {
        "keccak256": "0x0214d59b8b9428f76fd71e525065530234ed21cb0c75b451da76beb445a04673",
        "urls": [
          "bzz-raw://5f4c930c5feda177ef205f8ff991985ab1d0c8f6fb298846b321ebdceaf74d85",
          "dweb:/ipfs/QmSsWzQVq9QH3Xdy9J63vFHBfyfJ8vHrH9JBT8hHq54AkJ"
        ],
        "license": "UNLICENSED"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72",
        "urls": [
          "bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a",
          "dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8",
        "urls": [
          "bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12",
          "dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894",
        "urls": [
          "bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211",
          "dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBRouter.Swap.t.sol",
    "id": 99420,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39201
      ],
      "AvalancheAddresses": [
        101265
      ],
      "BinHelper": [
        71915
      ],
      "BitMath": [
        75382
      ],
      "Constants": [
        71953
      ],
      "ERC20": [
        42133
      ],
      "ERC20Mock": [
        106636
      ],
      "ERC20TransferTaxMock": [
        106690
      ],
      "Encoded": [
        75589
      ],
      "EnumerableMap": [
        48749
      ],
      "EnumerableSet": [
        49362
      ],
      "FeeHelper": [
        72146
      ],
      "FlashBorrower": [
        106857
      ],
      "Hooks": [
        73020
      ],
      "IERC20": [
        42211
      ],
      "IERC20Metadata": [
        42237
      ],
      "ILBFactory": [
        67618
      ],
      "ILBFlashLoanCallback": [
        67643
      ],
      "ILBHooks": [
        67816
      ],
      "ILBLegacyFactory": [
        68182
      ],
      "ILBLegacyPair": [
        68598
      ],
      "ILBLegacyRouter": [
        69007
      ],
      "ILBPair": [
        69569
      ],
      "ILBRouter": [
        70101
      ],
      "ILBToken": [
        70224
      ],
      "ISovrynLBFactoryV1": [
        70298
      ],
      "ISovrynLBPairV1": [
        70541
      ],
      "ISovrynLBRouter01": [
        70850
      ],
      "ISovrynLBRouter02": [
        70940
      ],
      "IWNATIVE": [
        70956
      ],
      "ImmutableClone": [
        73098
      ],
      "Initializable": [
        41618
      ],
      "LBFactory": [
        58932
      ],
      "LBPair": [
        61826
      ],
      "LBPairBeaconProxy": [
        61890
      ],
      "LBPairUpgradeableBeacon": [
        62082
      ],
      "LBQuoter": [
        63370
      ],
      "LBRouter": [
        66608
      ],
      "LBToken": [
        67127
      ],
      "LiquidityBinRouterSwapTest": [
        99419
      ],
      "LiquidityConfigurations": [
        75759
      ],
      "OracleHelper": [
        73755
      ],
      "Ownable": [
        40400
      ],
      "Ownable2StepUpgradeable": [
        39338
      ],
      "OwnableUpgradeable": [
        39533
      ],
      "PackedUint128Math": [
        76113
      ],
      "PairParameterHelper": [
        74612
      ],
      "PriceHelper": [
        74786
      ],
      "ReentrancyGuardUpgradeable": [
        74915
      ],
      "SafeCast": [
        76861
      ],
      "SafeERC20": [
        42660
      ],
      "SampleMath": [
        77286
      ],
      "SovrynLBLibrary": [
        75121
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3570
      ],
      "StdCheats": [
        6423
      ],
      "StdInvariant": [
        6783
      ],
      "StdStorage": [
        7555
      ],
      "StdStyle": [
        10725
      ],
      "StdUtils": [
        12103
      ],
      "StringUtils": [
        75202
      ],
      "Test": [
        12155
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        101064
      ],
      "TokenHelper": [
        75288
      ],
      "TransparentUpgradeableProxy": [
        41364
      ],
      "TreeMath": [
        78218
      ],
      "Uint256x256Math": [
        78854
      ],
      "UpgradeableBeacon": [
        41181
      ],
      "Utils": [
        101232
      ],
      "Vm": [
        15998
      ],
      "WNATIVE": [
        107167
      ],
      "console": [
        24122
      ],
      "console2": [
        24122
      ],
      "safeconsole": [
        38838
      ],
      "stdError": [
        6489
      ],
      "stdJson": [
        7375
      ],
      "stdMath": [
        7517
      ],
      "stdStorage": [
        9514
      ],
      "stdToml": [
        11317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:20067:134",
    "nodes": [
      {
        "id": 97215,
        "nodeType": "PragmaDirective",
        "src": "40:24:134",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 97216,
        "nodeType": "ImportDirective",
        "src": "66:37:134",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "test/helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 99420,
        "sourceUnit": 101065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 99419,
        "nodeType": "ContractDefinition",
        "src": "555:19551:134",
        "nodes": [
          {
            "id": 97367,
            "nodeType": "FunctionDefinition",
            "src": "611:1174:134",
            "nodes": [],
            "body": {
              "id": 97366,
              "nodeType": "Block",
              "src": "644:1141:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 97223,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "654:5:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LiquidityBinRouterSwapTest_$99419_$",
                          "typeString": "type(contract super LiquidityBinRouterSwapTest)"
                        }
                      },
                      "id": 97225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "660:5:134",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100191,
                      "src": "654:11:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 97226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:13:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97227,
                  "nodeType": "ExpressionStatement",
                  "src": "654:13:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97231,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "705:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 97232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "723:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97228,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "678:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 97230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "686:18:134",
                      "memberName": "setPresetOpenState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58405,
                      "src": "678:26:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_bool_$returns$__$",
                        "typeString": "function (uint16,bool) external"
                      }
                    },
                    "id": 97233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "678:50:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97234,
                  "nodeType": "ExpressionStatement",
                  "src": "678:50:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97238,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "793:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97239,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "799:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97240,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "805:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97241,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "813:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97235,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "773:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97237,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "780:12:134",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63718,
                      "src": "773:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "773:57:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97243,
                  "nodeType": "ExpressionStatement",
                  "src": "773:57:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97247,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "860:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 97248,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "869:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97249,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "875:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97250,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "883:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97244,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "840:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "847:12:134",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63718,
                      "src": "840:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "840:60:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97252,
                  "nodeType": "ExpressionStatement",
                  "src": "840:60:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97256,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99549,
                        "src": "930:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 97257,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "940:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 97258,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "949:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 97259,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "957:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 97253,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "910:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97255,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "917:12:134",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63718,
                      "src": "910:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 97260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "910:64:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 97261,
                  "nodeType": "ExpressionStatement",
                  "src": "910:64:134"
                },
                {
                  "assignments": [
                    97263
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97263,
                      "mutability": "mutable",
                      "name": "startingBalance",
                      "nameLocation": "993:15:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97366,
                      "src": "985:23:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97262,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "985:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97269,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1016:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          },
                          "typeName": {
                            "id": 97265,
                            "name": "uint112",
                            "nodeType": "ElementaryTypeName",
                            "src": "1016:7:134",
                            "typeDescriptions": {}
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_uint112_$",
                            "typeString": "type(uint112)"
                          }
                        ],
                        "id": 97264,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "1011:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 97267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1011:13:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_uint112",
                        "typeString": "type(uint112)"
                      }
                    },
                    "id": 97268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1025:3:134",
                    "memberName": "max",
                    "nodeType": "MemberAccess",
                    "src": "1011:17:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "985:43:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97273,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "1051:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 97272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1043:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97271,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1043:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1043:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97277,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1066:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1058:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97275,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1058:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1058:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97279,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97263,
                        "src": "1073:15:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97270,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1038:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1038:51:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97281,
                  "nodeType": "ExpressionStatement",
                  "src": "1038:51:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97285,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99534,
                            "src": "1112:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 97284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1104:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97283,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1104:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1104:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97289,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1127:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1119:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97287,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1119:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1119:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97291,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97263,
                        "src": "1134:15:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97282,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1099:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1099:51:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97293,
                  "nodeType": "ExpressionStatement",
                  "src": "1099:51:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97297,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99549,
                            "src": "1173:8:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          ],
                          "id": 97296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1165:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97295,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1165:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1165:17:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97301,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1192:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1184:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97299,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1184:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1184:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 97303,
                        "name": "startingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97263,
                        "src": "1199:15:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 97294,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1160:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 97304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:55:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97305,
                  "nodeType": "ExpressionStatement",
                  "src": "1160:55:134"
                },
                {
                  "assignments": [
                    97310
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97310,
                      "mutability": "mutable",
                      "name": "liquidityParameters",
                      "nameLocation": "1263:19:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97366,
                      "src": "1226:56:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters"
                      },
                      "typeName": {
                        "id": 97309,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97308,
                          "name": "ILBRouter.LiquidityParameters",
                          "nameLocations": [
                            "1226:9:134",
                            "1236:19:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69741,
                          "src": "1226:29:134"
                        },
                        "referencedDeclaration": 69741,
                        "src": "1226:29:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_storage_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97319,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97312,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "1320:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97313,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "1326:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "hexValue": "313030653138",
                        "id": 97314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1332:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100e18"
                      },
                      {
                        "id": 97315,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "1340:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "3135",
                        "id": 97316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        "value": "15"
                      },
                      {
                        "hexValue": "30",
                        "id": 97317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1352:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_15_by_1",
                          "typeString": "int_const 15"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 97311,
                      "name": "getLiquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100535,
                      "src": "1297:22:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                      }
                    },
                    "id": 97318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1297:57:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1226:128:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97323,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97310,
                        "src": "1384:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 97320,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "1364:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97322,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1371:12:134",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "1364:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:40:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97325,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:40:134"
                },
                {
                  "expression": {
                    "id": 97335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97326,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97310,
                      "src": "1415:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97328,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "1460:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 97329,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "1469:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "hexValue": "313030653138",
                          "id": 97330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1475:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          "value": "100e18"
                        },
                        {
                          "id": 97331,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "1483:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 97332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1491:2:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 97333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1495:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_rational_100000000000000000000_by_1",
                            "typeString": "int_const 100000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97327,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "1437:22:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 97334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1437:60:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1415:82:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 97336,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:82:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97343,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97310,
                        "src": "1569:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 97337,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "1507:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1514:18:134",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63952,
                        "src": "1507:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 97342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 97340,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97310,
                            "src": "1540:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 97341,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1560:7:134",
                          "memberName": "amountX",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69715,
                          "src": "1540:27:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1507:61:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:82:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97345,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:82:134"
                },
                {
                  "expression": {
                    "id": 97355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 97346,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 97310,
                      "src": "1600:19:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97348,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99549,
                          "src": "1645:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 97349,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "1655:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "hexValue": "323030653138",
                          "id": 97350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1664:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          "value": "200e18"
                        },
                        {
                          "id": 97351,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "1672:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "3135",
                          "id": 97352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1680:2:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          "value": "15"
                        },
                        {
                          "hexValue": "30",
                          "id": 97353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1684:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_rational_200000000000000000000_by_1",
                            "typeString": "int_const 200000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_15_by_1",
                            "typeString": "int_const 15"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97347,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "1622:22:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 97354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1622:64:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "1600:86:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 97356,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:86:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97363,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97310,
                        "src": "1758:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                            "typeString": "struct ILBRouter.LiquidityParameters memory"
                          }
                        ],
                        "expression": {
                          "id": 97357,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "1696:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1703:18:134",
                        "memberName": "addLiquidityNATIVE",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63952,
                        "src": "1696:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                        }
                      },
                      "id": 97362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 97360,
                            "name": "liquidityParameters",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97310,
                            "src": "1729:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                              "typeString": "struct ILBRouter.LiquidityParameters memory"
                            }
                          },
                          "id": 97361,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1749:7:134",
                          "memberName": "amountY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69717,
                          "src": "1729:27:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1696:61:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) payable external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 97364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1696:82:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 97365,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:82:134"
                }
              ]
            },
            "baseFunctions": [
              100191
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "620:5:134",
            "overrides": {
              "id": 97221,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "635:8:134"
            },
            "parameters": {
              "id": 97220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:134"
            },
            "returnParameters": {
              "id": 97222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97398,
            "nodeType": "FunctionDefinition",
            "src": "1791:273:134",
            "nodes": [],
            "body": {
              "id": 97397,
              "nodeType": "Block",
              "src": "1834:230:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97372,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "1852:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97397,
                      "src": "1844:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97371,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97370,
                          "name": "ILBPair",
                          "nameLocations": [
                            "1844:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "1844:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "1844:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97380,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97375,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99534,
                          "src": "1888:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97376,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "1894:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97377,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "1900:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97373,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "1859:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1867:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "1859:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1859:58:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97379,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1918:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "1859:65:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1844:80:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97384,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97372,
                        "src": "1957:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "hexValue": "393234353231333036343035333732393037303230303633393038313830323734393536363636",
                        "id": 97385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1963:39:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        },
                        "value": "924521306405372907020063908180274956666"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_rational_924521306405372907020063908180274956666_by_1",
                          "typeString": "int_const 9245...(31 digits omitted)...6666"
                        }
                      ],
                      "expression": {
                        "id": 97381,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "1935:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1942:14:134",
                      "memberName": "getIdFromPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63611,
                      "src": "1935:21:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint256_$returns$_t_uint24_$",
                        "typeString": "function (contract ILBPair,uint256) view external returns (uint24)"
                      }
                    },
                    "id": 97386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1935:68:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "id": 97387,
                  "nodeType": "ExpressionStatement",
                  "src": "1935:68:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97391,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97372,
                        "src": "2036:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 97394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "315f303030",
                          "id": 97392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2042:5:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97393,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "2050:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "src": "2042:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 97388,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "2014:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2021:14:134",
                      "memberName": "getPriceFromId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63629,
                      "src": "2014:21:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint24_$returns$_t_uint256_$",
                        "typeString": "function (contract ILBPair,uint24) view external returns (uint256)"
                      }
                    },
                    "id": 97395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2014:43:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97396,
                  "nodeType": "ExpressionStatement",
                  "src": "2014:43:134"
                }
              ]
            },
            "functionSelector": "061794b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_GetIdFromPrice",
            "nameLocation": "1800:19:134",
            "parameters": {
              "id": 97368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1819:2:134"
            },
            "returnParameters": {
              "id": 97369,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1834:0:134"
            },
            "scope": 99419,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97654,
            "nodeType": "FunctionDefinition",
            "src": "2070:2203:134",
            "nodes": [],
            "body": {
              "id": 97653,
              "nodeType": "Block",
              "src": "2118:2155:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97402
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97402,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "2136:8:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2128:16:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97401,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2128:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97404,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 97403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2147:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2128:24:134"
                },
                {
                  "assignments": [
                    97407
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97407,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "2171:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2163:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97406,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97405,
                          "name": "ILBPair",
                          "nameLocations": [
                            "2163:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "2163:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "2163:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97415,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97410,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99534,
                          "src": "2207:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97411,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "2213:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97412,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "2219:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97408,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "2178:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2186:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "2178:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2178:58:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97414,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2237:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "2178:65:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2163:80:134"
                },
                {
                  "assignments": [
                    null,
                    97417,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 97417,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "2264:17:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2256:25:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97416,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2256:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 97424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97420,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97407,
                        "src": "2304:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 97421,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "2310:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 97422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2320:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97418,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "2286:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2293:10:134",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "2286:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 97423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2286:39:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2253:72:134"
                },
                {
                  "assignments": [
                    97429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97429,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "2358:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2336:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 97428,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97427,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "2336:9:134",
                            "2346:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "2336:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "2336:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97434,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97431,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "2376:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97432,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2382:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 97430,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "2365:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 97433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2365:22:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2336:51:134"
                },
                {
                  "assignments": [
                    97436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97436,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "2406:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2398:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97435,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2398:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97444,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97441,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2445:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2437:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97439,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2437:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2437:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 97437,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2422:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 97438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2427:9:134",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "2422:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 97443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2422:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2398:53:134"
                },
                {
                  "assignments": [
                    97446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97446,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2471:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97653,
                      "src": "2463:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97445,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2463:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97461,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97449,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "2528:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97450,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97417,
                        "src": "2538:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97451,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "2557:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97454,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2571:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2563:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97452,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2563:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97456,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2578:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2584:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2578:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2596:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2578:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97447,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "2496:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2503:24:134",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "2496:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2496:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2462:136:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97463,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97446,
                        "src": "2618:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97464,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97417,
                        "src": "2629:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a31",
                        "id": 97465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2648:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        },
                        "value": "test_SwapExactTokensForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_341b4af653d77d3da3fa627d074e71181d8ff23070221b5761330c47068e1330",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::1\""
                        }
                      ],
                      "id": 97462,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2609:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2609:74:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97467,
                  "nodeType": "ExpressionStatement",
                  "src": "2609:74:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97473,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2725:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2717:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97471,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2717:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2717:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 97469,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "2702:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 97470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2707:9:134",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "2702:14:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 97475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2702:29:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97476,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97436,
                          "src": "2733:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97477,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97446,
                          "src": "2749:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2733:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f72546f6b656e733a3a32",
                        "id": 97479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2760:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        },
                        "value": "test_SwapExactTokensForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e242554f4f37f73802bfdaf92af42576dcb8776e55971fc362fba2a2dcdf7394",
                          "typeString": "literal_string \"test_SwapExactTokensForTokens::2\""
                        }
                      ],
                      "id": 97468,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2693:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2693:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97481,
                  "nodeType": "ExpressionStatement",
                  "src": "2693:102:134"
                },
                {
                  "expression": {
                    "id": 97490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 97482,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97417,
                          "src": "2867:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 97483,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "2864:22:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97486,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97407,
                          "src": "2907:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 97487,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97402,
                          "src": "2913:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 97488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2923:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 97484,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "2889:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2896:10:134",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63689,
                        "src": "2889:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 97489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2889:39:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "2864:64:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97491,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:64:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97497,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "3007:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3017:31:134",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69674,
                              "src": "3007:41:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 97499,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3049:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3007:50:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 97502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 97500,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97417,
                              "src": "3059:17:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 97501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3079:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3059:21:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 97503,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97417,
                            "src": "3082:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 97495,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2967:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2971:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "2967:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2967:146:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97492,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2938:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2941:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "2938:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:185:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97506,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:185:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97510,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "3165:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 97513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97511,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97417,
                          "src": "3175:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3195:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3175:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97514,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "3198:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97517,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3212:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3204:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97515,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3204:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3204:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97519,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3219:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3219:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3237:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3219:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97507,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3133:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3140:24:134",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "3133:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3133:106:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97524,
                  "nodeType": "ExpressionStatement",
                  "src": "3133:106:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97530,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "3338:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3348:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "3338:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 97532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3375:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3338:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 97536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 97533,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3385:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 97534,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3391:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3385:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 97535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3403:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3385:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 97537,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3406:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 97538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3412:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3406:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 97528,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3315:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3319:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3315:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3315:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97525,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3286:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3289:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "3286:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3286:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97541,
                  "nodeType": "ExpressionStatement",
                  "src": "3286:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97545,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "3474:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97546,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97417,
                        "src": "3484:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97547,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "3503:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97550,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3517:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3509:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97548,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3509:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3509:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97552,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3524:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3530:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3524:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3542:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3524:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97542,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3442:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3449:24:134",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "3442:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3442:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97557,
                  "nodeType": "ExpressionStatement",
                  "src": "3442:102:134"
                },
                {
                  "expression": {
                    "id": 97567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 97558,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "3606:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 97560,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3611:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "3606:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 97565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3636:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3623:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 97562,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 97561,
                              "name": "IERC20",
                              "nameLocations": [
                                "3627:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "3627:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "3627:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 97563,
                          "nodeType": "ArrayTypeName",
                          "src": "3627:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 97566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3623:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3606:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 97568,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97574,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "3687:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3697:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "3687:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 97576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3723:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "3687:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 97572,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3664:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3668:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "3664:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3664:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97569,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3648:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "3648:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3648:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97579,
                  "nodeType": "ExpressionStatement",
                  "src": "3648:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97583,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "3775:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97584,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97417,
                        "src": "3785:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97585,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "3804:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97588,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3818:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3810:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97586,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3810:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3810:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97590,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3825:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3831:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3825:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3825:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97580,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3743:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3750:24:134",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "3743:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97595,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:102:134"
                },
                {
                  "expression": {
                    "id": 97605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 97596,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "3900:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 97598,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3905:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "3900:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 97603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3930:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 97602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3917:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 97600,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 97599,
                              "name": "IERC20",
                              "nameLocations": [
                                "3921:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "3921:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "3921:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 97601,
                          "nodeType": "ArrayTypeName",
                          "src": "3921:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 97604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3917:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "3900:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 97606,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:32:134"
                },
                {
                  "expression": {
                    "id": 97613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 97607,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97429,
                          "src": "3942:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 97610,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3947:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "3942:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 97611,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 97609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3957:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3942:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97612,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "3962:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "3942:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 97614,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:24:134"
                },
                {
                  "expression": {
                    "id": 97621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 97615,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97429,
                          "src": "3976:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 97618,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3981:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "3976:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 97619,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 97617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3991:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3976:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97620,
                      "name": "taxToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99549,
                      "src": "3996:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                        "typeString": "contract ERC20TransferTaxMock"
                      }
                    },
                    "src": "3976:28:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 97622,
                  "nodeType": "ExpressionStatement",
                  "src": "3976:28:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97628,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "4066:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97629,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4076:24:134",
                              "memberName": "LBRouter__PairNotCreated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69598,
                              "src": "4066:34:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                "typeString": "function (address,address,uint256) pure"
                              }
                            },
                            "id": 97630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4101:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4066:43:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 97631,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99534,
                            "src": "4111:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          {
                            "id": 97632,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99549,
                            "src": "4117:8:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          {
                            "id": 97633,
                            "name": "DEFAULT_BIN_STEP",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99473,
                            "src": "4127:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            },
                            {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                              "typeString": "contract ERC20TransferTaxMock"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "expression": {
                            "id": 97626,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4043:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4047:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4043:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4043:101:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97623,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4014:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4017:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "4014:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4014:140:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97636,
                  "nodeType": "ExpressionStatement",
                  "src": "4014:140:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97640,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97402,
                        "src": "4196:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97641,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97417,
                        "src": "4206:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97642,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97429,
                        "src": "4225:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97645,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "4239:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4231:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97643,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4231:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4231:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97647,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4246:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4252:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4246:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4264:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4246:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97637,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "4164:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4171:24:134",
                      "memberName": "swapExactTokensForTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64220,
                      "src": "4164:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4164:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97652,
                  "nodeType": "ExpressionStatement",
                  "src": "4164:102:134"
                }
              ]
            },
            "functionSelector": "72b01c7a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForTokens",
            "nameLocation": "2079:29:134",
            "parameters": {
              "id": 97399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2108:2:134"
            },
            "returnParameters": {
              "id": 97400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2118:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 97905,
            "nodeType": "FunctionDefinition",
            "src": "4279:2180:134",
            "nodes": [],
            "body": {
              "id": 97904,
              "nodeType": "Block",
              "src": "4327:2132:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97658,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4345:8:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4337:16:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97657,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4337:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97660,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 97659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4356:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4337:24:134"
                },
                {
                  "assignments": [
                    97663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97663,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "4380:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4372:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97662,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97661,
                          "name": "ILBPair",
                          "nameLocations": [
                            "4372:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "4372:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "4372:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97671,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97666,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "4416:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 97667,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "4425:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97668,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "4431:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97664,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "4387:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4395:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "4387:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4387:61:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97670,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4449:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "4387:68:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4372:83:134"
                },
                {
                  "assignments": [
                    null,
                    97673,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 97673,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "4476:17:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4468:25:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97672,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4468:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 97680,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97676,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97663,
                        "src": "4516:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 97677,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "4522:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 97678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4532:5:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97674,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "4498:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4505:10:134",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "4498:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 97679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4498:40:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4465:73:134"
                },
                {
                  "assignments": [
                    97685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97685,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "4571:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4549:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 97684,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97683,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "4549:9:134",
                            "4559:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "4549:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "4549:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97687,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "4589:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 97688,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "4595:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 97686,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "4578:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 97689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4578:25:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4549:54:134"
                },
                {
                  "assignments": [
                    97692
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97692,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "4622:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4614:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97691,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4614:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97698,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97695,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "4646:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 97694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4638:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 97693,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4638:7:134",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 97696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4638:13:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 97697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4652:7:134",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "4638:21:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4614:45:134"
                },
                {
                  "assignments": [
                    97700
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97700,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4679:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 97904,
                      "src": "4671:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97699,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4671:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97718,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97703,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "4737:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97704,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97673,
                        "src": "4747:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97705,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "4766:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97710,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4788:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4780:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97708,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4780:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4780:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4772:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 97706,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4772:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4772:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97713,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4796:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4802:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4796:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4814:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4796:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97701,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "4692:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4699:24:134",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64325,
                      "src": "4692:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:133:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4670:155:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97720,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97700,
                        "src": "4845:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97721,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97673,
                        "src": "4856:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a31",
                        "id": 97722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4875:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76ec89b2039ca4ee6f7ef086fd7376c761717d0e8bb63c18ff924a99d4e48441",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::1\""
                        }
                      ],
                      "id": 97719,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4836:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4836:74:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97724,
                  "nodeType": "ExpressionStatement",
                  "src": "4836:74:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 97728,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4937:4:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 97727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4929:7:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 97726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4929:7:134",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 97729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4929:13:134",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 97730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4943:7:134",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4929:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97731,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97692,
                          "src": "4952:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97732,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97700,
                          "src": "4968:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4952:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e41544956453a3a32",
                        "id": 97734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4979:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92a9f402a9dcd74a32b05a4b56fbaff4d2b48886c21a425a2972be43771a46df",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVE::2\""
                        }
                      ],
                      "id": 97725,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4920:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4920:94:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97736,
                  "nodeType": "ExpressionStatement",
                  "src": "4920:94:134"
                },
                {
                  "expression": {
                    "id": 97745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 97737,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97673,
                          "src": "5086:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 97738,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "5083:22:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97741,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97663,
                          "src": "5126:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 97742,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97658,
                          "src": "5132:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 97743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5142:5:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 97739,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "5108:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5115:10:134",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63689,
                        "src": "5108:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 97744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5108:40:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "5083:65:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97746,
                  "nodeType": "ExpressionStatement",
                  "src": "5083:65:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97752,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "5227:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5237:31:134",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69674,
                              "src": "5227:41:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 97754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5269:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5227:50:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 97757,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 97755,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97673,
                              "src": "5279:17:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 97756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5299:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5279:21:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 97758,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97673,
                            "src": "5302:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 97750,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5187:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5191:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5187:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5187:146:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97747,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5158:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5161:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "5158:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:185:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97761,
                  "nodeType": "ExpressionStatement",
                  "src": "5158:185:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97765,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "5398:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 97768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97766,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97673,
                          "src": "5408:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5428:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5408:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97769,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "5431:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97774,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5453:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5445:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97772,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5445:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5445:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5437:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 97770,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5437:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5437:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97777,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5461:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5467:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5461:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97779,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5479:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5461:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97762,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "5353:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5360:24:134",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64325,
                      "src": "5353:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:137:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97782,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:137:134"
                },
                {
                  "expression": {
                    "id": 97789,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 97783,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97685,
                          "src": "5546:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 97786,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5551:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "5546:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 97787,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 97785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5561:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5546:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97788,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "5566:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "5546:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 97790,
                  "nodeType": "ExpressionStatement",
                  "src": "5546:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97796,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "5619:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5629:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "5619:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 97798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5656:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5619:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 97801,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "5674:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 97800,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5666:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97799,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5666:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5666:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 97794,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5596:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5600:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5596:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5596:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97791,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5580:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5583:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "5580:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97805,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97809,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "5736:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 97812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97810,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97673,
                          "src": "5746:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5766:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5746:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97813,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "5769:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97818,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "5791:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5783:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97816,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5783:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5783:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5775:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 97814,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5775:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5775:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97821,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5799:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5805:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5799:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5817:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "5799:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97806,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "5691:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5698:24:134",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64325,
                      "src": "5691:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5691:137:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97826,
                  "nodeType": "ExpressionStatement",
                  "src": "5691:137:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97832,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "5927:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5937:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "5927:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 97834,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5964:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "5927:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 97838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 97835,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5974:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 97836,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5980:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5974:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 97837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5992:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5974:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 97839,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "5995:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 97840,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6001:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "5995:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 97830,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5904:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5908:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "5904:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5904:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5875:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5878:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "5875:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5875:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97843,
                  "nodeType": "ExpressionStatement",
                  "src": "5875:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97847,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "6063:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97848,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97673,
                        "src": "6073:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97849,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "6092:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97854,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6114:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97853,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6106:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97852,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6106:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6106:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6098:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 97850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6098:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6098:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97857,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6122:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6128:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6122:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6140:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6122:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97844,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "6031:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6038:24:134",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64325,
                      "src": "6031:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6031:111:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97862,
                  "nodeType": "ExpressionStatement",
                  "src": "6031:111:134"
                },
                {
                  "expression": {
                    "id": 97872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 97863,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "6204:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 97865,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6209:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "6204:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 97870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6234:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 97869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "6221:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 97867,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 97866,
                              "name": "IERC20",
                              "nameLocations": [
                                "6225:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "6225:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "6225:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 97868,
                          "nodeType": "ArrayTypeName",
                          "src": "6225:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 97871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6221:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "6204:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 97873,
                  "nodeType": "ExpressionStatement",
                  "src": "6204:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 97879,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "6285:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 97880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6295:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "6285:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 97881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6321:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "6285:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 97877,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6262:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 97878,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6266:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "6262:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 97882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6262:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 97874,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6246:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 97876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6249:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "6246:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 97883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6246:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97884,
                  "nodeType": "ExpressionStatement",
                  "src": "6246:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97888,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97658,
                        "src": "6373:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97889,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97673,
                        "src": "6383:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97890,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97685,
                        "src": "6402:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97895,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "6424:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6416:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6416:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6416:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 97892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6408:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 97891,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6408:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6408:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97898,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6432:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6438:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6432:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6450:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6432:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 97885,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "6341:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6348:24:134",
                      "memberName": "swapExactTokensForNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64325,
                      "src": "6341:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 97902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6341:111:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 97903,
                  "nodeType": "ExpressionStatement",
                  "src": "6341:111:134"
                }
              ]
            },
            "functionSelector": "4415cf9d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVE",
            "nameLocation": "4288:29:134",
            "parameters": {
              "id": 97655,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:2:134"
            },
            "returnParameters": {
              "id": 97656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4327:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98148,
            "nodeType": "FunctionDefinition",
            "src": "6465:2158:134",
            "nodes": [],
            "body": {
              "id": 98147,
              "nodeType": "Block",
              "src": "6513:2110:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    97909
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97909,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6531:8:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6523:16:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97908,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6523:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97911,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 97910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6542:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6523:24:134"
                },
                {
                  "assignments": [
                    97914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97914,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "6566:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6558:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 97913,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97912,
                          "name": "ILBPair",
                          "nameLocations": [
                            "6558:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "6558:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "6558:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97922,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 97917,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "6602:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 97918,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "6611:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 97919,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "6617:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 97915,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "6573:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 97916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6581:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "6573:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 97920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6573:61:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 97921,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6635:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "6573:68:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6558:83:134"
                },
                {
                  "assignments": [
                    null,
                    97924,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 97924,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "6662:17:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6654:25:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 97923,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6654:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 97931,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97927,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97914,
                        "src": "6702:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 97928,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97909,
                        "src": "6708:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 97929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6718:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 97925,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "6684:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 97926,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6691:10:134",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "6684:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 97930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6684:39:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6651:72:134"
                },
                {
                  "assignments": [
                    97936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97936,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "6756:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6734:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 97935,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 97934,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "6734:9:134",
                            "6744:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "6734:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "6734:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97941,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97938,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "6774:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 97939,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "6783:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 97937,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "6763:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 97940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6763:25:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6734:54:134"
                },
                {
                  "assignments": [
                    97943
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97943,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "6807:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6799:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97942,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6799:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97951,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 97948,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6846:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6838:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97946,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6838:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6838:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 97944,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "6823:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 97945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6828:9:134",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "6823:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 97950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6823:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6799:53:134"
                },
                {
                  "assignments": [
                    97953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 97953,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "6872:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98147,
                      "src": "6864:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 97952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6864:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 97969,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 97958,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97924,
                        "src": "6947:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 97959,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "6966:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 97962,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6980:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 97961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6972:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 97960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6972:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 97963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6972:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 97964,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6987:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 97965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6993:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6987:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 97966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7005:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "6987:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 97954,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "6885:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6892:24:134",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64411,
                        "src": "6885:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 97957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 97956,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "6924:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "6885:48:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 97968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6885:131:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6863:153:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97971,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97953,
                        "src": "7036:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 97972,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97924,
                        "src": "7047:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a31",
                        "id": 97973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7066:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0855b07a5c57a21bcaf30beb42e1a81528dabd7be3356edf688b10e64584fc0b",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::1\""
                        }
                      ],
                      "id": 97970,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7027:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:74:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97975,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:74:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 97981,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "7143:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 97980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7135:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 97979,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7135:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 97982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7135:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 97977,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "7120:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 97978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7125:9:134",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "7120:14:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 97983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7120:29:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 97986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 97984,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97943,
                          "src": "7151:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 97985,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97953,
                          "src": "7167:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7151:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e733a3a32",
                        "id": 97987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7178:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2934bdbe7f91df736462600f4a7695cd3723d165e259f09f1da77bf2936a3c1d",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokens::2\""
                        }
                      ],
                      "id": 97976,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7111:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 97988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7111:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97989,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:102:134"
                },
                {
                  "expression": {
                    "id": 97998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "id": 97990,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97924,
                          "src": "7227:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null
                      ],
                      "id": 97991,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "7224:22:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint128_$__$",
                        "typeString": "tuple(,uint128,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 97994,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97914,
                          "src": "7267:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 97995,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "7273:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 97996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7283:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 97992,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "7249:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 97993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7256:10:134",
                        "memberName": "getSwapOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63689,
                        "src": "7249:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 97997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7249:39:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "7224:64:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 97999,
                  "nodeType": "ExpressionStatement",
                  "src": "7224:64:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98005,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "7426:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98006,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7436:31:134",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69674,
                              "src": "7426:41:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7468:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7426:50:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98008,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97924,
                              "src": "7478:17:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7498:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7478:21:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98011,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 97924,
                            "src": "7501:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98003,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7386:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7390:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7386:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7386:146:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98000,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7357:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7360:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "7357:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:185:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98014,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:185:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98020,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97924,
                          "src": "7614:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7634:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7614:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98023,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "7637:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98026,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7651:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7643:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98024,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7643:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7643:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98028,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7658:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7664:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7658:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7676:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7658:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98015,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "7552:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7559:24:134",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64411,
                        "src": "7552:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98018,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "7591:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7552:48:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:135:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98033,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:135:134"
                },
                {
                  "expression": {
                    "id": 98040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98034,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97936,
                          "src": "7742:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98037,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7747:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "7742:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98038,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 98036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7757:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7742:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98039,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "7762:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "7742:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98041,
                  "nodeType": "ExpressionStatement",
                  "src": "7742:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98047,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "7815:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7825:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "7815:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7852:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "7815:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98052,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "7870:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98051,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7862:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98050,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7862:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7862:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98045,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7792:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "7796:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "7792:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7792:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98042,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "7776:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7779:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "7776:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7776:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98056,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98062,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97924,
                        "src": "7936:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98063,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "7955:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98066,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7969:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98065,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7961:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98064,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7961:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7961:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98068,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7976:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7982:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7976:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7994:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "7976:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98057,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "7887:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7894:24:134",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64411,
                        "src": "7887:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98060,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "7926:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "7887:48:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7887:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98073,
                  "nodeType": "ExpressionStatement",
                  "src": "7887:109:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98079,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "8095:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98080,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8105:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "8095:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98081,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8132:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8095:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98082,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "8142:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8148:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "8142:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8160:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "8142:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98086,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "8163:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8169:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "8163:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98077,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8072:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8076:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8072:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8072:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98074,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8043:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8046:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "8043:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8043:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98090,
                  "nodeType": "ExpressionStatement",
                  "src": "8043:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98096,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97924,
                        "src": "8248:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98097,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "8267:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98100,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8281:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8273:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8273:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8273:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98102,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8288:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8294:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8288:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8306:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8288:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98091,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "8199:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8206:24:134",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64411,
                        "src": "8199:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98094,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "8238:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8199:48:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8199:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98107,
                  "nodeType": "ExpressionStatement",
                  "src": "8199:109:134"
                },
                {
                  "expression": {
                    "id": 98117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98108,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "8370:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98110,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8375:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "8370:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8400:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8387:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98112,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98111,
                              "name": "IERC20",
                              "nameLocations": [
                                "8391:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "8391:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "8391:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98113,
                          "nodeType": "ArrayTypeName",
                          "src": "8391:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8387:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "8370:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98118,
                  "nodeType": "ExpressionStatement",
                  "src": "8370:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98124,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "8451:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98125,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8461:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "8451:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8487:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8451:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98122,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8428:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "8432:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8428:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8428:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98119,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8412:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8415:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "8412:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8412:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98129,
                  "nodeType": "ExpressionStatement",
                  "src": "8412:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98135,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97924,
                        "src": "8556:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98136,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97936,
                        "src": "8575:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98139,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8589:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8581:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8581:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8581:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98141,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8596:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8602:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8596:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8614:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "8596:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98130,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "8507:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8514:24:134",
                        "memberName": "swapExactNATIVEForTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64411,
                        "src": "8507:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 98134,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98133,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 97909,
                          "src": "8546:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "8507:48:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 98145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8507:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98146,
                  "nodeType": "ExpressionStatement",
                  "src": "8507:109:134"
                }
              ]
            },
            "functionSelector": "38a637ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokens",
            "nameLocation": "6474:29:134",
            "parameters": {
              "id": 97906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6503:2:134"
            },
            "returnParameters": {
              "id": 97907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6513:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98354,
            "nodeType": "FunctionDefinition",
            "src": "8629:1774:134",
            "nodes": [],
            "body": {
              "id": 98353,
              "nodeType": "Block",
              "src": "8677:1726:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98152,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "8695:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "8687:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98151,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8687:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98154,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8707:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8687:25:134"
                },
                {
                  "assignments": [
                    98157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98157,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "8731:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "8723:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98156,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98155,
                          "name": "ILBPair",
                          "nameLocations": [
                            "8723:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "8723:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "8723:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98165,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98160,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99534,
                          "src": "8767:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98161,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "8773:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98162,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "8779:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98158,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "8738:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8746:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "8738:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8738:58:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98164,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8797:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "8738:65:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8723:80:134"
                },
                {
                  "assignments": [
                    98167,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98167,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "8822:16:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "8814:24:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98166,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8814:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 98174,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98170,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98157,
                        "src": "8861:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98171,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "8867:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 98172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8878:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98168,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "8844:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8851:9:134",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63659,
                      "src": "8844:16:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8844:39:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8813:70:134"
                },
                {
                  "assignments": [
                    98179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98179,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "8916:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "8894:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98178,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98177,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "8894:9:134",
                            "8904:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "8894:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "8894:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98184,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98181,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "8934:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 98182,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "8940:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 98180,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "8923:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8923:22:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8894:51:134"
                },
                {
                  "assignments": [
                    98186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98186,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "8964:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "8956:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98185,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8956:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98194,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98191,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9003:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8995:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98189,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8995:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8995:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98187,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "8980:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 98188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8985:9:134",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "8980:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8980:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8956:53:134"
                },
                {
                  "assignments": [
                    98199
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98199,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "9038:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98353,
                      "src": "9021:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 98197,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9021:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98198,
                        "nodeType": "ArrayTypeName",
                        "src": "9021:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98214,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98202,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "9095:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98203,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98167,
                        "src": "9106:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98204,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98179,
                        "src": "9124:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98207,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9138:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9130:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9130:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9130:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98209,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9145:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9151:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9145:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9163:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9145:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98200,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "9063:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9070:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "9063:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9063:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9020:145:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 98216,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98199,
                          "src": "9185:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 98218,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 98217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9195:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9185:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98219,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98167,
                        "src": "9199:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a31",
                        "id": 98220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9217:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        },
                        "value": "test_SwapTokensForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8d2cbc7e1cbe219cd41936fcb0a3ea1b928b702b18dc377bd2f14139c99a295d",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::1\""
                        }
                      ],
                      "id": 98215,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9176:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9176:76:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98222,
                  "nodeType": "ExpressionStatement",
                  "src": "9176:76:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98228,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9294:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9286:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98226,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9286:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98229,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9286:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98224,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99534,
                            "src": "9271:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 98225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9276:9:134",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "9271:14:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9271:29:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98231,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98186,
                          "src": "9302:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 98232,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98199,
                            "src": "9318:9:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 98234,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 98233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9328:1:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9318:12:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9302:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f724578616374546f6b656e733a3a32",
                        "id": 98236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9332:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        },
                        "value": "test_SwapTokensForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2be7f0050d4921e6290d1b50f9123226b3ee11edcc29116e8cfe3b0301bd635f",
                          "typeString": "literal_string \"test_SwapTokensForExactTokens::2\""
                        }
                      ],
                      "id": 98223,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9262:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9262:105:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98238,
                  "nodeType": "ExpressionStatement",
                  "src": "9262:105:134"
                },
                {
                  "expression": {
                    "id": 98247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 98239,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98167,
                          "src": "9379:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 98240,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "9378:20:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98243,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98157,
                          "src": "9418:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98244,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98152,
                          "src": "9424:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 98245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9435:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98241,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "9401:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9408:9:134",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63659,
                        "src": "9401:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9401:39:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "9378:62:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98248,
                  "nodeType": "ExpressionStatement",
                  "src": "9378:62:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98254,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "9562:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9572:29:134",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69680,
                              "src": "9562:39:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9602:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9562:48:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98257,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98167,
                              "src": "9612:16:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9631:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9612:20:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98260,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98167,
                            "src": "9634:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98252,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9522:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9526:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9522:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9522:142:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98249,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9493:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9496:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "9493:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9493:181:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98263,
                  "nodeType": "ExpressionStatement",
                  "src": "9493:181:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98267,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "9716:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98268,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98167,
                          "src": "9727:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9746:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9727:20:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98271,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98179,
                        "src": "9749:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98274,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "9763:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9755:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98272,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9755:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9755:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98276,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9770:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9776:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9770:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9788:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9770:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98264,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "9684:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9691:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "9684:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9684:106:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98281,
                  "nodeType": "ExpressionStatement",
                  "src": "9684:106:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98287,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "9889:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9899:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "9889:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9926:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9889:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98290,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9936:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98291,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9942:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9936:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9954:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9936:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98294,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "9957:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9963:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "9957:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98285,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9866:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "9870:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9866:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9866:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98282,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9837:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9840:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "9837:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9837:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98298,
                  "nodeType": "ExpressionStatement",
                  "src": "9837:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98302,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "10025:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98303,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98167,
                        "src": "10036:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98304,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98179,
                        "src": "10054:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98307,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10068:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10060:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98305,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10060:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10060:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98309,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10075:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10081:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10075:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10093:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10075:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98299,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "9993:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10000:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "9993:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9993:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98314,
                  "nodeType": "ExpressionStatement",
                  "src": "9993:102:134"
                },
                {
                  "expression": {
                    "id": 98324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98315,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98179,
                        "src": "10157:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98317,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "10162:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "10157:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10187:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "10174:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98319,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98318,
                              "name": "IERC20",
                              "nameLocations": [
                                "10178:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "10178:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "10178:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98320,
                          "nodeType": "ArrayTypeName",
                          "src": "10178:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98323,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10174:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "10157:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98325,
                  "nodeType": "ExpressionStatement",
                  "src": "10157:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98331,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "10238:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10248:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "10238:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10274:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "10238:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98329,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "10215:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "10219:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "10215:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10215:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98326,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10199:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10202:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "10199:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10199:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98336,
                  "nodeType": "ExpressionStatement",
                  "src": "10199:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98340,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98152,
                        "src": "10326:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98341,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98167,
                        "src": "10337:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98342,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98179,
                        "src": "10355:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10369:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10361:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10361:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10361:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98347,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10376:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10382:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10376:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10394:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10376:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98337,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "10294:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10301:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "10294:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10294:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98352,
                  "nodeType": "ExpressionStatement",
                  "src": "10294:102:134"
                }
              ]
            },
            "functionSelector": "7594f3a1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactTokens",
            "nameLocation": "8638:29:134",
            "parameters": {
              "id": 98149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8667:2:134"
            },
            "returnParameters": {
              "id": 98150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8677:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98605,
            "nodeType": "FunctionDefinition",
            "src": "10409:2113:134",
            "nodes": [],
            "body": {
              "id": 98604,
              "nodeType": "Block",
              "src": "10457:2065:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98358,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "10475:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10467:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98357,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10467:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98360,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10487:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10467:25:134"
                },
                {
                  "assignments": [
                    98363
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98363,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "10511:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10503:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98362,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98361,
                          "name": "ILBPair",
                          "nameLocations": [
                            "10503:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "10503:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "10503:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98371,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98366,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "10547:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98367,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "10556:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98368,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "10562:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98364,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "10518:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10526:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "10518:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10518:61:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98370,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10580:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "10518:68:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10503:83:134"
                },
                {
                  "assignments": [
                    98373,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98373,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "10605:16:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10597:24:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98372,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10597:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 98380,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98376,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98363,
                        "src": "10644:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98377,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "10650:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 98378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10661:5:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98374,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "10627:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10634:9:134",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63659,
                      "src": "10627:16:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10627:40:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10596:71:134"
                },
                {
                  "assignments": [
                    98385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98385,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "10700:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10678:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98384,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98383,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "10678:9:134",
                            "10688:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "10678:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "10678:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98390,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98387,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "10718:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 98388,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "10724:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 98386,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "10707:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10707:25:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10678:54:134"
                },
                {
                  "assignments": [
                    98392
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98392,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "10751:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10743:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98391,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10743:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98400,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 98397,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "10790:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10782:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98395,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10782:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10782:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 98393,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "10767:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 98394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10772:9:134",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "10767:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 98399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10767:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10743:53:134"
                },
                {
                  "assignments": [
                    98405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98405,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "10825:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98604,
                      "src": "10808:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 98403,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10808:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98404,
                        "nodeType": "ArrayTypeName",
                        "src": "10808:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98423,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98408,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "10883:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98409,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98373,
                        "src": "10894:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98410,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "10912:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98415,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "10934:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10926:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98413,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10926:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98416,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10926:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10918:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98411,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10918:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10918:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98418,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10942:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10948:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10942:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10960:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10942:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98406,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "10838:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10845:24:134",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64644,
                      "src": "10838:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10838:133:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10807:164:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 98425,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98405,
                          "src": "10991:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 98427,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 98426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11001:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10991:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98428,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98373,
                        "src": "11005:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a31",
                        "id": 98429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11023:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_03d8772d939e8c8da5e84bb7f5feb71478144d37bf0af5cb40012616251c2c81",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::1\""
                        }
                      ],
                      "id": 98424,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10982:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10982:76:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98431,
                  "nodeType": "ExpressionStatement",
                  "src": "10982:76:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98437,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11100:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11092:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98435,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11092:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11092:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98433,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "11077:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 98434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11082:9:134",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "11077:14:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 98439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11077:29:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98440,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98392,
                          "src": "11108:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 98441,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98405,
                            "src": "11124:9:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 98443,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 98442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11134:1:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11124:12:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11108:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f53776170546f6b656e73466f7245786163744e41544956453a3a32",
                        "id": 98445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11138:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        },
                        "value": "test_SwapTokensForExactNATIVE::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_17c60002ce73f85af4ab2b6ddc1a5113938636e76ade9438a945228f743fc8cc",
                          "typeString": "literal_string \"test_SwapTokensForExactNATIVE::2\""
                        }
                      ],
                      "id": 98432,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11068:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11068:105:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98447,
                  "nodeType": "ExpressionStatement",
                  "src": "11068:105:134"
                },
                {
                  "expression": {
                    "id": 98456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 98448,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98373,
                          "src": "11185:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 98449,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "11184:20:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98452,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98363,
                          "src": "11224:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98453,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98358,
                          "src": "11230:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 98454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11241:5:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98450,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "11207:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11214:9:134",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63659,
                        "src": "11207:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11207:40:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "11184:63:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98457,
                  "nodeType": "ExpressionStatement",
                  "src": "11184:63:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98463,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "11369:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11379:29:134",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69680,
                              "src": "11369:39:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11409:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11369:48:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98466,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98373,
                              "src": "11419:16:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "11419:20:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98469,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98373,
                            "src": "11441:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98461,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11329:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11333:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11329:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11329:142:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98458,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11300:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11303:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "11300:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11300:181:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98472,
                  "nodeType": "ExpressionStatement",
                  "src": "11300:181:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98476,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "11523:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98477,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98373,
                          "src": "11534:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11553:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11534:20:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98480,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "11556:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98483,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "11570:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11562:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98481,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11562:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11562:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98485,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11577:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11583:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11577:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11595:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11577:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98473,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "11491:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11498:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "11491:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11491:106:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98490,
                  "nodeType": "ExpressionStatement",
                  "src": "11491:106:134"
                },
                {
                  "expression": {
                    "id": 98497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98491,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98385,
                          "src": "11653:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98494,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11658:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "11653:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98495,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 98493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11668:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11653:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98496,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "11673:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "11653:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98498,
                  "nodeType": "ExpressionStatement",
                  "src": "11653:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98504,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "11726:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98505,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11736:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "11726:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11763:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11726:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98509,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "11781:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11773:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98507,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11773:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11773:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98502,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11703:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11707:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11703:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11703:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98499,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11687:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11690:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "11687:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11687:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98513,
                  "nodeType": "ExpressionStatement",
                  "src": "11687:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98517,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "11830:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98518,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98373,
                        "src": "11841:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98519,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "11859:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98524,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11881:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11873:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98522,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11873:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11873:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11865:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98520,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11865:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11865:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98527,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "11889:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11895:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11889:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98529,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11907:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "11889:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98514,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "11798:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11805:24:134",
                      "memberName": "swapTokensForExactNATIVE",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64644,
                      "src": "11798:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11798:111:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98532,
                  "nodeType": "ExpressionStatement",
                  "src": "11798:111:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98538,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "12008:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12018:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "12008:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12045:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12008:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98541,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "12055:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98542,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12061:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "12055:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "12055:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98545,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "12076:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12082:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "12076:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98536,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11985:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "11989:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11985:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11985:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98533,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11956:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11959:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "11956:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11956:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98549,
                  "nodeType": "ExpressionStatement",
                  "src": "11956:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98553,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "12144:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98554,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98373,
                        "src": "12155:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98555,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "12173:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98558,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12187:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12179:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98556,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12179:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12179:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98560,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12194:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12200:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12194:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12212:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12194:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98550,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "12112:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12119:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "12112:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12112:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98565,
                  "nodeType": "ExpressionStatement",
                  "src": "12112:102:134"
                },
                {
                  "expression": {
                    "id": 98575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98566,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "12276:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98568,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12281:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "12276:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12306:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "12293:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98570,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98569,
                              "name": "IERC20",
                              "nameLocations": [
                                "12297:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "12297:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "12297:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98571,
                          "nodeType": "ArrayTypeName",
                          "src": "12297:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12293:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "12276:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98576,
                  "nodeType": "ExpressionStatement",
                  "src": "12276:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98582,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "12357:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "12367:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "12357:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "12393:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "12357:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98580,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12334:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12338:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "12334:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12334:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98577,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "12318:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12321:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "12318:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12318:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98587,
                  "nodeType": "ExpressionStatement",
                  "src": "12318:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98591,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98358,
                        "src": "12445:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98592,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98373,
                        "src": "12456:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98593,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98385,
                        "src": "12474:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98596,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "12488:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12480:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98594,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12480:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12480:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98598,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12495:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12501:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12495:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12513:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12495:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98588,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "12413:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12420:24:134",
                      "memberName": "swapTokensForExactTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64512,
                      "src": "12413:31:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address,uint256) external returns (uint256[] memory)"
                      }
                    },
                    "id": 98602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12413:102:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98603,
                  "nodeType": "ExpressionStatement",
                  "src": "12413:102:134"
                }
              ]
            },
            "functionSelector": "6d090840",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapTokensForExactNATIVE",
            "nameLocation": "10418:29:134",
            "parameters": {
              "id": 98355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10447:2:134"
            },
            "returnParameters": {
              "id": 98356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10457:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 98853,
            "nodeType": "FunctionDefinition",
            "src": "12528:2204:134",
            "nodes": [],
            "body": {
              "id": 98852,
              "nodeType": "Block",
              "src": "12576:2156:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98609,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "12594:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12586:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98608,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12586:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98611,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12606:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12586:25:134"
                },
                {
                  "assignments": [
                    98614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98614,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "12630:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12622:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98613,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98612,
                          "name": "ILBPair",
                          "nameLocations": [
                            "12622:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "12622:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "12622:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98622,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98617,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "12666:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98618,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "12675:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 98619,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "12681:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98615,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "12637:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12645:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "12637:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12637:61:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98621,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12699:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "12637:68:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12622:83:134"
                },
                {
                  "assignments": [
                    98624,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98624,
                      "mutability": "mutable",
                      "name": "amountInExpected",
                      "nameLocation": "12724:16:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12716:24:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98623,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12716:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 98631,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98627,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98614,
                        "src": "12763:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98628,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "12769:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 98629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12780:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98625,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "12746:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12753:9:134",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63659,
                      "src": "12746:16:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12746:39:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12715:70:134"
                },
                {
                  "assignments": [
                    98636
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98636,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "12818:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12796:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98635,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98634,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "12796:9:134",
                            "12806:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "12796:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "12796:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98641,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98638,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "12836:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 98639,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "12845:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      ],
                      "id": 98637,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "12825:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12825:25:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12796:54:134"
                },
                {
                  "assignments": [
                    98643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98643,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "12869:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12861:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98642,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12861:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98649,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98646,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "12893:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 98645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "12885:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 98644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12885:7:134",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12885:13:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "12899:7:134",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "12885:21:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12861:45:134"
                },
                {
                  "assignments": [
                    98654
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98654,
                      "mutability": "mutable",
                      "name": "amountsIn",
                      "nameLocation": "12989:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 98852,
                      "src": "12972:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 98652,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12972:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 98653,
                        "nodeType": "ArrayTypeName",
                        "src": "12972:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98672,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98661,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "13078:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98662,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "13089:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98665,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13103:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13095:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13095:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13095:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98667,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13110:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13116:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13110:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13128:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13110:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98655,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "13002:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13009:24:134",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64775,
                        "src": "13002:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 98660,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 98659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98657,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98624,
                            "src": "13041:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 98658,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13060:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "13041:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13002:62:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 98671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13002:137:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12971:168:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 98674,
                          "name": "amountsIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98654,
                          "src": "13159:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 98676,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 98675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13169:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13159:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 98677,
                        "name": "amountInExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98624,
                        "src": "13173:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a31",
                        "id": 98678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13191:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f1b128207b153a66f074150e97799b897023666d9573f5bdaf32fc510606867",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::1\""
                        }
                      ],
                      "id": 98673,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13150:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13150:76:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98680,
                  "nodeType": "ExpressionStatement",
                  "src": "13150:76:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 98684,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "13253:4:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 98683,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13245:7:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 98682,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13245:7:134",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13245:13:134",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 98686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13259:7:134",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "13245:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98691,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98687,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98643,
                          "src": "13268:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 98688,
                            "name": "amountsIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98654,
                            "src": "13284:9:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 98690,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 98689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13294:1:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13284:12:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13268:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704e4154495645466f724578616374546f6b656e733a3a32",
                        "id": 98692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13298:34:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        },
                        "value": "test_SwapNATIVEForExactTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de9385dda81ef3af975b1e30763a0c27bc83aa9b2f6085a15797a64183add7c4",
                          "typeString": "literal_string \"test_SwapNATIVEForExactTokens::2\""
                        }
                      ],
                      "id": 98681,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "13236:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13236:97:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98694,
                  "nodeType": "ExpressionStatement",
                  "src": "13236:97:134"
                },
                {
                  "expression": {
                    "id": 98703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 98695,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98624,
                          "src": "13345:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        null,
                        null
                      ],
                      "id": 98696,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "13344:20:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$__$__$",
                        "typeString": "tuple(uint128,,)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 98699,
                          "name": "pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98614,
                          "src": "13384:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          }
                        },
                        {
                          "id": 98700,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98609,
                          "src": "13390:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 98701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13401:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ILBPair_$69569",
                            "typeString": "contract ILBPair"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "id": 98697,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "13367:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13374:9:134",
                        "memberName": "getSwapIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63659,
                        "src": "13367:16:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                          "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                        }
                      },
                      "id": 98702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13367:39:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128,uint128)"
                      }
                    },
                    "src": "13344:62:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98704,
                  "nodeType": "ExpressionStatement",
                  "src": "13344:62:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98710,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "13539:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13549:29:134",
                              "memberName": "LBRouter__MaxAmountInExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69680,
                              "src": "13539:39:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13579:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13539:48:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98713,
                              "name": "amountInExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98624,
                              "src": "13589:16:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 98714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13608:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "13589:20:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 98716,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98624,
                            "src": "13611:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98708,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13499:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13503:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13499:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13499:142:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98705,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13470:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13473:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "13470:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13470:181:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98719,
                  "nodeType": "ExpressionStatement",
                  "src": "13470:181:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98727,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "13735:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98728,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "13746:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98731,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "13760:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98730,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13752:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98729,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13752:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13752:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98733,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "13767:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13773:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "13767:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13785:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13767:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98720,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "13661:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13668:24:134",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64775,
                        "src": "13661:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 98726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 98725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 98723,
                            "name": "amountInExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98624,
                            "src": "13700:16:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 98724,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13719:1:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13700:20:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13661:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 98737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13661:135:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98738,
                  "nodeType": "ExpressionStatement",
                  "src": "13661:135:134"
                },
                {
                  "expression": {
                    "id": 98745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98739,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98636,
                          "src": "13851:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98742,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13856:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "13851:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98743,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 98741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13866:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13851:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98744,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "13871:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "13851:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98746,
                  "nodeType": "ExpressionStatement",
                  "src": "13851:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98752,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "13924:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13934:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "13924:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "13961:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "13924:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98757,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "13979:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98756,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13971:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98755,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13971:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98758,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13971:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98750,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "13901:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "13905:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "13901:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13901:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98747,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13885:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13888:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "13885:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13885:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98761,
                  "nodeType": "ExpressionStatement",
                  "src": "13885:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98767,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "14053:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98768,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "14064:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98771,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14078:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14070:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98769,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14070:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14070:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98773,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14085:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14091:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14085:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14103:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14085:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98762,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "13996:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14003:24:134",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64775,
                        "src": "13996:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 98766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98765,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98624,
                          "src": "14035:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "13996:56:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 98777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13996:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98778,
                  "nodeType": "ExpressionStatement",
                  "src": "13996:109:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98784,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "14204:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14214:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "14204:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14241:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14204:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 98790,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 98787,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14251:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 98788,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14257:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14251:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 98789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14269:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14251:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 98791,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14272:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 98792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14278:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "14272:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 98782,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14181:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14185:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14181:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14181:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98779,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14152:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14155:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "14152:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14152:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98795,
                  "nodeType": "ExpressionStatement",
                  "src": "14152:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98801,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "14365:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98802,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "14376:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98805,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14390:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14382:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14382:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14382:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98807,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14397:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14403:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14397:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14415:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14397:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98796,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "14308:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14315:24:134",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64775,
                        "src": "14308:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 98800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98799,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98624,
                          "src": "14347:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14308:56:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 98811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14308:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98812,
                  "nodeType": "ExpressionStatement",
                  "src": "14308:109:134"
                },
                {
                  "expression": {
                    "id": 98822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 98813,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "14479:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 98815,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14484:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "14479:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 98820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14509:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 98819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "14496:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 98817,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 98816,
                              "name": "IERC20",
                              "nameLocations": [
                                "14500:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "14500:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "14500:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 98818,
                          "nodeType": "ArrayTypeName",
                          "src": "14500:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 98821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14496:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "14479:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 98823,
                  "nodeType": "ExpressionStatement",
                  "src": "14479:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98829,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "14560:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98830,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14570:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "14560:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 98831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14596:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "14560:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 98827,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14537:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14541:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "14537:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14537:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98824,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14521:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14524:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "14521:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14521:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98834,
                  "nodeType": "ExpressionStatement",
                  "src": "14521:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98840,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98609,
                        "src": "14673:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98841,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98636,
                        "src": "14684:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 98844,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "14698:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 98843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14690:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 98842,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14690:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14690:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98846,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "14705:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14711:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "14705:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14723:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14705:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 98835,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "14616:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 98837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14623:24:134",
                        "memberName": "swapNATIVEForExactTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 64775,
                        "src": "14616:31:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                        }
                      },
                      "id": 98839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 98838,
                          "name": "amountInExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98624,
                          "src": "14655:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "14616:56:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256[] memory)"
                      }
                    },
                    "id": 98850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14616:109:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 98851,
                  "nodeType": "ExpressionStatement",
                  "src": "14616:109:134"
                }
              ]
            },
            "functionSelector": "8f8d57ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapNATIVEForExactTokens",
            "nameLocation": "12537:29:134",
            "parameters": {
              "id": 98606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12566:2:134"
            },
            "returnParameters": {
              "id": 98607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12576:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99096,
            "nodeType": "FunctionDefinition",
            "src": "14738:2438:134",
            "nodes": [],
            "body": {
              "id": 99095,
              "nodeType": "Block",
              "src": "14815:2361:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    98857
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98857,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "14833:8:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "14825:16:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98856,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14825:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98859,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 98858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "14844:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14825:24:134"
                },
                {
                  "assignments": [
                    98862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98862,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "14868:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "14860:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 98861,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98860,
                          "name": "ILBPair",
                          "nameLocations": [
                            "14860:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "14860:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "14860:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98870,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98865,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99549,
                          "src": "14904:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 98866,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "14914:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 98867,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "14923:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 98863,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "14875:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 98864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14883:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "14875:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 98868,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14875:65:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 98869,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14941:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "14875:72:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14860:87:134"
                },
                {
                  "assignments": [
                    null,
                    98872,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 98872,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "14968:17:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "14960:25:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 98871,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14960:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 98879,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98875,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98862,
                        "src": "15008:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 98876,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "15014:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 98877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15024:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 98873,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "14990:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14997:10:134",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "14990:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 98878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14990:39:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14957:72:134"
                },
                {
                  "assignments": [
                    98884
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98884,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "15062:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "15040:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 98883,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 98882,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "15040:9:134",
                            "15050:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "15040:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "15040:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98889,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98886,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99549,
                        "src": "15080:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      {
                        "id": 98887,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "15090:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        },
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      ],
                      "id": 98885,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "15069:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 98888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15069:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15040:58:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98895,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "15236:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98896,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15246:31:134",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69674,
                              "src": "15236:41:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 98897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15278:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15236:50:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 98898,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98872,
                            "src": "15288:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 98901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 98899,
                              "name": "amountOutExpected",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 98872,
                              "src": "15307:17:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 98900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15327:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "15307:21:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 98893,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15196:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "15200:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15196:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15196:146:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98890,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "15167:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15170:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "15167:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15167:185:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98904,
                  "nodeType": "ExpressionStatement",
                  "src": "15167:185:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98908,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "15436:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98909,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98872,
                        "src": "15446:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98910,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "15465:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98915,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15487:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15479:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98913,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15479:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98916,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15479:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15471:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98911,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15471:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15471:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98918,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15495:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15501:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15495:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15513:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15495:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98905,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "15362:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15369:53:134",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64994,
                      "src": "15362:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15362:162:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 98923,
                  "nodeType": "ExpressionStatement",
                  "src": "15362:162:134"
                },
                {
                  "assignments": [
                    98925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98925,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "15543:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "15535:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15535:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98931,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 98928,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "15567:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                            "typeString": "contract LiquidityBinRouterSwapTest"
                          }
                        ],
                        "id": 98927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15559:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 98926,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15559:7:134",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 98929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15559:13:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 98930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "15573:7:134",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "15559:21:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15535:45:134"
                },
                {
                  "assignments": [
                    98933
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 98933,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "15600:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99095,
                      "src": "15592:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 98932,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "15592:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 98953,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 98936,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "15687:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98937,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98872,
                          "src": "15697:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 98938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15717:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15697:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 98940,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "15720:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 98945,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15742:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 98944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15734:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98943,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15734:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98946,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15734:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 98942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15726:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 98941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15726:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 98947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15726:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 98948,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "15750:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 98949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15756:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "15750:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 98950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15768:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "15750:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98934,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "15613:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98935,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15620:53:134",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64994,
                      "src": "15613:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 98952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15613:166:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15591:188:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 98955,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98933,
                        "src": "15799:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 98958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98956,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98872,
                          "src": "15810:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 98957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15830:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "15810:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 98959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15833:63:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63065b41fffe206c07715022c78e181ff3fe543981b494e68029e75412f0765d",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 98954,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15790:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15790:107:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98961,
                  "nodeType": "ExpressionStatement",
                  "src": "15790:107:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 98965,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "15937:4:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                "typeString": "contract LiquidityBinRouterSwapTest"
                              }
                            ],
                            "id": 98964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15929:7:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 98963,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15929:7:134",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 98966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15929:13:134",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 98967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15943:7:134",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "15929:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 98970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 98968,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98925,
                          "src": "15964:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 98969,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98933,
                          "src": "15980:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15964:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f537761704578616374546f6b656e73466f724e4154495645537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 98971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16003:63:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1da42700dc6c0d95f7c4854762038fabb3eedccce7d670914fba3e152e18df76",
                          "typeString": "literal_string \"test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 98962,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "15907:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 98972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15907:169:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98973,
                  "nodeType": "ExpressionStatement",
                  "src": "15907:169:134"
                },
                {
                  "expression": {
                    "id": 98980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 98974,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98884,
                          "src": "16132:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 98977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16137:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "16132:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 98978,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 98976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16147:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16132:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 98979,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "16152:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "16132:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 98981,
                  "nodeType": "ExpressionStatement",
                  "src": "16132:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 98987,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "16205:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 98988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16215:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "16205:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 98989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16242:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16205:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 98992,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "16260:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 98991,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16252:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 98990,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16252:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 98993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16252:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 98985,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16182:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 98986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16186:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16182:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 98994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16182:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 98982,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16166:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 98984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16169:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "16166:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 98995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16166:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98996,
                  "nodeType": "ExpressionStatement",
                  "src": "16166:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99000,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "16351:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99001,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98872,
                          "src": "16361:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16381:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16361:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99004,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "16384:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99009,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16406:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99008,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16398:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99007,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16398:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16398:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16390:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99005,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16390:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16390:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99012,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16414:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16420:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16414:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16432:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16414:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 98997,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "16277:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 98999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16284:53:134",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64994,
                      "src": "16277:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16277:166:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99017,
                  "nodeType": "ExpressionStatement",
                  "src": "16277:166:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99023,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "16542:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99024,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16552:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "16542:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16579:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16542:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99029,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99026,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "16589:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16595:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "16589:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99028,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16607:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16589:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99030,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "16610:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16616:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "16610:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99021,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16519:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99022,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16523:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16519:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16519:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99018,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16490:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16493:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "16490:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16490:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99034,
                  "nodeType": "ExpressionStatement",
                  "src": "16490:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99038,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "16720:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99039,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98872,
                        "src": "16730:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99040,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "16749:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99045,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "16771:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16763:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99043,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16763:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16763:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16755:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99041,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16755:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16755:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99048,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "16779:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16785:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "16779:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16797:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16779:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99035,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "16646:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99037,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16653:53:134",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64994,
                      "src": "16646:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16646:162:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99053,
                  "nodeType": "ExpressionStatement",
                  "src": "16646:162:134"
                },
                {
                  "expression": {
                    "id": 99063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99054,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "16870:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99056,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16875:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "16870:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99061,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16900:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "16887:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99058,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99057,
                              "name": "IERC20",
                              "nameLocations": [
                                "16891:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "16891:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "16891:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99059,
                          "nodeType": "ArrayTypeName",
                          "src": "16891:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16887:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "16870:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99064,
                  "nodeType": "ExpressionStatement",
                  "src": "16870:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99070,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "16951:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99071,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16961:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "16951:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16987:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "16951:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99068,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16928:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16932:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "16928:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16928:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99065,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16912:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99067,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16915:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "16912:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16912:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99075,
                  "nodeType": "ExpressionStatement",
                  "src": "16912:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99079,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98857,
                        "src": "17081:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99080,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98872,
                        "src": "17091:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99081,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98884,
                        "src": "17110:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99086,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17132:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17124:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99084,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "17124:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99087,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17124:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 99083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17116:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 99082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17116:8:134",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17116:22:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99089,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17140:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17146:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17140:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17158:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17140:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 99076,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "17007:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17014:53:134",
                      "memberName": "swapExactTokensForNATIVESupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64994,
                      "src": "17007:60:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_payable_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,struct ILBRouter.Path memory,address payable,uint256) external returns (uint256)"
                      }
                    },
                    "id": 99093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17007:162:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99094,
                  "nodeType": "ExpressionStatement",
                  "src": "17007:162:134"
                }
              ]
            },
            "functionSelector": "3f6fb2f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactTokensForNATIVESupportingFeeOnTransferTokens",
            "nameLocation": "14747:58:134",
            "parameters": {
              "id": 98854,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14805:2:134"
            },
            "returnParameters": {
              "id": 98855,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14815:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99335,
            "nodeType": "FunctionDefinition",
            "src": "17182:2456:134",
            "nodes": [],
            "body": {
              "id": 99334,
              "nodeType": "Block",
              "src": "17259:2379:134",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    99100
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99100,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "17277:8:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "17269:16:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99099,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17269:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99102,
                  "initialValue": {
                    "hexValue": "3230653138",
                    "id": 99101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "17288:5:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_20000000000000000000_by_1",
                      "typeString": "int_const 20000000000000000000"
                    },
                    "value": "20e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17269:24:134"
                },
                {
                  "assignments": [
                    99105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99105,
                      "mutability": "mutable",
                      "name": "pair",
                      "nameLocation": "17312:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "17304:12:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILBPair_$69569",
                        "typeString": "contract ILBPair"
                      },
                      "typeName": {
                        "id": 99104,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99103,
                          "name": "ILBPair",
                          "nameLocations": [
                            "17304:7:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69569,
                          "src": "17304:7:134"
                        },
                        "referencedDeclaration": 69569,
                        "src": "17304:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99113,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 99108,
                          "name": "taxToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99549,
                          "src": "17348:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          }
                        },
                        {
                          "id": 99109,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "17358:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 99110,
                          "name": "DEFAULT_BIN_STEP",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99473,
                          "src": "17367:16:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                            "typeString": "contract ERC20TransferTaxMock"
                          },
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        ],
                        "expression": {
                          "id": 99106,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99552,
                          "src": "17319:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBFactory_$58932",
                            "typeString": "contract LBFactory"
                          }
                        },
                        "id": 99107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17327:20:134",
                        "memberName": "getLBPairInformation",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57642,
                        "src": "17319:28:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$returns$_t_struct$_LBPairInformation_$67263_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256) view external returns (struct ILBFactory.LBPairInformation memory)"
                        }
                      },
                      "id": 99111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17319:65:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LBPairInformation_$67263_memory_ptr",
                        "typeString": "struct ILBFactory.LBPairInformation memory"
                      }
                    },
                    "id": 99112,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "17385:6:134",
                    "memberName": "LBPair",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 67258,
                    "src": "17319:72:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17304:87:134"
                },
                {
                  "assignments": [
                    null,
                    99115,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 99115,
                      "mutability": "mutable",
                      "name": "amountOutExpected",
                      "nameLocation": "17412:17:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "17404:25:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 99114,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17404:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 99122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99118,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99105,
                        "src": "17452:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        }
                      },
                      {
                        "id": 99119,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99100,
                        "src": "17458:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 99120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17468:5:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBPair_$69569",
                          "typeString": "contract ILBPair"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 99116,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "17434:6:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 99117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17441:10:134",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63689,
                      "src": "17434:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_contract$_ILBPair_$69569_$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (contract ILBPair,uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 99121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17434:40:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17401:73:134"
                },
                {
                  "assignments": [
                    99127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99127,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "17507:4:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "17485:26:134",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                        "typeString": "struct ILBRouter.Path"
                      },
                      "typeName": {
                        "id": 99126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 99125,
                          "name": "ILBRouter.Path",
                          "nameLocations": [
                            "17485:9:134",
                            "17495:4:134"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69754,
                          "src": "17485:14:134"
                        },
                        "referencedDeclaration": 69754,
                        "src": "17485:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                          "typeString": "struct ILBRouter.Path"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99132,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 99129,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "17525:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 99130,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99549,
                        "src": "17534:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      ],
                      "id": 99128,
                      "name": "_buildPath",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99414,
                      "src": "17514:10:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$returns$_t_struct$_Path_$69754_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20) pure returns (struct ILBRouter.Path memory)"
                      }
                    },
                    "id": 99131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17514:29:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                      "typeString": "struct ILBRouter.Path memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17485:58:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99138,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "17681:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99139,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "17691:31:134",
                              "memberName": "LBRouter__InsufficientAmountOut",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69674,
                              "src": "17681:41:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "17723:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17681:50:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 99141,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99115,
                            "src": "17733:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 99146,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 99144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 99142,
                                "name": "amountOutExpected",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99115,
                                "src": "17752:17:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 99143,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17772:1:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "17752:21:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17776:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17752:25:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "expression": {
                            "id": 99136,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17641:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17645:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17641:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17641:150:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99133,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17612:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17615:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "17612:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17612:189:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99149,
                  "nodeType": "ExpressionStatement",
                  "src": "17612:189:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99155,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99115,
                        "src": "17902:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99156,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "17921:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99159,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "17935:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17927:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17927:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17927:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99161,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "17942:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17948:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "17942:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17960:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17942:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99150,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "17811:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17818:53:134",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65101,
                        "src": "17811:60:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99153,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99100,
                          "src": "17879:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "17811:77:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17811:160:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99166,
                  "nodeType": "ExpressionStatement",
                  "src": "17811:160:134"
                },
                {
                  "assignments": [
                    99168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99168,
                      "mutability": "mutable",
                      "name": "balanceBefore",
                      "nameLocation": "17990:13:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "17982:21:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17982:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99176,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 99173,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18033:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18025:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99171,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18025:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18025:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 99169,
                        "name": "taxToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99549,
                        "src": "18006:8:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                          "typeString": "contract ERC20TransferTaxMock"
                        }
                      },
                      "id": 99170,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18015:9:134",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41719,
                      "src": "18006:18:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 99175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18006:33:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17982:57:134"
                },
                {
                  "assignments": [
                    99178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 99178,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "18059:9:134",
                      "nodeType": "VariableDeclaration",
                      "scope": 99334,
                      "src": "18051:17:134",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 99177,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18051:7:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 99196,
                  "initialValue": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99183,
                          "name": "amountOutExpected",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99115,
                          "src": "18163:17:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 99184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18183:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "18163:21:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99186,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "18186:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99189,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18200:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18192:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18192:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18192:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99191,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18207:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18213:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18207:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18225:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18207:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99179,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "18072:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18079:53:134",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65101,
                        "src": "18072:60:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99181,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99100,
                          "src": "18140:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18072:77:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18072:164:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18050:186:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99198,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99178,
                        "src": "18256:9:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 99203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 99201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 99199,
                            "name": "amountOutExpected",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99115,
                            "src": "18267:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 99200,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18287:1:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "18267:21:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18291:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18267:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a31",
                        "id": 99204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18294:63:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6c6580e38b5d7a18d51945743cfac584c17e024436dab99c424a969003f7958",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::1\""
                        }
                      ],
                      "id": 99197,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18247:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18247:111:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99206,
                  "nodeType": "ExpressionStatement",
                  "src": "18247:111:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 99212,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "18417:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                                  "typeString": "contract LiquidityBinRouterSwapTest"
                                }
                              ],
                              "id": 99211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18409:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99210,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18409:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18409:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99208,
                            "name": "taxToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99549,
                            "src": "18390:8:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20TransferTaxMock_$106690",
                              "typeString": "contract ERC20TransferTaxMock"
                            }
                          },
                          "id": 99209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18399:9:134",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41719,
                          "src": "18390:18:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 99214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18390:33:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 99215,
                          "name": "balanceBefore",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99168,
                          "src": "18437:13:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 99216,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99178,
                          "src": "18453:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "18437:25:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f5377617045786163744e4154495645466f72546f6b656e73537570706f7274696e674665654f6e5472616e73666572546f6b656e733a3a32",
                        "id": 99218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18476:63:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        },
                        "value": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d55a511934e7b7353aad72baed2e2b636f4b79ef80b0899870afbb7a752e7141",
                          "typeString": "literal_string \"test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens::2\""
                        }
                      ],
                      "id": 99207,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18368:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 99219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18368:181:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99220,
                  "nodeType": "ExpressionStatement",
                  "src": "18368:181:134"
                },
                {
                  "expression": {
                    "id": 99227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99221,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99127,
                          "src": "18604:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99224,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18609:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "18604:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99225,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18619:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "18604:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99226,
                      "name": "usdt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99534,
                      "src": "18624:4:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                        "typeString": "contract ERC20Mock"
                      }
                    },
                    "src": "18604:24:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99228,
                  "nodeType": "ExpressionStatement",
                  "src": "18604:24:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99234,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "18677:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18687:26:134",
                              "memberName": "LBRouter__InvalidTokenPath",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69684,
                              "src": "18677:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                "typeString": "function (address) pure"
                              }
                            },
                            "id": 99236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "18714:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "18677:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 99239,
                                "name": "usdt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99534,
                                "src": "18732:4:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                                  "typeString": "contract ERC20Mock"
                                }
                              ],
                              "id": 99238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18724:7:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 99237,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "18724:7:134",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 99240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18724:13:134",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 99232,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18654:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18658:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18654:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18654:84:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99229,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18638:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99231,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18641:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "18638:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18638:101:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99243,
                  "nodeType": "ExpressionStatement",
                  "src": "18638:101:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99249,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99115,
                        "src": "18840:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99250,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "18859:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99253,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "18873:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18865:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99251,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18865:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18865:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99255,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "18880:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18886:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "18880:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18898:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18880:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99244,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "18749:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18756:53:134",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65101,
                        "src": "18749:60:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99247,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99100,
                          "src": "18817:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "18749:77:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18749:160:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99260,
                  "nodeType": "ExpressionStatement",
                  "src": "18749:160:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99266,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "19008:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99267,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19018:26:134",
                              "memberName": "LBRouter__DeadlineExceeded",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69664,
                              "src": "19008:36:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                                "typeString": "function (uint256,uint256) pure"
                              }
                            },
                            "id": 99268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19045:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19008:45:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 99272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 99269,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "19055:5:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 99270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19061:9:134",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "19055:15:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 99271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19073:1:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "19055:19:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 99273,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "19076:5:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 99274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19082:9:134",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "19076:15:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 99264,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18985:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18989:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "18985:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18985:107:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99261,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18956:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18959:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "18956:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18956:146:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99277,
                  "nodeType": "ExpressionStatement",
                  "src": "18956:146:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99283,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99115,
                        "src": "19203:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99284,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "19222:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99287,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19236:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19228:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19228:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19228:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99289,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19243:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19249:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19243:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19261:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19243:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99278,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "19112:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19119:53:134",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65101,
                        "src": "19112:60:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99281,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99100,
                          "src": "19180:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19112:77:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19112:160:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99294,
                  "nodeType": "ExpressionStatement",
                  "src": "19112:160:134"
                },
                {
                  "expression": {
                    "id": 99304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99295,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "19334:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99297,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19339:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "19334:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 99302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19364:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 99301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19351:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99299,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99298,
                              "name": "IERC20",
                              "nameLocations": [
                                "19355:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "19355:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "19355:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99300,
                          "nodeType": "ArrayTypeName",
                          "src": "19355:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19351:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19334:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99305,
                  "nodeType": "ExpressionStatement",
                  "src": "19334:32:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 99311,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "19415:9:134",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 99312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "19425:25:134",
                              "memberName": "LBRouter__LengthsMismatch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69626,
                              "src": "19415:35:134",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 99313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "19451:8:134",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19415:44:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          ],
                          "expression": {
                            "id": 99309,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19392:3:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 99310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "19396:18:134",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19392:22:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 99314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19392:68:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 99306,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19376:2:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 99308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19379:12:134",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15971,
                      "src": "19376:15:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 99315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19376:85:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 99316,
                  "nodeType": "ExpressionStatement",
                  "src": "19376:85:134"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 99322,
                        "name": "amountOutExpected",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99115,
                        "src": "19562:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 99323,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99127,
                        "src": "19581:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 99326,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19595:4:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinRouterSwapTest_$99419",
                              "typeString": "contract LiquidityBinRouterSwapTest"
                            }
                          ],
                          "id": 99325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19587:7:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 99324,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19587:7:134",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 99327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19587:13:134",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 99331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 99328,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "19602:5:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 99329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "19608:9:134",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "19602:15:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 99330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19620:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "19602:19:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 99317,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99555,
                          "src": "19471:6:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBRouter_$66608",
                            "typeString": "contract LBRouter"
                          }
                        },
                        "id": 99319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19478:53:134",
                        "memberName": "swapExactNATIVEForTokensSupportingFeeOnTransferTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 65101,
                        "src": "19471:60:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                        }
                      },
                      "id": 99321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 99320,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99100,
                          "src": "19539:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "src": "19471:77:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_struct$_Path_$69754_memory_ptr_$_t_address_$_t_uint256_$returns$_t_uint256_$value",
                        "typeString": "function (uint256,struct ILBRouter.Path memory,address,uint256) payable external returns (uint256)"
                      }
                    },
                    "id": 99332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19471:160:134",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99333,
                  "nodeType": "ExpressionStatement",
                  "src": "19471:160:134"
                }
              ]
            },
            "functionSelector": "2debd6fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SwapExactNATIVEForTokensSupportingFeeOnTransferTokens",
            "nameLocation": "17191:58:134",
            "parameters": {
              "id": 99097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17249:2:134"
            },
            "returnParameters": {
              "id": 99098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17259:0:134"
            },
            "scope": 99419,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 99414,
            "nodeType": "FunctionDefinition",
            "src": "19644:425:134",
            "nodes": [],
            "body": {
              "id": 99413,
              "nodeType": "Block",
              "src": "19747:322:134",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 99355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99347,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99345,
                        "src": "19757:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99349,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19762:12:134",
                      "memberName": "pairBinSteps",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69745,
                      "src": "19757:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 99353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19791:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 99352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19777:13:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (uint256[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99350,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "19781:7:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 99351,
                          "nodeType": "ArrayTypeName",
                          "src": "19781:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        }
                      },
                      "id": 99354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19777:16:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[] memory"
                      }
                    },
                    "src": "19757:36:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 99356,
                  "nodeType": "ExpressionStatement",
                  "src": "19757:36:134"
                },
                {
                  "expression": {
                    "id": 99363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99357,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99345,
                          "src": "19803:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99360,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19808:12:134",
                        "memberName": "pairBinSteps",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69745,
                        "src": "19803:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 99361,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19821:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19803:20:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99362,
                      "name": "DEFAULT_BIN_STEP",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99473,
                      "src": "19826:16:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "19803:39:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99364,
                  "nodeType": "ExpressionStatement",
                  "src": "19803:39:134"
                },
                {
                  "expression": {
                    "id": 99374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99365,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99345,
                        "src": "19853:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99367,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19858:8:134",
                      "memberName": "versions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69749,
                      "src": "19853:13:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 99372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19893:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 99371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19869:23:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_Version_$69704_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum ILBRouter.Version[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99369,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99368,
                              "name": "ILBRouter.Version",
                              "nameLocations": [
                                "19873:9:134",
                                "19883:7:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 69704,
                              "src": "19873:17:134"
                            },
                            "referencedDeclaration": 69704,
                            "src": "19873:17:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          },
                          "id": 99370,
                          "nodeType": "ArrayTypeName",
                          "src": "19873:19:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_storage_ptr",
                            "typeString": "enum ILBRouter.Version[]"
                          }
                        }
                      },
                      "id": 99373,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19869:26:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                        "typeString": "enum ILBRouter.Version[] memory"
                      }
                    },
                    "src": "19853:42:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                      "typeString": "enum ILBRouter.Version[] memory"
                    }
                  },
                  "id": 99375,
                  "nodeType": "ExpressionStatement",
                  "src": "19853:42:134"
                },
                {
                  "expression": {
                    "id": 99384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99376,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99345,
                          "src": "19905:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99379,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19910:8:134",
                        "memberName": "versions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69749,
                        "src": "19905:13:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                          "typeString": "enum ILBRouter.Version[] memory"
                        }
                      },
                      "id": 99380,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19919:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19905:16:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$69704",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 99381,
                          "name": "ILBRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70101,
                          "src": "19924:9:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                            "typeString": "type(contract ILBRouter)"
                          }
                        },
                        "id": 99382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "19934:7:134",
                        "memberName": "Version",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69704,
                        "src": "19924:17:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                          "typeString": "type(enum ILBRouter.Version)"
                        }
                      },
                      "id": 99383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "19942:2:134",
                      "memberName": "V2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69703,
                      "src": "19924:20:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Version_$69704",
                        "typeString": "enum ILBRouter.Version"
                      }
                    },
                    "src": "19905:39:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Version_$69704",
                      "typeString": "enum ILBRouter.Version"
                    }
                  },
                  "id": 99385,
                  "nodeType": "ExpressionStatement",
                  "src": "19905:39:134"
                },
                {
                  "expression": {
                    "id": 99395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 99386,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99345,
                        "src": "19955:4:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                          "typeString": "struct ILBRouter.Path memory"
                        }
                      },
                      "id": 99388,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "19960:9:134",
                      "memberName": "tokenPath",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69753,
                      "src": "19955:14:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 99393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "19985:1:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 99392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "19972:12:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (contract IERC20[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 99390,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 99389,
                              "name": "IERC20",
                              "nameLocations": [
                                "19976:6:134"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 42211,
                              "src": "19976:6:134"
                            },
                            "referencedDeclaration": 42211,
                            "src": "19976:6:134",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42211",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 99391,
                          "nodeType": "ArrayTypeName",
                          "src": "19976:8:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_storage_ptr",
                            "typeString": "contract IERC20[]"
                          }
                        }
                      },
                      "id": 99394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "19972:15:134",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                        "typeString": "contract IERC20[] memory"
                      }
                    },
                    "src": "19955:32:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                      "typeString": "contract IERC20[] memory"
                    }
                  },
                  "id": 99396,
                  "nodeType": "ExpressionStatement",
                  "src": "19955:32:134"
                },
                {
                  "expression": {
                    "id": 99403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99397,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99345,
                          "src": "19997:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99400,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20002:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "19997:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99401,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 99399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20012:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19997:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99402,
                      "name": "tokenIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99338,
                      "src": "20017:7:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "19997:27:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99404,
                  "nodeType": "ExpressionStatement",
                  "src": "19997:27:134"
                },
                {
                  "expression": {
                    "id": 99411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "expression": {
                          "id": 99405,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99345,
                          "src": "20034:4:134",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                            "typeString": "struct ILBRouter.Path memory"
                          }
                        },
                        "id": 99408,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20039:9:134",
                        "memberName": "tokenPath",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 69753,
                        "src": "20034:14:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$42211_$dyn_memory_ptr",
                          "typeString": "contract IERC20[] memory"
                        }
                      },
                      "id": 99409,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 99407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20049:1:134",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20034:17:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 99410,
                      "name": "tokenOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99341,
                      "src": "20054:8:134",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42211",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "20034:28:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 99412,
                  "nodeType": "ExpressionStatement",
                  "src": "20034:28:134"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_buildPath",
            "nameLocation": "19653:10:134",
            "parameters": {
              "id": 99342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99338,
                  "mutability": "mutable",
                  "name": "tokenIn",
                  "nameLocation": "19671:7:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 99414,
                  "src": "19664:14:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42211",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 99337,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99336,
                      "name": "IERC20",
                      "nameLocations": [
                        "19664:6:134"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42211,
                      "src": "19664:6:134"
                    },
                    "referencedDeclaration": 42211,
                    "src": "19664:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 99341,
                  "mutability": "mutable",
                  "name": "tokenOut",
                  "nameLocation": "19687:8:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 99414,
                  "src": "19680:15:134",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42211",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 99340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99339,
                      "name": "IERC20",
                      "nameLocations": [
                        "19680:6:134"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42211,
                      "src": "19680:6:134"
                    },
                    "referencedDeclaration": 42211,
                    "src": "19680:6:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42211",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19663:33:134"
            },
            "returnParameters": {
              "id": 99346,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99345,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "19741:4:134",
                  "nodeType": "VariableDeclaration",
                  "scope": 99414,
                  "src": "19719:26:134",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Path_$69754_memory_ptr",
                    "typeString": "struct ILBRouter.Path"
                  },
                  "typeName": {
                    "id": 99344,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 99343,
                      "name": "ILBRouter.Path",
                      "nameLocations": [
                        "19719:9:134",
                        "19729:4:134"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 69754,
                      "src": "19719:14:134"
                    },
                    "referencedDeclaration": 69754,
                    "src": "19719:14:134",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Path_$69754_storage_ptr",
                      "typeString": "struct ILBRouter.Path"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19718:28:134"
            },
            "scope": 99419,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 99418,
            "nodeType": "FunctionDefinition",
            "src": "20075:29:134",
            "nodes": [],
            "body": {
              "id": 99417,
              "nodeType": "Block",
              "src": "20102:2:134",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 99415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20082:2:134"
            },
            "returnParameters": {
              "id": 99416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20102:0:134"
            },
            "scope": 99419,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 97218,
              "name": "TestHelper",
              "nameLocations": [
                "594:10:134"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 101064,
              "src": "594:10:134"
            },
            "id": 97219,
            "nodeType": "InheritanceSpecifier",
            "src": "594:10:134"
          }
        ],
        "canonicalName": "LiquidityBinRouterSwapTest",
        "contractDependencies": [
          41364,
          58932,
          61826,
          62082,
          63370,
          66608,
          106636,
          106690,
          107167
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 97217,
          "nodeType": "StructuredDocumentation",
          "src": "105:449:134",
          "text": " This file only test single hop swaps using V2.1 pairs\n Test scenarios:\n 1. swapExactTokensForTokens\n 2. swapExactTokensForNATIVE\n 3. swapExactNATIVEForTokens\n 4. swapTokensForExactTokens\n 5. swapTokensForExactNATIVE\n 6. swapNATIVEForExactTokens\n 7. swapExactTokensForTokensSupportingFeeOnTransferTokens\n 8. swapExactTokensForNATIVESupportingFeeOnTransferTokens\n 9. swapExactNATIVEForTokensSupportingFeeOnTransferTokens"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          99419,
          101064,
          12155,
          12103,
          6783,
          6423,
          5630,
          3570,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinRouterSwapTest",
        "nameLocation": "564:26:134",
        "scope": 99420,
        "usedErrors": [
          76164,
          76174,
          78236,
          78453
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7565,
          7571
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 134
}