{"abi":[{"type":"function","name":"afterBatchTransferFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterBurn","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsToBurn","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterFlashLoan","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"fees","type":"bytes32","internalType":"bytes32"},{"name":"feesReceived","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterMint","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"liquidityConfigs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"amountsIn","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"afterSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"swapForY","type":"bool","internalType":"bool"},{"name":"amountsOut","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeBatchTransferFrom","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amounts","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeBurn","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"ids","type":"uint256[]","internalType":"uint256[]"},{"name":"amountsToBurn","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeFlashLoan","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amounts","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeMint","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"liquidityConfigs","type":"bytes32[]","internalType":"bytes32[]"},{"name":"amountsReceived","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"beforeSwap","inputs":[{"name":"sender","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"swapForY","type":"bool","internalType":"bool"},{"name":"amountsIn","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"function","name":"getLBPair","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract ILBPair"}],"stateMutability":"view"},{"type":"function","name":"isLinked","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"onHooksSet","inputs":[{"name":"hooksParameters","type":"bytes32","internalType":"bytes32"},{"name":"onHooksSetData","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bytes4","internalType":"bytes4"}],"stateMutability":"nonpayable"},{"type":"error","name":"LBBaseHooks__InvalidCaller","inputs":[{"name":"caller","type":"address","internalType":"address"}]},{"type":"error","name":"LBBaseHooks__NotLinked","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"afterBatchTransferFrom(address,address,address,uint256[],uint256[])":"67ddb278","afterBurn(address,address,address,uint256[],uint256[])":"fdc27257","afterFlashLoan(address,address,bytes32,bytes32)":"60bed5f3","afterMint(address,address,bytes32[],bytes32)":"7a51a4c6","afterSwap(address,address,bool,bytes32)":"53e8079b","beforeBatchTransferFrom(address,address,address,uint256[],uint256[])":"79c8ccf7","beforeBurn(address,address,address,uint256[],uint256[])":"ea9db9d3","beforeFlashLoan(address,address,bytes32)":"505d9033","beforeMint(address,address,bytes32[],bytes32)":"0d4abdb3","beforeSwap(address,address,bool,bytes32)":"feee3735","getLBPair()":"5f9c01b1","isLinked()":"09fa1f90","onHooksSet(bytes32,bytes)":"4e430b5a"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"LBBaseHooks__InvalidCaller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LBBaseHooks__NotLinked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"afterBatchTransferFrom\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToBurn\",\"type\":\"uint256[]\"}],\"name\":\"afterBurn\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"fees\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"feesReceived\",\"type\":\"bytes32\"}],\"name\":\"afterFlashLoan\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"liquidityConfigs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"amountsIn\",\"type\":\"bytes32\"}],\"name\":\"afterMint\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"swapForY\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"amountsOut\",\"type\":\"bytes32\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"beforeBatchTransferFrom\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amountsToBurn\",\"type\":\"uint256[]\"}],\"name\":\"beforeBurn\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"amounts\",\"type\":\"bytes32\"}],\"name\":\"beforeFlashLoan\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"liquidityConfigs\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32\",\"name\":\"amountsReceived\",\"type\":\"bytes32\"}],\"name\":\"beforeMint\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"swapForY\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"amountsIn\",\"type\":\"bytes32\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLBPair\",\"outputs\":[{\"internalType\":\"contract ILBPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isLinked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hooksParameters\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"onHooksSetData\",\"type\":\"bytes\"}],\"name\":\"onHooksSet\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"afterBatchTransferFrom(address,address,address,uint256[],uint256[])\":{\"details\":\"Only callable by the pair\",\"params\":{\"amounts\":\"The amounts\",\"from\":\"The address that transferred the tokens\",\"ids\":\"The token ids\",\"sender\":\"The address that initiated the transfer\",\"to\":\"The address that received the tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"afterBurn(address,address,address,uint256[],uint256[])\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsToBurn\":\"The amounts to burn\",\"from\":\"The address that burned the tokens\",\"ids\":\"The token ids\",\"sender\":\"The address that initiated the burn\",\"to\":\"The address that received the burned tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"afterFlashLoan(address,address,bytes32,bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"fees\":\"The flashloan fees\",\"feesReceived\":\"The fees received\",\"sender\":\"The address that initiated the flash loan\",\"to\":\"The address that received the flash loaned tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"afterMint(address,address,bytes32[],bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsIn\":\"The amounts in\",\"liquidityConfigs\":\"The liquidity configurations\",\"sender\":\"The address that initiated the mint\",\"to\":\"The address that received the minted tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"afterSwap(address,address,bool,bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsOut\":\"The amounts out\",\"sender\":\"The address that initiated the swap\",\"swapForY\":\"Whether the swap was for token Y\",\"to\":\"The address that received the swapped tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"beforeBatchTransferFrom(address,address,address,uint256[],uint256[])\":{\"details\":\"Only callable by the pair\",\"params\":{\"amounts\":\"The amounts\",\"from\":\"The address that will transfer the tokens\",\"ids\":\"The token ids\",\"sender\":\"The address that initiated the transfer\",\"to\":\"The address that will receive the tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"beforeBurn(address,address,address,uint256[],uint256[])\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsToBurn\":\"The amounts to burn\",\"from\":\"The address that will burn the tokens\",\"ids\":\"The token ids\",\"sender\":\"The address that initiated the burn\",\"to\":\"The address that will receive the burned tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"beforeFlashLoan(address,address,bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"amounts\":\"The amounts\",\"sender\":\"The address that initiated the flash loan\",\"to\":\"The address that will receive the flash loaned tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"beforeMint(address,address,bytes32[],bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsReceived\":\"The amounts received\",\"liquidityConfigs\":\"The liquidity configurations\",\"sender\":\"The address that initiated the mint\",\"to\":\"The address that will receive the minted tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"beforeSwap(address,address,bool,bytes32)\":{\"details\":\"Only callable by the pair\",\"params\":{\"amountsIn\":\"The amounts in\",\"sender\":\"The address that initiated the swap\",\"swapForY\":\"Whether the swap is for token Y\",\"to\":\"The address that will receive the swapped tokens\"},\"returns\":{\"_0\":\"The function selector\"}},\"getLBPair()\":{\"details\":\"Returns the LBPair contract\",\"returns\":{\"_0\":\"The LBPair contract\"}},\"isLinked()\":{\"details\":\"Returns whether the contract is linked to the pair or not\",\"returns\":{\"_0\":\"Whether the contract is linked to the pair or not\"}},\"onHooksSet(bytes32,bytes)\":{\"details\":\"Only callable by the pair\",\"params\":{\"hooksParameters\":\"The hooks parameters\",\"onHooksSetData\":\"The onHooksSet data\"},\"returns\":{\"_0\":\"The function selector\"}}},\"title\":\"Liquidity Book Base Hooks Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"afterBatchTransferFrom(address,address,address,uint256[],uint256[])\":{\"notice\":\"Hook called by the pair after a batch transfer\"},\"afterBurn(address,address,address,uint256[],uint256[])\":{\"notice\":\"Hook called by the pair after burning\"},\"afterFlashLoan(address,address,bytes32,bytes32)\":{\"notice\":\"Hook called by the pair after a flash loan\"},\"afterMint(address,address,bytes32[],bytes32)\":{\"notice\":\"Hook called by the pair after minting\"},\"afterSwap(address,address,bool,bytes32)\":{\"notice\":\"Hook called by the pair after a swap\"},\"beforeBatchTransferFrom(address,address,address,uint256[],uint256[])\":{\"notice\":\"Hook called by the pair before a batch transfer\"},\"beforeBurn(address,address,address,uint256[],uint256[])\":{\"notice\":\"Hook called by the pair before burning\"},\"beforeFlashLoan(address,address,bytes32)\":{\"notice\":\"Hook called by the pair before a flash loan\"},\"beforeMint(address,address,bytes32[],bytes32)\":{\"notice\":\"Hook called by the pair before minting\"},\"beforeSwap(address,address,bool,bytes32)\":{\"notice\":\"Hook called by the pair before a swap\"},\"onHooksSet(bytes32,bytes)\":{\"notice\":\"Hook called by the pair when the hooks parameters are set\"}},\"notice\":\"Base contract for LBPair hooks This contract is meant to be inherited by any contract that wants to implement LBPair hooks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/LBBaseHooks.sol\":\"LBBaseHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"src/LBBaseHooks.sol\":{\"keccak256\":\"0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1\",\"dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"caller","type":"address"}],"type":"error","name":"LBBaseHooks__InvalidCaller"},{"inputs":[],"type":"error","name":"LBBaseHooks__NotLinked"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"afterBatchTransferFrom","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToBurn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"afterBurn","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"fees","type":"bytes32"},{"internalType":"bytes32","name":"feesReceived","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"afterFlashLoan","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32[]","name":"liquidityConfigs","type":"bytes32[]"},{"internalType":"bytes32","name":"amountsIn","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"afterMint","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"swapForY","type":"bool"},{"internalType":"bytes32","name":"amountsOut","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"afterSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"beforeBatchTransferFrom","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"amountsToBurn","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"beforeBurn","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32","name":"amounts","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"beforeFlashLoan","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32[]","name":"liquidityConfigs","type":"bytes32[]"},{"internalType":"bytes32","name":"amountsReceived","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"beforeMint","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"bool","name":"swapForY","type":"bool"},{"internalType":"bytes32","name":"amountsIn","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"beforeSwap","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getLBPair","outputs":[{"internalType":"contract ILBPair","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isLinked","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"hooksParameters","type":"bytes32"},{"internalType":"bytes","name":"onHooksSetData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"onHooksSet","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}]}],"devdoc":{"kind":"dev","methods":{"afterBatchTransferFrom(address,address,address,uint256[],uint256[])":{"details":"Only callable by the pair","params":{"amounts":"The amounts","from":"The address that transferred the tokens","ids":"The token ids","sender":"The address that initiated the transfer","to":"The address that received the tokens"},"returns":{"_0":"The function selector"}},"afterBurn(address,address,address,uint256[],uint256[])":{"details":"Only callable by the pair","params":{"amountsToBurn":"The amounts to burn","from":"The address that burned the tokens","ids":"The token ids","sender":"The address that initiated the burn","to":"The address that received the burned tokens"},"returns":{"_0":"The function selector"}},"afterFlashLoan(address,address,bytes32,bytes32)":{"details":"Only callable by the pair","params":{"fees":"The flashloan fees","feesReceived":"The fees received","sender":"The address that initiated the flash loan","to":"The address that received the flash loaned tokens"},"returns":{"_0":"The function selector"}},"afterMint(address,address,bytes32[],bytes32)":{"details":"Only callable by the pair","params":{"amountsIn":"The amounts in","liquidityConfigs":"The liquidity configurations","sender":"The address that initiated the mint","to":"The address that received the minted tokens"},"returns":{"_0":"The function selector"}},"afterSwap(address,address,bool,bytes32)":{"details":"Only callable by the pair","params":{"amountsOut":"The amounts out","sender":"The address that initiated the swap","swapForY":"Whether the swap was for token Y","to":"The address that received the swapped tokens"},"returns":{"_0":"The function selector"}},"beforeBatchTransferFrom(address,address,address,uint256[],uint256[])":{"details":"Only callable by the pair","params":{"amounts":"The amounts","from":"The address that will transfer the tokens","ids":"The token ids","sender":"The address that initiated the transfer","to":"The address that will receive the tokens"},"returns":{"_0":"The function selector"}},"beforeBurn(address,address,address,uint256[],uint256[])":{"details":"Only callable by the pair","params":{"amountsToBurn":"The amounts to burn","from":"The address that will burn the tokens","ids":"The token ids","sender":"The address that initiated the burn","to":"The address that will receive the burned tokens"},"returns":{"_0":"The function selector"}},"beforeFlashLoan(address,address,bytes32)":{"details":"Only callable by the pair","params":{"amounts":"The amounts","sender":"The address that initiated the flash loan","to":"The address that will receive the flash loaned tokens"},"returns":{"_0":"The function selector"}},"beforeMint(address,address,bytes32[],bytes32)":{"details":"Only callable by the pair","params":{"amountsReceived":"The amounts received","liquidityConfigs":"The liquidity configurations","sender":"The address that initiated the mint","to":"The address that will receive the minted tokens"},"returns":{"_0":"The function selector"}},"beforeSwap(address,address,bool,bytes32)":{"details":"Only callable by the pair","params":{"amountsIn":"The amounts in","sender":"The address that initiated the swap","swapForY":"Whether the swap is for token Y","to":"The address that will receive the swapped tokens"},"returns":{"_0":"The function selector"}},"getLBPair()":{"details":"Returns the LBPair contract","returns":{"_0":"The LBPair contract"}},"isLinked()":{"details":"Returns whether the contract is linked to the pair or not","returns":{"_0":"Whether the contract is linked to the pair or not"}},"onHooksSet(bytes32,bytes)":{"details":"Only callable by the pair","params":{"hooksParameters":"The hooks parameters","onHooksSetData":"The onHooksSet data"},"returns":{"_0":"The function selector"}}},"version":1},"userdoc":{"kind":"user","methods":{"afterBatchTransferFrom(address,address,address,uint256[],uint256[])":{"notice":"Hook called by the pair after a batch transfer"},"afterBurn(address,address,address,uint256[],uint256[])":{"notice":"Hook called by the pair after burning"},"afterFlashLoan(address,address,bytes32,bytes32)":{"notice":"Hook called by the pair after a flash loan"},"afterMint(address,address,bytes32[],bytes32)":{"notice":"Hook called by the pair after minting"},"afterSwap(address,address,bool,bytes32)":{"notice":"Hook called by the pair after a swap"},"beforeBatchTransferFrom(address,address,address,uint256[],uint256[])":{"notice":"Hook called by the pair before a batch transfer"},"beforeBurn(address,address,address,uint256[],uint256[])":{"notice":"Hook called by the pair before burning"},"beforeFlashLoan(address,address,bytes32)":{"notice":"Hook called by the pair before a flash loan"},"beforeMint(address,address,bytes32[],bytes32)":{"notice":"Hook called by the pair before minting"},"beforeSwap(address,address,bool,bytes32)":{"notice":"Hook called by the pair before a swap"},"onHooksSet(bytes32,bytes)":{"notice":"Hook called by the pair when the hooks parameters are set"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":800},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/LBBaseHooks.sol":"LBBaseHooks"},"evmVersion":"paris","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4","urls":["bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009","dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"],"license":"MIT"},"src/LBBaseHooks.sol":{"keccak256":"0xaead104bb499ffa322331b1077a466bb4ef6f74597e43cd1f4227b089f27f778","urls":["bzz-raw://45599fb2c7ca6408a4985d33dc6d513d6bdbfd2333882b32f09d7859010b67e1","dweb:/ipfs/QmSTEgSBRUeTRqPWwDS9ZQrxrjAcSPFtRWkKA3mu9h1qCR"],"license":"MIT"},"src/interfaces/ILBFactory.sol":{"keccak256":"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9","urls":["bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246","dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"],"license":"MIT"},"src/interfaces/ILBFlashLoanCallback.sol":{"keccak256":"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62","urls":["bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56","dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"],"license":"MIT"},"src/interfaces/ILBHooks.sol":{"keccak256":"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a","urls":["bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109","dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"],"license":"MIT"},"src/interfaces/ILBPair.sol":{"keccak256":"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d","urls":["bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d","dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"],"license":"MIT"},"src/interfaces/ILBToken.sol":{"keccak256":"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9","urls":["bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f","dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"],"license":"MIT"},"src/libraries/Hooks.sol":{"keccak256":"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959","urls":["bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a","dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"],"license":"MIT"}},"version":1},"id":58}