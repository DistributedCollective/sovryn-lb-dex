{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "Uint128x128Math__PowUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Constructor",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_InvalidLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario1",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario2",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario3",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario4",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x600b805460ff1916600117905530608052610120604052600560e090815264616c69636560d81b610100526200003590620000cf565b6001600160a01b031660a0526040805180820190915260038152623137b160e91b60208201526200006690620000cf565b6001600160a01b031660c05262000081611388600a62000202565b62000092906402540be40062000202565b602c55602d80546001600160a01b0319167349d5c2bdffac6ce2bfdb6640f4f80f226bc10bab179055348015620000c857600080fd5b50620002e8565b6000620000dc82620000e3565b5092915050565b60008082604051602001620000f9919062000254565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801562000165573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018b919062000272565b6040516318caf8e360e31b8152909250737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890620001c99085908790600401620002a4565b600060405180830381600087803b158015620001e457600080fd5b505af1158015620001f9573d6000803e3d6000fd5b50505050915091565b80820281158282048414176200022857634e487b7160e01b600052601160045260246000fd5b92915050565b60005b838110156200024b57818101518382015260200162000231565b50506000910152565b60008251620002688184602087016200022e565b9190910192915050565b6000602082840312156200028557600080fd5b81516001600160a01b03811681146200029d57600080fd5b9392505050565b60018060a01b03831681526040602082015260008251806040840152620002d38160608501602087016200022e565b601f01601f1916919091016060019392505050565b60805160a05160c0516201c9456200031b60003960005050600050506000818161524101526161bb01526201c9456000f3fe60806040523480156200001157600080fd5b5060043610620001ad5760003560e01c806366d9a9a011620000f5578063b5508aa91162000097578063e20c9f71116200006e578063e20c9f711462000342578063efbc8013146200034c578063fecaa223146200035657600080fd5b8063b5508aa91462000317578063b89e02331462000321578063ba414fa6146200033857600080fd5b8063889be5b711620000cc578063889be5b714620002ca578063916a17c614620002f6578063a7aa85e9146200030057600080fd5b806366d9a9a0146200028e57806385226c8114620002a75780638872168114620002c057600080fd5b80633c322dd3116200015f57806349789ef9116200013657806349789ef9146200025457806351f44d95146200027a5780635322e371146200028457600080fd5b80633c322dd314620002365780633e5e3c2314620002405780633f7286f4146200024a57600080fd5b80631ed7831c11620001945780631ed7831c14620001fa5780632ade38801462000213578063396b9c98146200022c57600080fd5b806301ffc9a714620001b25780630a9254e414620001ee575b600080fd5b620001d9620001c3366004620088cd565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b620001f86200036d565b005b6200020462000df0565b604051620001e591906200893f565b6200021d62000e54565b604051620001e59190620089a8565b620001f862000fa2565b620001f8620019a7565b6200020462001be5565b6200020462001c47565b6200026b6200026536600462008a80565b62001ca9565b604051908152602001620001e5565b620001f862001cfe565b620001f8620026fd565b62000298620030d8565b604051620001e5919062008ab8565b620002b1620031c2565b604051620001e5919062008b6f565b620001f86200329c565b620002e1620002db36600462008be9565b620034a1565b60405162ffffff9091168152602001620001e5565b62000298620034fc565b620001f86200031136600462008c40565b620035e6565b620002b162003a8c565b620001d96200033236600462008cdc565b62003b66565b620001d962003be9565b6200020462003ca8565b620001f862003d0a565b620001f86200036736600462008d02565b620046dd565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa158015620003f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200041d919081019062008e0a565b6302be17786040518363ffffffff1660e01b81526004016200044192919062008ea9565b6020604051808303816000875af115801562000461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000487919062008ecd565b5062000492620049e7565b601d54670de0b6b3a76400009069d3c21bcecceda100000090620004cd906001600160a01b031630620004c784600a62008efd565b6200605d565b601e54620004ec906001600160a01b031630620004c784600a62008efd565b601c546200050b906001600160a01b031630620004c784600a62008efd565b6022546200052a906001600160a01b031630620004c784600a62008efd565b60215462000549906001600160a01b031630620004c784600a62008efd565b602a54601e54601d546001600160a01b039283169263e8e3370092811691166200057560028762008f2d565b86600080306200058742600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af115801562000604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062a919062008f5a565b5050602a54601c54601d546001600160a01b03928316935063e8e337009291821691168480600080306200066042600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af1158015620006dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000703919062008f5a565b5050602a54602254601d546001600160a01b03928316935063e8e337009291821691166200073360028762008f2d565b86600080306200074542600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af1158015620007c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007e8919062008f5a565b505060248054601e54601d5460405163659ac74b60e01b81526001600160a01b03928316600482015290821693810193909352628000006044840152600a606484015216915063659ac74b906084016020604051808303816000875af115801562000857573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087d919062008f89565b50602454601c54601d546001600160a01b039283169263659ac74b9281169116620008ad62800000603262008fa9565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af11580156200090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000934919062008f89565b5060248054602254601d5460405163659ac74b60e01b81526001600160a01b03928316600482015290821693810193909352628000006044840152600a6064840152169063659ac74b906084016020604051808303816000875af1158015620009a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c7919062008f89565b50602454602154601d546001600160a01b039283169263659ac74b9281169116620009f762800000603262008fa9565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af115801562000a58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7e919062008f89565b50601e54601d5460009162000aa8916001600160a01b039182169116846280000060078662006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000adb90849060040162008ffa565b6000604051808303816000875af115801562000afb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b259190810190620091d1565b5050601c54601d5462000b6095506001600160a01b03918216945016915086905062000b5662800000603262008fa9565b6007600062006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000b9390849060040162008ffa565b6000604051808303816000875af115801562000bb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bdd9190810190620091d1565b5050602254601d5462000c0c95506001600160a01b039182169450169150859050628000006007600062006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000c3f90849060040162008ffa565b6000604051808303816000875af115801562000c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c899190810190620091d1565b5050602154601d5462000cba95506001600160a01b03918216945016915085905062000b5662800000603262008fa9565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000ced90849060040162008ffa565b6000604051808303816000875af115801562000d0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d379190810190620091d1565b5050602154601d5462000d6895506001600160a01b03918216945016915086905062000b5662800000603262008fa9565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000d9b90849060040162008ffa565b6000604051808303816000875af115801562000dbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000de59190810190620091d1565b505050505050505050565b6060601480548060200260200160405190810160405280929190818152602001828054801562000e4a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000e2b575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000f9957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000f8157838290600052602060002001805462000eed9062009261565b80601f016020809104026020016040519081016040528092919081815260200182805462000f1b9062009261565b801562000f6c5780601f1062000f405761010080835404028352916020019162000f6c565b820191906000526020600020905b81548152906001019060200180831162000f4e57829003601f168201915b50505050508152602001906001019062000ecb565b50505050815250508152602001906001019062000e78565b50505050905090565b604080516002808252606082018352600092602083019080368337505060225482519293506001600160a01b03169183915060009062000fe65762000fe66200929d565b6001600160a01b039283166020918202929092010152601d548251911690829060019081106200101a576200101a6200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a4090620010659086908690600401620092b3565b600060405180830381865afa15801562001083573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010ad919081019062009437565b9050620011248160800151600081518110620010cd57620010cd6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3100000000000000000000000000000081525062006209565b620011af81608001516001815181106200114257620011426200929d565b60200260200101516001600160801b031683600262001162919062009596565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a320000000000000000000000000000008152506200627d565b620012138160400151600081518110620011cd57620011cd6200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3300000000000000000000000000000081525062006209565b6200128b81606001516000815181106200123157620012316200929d565b602002602001015160018111156200124d576200124d620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620012ca9086908690600401620092b3565b600060405180830381865afa158015620012e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001312919081019062009437565b90506200138981608001516000815181106200133257620013326200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3500000000000000000000000000000081525062006209565b620014068160800151600181518110620013a757620013a76200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a360000000000000000000000000000008152506200627d565b6200146e81604001516000815181106200142457620014246200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3700000000000000000000000000000081525062006209565b620014e681606001516000815181106200148c576200148c6200929d565b60200260200101516001811115620014a857620014a8620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b031690635921422690620015219087908590600401620092b3565b600060405180830381865afa1580156200153f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001569919081019062009437565b9150620015f682608001516000815181106200158957620015896200929d565b60200260200101516001600160801b0316600283620015a99190620095da565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a390000000000000000000000000000008152506200627d565b6200166b82608001516001815181106200161457620016146200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3130000000000000000000000000000081525062006209565b620016cf82604001516000815181106200168957620016896200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3131000000000000000000000000000081525062006209565b620017478260600151600081518110620016ed57620016ed6200929d565b60200260200101516001811115620017095762001709620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620017859087908590600401620092b3565b600060405180830381865afa158015620017a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620017cd919081019062009437565b91506200184c8260800151600081518110620017ed57620017ed6200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313300000000000000000000000000008152506200627d565b620018c182608001516001815181106200186a576200186a6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3134000000000000000000000000000081525062006209565b620019298260400151600081518110620018df57620018df6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200194757620019476200929d565b60200260200101516001811115620019635762001963620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3136000000000000000000000000000081525062006209565b50505050565b6028546040805163198a0e9f60e11b8152905162001a63926001600160a01b0316916333141d3e9160048083019260209291908290030181865afa158015620019f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a1a919062008f89565b60255460408051808201909152601381527f746573745f436f6e7374727563746f723a3a310000000000000000000000000060208201526001600160a01b0390911690620062f4565b602854604080516307da8f5760e01b8152905162001b27926001600160a01b0316916307da8f579160048083019260209291908290030181865afa15801562001ab0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad6919062008f89565b739ad6c38be94206ca50bb0d90783181662f0cfa106040518060400160405280601381526020017f746573745f436f6e7374727563746f723a3a3300000000000000000000000000815250620062f4565b6028546040805163652b7e3960e11b8152905162001be3926001600160a01b03169163ca56fc729160048083019260209291908290030181865afa15801562001b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9a919062008f89565b60245460408051808201909152601381527f746573745f436f6e7374727563746f723a3a350000000000000000000000000060208201526001600160a01b0390911690620062f4565b565b6060601680548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6000808360ff1611801562001cc1575060008260ff16115b62001cd85762001cd2828462009603565b62001cf2565b600162001ce6838562009603565b62001cf291906200961f565b60ff1690505b92915050565b6040805160028082526060820183526000926020830190803683375050601e5482519293506001600160a01b03169183915060009062001d425762001d426200929d565b6001600160a01b039283166020918202929092010152601d5482519116908290600190811062001d765762001d766200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062001dc19086908690600401620092b3565b600060405180830381865afa15801562001ddf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e09919081019062009437565b905062001e80816080015160008151811062001e295762001e296200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3100000000000000000000000000000081525062006209565b62001f0b816080015160018151811062001e9e5762001e9e6200929d565b60200260200101516001600160801b031683600262001ebe919062009596565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a320000000000000000000000000000008152506200627d565b62001f6f816040015160008151811062001f295762001f296200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3300000000000000000000000000000081525062006209565b62001fe7816060015160008151811062001f8d5762001f8d6200929d565b6020026020010151600181111562001fa95762001fa9620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620020269086908690600401620092b3565b600060405180830381865afa15801562002044573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200206e919081019062009437565b9050620020e581608001516000815181106200208e576200208e6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3500000000000000000000000000000081525062006209565b6200216281608001516001815181106200210357620021036200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a360000000000000000000000000000008152506200627d565b620021ca81604001516000815181106200218057620021806200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3700000000000000000000000000000081525062006209565b620022428160600151600081518110620021e857620021e86200929d565b60200260200101516001811115620022045762002204620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b0316906359214226906200227d9087908590600401620092b3565b600060405180830381865afa1580156200229b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620022c5919081019062009437565b9150620023528260800151600081518110620022e557620022e56200929d565b60200260200101516001600160801b0316600283620023059190620095da565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a390000000000000000000000000000008152506200627d565b620023c782608001516001815181106200237057620023706200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3130000000000000000000000000000081525062006209565b6200242b8260400151600081518110620023e557620023e56200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3131000000000000000000000000000081525062006209565b620024a382606001516000815181106200244957620024496200929d565b60200260200101516001811115620024655762002465620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620024e19087908590600401620092b3565b600060405180830381865afa158015620024ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002529919081019062009437565b9150620025a882608001516000815181106200254957620025496200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313300000000000000000000000000008152506200627d565b6200261d8260800151600181518110620025c657620025c66200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3134000000000000000000000000000081525062006209565b6200268582604001516000815181106200263b576200263b6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3135000000000000000000000000000081525062006209565b620019a18260600151600081518110620026a357620026a36200929d565b60200260200101516001811115620026bf57620026bf620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3136000000000000000000000000000081525062006209565b604080516002808252606082018352600092602083019080368337505060215482519293506001600160a01b0316918391506000906200274157620027416200929d565b6001600160a01b039283166020918202929092010152601d548251911690829060019081106200277557620027756200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a4090620027c09086908690600401620092b3565b600060405180830381865afa158015620027de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002808919081019062009437565b90506200287f81608001516000815181106200282857620028286200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3100000000000000000000000000000081525062006209565b620028f481608001516001815181106200289d576200289d6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3200000000000000000000000000000081525062006331565b6200295c81604001516000815181106200291257620029126200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3300000000000000000000000000000081525062006209565b620029d481606001516000815181106200297a576200297a6200929d565b60200260200101516001811115620029965762002996620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a409062002a139086908690600401620092b3565b600060405180830381865afa15801562002a31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002a5b919081019062009437565b905062002ad2816080015160008151811062002a7b5762002a7b6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3500000000000000000000000000000081525062006209565b62002b4f816080015160018151811062002af05762002af06200929d565b60200260200101516001600160801b0316836001600160801b031666d529ae9e8600006040518060400160405280601181526020017f746573745f5363656e6172696f343a3a360000000000000000000000000000008152506200627d565b62002bb7816040015160008151811062002b6d5762002b6d6200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3700000000000000000000000000000081525062006209565b62002c2f816060015160008151811062002bd55762002bd56200929d565b6020026020010151600181111562002bf15762002bf1620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b03169063592142269062002c6a9087908590600401620092b3565b600060405180830381865afa15801562002c88573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002cb2919081019062009437565b915062002d29826080015160008151811062002cd25762002cd26200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a390000000000000000000000000000008152506200636e565b62002d9e826080015160018151811062002d475762002d476200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3130000000000000000000000000000081525062006209565b62002e06826040015160008151811062002dbc5762002dbc6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3131000000000000000000000000000081525062006209565b62002e7e826060015160008151811062002e245762002e246200929d565b6020026020010151600181111562002e405762002e40620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b03169063592142269062002ebc9087908590600401620092b3565b600060405180830381865afa15801562002eda573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002f04919081019062009437565b915062002f83826080015160008151811062002f245762002f246200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313300000000000000000000000000008152506200627d565b62002ff8826080015160018151811062002fa15762002fa16200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3134000000000000000000000000000081525062006209565b6200306082604001516000815181106200301657620030166200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200307e576200307e6200929d565b602002602001015160018111156200309a576200309a620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3136000000000000000000000000000081525062006209565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000f995760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620031a957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200316a5790505b50505050508152505081526020019060010190620030fc565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000f99578382906000526020600020018054620032089062009261565b80601f0160208091040260200160405190810160405280929190818152602001828054620032369062009261565b8015620032875780601f106200325b5761010080835404028352916020019162003287565b820191906000526020600020905b8154815290600101906020018083116200326957829003601f168201915b505050505081526020019060010190620031e6565b6040805160018082528183019092526060916020808301908036833701905050604051630618f58760e51b8152632973c80b60e01b6004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200331357600080fd5b505af115801562003328573d6000803e3d6000fd5b5050602854604051623e40a960e61b81526001600160a01b039091169250630f902a40915062003367908490670de0b6b3a764000090600401620092b3565b600060405180830381865afa15801562003385573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620033af919081019062009437565b50604051630618f58760e51b8152632973c80b60e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200340457600080fd5b505af115801562003419573d6000803e3d6000fd5b5050602854604051632c90a11360e11b81526001600160a01b03909116925063592142269150620034559084906301312d0090600401620092b3565b600060405180830381865afa15801562003473573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200349d919081019062009437565b5050565b600080620034b58462ffffff871662008f44565b905060008360ff1611620034ca5780620034e6565b620034d960ff8416826200963b565b620034e690600162008f44565b9050620034f381620063ab565b95945050505050565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000f995760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620035cd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200358e5790505b5050505050815250508152602001906001019062003520565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003627573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200364d919062008f89565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003690573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036b6919062008f89565b9050620036c5828b886200605d565b620036d2818b876200605d565b6000620036e0858562001ca9565b905060008167ffffffffffffffff81111562003700576200370062008d94565b6040519080825280602002602001820160405280156200372a578160200160208202803683370190505b50905060005b8281101562003829576000620037488b8389620034a1565b905060008b62ffffff168262ffffff16101580156200376a575060008960ff16115b6200377757600062003798565b620037986200379260ff8b16670de0b6b3a764000062008f2d565b620063d7565b905060008c62ffffff168362ffffff1611158015620037ba575060008960ff16115b620037c7576000620037e2565b620037e26200379260ff8b16670de0b6b3a764000062008f2d565b9050620037f182828562006403565b8585815181106200380657620038066200929d565b60200260200101818152505050505080620038219062009651565b905062003730565b506040516303223eab60e11b81526001600160a01b038d166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200388057600080fd5b505af115801562003895573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af1158015620038e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200390f91906200967e565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af115801562003960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200398691906200967e565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620039e657600080fd5b505af1158015620039fb573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b815260040162003a31939291906200969c565b6000604051808303816000875af115801562003a51573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003a7b919081019062009702565b505050505050505050505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000f9957838290600052602060002001805462003ad29062009261565b80601f016020809104026020016040519081016040528092919081815260200182805462003b009062009261565b801562003b515780601f1062003b255761010080835404028352916020019162003b51565b820191906000526020600020905b81548152906001019060200180831162003b3357829003601f168201915b50505050508152602001906001019062003ab0565b60248054604051632aaf12cf60e21b815261ffff841660048201526000926001600160a01b039092169163aabc4b3c910161010060405180830381865afa15801562003bb6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bdc919062009756565b9998505050505050505050565b60075460009060ff161562003c02575060075460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562003c7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ca1919062008ecd565b1415905090565b6060601380548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6040805160028082526060820183526000926020830190803683375050601c5482519293506001600160a01b03169183915060009062003d4e5762003d4e6200929d565b6001600160a01b039283166020918202929092010152601d5482519116908290600190811062003d825762003d826200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062003dcd9086908690600401620092b3565b600060405180830381865afa15801562003deb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003e15919081019062009437565b905062003e8c816080015160008151811062003e355762003e356200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3100000000000000000000000000000081525062006209565b62003f01816080015160018151811062003eaa5762003eaa6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3200000000000000000000000000000081525062006331565b62003f69816040015160008151811062003f1f5762003f1f6200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3300000000000000000000000000000081525062006209565b62003fe1816060015160008151811062003f875762003f876200929d565b6020026020010151600181111562003fa35762003fa3620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620040209086908690600401620092b3565b600060405180830381865afa1580156200403e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004068919081019062009437565b9050620040df81608001516000815181106200408857620040886200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3500000000000000000000000000000081525062006209565b6200415c8160800151600181518110620040fd57620040fd6200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a360000000000000000000000000000008152506200627d565b620041c081604001516000815181106200417a576200417a6200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3700000000000000000000000000000081525062006209565b620042388160600151600081518110620041de57620041de6200929d565b60200260200101516001811115620041fa57620041fa620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b031690635921422690620042739087908590600401620092b3565b600060405180830381865afa15801562004291573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620042bb919081019062009437565b9150620043328260800151600081518110620042db57620042db6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a390000000000000000000000000000008152506200636e565b620043a782608001516001815181106200435057620043506200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3130000000000000000000000000000081525062006209565b6200440f8260400151600081518110620043c557620043c56200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3131000000000000000000000000000081525062006209565b6200448782606001516000815181106200442d576200442d6200929d565b60200260200101516001811115620044495762004449620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620044c59087908590600401620092b3565b600060405180830381865afa158015620044e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200450d919081019062009437565b91506200458c82608001516000815181106200452d576200452d6200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313300000000000000000000000000008152506200627d565b620046018260800151600181518110620045aa57620045aa6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3134000000000000000000000000000081525062006209565b6200466582604001516000815181106200461f576200461f6200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200468357620046836200929d565b602002602001015160018111156200469f576200469f620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3136000000000000000000000000000081525062006209565b670de0b6b3a76400008311156200473b5760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062004749838362001ca9565b905060008167ffffffffffffffff81111562004769576200476962008d94565b60405190808252806020026020018201604052801562004793578160200160208202803683370190505b50905060008267ffffffffffffffff811115620047b457620047b462008d94565b604051908082528060200260200182016040528015620047de578160200160208202803683370190505b50905060005b83811015620048ec576000620047fc898388620034a1565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562004852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004878919062008ecd565b90508162ffffff168584815181106200489557620048956200929d565b6020908102919091010152620048b5818a670de0b6b3a764000062006441565b848481518110620048ca57620048ca6200929d565b602002602001018181525050505080620048e49062009651565b9050620047e4565b5060405163ca669fa760e01b81526001600160a01b038b166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200494357600080fd5b505af115801562004958573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062004990908d908d9087908790600401620097b0565b6000604051808303816000875af1158015620049b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620049da9190810190620097fd565b5050505050505050505050565b601c80546001600160a01b03191673b31f66aa3c1e785363f0875a1b74e27b85fd66c79081179091553b60000362004ae957601c54604051737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b4d6c782916001600160a01b039091169062004a529062008836565b604051809103906000f08015801562004a6f573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b815260040162004ab492919062009836565b600060405180830381600087803b15801562004acf57600080fd5b505af115801562004ae4573d6000803e3d6000fd5b505050505b600660405162004af99062008844565b60ff9091168152602001604051809103906000f08015801562004b20573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691909117905560405160069062004b529062008844565b60ff9091168152602001604051809103906000f08015801562004b79573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b039290921691909117905560405160089062004bab9062008844565b60ff9091168152602001604051809103906000f08015801562004bd2573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b039290921691909117905560405160129062004c049062008844565b60ff9091168152602001604051809103906000f08015801562004c2b573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691909117905560405160129062004c5d9062008844565b60ff9091168152602001604051809103906000f08015801562004c84573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b039290921691909117905560405160129062004cb69062008844565b60ff9091168152602001604051809103906000f08015801562004cdd573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b039290921691909117905560405162004d0c9062008852565b604051809103906000f08015801562004d29573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b03928316179055601c54604080516318caf8e360e31b81529190921660048201526024810191909152600760448201527f776e6174697665000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801562004dcf57600080fd5b505af115801562004de4573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004e6157600080fd5b505af115801562004e76573d6000803e3d6000fd5b5050601e54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004ef357600080fd5b505af115801562004f08573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004f8557600080fd5b505af115801562004f9a573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200501757600080fd5b505af11580156200502c573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620050a957600080fd5b505af1158015620050be573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526231373160e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200513557600080fd5b505af11580156200514a573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e0000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620051db57600080fd5b505af1158015620051f0573d6000803e3d6000fd5b5050602a80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602b8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040517f00000000000000000000000000000000000000000000000000000000000000009081906602d79883d2000090620052779062008860565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f080158015620052b2573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169182179055604051620052e0906200886e565b6001600160a01b039091168152602001604051809103906000f0801580156200530d573d6000803e3d6000fd5b50602980546001600160a01b0319166001600160a01b039283169081179091556024805460405163b038478160e01b815260048101939093529092169163b03847819101600060405180830381600087803b1580156200536c57600080fd5b505af115801562005381573d6000803e3d6000fd5b505050506200538f6200646f565b6200539b600a62006812565b602454602b54601c546040516001600160a01b03938416939283169290911690620053c6906200887c565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562005403573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316908117909155602b54602454604051918416931691906200543e906200888a565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200547b573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316179055602554604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f7574657200000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200552157600080fd5b505af115801562005536573d6000803e3d6000fd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f74657200000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620055c757600080fd5b505af1158015620055dc573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600760448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200567057600080fd5b505af115801562005685573d6000803e3d6000fd5b5050602954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e00000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200571657600080fd5b505af11580156200572b573d6000803e3d6000fd5b5050602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f7574657256310000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620057bc57600080fd5b505af1158015620057d1573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f7279563100000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200586257600080fd5b505af115801562005877573d6000803e3d6000fd5b5050601c54602a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af1158015620058d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058f891906200967e565b50601d54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200597691906200967e565b50601e54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620059ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059f491906200967e565b50601f54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a7291906200967e565b50602254602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005aca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005af091906200967e565b50602054602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005b48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b6e91906200967e565b50602154602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005bc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bec91906200967e565b50602354602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005c44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c6a91906200967e565b50601c5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005cc2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ce891906200967e565b50601d5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d6691906200967e565b50601e5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005dbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005de491906200967e565b50601f5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005e3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e6291906200967e565b5060225460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005eba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ee091906200967e565b5060205460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005f38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f5e91906200967e565b5060215460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005fb6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fdc91906200967e565b5060235460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200605a91906200967e565b50565b6200606c8383836000620068b9565b505050565b6200610f604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600080600080620061238989898962006abc565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620061a18a8762006dcb90919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a001620061f8426103e862008f44565b90529b9a5050505050505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062006246908690869086906004016200985a565b60006040518083038186803b1580156200625f57600080fd5b505afa15801562006274573d6000803e3d6000fd5b50505050505050565b604051631ecb7d3360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90631ecb7d3390620062bc9087908790879087906004016200987b565b60006040518083038186803b158015620062d557600080fd5b505afa158015620062ea573d6000803e3d6000fd5b5050505050505050565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d1906200624690869086908690600401620098a2565b604051636cd1e26960e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063d9a3c4d29062006246908690869086906004016200985a565b6040516365d5c13560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906365d5c1359062006246908690869086906004016200985a565b8062ffffff81168114620063d257604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff81168114620063d25760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b600080600062006452868662006e8f565b9150915062006465868686858562006eae565b9695505050505050565b601c546001600160a01b031615620064e45760248054601c54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620064ca57600080fd5b505af1158015620064df573d6000803e3d6000fd5b505050505b601d546001600160a01b031615620065595760248054601d54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200653f57600080fd5b505af115801562006554573d6000803e3d6000fd5b505050505b601e546001600160a01b031615620065ce5760248054601e54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620065b457600080fd5b505af1158015620065c9573d6000803e3d6000fd5b505050505b601f546001600160a01b031615620066435760248054601f54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200662957600080fd5b505af11580156200663e573d6000803e3d6000fd5b505050505b6022546001600160a01b031615620066b85760248054602254604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200669e57600080fd5b505af1158015620066b3573d6000803e3d6000fd5b505050505b6020546001600160a01b0316156200672d5760248054602054604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200671357600080fd5b505af115801562006728573d6000803e3d6000fd5b505050505b6021546001600160a01b031615620067a25760248054602154604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200678857600080fd5b505af11580156200679d573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562001be35760248054602354604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620067fd57600080fd5b505af1158015620019a1573d6000803e3d6000fd5b6024805460405163379ee80360e01b815261ffff84166004820152611388928101839052601e604482015261025860648201526084810192909252619c4060a48301526103e860c48301526205573060e483015260006101048301526001600160a01b03169063379ee8039061012401600060405180830381600087803b1580156200689d57600080fd5b505af1158015620068b2573d6000803e3d6000fd5b5050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200690f91620098d0565b600060405180830381855afa9150503d80600081146200694c576040519150601f19603f3d011682016040523d82523d6000602084013e62006951565b606091505b509150506000818060200190518101906200696d919062008ecd565b9050620069a784620069a087620069996370a0823160e01b62006992600c8d62006f60565b9062006f88565b9062006fa6565b9062006fcf565b821562006ab45760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620069f29190620098d0565b600060405180830381855afa9150503d806000811462006a2f576040519150601f19603f3d011682016040523d82523d6000602084013e62006a34565b606091505b5091505060008180602001905181019062006a50919062008ecd565b90508286101562006a7b5762006a6786846200963b565b62006a7390826200963b565b905062006a96565b62006a8783876200963b565b62006a93908262008f44565b90505b620062ea81620069a06318160ddd60e01b62006992600c8d62006f60565b505050505050565b60608080600062006acf600287620098ee565b62ffffff1660000362006b255760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e73604482015260640162004732565b600062006b3460028862009913565b90508662ffffff1667ffffffffffffffff81111562006b575762006b5762008d94565b60405190808252806020026020018201604052801562006b81578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff81111562006ba55762006ba562008d94565b60405190808252806020026020018201604052801562006bcf578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff81111562006bf35762006bf362008d94565b60405190808252806020026020018201604052801562006c1d578160200160208202803683370190505b509250600062006c2f82600162008fa9565b62006c489062ffffff16670de0b6b3a764000062008f2d565b9050600062006c5983600162008fa9565b62006c6a9062ffffff168c62008f2d565b905060005b8962ffffff1681101562006dbc5762006c8a89600162008fa9565b62006c9b9062ffffff168262008efd565b62006ca88a600162008fa9565b62006cb490866200992c565b62006cc0908d6200994e565b62ffffff1662006cd1919062008f44565b88828151811062006ce65762006ce66200929d565b6020026020010181815250508362ffffff16811162006d22578286828151811062006d155762006d156200929d565b6020026020010181815250505b8362ffffff16811062006da7578287828151811062006d455762006d456200929d565b6020026020010181815250506000821162006d6257600062006d98565b62006d98608062006d8f8a848151811062006d815762006d816200929d565b602002602001015162006fdb565b84919062006fea565b62006da4908662008f44565b94505b8062006db38162009651565b91505062006c6f565b50505050945094509450949050565b6060825167ffffffffffffffff81111562006dea5762006dea62008d94565b60405190808252806020026020018201604052801562006e14578160200160208202803683370190505b50905060005b835181101562006e88578262ffffff1684828151811062006e3f5762006e3f6200929d565b602002602001015162006e5391906200996d565b82828151811062006e685762006e686200929d565b60209081029190910101528062006e7f8162009651565b91505062006e1a565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b60008160000362006ed45783838162006ecb5762006ecb62008f17565b049050620034f3565b83821062006ef5576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60038201805463ffffffff191660e083901c17905560008262006f81565b6002820180546001810182556000918252602082206001600160a01b0384169101558262006f81565b6200349d828262007016565b600062001cf882600a6200742d565b600060ff831684811b9061ffff6101008290031686901c90620064659087906001901b86858562006eae565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200708957602002820191906000526020600020905b81548152602001906001019080831162007074575b505050505090506000836200709e836200746a565b604051602001620070b192919062009990565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162007105918691889101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662007140576200713e8762007517565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162007181918791899101620099c3565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620071c89190620098d0565b600060405180830381855afa9150503d806000811462007205576040519150601f19603f3d011682016040523d82523d6000602084013e6200720a565b606091505b509150620072279050816200722188602062008efd565b62007524565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa1580156200728e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620072b4919062008ecd565b90508082146200736b5760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162004732565b6040516370ca10bb60e01b81526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015620073cf57600080fd5b505af1158015620073e4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200741960028b01600062008898565b896004016000905550505050505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620034f38282620075c6565b60606000825160206200747e919062008efd565b67ffffffffffffffff81111562007499576200749962008d94565b6040519080825280601f01601f191660200182016040528015620074c4576020820181803683370190505b50905060005b835181101562006e88576000848281518110620074eb57620074eb6200929d565b6020026020010151905080826020026020018401525080806200750e9062009651565b915050620074ca565b600062001cf88262007845565b600080600060208551116200753b5784516200753e565b60205b905060005b81811015620075bc576200755981600862008efd565b8662007566838862008f44565b815181106200757957620075796200929d565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620075b38162009651565b91505062007543565b5090949350505050565b600080600083600003620075e45750600160801b915062001cf89050565b50826000811215620075f7579015906000035b62100000811015620077fd57600160801b9250846001600160801b038111156200762357911591600019045b6001821615620076355792830260801c925b800260801c60028216156200764c5792830260801c925b800260801c6004821615620076635792830260801c925b800260801c60088216156200767a5792830260801c925b800260801c6010821615620076915792830260801c925b800260801c6020821615620076a85792830260801c925b800260801c6040821615620076bf5792830260801c925b8002608090811c90821615620076d75792830260801c925b800260801c610100821615620076ef5792830260801c925b800260801c610200821615620077075792830260801c925b800260801c6104008216156200771f5792830260801c925b800260801c610800821615620077375792830260801c925b800260801c6110008216156200774f5792830260801c925b800260801c612000821615620077675792830260801c925b800260801c6140008216156200777f5792830260801c925b800260801c618000821615620077975792830260801c925b800260801c62010000821615620077b05792830260801c925b800260801c62020000821615620077c95792830260801c925b800260801c62040000821615620077e25792830260801c925b800260801c62080000821615620077fb5792830260801c925b505b826000036200782a57604051631dba598d60e11b8152600481018690526024810185905260440162004732565b81620078375782620034f3565b620034f38360001962008f2d565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620078b757602002820191906000526020600020905b815481526020019060010190808311620078a2575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200790392508591879101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620079a2576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162007972918591879101620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620079b083620086f1565b604051602001620079c392919062009990565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007a3357600080fd5b505af115801562007a48573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162007a699190620098d0565b600060405180830381855afa9150503d806000811462007aa6576040519150601f19603f3d011682016040523d82523d6000602084013e62007aab565b606091505b50915062007ac890508162007ac287602062008efd565b6200879e565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af115801562007b2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007b549190810190620099ff565b509050805160010362007ef85760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898460008151811062007bac5762007bac6200929d565b60200260200101516040518363ffffffff1660e01b815260040162007be69291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562007c04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007c2a919062008ecd565b90508062007c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062007c6a5762007c6a6200929d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462007d4a5760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162004732565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162007d82929190620099c3565b604051602081830303815290604052805190602001208560008151811062007dae5762007dae6200929d565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a18160008151811062007e085762007e086200929d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262007e53918a918c9101620099c3565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162007ebd918a918c9101620099c3565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062008566565b600181511115620084f55760005b8151811015620084ee5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a85858151811062007f5a5762007f5a6200929d565b60200260200101516040518363ffffffff1660e01b815260040162007f949291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562007fb2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007fd8919062008ecd565b90508062008042577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200801757620080176200929d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b838114620080515750620084d9565b8251811990737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb908c908790879081106200808957620080896200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b158015620080e257600080fd5b505af1158015620080f7573d6000803e3d6000fd5b50505050600060608b6001600160a01b031688604051620081199190620098d0565b600060405180830381855afa9150503d806000811462008156576040519150601f19603f3d011682016040523d82523d6000602084013e6200815b565b606091505b509092509050620081738162007ac28c602062008efd565b9650508080156200818357508186145b156200841b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620081c1929190620099c3565b60405160208183030381529060405280519060200120888881518110620081ec57620081ec6200929d565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a18484815181106200824557620082456200929d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262008290918d918f9101620099c3565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200831d929190620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110620083a057620083a06200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620083f957600080fd5b505af11580156200840e573d6000803e3d6000fd5b50505050505050620084ee565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c8787815181106200846357620084636200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620084bc57600080fd5b505af1158015620084d1573d6000803e3d6000fd5b505050505050505b80620084e58162009651565b91505062007f06565b5062008566565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162004732565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620085aa9188918a9101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620086475760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162004732565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200867860028a01600062008898565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620086be9188918a9101620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b606060008251602062008705919062008efd565b67ffffffffffffffff81111562008720576200872062008d94565b6040519080825280601f01601f1916602001820160405280156200874b576020820181803683370190505b50905060005b835181101562006e885760008482815181106200877257620087726200929d565b602002602001015190508082602002602001840152508080620087959062009651565b91505062008751565b60008060006020855111620087b5578451620087b8565b60205b905060005b81811015620075bc57620087d381600862008efd565b86620087e0838862008f44565b81518110620087f357620087f36200929d565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200882d8162009651565b915050620087bd565b610b088062009a6b83390190565b610bfd806200a57383390190565b610c18806200b17083390190565b613199806200bd8883390190565b61615c806200ef2183390190565b614c80806201507d83390190565b612c138062019cfd83390190565b50805460008255906000526020600020908101906200605a91905b80821115620088c95760008155600101620088b3565b5090565b600060208284031215620088e057600080fd5b81356001600160e01b03198116811462006f8157600080fd5b600081518084526020808501945080840160005b83811015620089345781516001600160a01b0316875295820195908201906001016200890d565b509495945050505050565b60208152600062006f816020830184620088f9565b60005b838110156200897157818101518382015260200162008957565b50506000910152565b600081518084526200899481602086016020860162008954565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562008a5e57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562008a4757605f1989850301835262008a348486516200897a565b948e01949350918d019160010162008a15565b505050978a019794505091880191600101620089cf565b50919a9950505050505050505050565b803560ff81168114620063d257600080fd5b6000806040838503121562008a9457600080fd5b62008a9f8362008a6e565b915062008aaf6020840162008a6e565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562008b6057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562008b4a5783516001600160e01b0319168252928b019260019290920191908b019062008b1e565b50978a0197955050509187019160010162008ae0565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562008bc857603f1988860301845262008bb58583516200897a565b9450928501929085019060010162008b96565b5092979650505050505050565b803562ffffff81168114620063d257600080fd5b60008060006060848603121562008bff57600080fd5b62008c0a8462008bd5565b92506020840135915062008c216040850162008a6e565b90509250925092565b6001600160a01b03811681146200605a57600080fd5b600080600080600080600080610100898b03121562008c5e57600080fd5b883562008c6b8162008c2a565b9750602089013562008c7d8162008c2a565b9650604089013562008c8f8162008c2a565b955062008c9f60608a0162008bd5565b94506080890135935060a0890135925062008cbd60c08a0162008a6e565b915062008ccd60e08a0162008a6e565b90509295985092959890939650565b60006020828403121562008cef57600080fd5b813561ffff8116811462006f8157600080fd5b600080600080600080600060e0888a03121562008d1e57600080fd5b873562008d2b8162008c2a565b9650602088013562008d3d8162008c2a565b9550604088013562008d4f8162008c2a565b945062008d5f6060890162008bd5565b93506080880135925062008d7660a0890162008a6e565b915062008d8660c0890162008a6e565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171562008dd05762008dd062008d94565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562008e025762008e0262008d94565b604052919050565b60006020828403121562008e1d57600080fd5b815167ffffffffffffffff8082111562008e3657600080fd5b818401915084601f83011262008e4b57600080fd5b81518181111562008e605762008e6062008d94565b62008e75601f8201601f191660200162008dd6565b915080825285602082850101111562008e8d57600080fd5b62008ea081602084016020860162008954565b50949350505050565b60408152600062008ebe60408301856200897a565b90508260208301529392505050565b60006020828403121562008ee057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762001cf85762001cf862008ee7565b634e487b7160e01b600052601260045260246000fd5b60008262008f3f5762008f3f62008f17565b500490565b8082018082111562001cf85762001cf862008ee7565b60008060006060848603121562008f7057600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121562008f9c57600080fd5b815162006f818162008c2a565b62ffffff81811683821601908082111562006e885762006e8862008ee7565b600081518084526020808501945080840160005b83811015620089345781518752958201959082019060010162008fdc565b60208152620090156020820183516001600160a01b03169052565b600060208301516200903260408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e06101408181860152620090a361020086018462008fc8565b9250808601519050601f19610160818786030181880152620090c6858462008fc8565b945080880151925050610180818786030181880152620090e7858462008fc8565b945080880151925050506101a062009109818701836001600160a01b03169052565b86015190506101c062009126868201836001600160a01b03169052565b959095015193019290925250919050565b600067ffffffffffffffff82111562009154576200915462008d94565b5060051b60200190565b600082601f8301126200917057600080fd5b8151602062009189620091838362009137565b62008dd6565b82815260059290921b84018101918181019086841115620091a957600080fd5b8286015b84811015620091c65780518352918301918301620091ad565b509695505050505050565b60008060008060008060c08789031215620091eb57600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200922057600080fd5b6200922e8a838b016200915e565b935060a08901519150808211156200924557600080fd5b506200925489828a016200915e565b9150509295509295509295565b600181811c908216806200927657607f821691505b6020821081036200929757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b604081526000620092c86040830185620088f9565b90506001600160801b03831660208301529392505050565b600082601f830112620092f257600080fd5b8151602062009305620091838362009137565b82815260059290921b840181019181810190868411156200932557600080fd5b8286015b84811015620091c65780516200933f8162008c2a565b835291830191830162009329565b600082601f8301126200935f57600080fd5b8151602062009372620091838362009137565b82815260059290921b840181019181810190868411156200939257600080fd5b8286015b84811015620091c657805160028110620093b05760008081fd5b835291830191830162009396565b600082601f830112620093d057600080fd5b81516020620093e3620091838362009137565b82815260059290921b840181019181810190868411156200940357600080fd5b8286015b84811015620091c65780516001600160801b0381168114620094295760008081fd5b835291830191830162009407565b6000602082840312156200944a57600080fd5b815167ffffffffffffffff808211156200946357600080fd5b9083019060e082860312156200947857600080fd5b6200948262008daa565b8251828111156200949257600080fd5b620094a087828601620092e0565b825250602083015182811115620094b657600080fd5b620094c487828601620092e0565b602083015250604083015182811115620094dd57600080fd5b620094eb878286016200915e565b6040830152506060830151828111156200950457600080fd5b62009512878286016200934d565b6060830152506080830151828111156200952b57600080fd5b6200953987828601620093be565b60808301525060a0830151828111156200955257600080fd5b6200956087828601620093be565b60a08301525060c0830151828111156200957957600080fd5b6200958787828601620093be565b60c08301525095945050505050565b6001600160801b03818116838216028082169190828114620095bc57620095bc62008ee7565b505092915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160801b0380841680620095f757620095f762008f17565b92169190910492915050565b60ff818116838216019081111562001cf85762001cf862008ee7565b60ff828116828216039081111562001cf85762001cf862008ee7565b8181038181111562001cf85762001cf862008ee7565b60006001820162009666576200966662008ee7565b5060010190565b80518015158114620063d257600080fd5b6000602082840312156200969157600080fd5b62006f81826200966d565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015620096e957855183529483019491830191600101620096cb565b5050809450505080851660408501525050949350505050565b6000806000606084860312156200971857600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156200973e57600080fd5b6200974c868287016200915e565b9150509250925092565b600080600080600080600080610100898b0312156200977457600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c0890151915062008ccd60e08a016200966d565b60006001600160a01b03808716835280861660208401525060806040830152620097de608083018562008fc8565b8281036060840152620097f2818562008fc8565b979650505050505050565b6000602082840312156200981057600080fd5b815167ffffffffffffffff8111156200982857600080fd5b62006439848285016200915e565b6001600160a01b03831681526040602082015260006200643960408301846200897a565b838152826020820152606060408201526000620034f360608301846200897a565b8481528360208201528260408201526080606082015260006200646560808301846200897a565b60006001600160a01b03808616835280851660208401525060606040830152620034f360608301846200897a565b60008251620098e481846020870162008954565b9190910192915050565b600062ffffff8084168062009907576200990762008f17565b92169190910692915050565b600062ffffff80841680620095f757620095f762008f17565b62ffffff818116838216028082169190828114620095bc57620095bc62008ee7565b62ffffff82811682821603908082111562006e885762006e8862008ee7565b818103600083128015838313168383128216171562006e885762006e8862008ee7565b6001600160e01b0319831681528151600090620099b581600485016020870162008954565b919091016004019392505050565b825160009082906020808701845b83811015620099ef57815185529382019390820190600101620099d1565b5050948252509092019392505050565b6000806040838503121562009a1357600080fd5b825167ffffffffffffffff8082111562009a2c57600080fd5b62009a3a868387016200915e565b9350602085015191508082111562009a5157600080fd5b5062009a60858286016200915e565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212202ab795b0ce94f91a024b1b71ac52b4e387b166615116741de962b87d1ded9a1864736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea26469706673582212205296d056711532a17a7f21b9195714e6ae436d190f9587fc6d35d78c684b979e64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea26469706673582212200988457821d8f641a4db2c08c8ebdf8daee4316adc97b169284e2643f76d147064736f6c6343000814003360806040523480156200001157600080fd5b506040516200319938038062003199833981016040819052620000349162000253565b816001600160a01b0381166200006557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000708162000100565b5067016345785d8a0000811115620000ad57604051635e8988c160e01b81526004810182905267016345785d8a000060248201526044016200005c565b620000b8836200011e565b60048190556040805160008152602081018390527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a150505062000294565b600180546001600160a01b03191690556200011b81620001e6565b50565b6001600160a01b0381166200014657604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b0390811690821681036200018757600354604051634fcea97160e01b81526001600160a01b0390911660048201526024016200005c565b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200024e57600080fd5b919050565b6000806000606084860312156200026957600080fd5b620002748462000236565b9250620002846020850162000236565b9150604084015190509250925092565b612ef580620002a46000396000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c8063701ab8c111610186578063aabc4b3c116100e3578063e203a31f11610097578063e92d0d5d11610071578063e92d0d5d14610627578063f2fde38b1461063a578063fd90c2be1461064d57600080fd5b8063e203a31f146105f0578063e30c397814610603578063e74b981b1461061457600080fd5b8063b0384781116100c8578063b0384781146105b7578063d547741f146105ca578063ddbfd941146105dd57600080fd5b8063aabc4b3c14610556578063af371065146105a657600080fd5b806380c5061e1161013a5780638da5cb5b1161011f5780638da5cb5b1461052a57806391d148541461053b578063a217fddf1461054e57600080fd5b806380c5061e146105145780638ce9aa1c1461051c57600080fd5b8063715018a61161016b578063715018a6146104f157806379ba5097146104f95780637daf5d661461050157600080fd5b8063701ab8c1146104ca578063704037bd146104d157600080fd5b8063379ee8031161023f5780634e937c3a116101f3578063659ac74b116101cd578063659ac74b146104845780636622e0d71461049757806369d56ea3146104b757600080fd5b80634e937c3a146104615780635a440923146104695780635b35875c1461047c57600080fd5b80633c78a941116102245780633c78a9411461042a5780634ccb20c01461043d5780634cd161d31461044e57600080fd5b8063379ee803146104045780633a2f1a911461041757600080fd5b8063248a9ca3116102965780632cc06b8c1161027b5780632cc06b8c146103cb5780632f2ff15d146103de57806336568abe146103f157600080fd5b8063248a9ca31461039557806327721842146103b857600080fd5b80630752092b116102c75780630752092b14610320578063093ff7691461034b5780631af5bacc1461036057600080fd5b806301ffc9a7146102e35780630282c9c11461030b575b600080fd5b6102f66102f13660046127ff565b610655565b60405190151581526020015b60405180910390f35b61031361068c565b6040516103029190612829565b61033361032e36600461286d565b610766565b6040516001600160a01b039091168152602001610302565b61035e6103593660046128c0565b610773565b005b6103877fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b604051908152602001610302565b6103876103a336600461286d565b60009081526002602052604090206001015490565b6102f66103c636600461297e565b610879565b61035e6103d936600461299b565b610886565b61035e6103ec3660046129e2565b6108d5565b61035e6103ff3660046129e2565b6108fa565b61035e610412366004612a22565b610932565b61035e610425366004612aca565b610a4e565b61035e61043836600461297e565b610b00565b6003546001600160a01b0316610333565b61035e61045c366004612b7b565b610b5e565b600654610387565b61035e61047736600461297e565b610c29565b610313610c9b565b610333610492366004612bae565b610cac565b6104aa6104a5366004612c06565b6111f7565b6040516103029190612c34565b61035e6104c5366004612ca8565b61138f565b6001610387565b6104e46104df366004612cf5565b611519565b6040516103029190612d36565b61035e611550565b61035e611564565b61033361050f36600461286d565b6115a8565b6103876115d8565b67016345785d8a0000610387565b6000546001600160a01b0316610333565b6102f66105493660046129e2565b6115e4565b610387600081565b61056961056436600461286d565b611630565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e082015261010001610302565b6005546001600160a01b0316610333565b61035e6105c536600461297e565b6116f1565b61035e6105d83660046129e2565b611832565b61035e6105eb36600461297e565b611857565b61035e6105fe366004612d72565b6118c9565b6001546001600160a01b0316610333565b61035e61062236600461297e565b611935565b61035e61063536600461286d565b611946565b61035e61064836600461297e565b6119e9565b600454610387565b60006001600160e01b03198216637965db0b60e01b148061068657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061069a6008611a5a565b90508015610762578067ffffffffffffffff8111156106bb576106bb612d8d565b6040519080825280602002602001820160405280156106e4578160200160208202803683370190505b5091506000805b8281101561075357600080610701600884611a65565b909250905061070f81611a81565b15610740578186858151811061072757610727612da3565b60209081029190910101528361073c81612dcf565b9450505b50508061074c90612dcf565b90506106eb565b5081811015610760578083525b505b5090565b6000610686600b83611a8d565b61077b611a99565b600061078c8b8b8b61ffff16611ac6565b6020015190506001600160a01b0381166107db5760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b15801561085457600080fd5b505af1158015610868573d6000803e3d6000fd5b505050505050505050505050505050565b6000610686600b83611b70565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa96108b081611b92565b604080516000808252602082019092526108cf91869186918691611b9c565b50505050565b6000828152600260205260409020600101546108f081611b92565b6108cf8383611ce3565b6001600160a01b03811633146109235760405163334bd91960e11b815260040160405180910390fd5b61092d8282611d0d565b505050565b61093a611a99565b60018961ffff16101561096657604051634f958e7160e01b815261ffff8a1660048201526024016107d2565b6000610978818a8a8a8a8a8a8a611d82565b905081156109905761098d81600160ff611e82565b90505b6109a0600861ffff8c1683611ea9565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa9610a7881611b92565b6001600160a01b0384161580610a965750836001600160a01b031916155b15610ab45760405163d43a15d160e01b815260040160405180910390fd5b610af78787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9c92505050565b50505050505050565b610b08611a99565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b5050505050565b610b66611a99565b610b75600861ffff8416611eb6565b610b9857604051637d9160bf60e11b815261ffff831660048201526024016107d2565b6000610ba9600861ffff8516611ec2565b905081151560ff82901c151503610bd3576040516311be38db60e11b815260040160405180910390fd5b610bf061ffff8416610be7838560ff611e82565b60089190611ea9565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b610c31611a99565b610c3c600b82611ece565b610c64576040516303ce0ad960e01b81526001600160a01b03821660048201526024016107d2565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b6060610ca76008611ee3565b905090565b6000610cbd600861ffff8416611eb6565b610ce057604051637d9160bf60e11b815261ffff831660048201526024016107d2565b6000610cf1600861ffff8516611ec2565b90506000610d076000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316149050610d2682611a81565b158015610d31575080155b15610d5b576040516304fc2fe760e11b815233600482015261ffff851660248201526044016107d2565b610d66600b87611b70565b610d8e57604051638e888ef360e01b81526001600160a01b03871660048201526024016107d2565b856001600160a01b0316876001600160a01b031603610dcb57604051632f9b185360e01b81526001600160a01b03881660048201526024016107d2565b610dd58585611ef0565b50600080610de38989611f34565b90925090506001600160a01b038216610e0f57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526007602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615610e845760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff871660448201526064016107d2565b6005546001600160a01b031680610eae576040516328b4fcf960e21b815260040160405180910390fd5b6040516bffffffffffffffffffffffff1960608c811b821660208401528b901b1660348201527fffff00000000000000000000000000000000000000000000000000000000000060f089901b166048820152610f5b908290604a0160408051601f198184030181528282526001600160a01b03808916602085015287169183019190915261ffff8b1660608301529060800160405160208183030381529060405280519060200120611f5d565b6040805160808101825261ffff808b168083526001600160a01b0380861660208086018281528c15158789019081526000606089018181528e8716808352600786528b83208f89168085529087528c84208a855287528c84209b518c549651955193511515600160b81b0260ff60b81b19941515600160b01b02949094167fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff96909a1662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009097169b169a909a179490941792909216959095171790965560068054600181019091557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916909217909155938152600d8452848120928152919092529190912091975061109e9250612018565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff8860016006805490506110ec9190612de8565b604080516001600160a01b03909316835260208301919091520160405180910390a4846001600160a01b03166347973bff61112686612024565b61112f87612030565b61113888612040565b61114189612050565b61114a8a612060565b6111538b612071565b61115c8c612081565b6040516001600160e01b031960e08a901b16815261ffff978816600482015295871660248701529386166044860152918516606485015262ffffff9081166084850152931660a4830152821660c4820152908a1660e482015261010401600060405180830381600087803b1580156111d357600080fd5b505af11580156111e7573d6000803e3d6000fd5b5050505050505050949350505050565b60606000806112068585611f34565b6001600160a01b038083166000908152600d60209081526040808320938516835292905290812092945090925061123c82612092565b90508015611385578067ffffffffffffffff81111561125d5761125d612d8d565b6040519080825280602002602001820160405280156112af57816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161127b5790505b506001600160a01b03808616600090815260076020908152604080832093881683529290529081209196505b828110156113825760006112f76112f28684611a8d565b61209c565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b90049091161515606082015289519192509089908490811061136e5761136e612da3565b6020908102919091010152506001016112db565b50505b5050505092915050565b611397611a99565b6000806113a48686611f34565b6001600160a01b0380831660009081526007602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b909204909116151560608301529294509092509061145e5760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff861660448201526064016107d2565b831515816060015115150361148557604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526007602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b0260ff60b81b1990911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f9061150890871515815260200190565b60405180910390a250505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152611548848484611ac6565b949350505050565b611558611a99565b61156260006120c6565b565b60015433906001600160a01b0316811461159c5760405163118cdaa760e01b81526001600160a01b03821660048201526024016107d2565b6115a5816120c6565b50565b6000600682815481106115bd576115bd612da3565b6000918252602090912001546001600160a01b031692915050565b6000610ca7600b612092565b60008261160257506000546001600160a01b03828116911614610686565b60008381526002602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b60008080808080808061164460088a611eb6565b61166457604051637d9160bf60e11b8152600481018a90526024016107d2565b600061167160088b611ec2565b905061167c81612024565b61ffff16985061168b81612030565b61ffff16975061169a81612040565b61ffff1696506116a981612050565b61ffff1695506116b881612060565b62ffffff1694506116c881612071565b61ffff1693506116d781612081565b62ffffff16925060ff81901c915050919395975091939597565b6116f9611a99565b306001600160a01b0316816001600160a01b03166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117659190612dfb565b6001600160a01b03161461179757604051630a3e70af60e11b81526001600160a01b03821660048201526024016107d2565b6005546001600160a01b0390811690821681036117d257604051630ded3b9560e31b81526001600160a01b03831660048201526024016107d2565b600580546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b60008281526002602052604090206001015461184d81611b92565b6108cf8383611d0d565b61185f611a99565b61186a600b826120df565b61189257604051638e888ef360e01b81526001600160a01b03821660048201526024016107d2565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b6118d1611a99565b6118e0600861ffff83166120f4565b61190357604051637d9160bf60e11b815261ffff821660048201526024016107d2565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b61193d611a99565b6115a581612100565b61194e611a99565b60045481810361197457604051631baa31e960e21b8152600481018390526024016107d2565b67016345785d8a00008211156119ae57604051635e8988c160e01b81526004810183905267016345785d8a000060248201526044016107d2565b600482905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e509101611826565b6119f1611a99565b600180546001600160a01b0383166001600160a01b03199091168117909155611a226000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000610686826121be565b6000808080611a7486866121c9565b9097909650945050505050565b600060ff82901c610686565b600061162983836121f4565b6000546001600160a01b031633146115625760405163118cdaa760e01b81523360048201526024016107d2565b604080516080810182526000808252602082018190529181018290526060810191909152611af48484611f34565b6001600160a01b03918216600090815260076020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515611629565b6115a5813361221e565b6000611bad86868661ffff16611ac6565b6020015190506001600160a01b038116611bf75760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff851660448201526064016107d2565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5a9190612e18565b03611c7b5760405163b70cd0db60e01b8152600481018490526024016107d2565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d90611ca99086908690600401612e31565b600060405180830381600087803b158015611cc357600080fd5b505af1158015611cd7573d6000803e3d6000fd5b50505050505050505050565b600082611d0357604051633e3253cf60e11b815260040160405180910390fd5b611629838361225b565b6000611d1983836115e4565b15611d7a5760008381526002602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610686565b506000610686565b60008561ffff168761ffff161180611d9f5750610fff8661ffff16115b80611daf57506127108561ffff16115b80611dbf57506109c48361ffff16115b80611dd15750620fffff8262ffffff16115b15611def57604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b60006115488484611e94576000611e97565b60015b600180861b19929092169116841b1790565b60006115488484846122e7565b60006116298383612304565b60006116298383612310565b6000611629836001600160a01b038416612357565b606060006116298361239e565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611f2b82826123a9565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115611f55579192915b509192909150565b600060408303516020840351845180602087010180516002830161ffca811115611f8f5763c8c781396000526004601cfd5b6c5af43d3d93803e603357fd5bf3895289600d8a03527d6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d738160481b176035820160d81b1760218a03528060f01b835287603f8201601f8b036000f596505085611ffe5763301164256000526004601cfd5b90528552601f19850152603f199093019290925250919050565b60006116298383612357565b600061ffff8216610686565b60006106868260101c610fff1690565b600061068682601c1c610fff1690565b60006106868260281c613fff1690565b60006106868260361c62ffffff1690565b600061068682604e1c613fff1690565b600061068682605c1c620fffff1690565b6000610686825490565b8061ffff811681146120c1576040516364ae406d60e01b815260040160405180910390fd5b919050565b600180546001600160a01b03191690556115a581612612565b6000611629836001600160a01b038416612662565b60006116298383612755565b6001600160a01b03811661212757604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b03908116908216810361216657600354604051634fcea97160e01b81526001600160a01b0390911660048201526024016107d2565b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527219101611826565b600061068682612092565b600080806121d78585611a8d565b600081815260029690960160205260409095205494959350505050565b600082600001828154811061220b5761220b612da3565b9060005260206000200154905092915050565b61222882826115e4565b6122575760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107d2565b5050565b600061226783836115e4565b611d7a5760008381526002602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561229f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610686565b600082815260028401602052604081208290556115488484612018565b60006116298383612772565b60008181526002830160205260408120548015801561233657506123348484612304565b155b156116295760405163015ab34360e11b8152600481018490526024016107d2565b6000818152600183016020526040812054611d7a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610686565b60606106868261278a565b6000806000836000036123c55750600160801b91506106869050565b508260008112156123d7579015906000035b621000008110156125d057600160801b9250846fffffffffffffffffffffffffffffffff81111561240a57911591600019045b600182161561241b5792830260801c925b800260801c60028216156124315792830260801c925b800260801c60048216156124475792830260801c925b800260801c600882161561245d5792830260801c925b800260801c60108216156124735792830260801c925b800260801c60208216156124895792830260801c925b800260801c604082161561249f5792830260801c925b8002608090811c908216156124b65792830260801c925b800260801c6101008216156124cd5792830260801c925b800260801c6102008216156124e45792830260801c925b800260801c6104008216156124fb5792830260801c925b800260801c6108008216156125125792830260801c925b800260801c6110008216156125295792830260801c925b800260801c6120008216156125405792830260801c925b800260801c6140008216156125575792830260801c925b800260801c61800082161561256e5792830260801c925b800260801c620100008216156125865792830260801c925b800260801c6202000082161561259e5792830260801c925b800260801c620400008216156125b65792830260801c925b800260801c620800008216156125ce5792830260801c925b505b826000036125fb57604051631dba598d60e11b815260048101869052602481018590526044016107d2565b816126065782611f2b565b611f2b83600019612e87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600183016020526040812054801561274b576000612686600183612de8565b855490915060009061269a90600190612de8565b90508082146126ff5760008660000182815481106126ba576126ba612da3565b90600052602060002001549050808760000184815481106126dd576126dd612da3565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061271057612710612ea9565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610686565b6000915050610686565b600081815260028301602052604081208190556116298383612797565b60008181526001830160205260408120541515611629565b60606000611629836127a3565b60006116298383612662565b6060816000018054806020026020016040519081016040528092919081815260200182805480156127f357602002820191906000526020600020905b8154815260200190600101908083116127df575b50505050509050919050565b60006020828403121561281157600080fd5b81356001600160e01b03198116811461162957600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561286157835183529284019291840191600101612845565b50909695505050505050565b60006020828403121561287f57600080fd5b5035919050565b6001600160a01b03811681146115a557600080fd5b803561ffff811681146120c157600080fd5b803562ffffff811681146120c157600080fd5b6000806000806000806000806000806101408b8d0312156128e057600080fd5b8a356128eb81612886565b995060208b01356128fb81612886565b985061290960408c0161289b565b975061291760608c0161289b565b965061292560808c0161289b565b955061293360a08c0161289b565b945061294160c08c0161289b565b935061294f60e08c016128ad565b925061295e6101008c0161289b565b915061296d6101208c016128ad565b90509295989b9194979a5092959850565b60006020828403121561299057600080fd5b813561162981612886565b6000806000606084860312156129b057600080fd5b83356129bb81612886565b925060208401356129cb81612886565b91506129d96040850161289b565b90509250925092565b600080604083850312156129f557600080fd5b823591506020830135612a0781612886565b809150509250929050565b803580151581146120c157600080fd5b60008060008060008060008060006101208a8c031215612a4157600080fd5b612a4a8a61289b565b9850612a5860208b0161289b565b9750612a6660408b0161289b565b9650612a7460608b0161289b565b9550612a8260808b0161289b565b9450612a9060a08b016128ad565b9350612a9e60c08b0161289b565b9250612aac60e08b016128ad565b9150612abb6101008b01612a12565b90509295985092959850929598565b60008060008060008060a08789031215612ae357600080fd5b8635612aee81612886565b95506020870135612afe81612886565b9450612b0c6040880161289b565b935060608701359250608087013567ffffffffffffffff80821115612b3057600080fd5b818901915089601f830112612b4457600080fd5b813581811115612b5357600080fd5b8a6020828501011115612b6557600080fd5b6020830194508093505050509295509295509295565b60008060408385031215612b8e57600080fd5b612b978361289b565b9150612ba560208401612a12565b90509250929050565b60008060008060808587031215612bc457600080fd5b8435612bcf81612886565b93506020850135612bdf81612886565b9250612bed604086016128ad565b9150612bfb6060860161289b565b905092959194509250565b60008060408385031215612c1957600080fd5b8235612c2481612886565b91506020830135612a0781612886565b6020808252825182820181905260009190848201906040850190845b8181101561286157612c9583855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101612c50565b60008060008060808587031215612cbe57600080fd5b8435612cc981612886565b93506020850135612cd981612886565b9250612ce76040860161289b565b9150612bfb60608601612a12565b600080600060608486031215612d0a57600080fd5b8335612d1581612886565b92506020840135612d2581612886565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101610686565b600060208284031215612d8457600080fd5b6116298261289b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612de157612de1612db9565b5060010190565b8181038181111561068657610686612db9565b600060208284031215612e0d57600080fd5b815161162981612886565b600060208284031215612e2a57600080fd5b5051919050565b82815260006020604081840152835180604085015260005b81811015612e6557858101830151858201606001528201612e49565b506000606082860101526060601f19601f830116850101925050509392505050565b600082612ea457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b00d0a5cf7685e65a7ef61c67470d2c6e2b920abe76b20398614a3917c6549f464736f6c6343000814003360c06040523480156200001157600080fd5b506040516200615c3803806200615c83398101604081905262000034916200010a565b6001600160a01b03811660a052306080526200004f62000056565b506200013c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001075780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011d57600080fd5b81516001600160a01b03811681146200013557600080fd5b9392505050565b60805160a051615fe56200017760003960008181610505015281816113ce015281816121da01526136a5015260006104720152615fe56000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c806388cc58e411610160578063c9939f5e116100d8578063e584b6541161008c578063e985e9c511610071578063e985e9c5146106c9578063ea3446bf146106ec578063f5e29329146106ff57600080fd5b8063e584b654146106a3578063e77366f8146106b657600080fd5b8063d8dfcea0116100bd578063d8dfcea01461067b578063da10610c14610683578063dbe65edc1461069b57600080fd5b8063c9939f5e14610660578063d3b9fbe41461067357600080fd5b8063a1af5b9a1161012f578063abcd783011610114578063abcd7830146105f0578063bd85b0391461062d578063c7bd65861461064d57600080fd5b8063a1af5b9a146105c1578063a41a01fb146105c957600080fd5b806388cc58e4146105035780638940a16a146105295780638d7024e51461056757806395d89b41146105a257600080fd5b806347973bff116101f357806355182894116101c25780636653851a116101a75780636653851a14610494578063781a8915146104a75780637ca0de30146104b157600080fd5b806355182894146104285780635c60da1b1461046d57600080fd5b806347973bff146103cf5780634c7cffbd146103e25780634e1273f4146103f557806353c059a01461041557600080fd5b80630abe96881161024a57806317fad7fc1161022f57806317fad7fc146103855780631b057f6d1461039a578063383d15c5146103ad57600080fd5b80630abe96881461033457806317f11ecc1461036a57600080fd5b8062fdd58e1461027b57806305e8746d146102a157806306fdde03146102ca5780630902f1ac1461030c575b600080fd5b61028e61028936600461556c565b610712565b6040519081526020015b60405180910390f35b3660011981013560f01c90033560601c5b6040516001600160a01b039091168152602001610298565b60408051808201909152601481527f4c697175696469747920426f6f6b20546f6b656e00000000000000000000000060208201525b60405161029891906155bc565b610314610740565b604080516001600160801b03938416815292909116602083015201610298565b610314610342366004615602565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b61037261077a565b60405161ffff9091168152602001610298565b610398610393366004615662565b61079b565b005b6103986103a8366004615739565b6107f6565b6103c06103bb366004615785565b610915565b60405161029893929190615828565b6103986103dd366004615859565b610b9b565b61028e6103f0366004615602565b610cf9565b6104086104033660046158f0565b610d29565b604051610298919061595c565b61028e61042336600461597f565b610dff565b610430611138565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a001610298565b6102b27f000000000000000000000000000000000000000000000000000000000000000081565b6103986104a23660046159b6565b6111e2565b620100095461028e565b6104b961121b565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e001610298565b7f00000000000000000000000000000000000000000000000000000000000000006102b2565b61053c610537366004615a3c565b611283565b6040805167ffffffffffffffff94851681529284166020840152921691810191909152606001610298565b61056f611382565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff9091166060820152608001610298565b60408051808201909152600381526213109560ea1b60208201526102ff565b61028e6113c2565b6105dc6105d7366004615a63565b61157a565b60405162ffffff9091168152602001610298565b6106036105fe366004615a8d565b61158d565b604080516001600160801b0394851681529284166020840152921691810191909152606001610298565b61028e61063b366004615ac5565b60009081526001602052604090205490565b61039861065b366004615ade565b611732565b61040861066e366004615662565b6117c8565b610398611af2565b610314611b86565b3660011981013560f01c90036014013560601c6102b2565b6105dc611ba1565b6103986106b1366004615af9565b611bae565b6106036106c4366004615a8d565b611bbd565b6106dc6106d7366004615b17565b611d03565b6040519015158152602001610298565b6103986106fa366004615b35565b611d0f565b6105dc61070d366004615ac5565b611fed565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b905090565b60008061077161075d60055460045461201890919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b600061073b60003660011981013560f090811c90910360280135901c905090565b6107a3612052565b62010009546107b8813389898989898961208a565b6107c687878787878761212a565b6107dd6001600080516020615f9083398151915255565b6107ed8133898989898989612188565b50505050505050565b6107fe612052565b6108066121cf565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108cf5750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190615b85565b6001600160a01b031614155b156108ed57604051631b5de6eb60e01b815260040160405180910390fd5b6108f8848484612218565b506109106001600080516020615f9083398151915255565b505050565b6000806060866109248161223f565b61092c612052565b600086900361094e5760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561097b5761097b615ba2565b6040519080825280602002602001820160405280156109a4578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109c3576109c3615ba2565b6040519080825280602002602001820160405280156109ec578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a0b57610a0b615ba2565b604051908082528060200260200182016040528015610a34578160200160208202803683370190505b509052600454909150610a60813660011981013560f01c90038035606090811c9160140135901c61227b565b9650610a7083338d8d8d8c6122bb565b610a7d8a8a898e86612305565b9550610a93610a8c8888612018565b829061243a565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610ae191908b90615bb8565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b2d929190615bb8565b60405180910390a38515610b5f57610b5f863660011981013560f01c90038035606090811c9160140135901c8b612474565b610b766001600080516020615f9083398151915255565b610b8d83338d8d8d610b888d8d612018565b6124d2565b505050509450945094915050565b610ba36121cf565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610bee5750825b905060008267ffffffffffffffff166001148015610c0b5750303b155b905081158015610c19575080155b15610c375760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c6b57845468ff00000000000000001916680100000000000000001785555b610c73612514565b610c9f610c93610c8e8860035461252490919063ffffffff16565b612573565b8e8e8e8e8e8e8e6125c7565b8315610cea57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610735610d1d60003660011981013560f090811c90910360280135901c905090565b62ffffff84169061274e565b60608382610d378282612785565b8567ffffffffffffffff811115610d5057610d50615ba2565b604051908082528060200260200182016040528015610d79578160200160208202803683370190505b50925060005b86811015610df457610dcf888883818110610d9c57610d9c615bdd565b9050602002016020810190610db19190615bf3565b878784818110610dc357610dc3615bdd565b90506020020135610712565b848281518110610de157610de1615bdd565b6020908102919091010152600101610d7f565b505050949350505050565b6000610e09612052565b6201000954600454600554600086610e3d57610e383660011981013560f01c90036014013560601c84906127a5565b610e57565b610e573660011981013560f01c90033560601c84906127da565b90506000819003610e7b57604051637df801c760e01b815260040160405180910390fd5b86610e898533898486612809565b610e93848361243a565b6003549094506000610eba60003660011981013560f090811c90910360280135901c905090565b90506000610ec78361286d565b9050610ed38342612879565b92505b62ffffff8116600090815260066020526040902054610ef68186156128ef565b61101a57610f04848361291e565b935060008080610f188488888b898e6129a6565b91945092509050821561101657610f2f8984612018565b9850610f3b8d8361243a565b9c506000610f56610f4b89612bcc565b839061ffff16612bdc565b90508015610f7757610f688b8261243a565b9a50610f748482612018565b93505b610f8b83610f85878761243a565b90612018565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca70888787610fd88e612c52565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036110295750611073565b60006110358684612c63565b905062ffffff8116158061104d575062ffffff818116145b1561106b57604051631a6d7fb160e31b815260040160405180910390fd5b915050610ed6565b60008990036110955760405163439df85d60e11b815260040160405180910390fd5b61109f878a612018565b60045560058690556110b3600a8483612c85565b92506110bf8382612524565b60035583156110eb576110e63660011981013560f01c90036014013560601c8a908c612da0565b611106565b6111063660011981013560f01c90033560601c8a908c612de0565b61111d6001600080516020615f9083398151915255565b61112a88338c878d612df1565b505050505050505092915050565b6003546078906000908190819081908161115182612e4e565b905061ffff8116156111d957600061116a600a83612e5e565b9650905061117781612ebc565b965061118281612ec8565b94508464ffffffffff1660000361119857600095505b61ffff8616156111d7576111c98661ffff168361ffff16816111bc576111bc615c10565b600a916001910601612ee9565b90506111d481612ec8565b93505b505b50509091929394565b6111ea612052565b6111f26121cf565b611204600354888888888888886125c7565b6107ed6001600080516020615f9083398151915255565b600080600080600080600080600354905061123581612ebc565b975061124081612f19565b965061124b81612f29565b955061125681612f39565b945061126181612f49565b935061126c81612bcc565b925061127781612f5a565b91505090919293949596565b6000806000806003549050600061129982612e4e565b905061ffff811615806112b25750428664ffffffffff16115b156112c9576000806000945094509450505061137b565b60006112d7600a8389612f6b565b91985096509450905064ffffffffff80881690821610156113775761130d6112fe8461286d565b849064ffffffffff8a1661308e565b9250600061131b8289615c3c565b90508064ffffffffff1661132e8561286d565b62ffffff1661133d9190615c5a565b6113479088615c86565b96508064ffffffffff1661135a85612c52565b62ffffff166113699190615c5a565b6113739087615c86565b9550505b5050505b9193909250565b6000806000806000600354905061139881612c52565b94506113a3816130a6565b93506113ae816130b7565b92506113b9816130c8565b91505090919293565b60006113cc612052565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e9190615b85565b6001600160a01b0316336001600160a01b03161461147f57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c60006114da826114a25760006114a5565b60015b60ff166000856001600160801b0316116114c05760006114c3565b60015b60ff169060801b6001600160801b03919091161790565b90506114e68482612018565b9450841561155c5760058190556004546115009086612018565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261155c853660011981013560f01c90038035606090811c9160140135901c33612474565b505050506115776001600080516020615f9083398151915255565b90565b60006115868383612c63565b9392505050565b60035460009083908290816115b760003660011981013560f090811c90910360280135901c905090565b905060006115c48361286d565b90506115d08342612879565b92505b62ffffff81166000908152600660205260408120546115f39089156130db565b90506001600160801b038116156116d957600061161562ffffff84168561274e565b90506000876001600160801b0316836001600160801b031611611638578261163a565b875b9050611646868561291e565b955060008a611669576116646001600160801b0383168460806130fb565b61167e565b61167e6001600160801b038316608085613131565b9050600061168c8888613167565b905060006116a36001600160801b03841683613186565b90506116af8184615ca7565b6116b9908d615ca7565b9b506116c5848c615cc7565b9a506116d1818b615ca7565b995050505050505b856001600160801b03166000036116f05750611728565b60006116fc8984612c63565b905062ffffff81161580611714575062ffffff818116145b15611720575050611728565b9150506115d3565b5050509250925092565b61173a612052565b600354600061174882612e4e565b90508061ffff166000036117675750600161176382826131cf565b6003555b611773600a828561321e565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a250506117c56001600080516020615f9083398151915255565b50565b606086336117d68282613307565b61180b5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b611813612052565b8515806118205750858414155b1561183e57604051633ab7870760e01b815260040160405180910390fd5b620100095461185381338c8c8c8c8c8c613353565b898767ffffffffffffffff81111561186d5761186d615ba2565b604051908082528060200260200182016040528015611896578160200160208202803683370190505b5094506000805b898110156119ea5760006118c88c8c848181106118bc576118bc615bdd565b90506020020135613399565b905060008a8a848181106118de576118de615bdd565b9050602002013590508060000361190f57604051636996a92560e01b815262ffffff83166004820152602401611802565b62ffffff8216600081815260066020908152604080832054600190925290912054909161193e908890856133c4565b600061194b838584613445565b905060008190036119765760405163fd44792960e01b815262ffffff86166004820152602401611802565b6119808382612018565b9250838203611996576119946007866134bd565b505b62ffffff851660009081526006602052604090208390558b5181908d90889081106119c3576119c3615bdd565b60209081029190910101526119d8878261243a565b9650856001019550505050505061189d565b506004546119f89082612018565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611a41908f908f908f908f90615d32565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611a9093929190615d59565b60405180910390a3611abc813660011981013560f01c90038035606090811c9160140135901c8e612474565b611ad36001600080516020615f9083398151915255565b611ae38333848e8e8e8e8e61355f565b50505050509695505050505050565b611afa612052565b611b026121cf565b600354611b16611b1182612573565b6135a5565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611b44836130b7565b611b4d846130a6565b6040805162ffffff93841681529290911660208301520160405180910390a250611b846001600080516020615f9083398151915255565b565b60055460009081906001600160801b0381169060801c610771565b600061073b60035461286d565b611bb93383836135da565b5050565b6000808080611bd56001600160801b0387168661368f565b6003549091506000611bfc60003660011981013560f090811c90910360280135901c905090565b90506000611c098361286d565b9050611c158342612879565b92505b62ffffff8116600090815260066020526040902054611c38818a156128ef565b611ca557611c46848361291e565b935060008080611c5a8488888f898d6129a6565b919450925090508215611ca157611c718884612018565b9750611c7e828d156130db565b611c88908b615ca7565b9950611c94818d6130db565b611c9e908a615ca7565b98505b5050505b6000859003611cb45750611cec565b6000611cc08a84612c63565b905062ffffff81161580611cd8575062ffffff818116145b15611ce4575050611cec565b915050611c18565b611cf684896130db565b9650505050509250925092565b60006115868383613307565b611d17612052565b6000839003611d395760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611d4c866136a0565b9050611d5a833389896137a8565b611d7e863660011981013560f01c90038035606090811c9160140135901c8a612474565b6000806001600160a01b038916631faa6b8760e01b333660011981013560f01c90033560601c3660011981013560f01c90036014013560601c8c888d8d604051602401611dd19796959493929190615da8565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611e279190615de9565b6000604051808303816000865af19150503d8060008114611e64576040519150601f19603f3d011682016040523d82523d6000602084013e611e69565b606091505b5091509150811580611e7d57508051602014155b80611ebb57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c281806020019051810190611eb89190615e05565b14155b15611ed957604051634a57011360e01b815260040160405180910390fd5b6000611efe813660011981013560f01c90038035606090811c9160140135901c61227b565b9050611f14611f0d868661243a565b82906137fd565b15611f3257604051630e3c717160e11b815260040160405180910390fd5b6000611f3e8287612018565b6004839055600554909150611f53908261243a565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d90611f919061286d565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a3611fd36001600080516020615f9083398151915255565b611fe087338d8885613841565b5050505050505050505050565b600061073561201160003660011981013560f090811c90910360280135901c905090565b839061389d565b8082038281118061203457506001600160801b03808416908216115b156107355760405163e599af5560e01b815260040160405180910390fd5b600080516020615f9083398151915280546001190161208457604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561212057612120886379c8ccf760e01b898989898989896040516024016120d19796959493929190615e1e565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526138e2565b5050505050505050565b85336121368282613307565b6121665760405163548f773d60e01b81526001600160a01b03808416600483015282166024820152604401611802565b612120888888888888613946565b6001600080516020615f9083398151915255565b750200000000000000000000000000000000000000000088161561212057612120886367ddb27860e01b898989898989896040516024016120d19796959493929190615e1e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611b8457604051632486085360e01b815260040160405180910390fd5b82156109105761091083634e430b5a60e01b8585856040516024016120d193929190615e74565b6001600160a01b038116158061225d57506001600160a01b03811630145b156117c5576040516345c210e760e11b815260040160405180910390fd5b60006122b384610f8561228d85613aa9565b61229687613aa9565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156122fd576122fd86630d4abdb360e01b87878787876040516024016120d1959493929190615e8e565b505050505050565b60008061232760003660011981013560f090811c90910360280135901c905090565b60035490915060006123388261286d565b905086935060005b8881101561242d576000806123768a8d8d8681811061236157612361615bdd565b90506020020135613b1890919063ffffffff16565b91509150600080600061238c898886888c613b61565b9194509250905061239d8a83612018565b99508362ffffff168b6000015187815181106123bb576123bb615bdd565b602002602001018181525050808b6020015187815181106123de576123de615bdd565b602002602001018181525050828b60400151878151811061240157612401615bdd565b60200260200101818152505061241d8c8562ffffff1685613d6f565b8560010195505050505050612340565b5050505095945050505050565b8181018281108061245657506001600160801b03808416908216105b15610735576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c81156124a6576124a66001600160a01b038616846001600160801b038516613dbc565b6001600160801b038116156122fd576122fd6001600160a01b038516846001600160801b038416613dbc565b742000000000000000000000000000000000000000008616156122fd576122fd86637a51a4c660e01b87878787876040516024016120d1959493929190615e8e565b61251c613e0d565b611b84613e5b565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611586565b60008061257f8361286d565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611586565b61ffff87161580156125db575061ffff8616155b80156125e9575061ffff8516155b80156125f7575061ffff8416155b8015612606575062ffffff8316155b8015612614575061ffff8216155b8015612623575062ffffff8116155b15612641576040516331375e0360e11b815260040160405180910390fd5b6126518888888888888888613e63565b9750600061267460003660011981013560f090811c90910360280135901c905090565b905060006126828a84613f7c565b905060006126908284613fda565b61269a838561401a565b6126a49190615ecd565b905067016345785d8a00008111156126cf576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff190161277c828261403e565b95945050505050565b808214611bb9576040516340311ffd60e11b815260040160405180910390fd5b6000806127b28460801c90565b90506122b3816127c185613aa9565b6127cb9190615cc7565b6001600160801b031660801b90565b60006001600160801b0383166122b3816127f385613aa9565b6127fd9190615cc7565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612866576040516001600160a01b0380861660248301528416604482015282151560648201526084810182905261286690869063feee373560e01b9060a4016120d1565b5050505050565b600060e882901c610735565b600080612885846130c8565b6128969064ffffffffff1684615ee0565b90506128a184612f19565b61ffff1681106128e5576128b484612573565b93506128bf84612f29565b61ffff1681106128d9576128d484600061429e565b6128e2565b6128e2846135a5565b93505b6122b3848461430c565b60008161290f576129008360801c90565b6001600160801b031615611586565b50506001600160801b03161590565b60008061292a846130b7565b62ffffff169050600080828562ffffff161161294d578462ffffff168303612956565b828562ffffff16035b91506127108202612966876130a6565b62ffffff16019050600061297987612f5a565b62ffffff16905080821161298d578161298f565b805b915061299b8783613f7c565b979650505050505050565b60008080806129ba62ffffff87168961274e565b905060006129c98b89156130db565b90506000886129f4576129ef6129ea6001600160801b0384168560806130fb565b614365565b612a0c565b612a0c6129ea6001600160801b038416608086613131565b90506000612a1a8c8c613167565b90506000612a316001600160801b03841683613186565b9050612a3d8184615ca7565b92506000612a4b8a8d6130db565b9050600080856001600160801b0316836001600160801b031610612a76575084915082905085612aec565b612a896001600160801b0384168661438f565b91506000612a978385615cc7565b6001600160801b031690508e612abb57612ab66129ea8260808c6143c6565b612aca565b612aca6129ea828b60806143f0565b9150876001600160801b0316826001600160801b03161115612aea578791505b505b8d612b2657612b04836001600160801b031660801b90565b6001600160801b038216612b21846001600160801b031660801b90565b612b4e565b6001600160801b038316612b43826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612ba0612b9a85610f85888f61243a90919063ffffffff16565b8361445e565b1115612bbf5760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061073582604e1c613fff1690565b6000816001600160801b0316600003612bf757506000610735565b6127106001600160801b038316811015612c2457604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006107358260701c620fffff1690565b600082612c7a57612c7560078361447a565b611586565b6115866007836145c6565b600080612c9184612e4e565b90508061ffff16600003612ca85783915050611586565b6000612cb48683612ee9565b90506000612cc1826146f6565b90506000612cce83614702565b612cdb9060ff1683615ef3565b90508064ffffffffff16612cee42614711565b64ffffffffff161115612d94576000806000612d338464ffffffffff164203612d168c61286d565b612d1f8d612c52565b612d298e8e614739565b8a93929190614769565b9250925092506000612d4487612ebc565b905064ffffffffff861642036078811115612d74575096879006600101964295506000612d718c8a6131cf565b9b505b612d8282868686858c6147ce565b97505050505050612d94888585614872565b50949695505050505050565b6000612dac8460801c90565b90506001600160801b03811615612dda57612dda6001600160a01b038416836001600160801b038416613dbc565b50505050565b60006001600160801b038416612dac565b74020000000000000000000000000000000000000000851615612866576040516001600160a01b038086166024830152841660448201528215156064820152608481018290526128669086906353e8079b60e01b9060a4016120d1565b60006107358260d81c61ffff1690565b600080612e6b8484612ee9565b9150612e7682612ebc565b90508061ffff168361ffff1614612eb557612e99612e948583612ee9565b612ebc565b90508061ffff168361ffff1611612eb05780612eb2565b825b90505b9250929050565b600061ffff8216610735565b6000612ed382614702565b60ff16612edf836146f6565b6107359190615ef3565b600081612ef58161489f565b8361ffff60001985018116908110612f0f57612f0f615bdd565b0154949350505050565b60006107358260101c610fff1690565b600061073582601c1c610fff1690565b60006107358260281c613fff1690565b60006107358260361c62ffffff1690565b600061073582605c1c620fffff1690565b600080600080600080612f7e8989612e5e565b909250905064ffffffffff8716612fb58a612f99848c615f11565b61ffff1661ffff8110612fae57612fae615bdd565b0154612ec8565b64ffffffffff161115612fdb57604051631c4e7f9560e21b815260040160405180910390fd5b612fe482612ec8565b95508664ffffffffff168664ffffffffff16116130265785613005836148c4565b61300e846148da565b613017856148f0565b95509550955095505050613085565b8695506000806130388b8b8b86614906565b9150915060008961304883612ec8565b6130529190615c3c565b9050600061305f84612ec8565b613069908c615c3c565b905061307784848484614a58565b919a50985096505050505050505b93509350935093565b600061309a8483612879565b93506122b3848461291e565b60006107358260841c620fffff1690565b60006107358260981c62ffffff1690565b60006107358260b01c64ffffffffff1690565b6000816130ec57612c758360801c90565b6001600160801b038316611586565b60006131088484846143f0565b9050600160ff83161b8061311e5761311e615c10565b83850915611586576122b3600182615ecd565b600061313e8484846143c6565b9050818061314e5761314e615c10565b600160ff85161b850915611586576122b3600182615ecd565b60006115866131768484613fda565b613180858561401a565b01614365565b60008161319281614bbc565b6001600160801b03808416670de0b6b3a764000081900391829160001991881602820101816131c3576131c3615c10565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611586565b600061322a8484612ee9565b9050600061323782612ebc565b90508261ffff168161ffff161061326157604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146132925761ffff82161561328b576132868683612ee9565b613294565b6000613294565b825b905060006132a182612ebc565b61ffff169050808661ffff16116132b857806132be565b8561ffff165b905061ffff83165b8561ffff168110156132f05781888261ffff81106132e6576132e6615bdd565b01556001016132c6565b506107ed878761ffff868116881890891617614872565b6000816001600160a01b0316836001600160a01b031614806115865750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b74400000000000000000000000000000000000000000881615612120576121208863ea9db9d360e01b898989898989896040516024016120d19796959493929190615e1e565b8062ffffff811681146133bf57604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561342157604051625b387760e31b81526001600160a01b03861660048201526024810185905260448101849052606401611802565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c82808315613478576134756129ea886001600160801b03871689614bee565b91505b6001600160801b038316156134a15761349e6129ea886001600160801b03861689614bee565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461355357600083815260028701602052604081208290558190036135475750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613545578654600160ff83161b191687555b505b60019350505050610735565b50600095945050505050565b74800000000000000000000000000000000000000000881615612120576121208863fdc2725760e01b898989898989896040516024016120d19796959493929190615e1e565b6000806135b183612c52565b62ffffff16905060006135c384612f39565b61ffff1690506127108282020461277c858261429e565b826135e48161223f565b826001600160a01b0316846001600160a01b0316036136215760405163782ee70760e01b81526001600160a01b0385166004820152602401611802565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816130ec57612c758360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137259190615e05565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff9061375e90670de0b6b3a7640000908616850283015b04614365565b9250613790670de0b6b3a764000082866001600160801b0316856001600160801b031602018161375857613758615c10565b915050608081901b6001600160801b0383161761277c565b74040000000000000000000000000000000000000000841615612dda576040516001600160a01b0380851660248301528316604482015260648101829052612dda90859063505d903360e01b906084016120d1565b60006001600160801b0383811690608085811c9185169085901c8184108061299b5750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612866576040516001600160a01b0380861660248301528416604482015260648101839052608481018290526128669086906360bed5f360e01b9060a4016120d1565b600061271061ffff60801b608084901b1604600160801b01816138bf82614c0e565b6138c886614c0e565b6138d29190615f32565b905061277c816280000001613399565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613916573d6000803e3d6000fd5b8060005160e01c14601f3d1116831692505081612dda57604051636c93cb9b60e01b815260040160405180910390fd5b82816139528282612785565b8661395c8161223f565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613a405760008a8a8381811061399b5761399b615bdd565b90506020020135905060008989848181106139b8576139b8615bdd565b600085815260208981526040909120549102929092013592505081811015613a15578e83836040516358b4690f60e01b8152600401611802939291906001600160a01b039390931683526020830191909152604082015260600190565b600092835260208681526040808520928490039092558590529091208054909101905560010161397f565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613a949493929190615d32565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610735906001600160a01b038416906370a0823190602401602060405180830381865afa158015613af4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ea9190615e05565b6000806000806000613b2987614d1b565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613b88908b61274e565b90506000613ba78962ffffff1660009081526001602052604090205490565b9050613bb583898484614dbe565b909650945084935062ffffff808b16908a1603613ced57613bd7878a4261308e565b96506000613be984898e89868c614f44565b90508015613ce7576000613c0784613c018985612018565b9061445e565b90506000613c22613c178b612bcc565b849061ffff16612bdc565b90508015613c4857613c348782612018565b600554909750613c44908261243a565b6005555b6000613c6286613c01613c5b8786612018565b8a9061243a565b9050613c6f838683614bee565b9950613c7d600a8c8f612c85565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613cdb9392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b50613cf8565b613cf8858b8b615039565b851580613d03575083155b15613d2857604051634c98d35760e11b815262ffffff8a166004820152602401611802565b80600003613d3d57613d3b60078a61509f565b505b613d47838561243a565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b60008281526001602052604081208054839290613d8d908490615ecd565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612dda848261512c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611b8457604051631afcd79f60e31b815260040160405180910390fd5b612174613e0d565b60008561ffff168761ffff161180613e805750610fff8661ffff16115b80613e9057506127108561ffff16115b80613ea057506109c48361ffff16115b80613eb25750620fffff8262ffffff16115b15613ed057604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff161115613fa757604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611586565b600080613fe684612f49565b62ffffff16905080156131c85760008361ffff1661400386612c52565b62ffffff16029050606460638280028402016131c3565b60008161ffff1661402a84612ebc565b61ffff16026402540be40002905092915050565b60008060008360000361405a5750600160801b91506107359050565b5082600081121561406c579015906000035b6210000081101561425c57600160801b9250846001600160801b0381111561409657911591600019045b60018216156140a75792830260801c925b800260801c60028216156140bd5792830260801c925b800260801c60048216156140d35792830260801c925b800260801c60088216156140e95792830260801c925b800260801c60108216156140ff5792830260801c925b800260801c60208216156141155792830260801c925b800260801c604082161561412b5792830260801c925b8002608090811c908216156141425792830260801c925b800260801c6101008216156141595792830260801c925b800260801c6102008216156141705792830260801c925b800260801c6104008216156141875792830260801c925b800260801c61080082161561419e5792830260801c925b800260801c6110008216156141b55792830260801c925b800260801c6120008216156141cc5792830260801c925b800260801c6140008216156141e35792830260801c925b800260801c6180008216156141fa5792830260801c925b800260801c620100008216156142125792830260801c925b800260801c6202000082161561422a5792830260801c925b800260801c620400008216156142425792830260801c925b800260801c6208000082161561425a5792830260801c925b505b8260000361428757604051631dba598d60e11b81526004810186905260248101859052604401611802565b81614292578261277c565b61277c83600019615f60565b6000620fffff8262ffffff1611156142c957604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611586565b60008061431883614711565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176122b3565b806001600160801b03811681146133bf57604051632f45db3d60e21b815260040160405180910390fd5b60008161439b81614bbc565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612c489087906001901b86858561519c565b60008060006143ff8686615248565b9150915081600014614415578360ff1682901c92505b801561445557600160ff85161b811061444157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c61277c828286615267565b60008061ffff600884901c1660ff8085169081146144cf57600082815260028701602052604081205493506144af84836152d2565b905060001981146144cd5760089290921b9091179250610735915050565b505b5060ff80821690600883901c90821461454957600081815260018801602052604081205494506144ff85846152d2565b9050600019811461454757600882901b8117600081815260028a0160205260409020549550935061452f856152e1565b60ff1660088560001c901b1795505050505050610735565b505b60ff818116925082146145b95786549350600061456685846152d2565b905060001981146145b75760008181526001890160205260409020549450905080614590856152e1565b60ff16600883901b17600081815260028a0160205260409020549550935061452f856152e1565b505b5060009695505050505050565b60008061ffff600884901c1660ff8416801561461957600082815260028701602052604081205493506145f9848361537d565b905060001981146146175760089290921b9091179250610735915050565b505b5060ff8116600882901c81156146785760008181526001880160205260408120549450614646858461537d565b9050600019811461467657600882901b8117600081815260028a0160205260409020549550935061452f8561538d565b505b60ff8116915081156146e757865493506000614694858461537d565b905060001981146146e557600081815260018901602052604090205494509050806146be8561538d565b60ff16600883901b17600081815260028a0160205260409020549550935061452f8561538d565b505b5062ffffff9695505050505050565b600060d882901c610735565b60006107358260d01c60ff1690565b8064ffffffffff811681146133bf576040516350dbfc8760e11b815260040160405180910390fd5b6000806147458461286d565b90508062ffffff168362ffffff1611614760578281036122b3565b90910392915050565b64ffffffffff841662ffffff84811682029184821681029184160261478d886148c4565b6147979084615c86565b92506147a2886148da565b6147ac9083615c86565b91506147b7886148f0565b6147c19082615c86565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff00000000000000000000000000000000000000000000000000000016811761299b565b8161487c8161489f565b818461ffff6000198601811690811061489757614897615bdd565b015550505050565b8061ffff166000036117c55760405163944e113960e01b815260040160405180910390fd5b60006107358260101c67ffffffffffffffff1690565b60006107358260501c67ffffffffffffffff1690565b60006107358260901c67ffffffffffffffff1690565b6000808080614916600186615f74565b61ffff16905060008060008961ffff1690505b8385116149d4576000600161493e8688615ecd565b901c9050888183089a508b61ffff808d1690811061495e5761495e615bdd565b0154935061496b84612ec8565b92508964ffffffffff168364ffffffffff1611156149955761498e600182615ee0565b94506149ce565b8964ffffffffff168364ffffffffff1610156149bd576149b6816001615ecd565b95506149ce565b838497509750505050505050614a4f565b50614929565b8164ffffffffff168964ffffffffff161015614a25578961ffff166000036149fa578799505b8a61ffff6000198c018116908110614a1457614a14615bdd565b015483965096505050505050614a4f565b8760018b089950828b61ffff808d16908110614a4357614a43615bdd565b01549650965050505050505b94509492505050565b600080600080614a67886148c4565b67ffffffffffffffff1690506000614a7e896148da565b67ffffffffffffffff1690506000614a958a6148f0565b67ffffffffffffffff1690508664ffffffffff16600003614abc5791945092509050614bb2565b6000614ac78a6148c4565b67ffffffffffffffff1690506000614ade8b6148da565b67ffffffffffffffff1690506000614af58c6148f0565b67ffffffffffffffff1690508a64ffffffffff16600003614b205791975095509350614bb292505050565b6000614b3664ffffffffff808d16908e16615ecd565b9050808b64ffffffffff1685028d64ffffffffff1689020181614b5b57614b5b615c10565b049950808b64ffffffffff1684028d64ffffffffff1688020181614b8157614b81615c10565b049850808b64ffffffffff1683028d64ffffffffff1687020181614ba757614ba7615c10565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b031611156117c557604051638630bc6b60e01b815260040160405180910390fd5b6000806000614bfd8686615248565b91509150612c48868686858561519c565b600081600103614c215750607f19919050565b81600003614c425760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614c6a57506001614c85565b5060001982600160fe1b81614c8157614c81615c10565b0492505b6000614c94607f85901c61538d565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114614d10576f400000000000000000000000000000005b6000811315614d0e57908002607f1c90600160801b8210614d06579384019360019190911c905b60011d614cdf565b505b50500260011b919050565b60008080614d338460581c67ffffffffffffffff1690565b9250614d498460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff841180614d845750670de0b6b3a76400008367ffffffffffffffff16115b80614da05750670de0b6b3a76400008267ffffffffffffffff16115b1561137b57604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c82614ddc838389615267565b905080600003614df6575060009350839250614a4f915050565b6000614e028a8961445e565b9050801580614e0f575086155b15614e2b57614e1d82615428565b899550955050505050614a4f565b614e36828883614bee565b95506000614e4587838a61549a565b905080831115614ee4576000614e5b8285615ee0565b9050600160801b8110614e9c57608081901c858111614e7a5780614e7c565b855b9050614e888187615ee0565b9550614e98608082901b83615ee0565b9150505b898110614ed0576000614eaf8b83615f60565b9050868111614ebe5780614ec0565b865b9050614ecc8188615ee0565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611614f16614f108d8d61243a565b8b61445e565b1115614f355760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b600081600003614f5657506000612c48565b6001600160801b038416608085901c600080614f8861075d614f788d8b61243a565b88614f83818c615ecd565b613445565b91509150836001600160801b0316826001600160801b03161115614feb576000614fce614fb58c8c613167565b614fbf8487615cc7565b6001600160801b0316906154b7565b9050614fe3816001600160801b031660801b90565b95505061502b565b826001600160801b0316816001600160801b0316111561502b57600061501e6150148c8c613167565b614fbf8588615cc7565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156150555750608083901b15155b8061507a57508162ffffff168162ffffff1611801561507a57506001600160801b0383115b156109105760405163227bd87160e21b815262ffffff82166004820152602401611802565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b8117808214613553576000838152600287016020526040812082905582900361354757600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613545578654600160ff83161b1787555060019350505050610735565b600080600052602060008351602085016000875af1905080801561516d573d80156151605760016000511483169250615167565b843b151592505b5061517d565b3d1561517d573d6000803e3d6000fd5b50806109105760405163197138bd60e11b815260040160405180910390fd5b6000816000036151bd578383816151b5576151b5615c10565b04905061277c565b8382106151dd576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156152a257508083028184828161528357615283615c10565b04146152a2576040516363f1e01f60e01b815260040160405180910390fd5b82156115865760809290921b91820182811015611586576040516363f1e01f60e01b815260040160405180910390fd5b600061158683600184016154f8565b60008160801b80156152f557608091508092505b8260401b90508015615308579150604001815b8260201b9050801561531b579150602001815b8260101b9050801561532e579150601001815b8260081b90508015615341579150600801815b8260041b90508015615354579150600401815b8260021b90508015615367579150600201815b508160011b15615375576001015b60ff03919050565b6000611586836000198401615526565b60006001600160801b038211156153a65750608090811c905b67ffffffffffffffff8211156153be57604091821c91015b63ffffffff8211156153d257602091821c91015b61ffff8211156153e457601091821c91015b60ff8211156153f557600891821c91015b600f82111561540657600491821c91015b600382111561541757600291821c91015b60018211156133bf57600101919050565b60008160000361543a57506000919050565b60006154458361538d565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106154945782611586565b50919050565b60006154a7848484614bee565b9050818061311e5761311e615c10565b6000816154c381614bbc565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a764000091909101026131c3565b60ff81169190911c906000821561551c5781615513846152e1565b0160ff16611586565b5060001992915050565b60ff8181031691821b91600090831561554c57806155438561538d565b60ff16036122b3565b506000199392505050565b6001600160a01b03811681146117c557600080fd5b6000806040838503121561557f57600080fd5b823561558a81615557565b946020939093013593505050565b60005b838110156155b357818101518382015260200161559b565b50506000910152565b60208152600082518060208401526155db816040850160208701615598565b601f01601f19169190910160400192915050565b803562ffffff811681146133bf57600080fd5b60006020828403121561561457600080fd5b611586826155ef565b60008083601f84011261562f57600080fd5b50813567ffffffffffffffff81111561564757600080fd5b6020830191508360208260051b8501011115612eb557600080fd5b6000806000806000806080878903121561567b57600080fd5b863561568681615557565b9550602087013561569681615557565b9450604087013567ffffffffffffffff808211156156b357600080fd5b6156bf8a838b0161561d565b909650945060608901359150808211156156d857600080fd5b506156e589828a0161561d565b979a9699509497509295939492505050565b60008083601f84011261570957600080fd5b50813567ffffffffffffffff81111561572157600080fd5b602083019150836020828501011115612eb557600080fd5b60008060006040848603121561574e57600080fd5b83359250602084013567ffffffffffffffff81111561576c57600080fd5b615778868287016156f7565b9497909650939450505050565b6000806000806060858703121561579b57600080fd5b84356157a681615557565b9350602085013567ffffffffffffffff8111156157c257600080fd5b6157ce8782880161561d565b90945092505060408501356157e281615557565b939692955090935050565b600081518084526020808501945080840160005b8381101561581d57815187529582019590820190600101615801565b509495945050505050565b83815282602082015260606040820152600061277c60608301846157ed565b803561ffff811681146133bf57600080fd5b600080600080600080600080610100898b03121561587657600080fd5b61587f89615847565b975061588d60208a01615847565b965061589b60408a01615847565b95506158a960608a01615847565b94506158b760808a016155ef565b93506158c560a08a01615847565b92506158d360c08a016155ef565b91506158e160e08a016155ef565b90509295985092959890939650565b6000806000806040858703121561590657600080fd5b843567ffffffffffffffff8082111561591e57600080fd5b61592a8883890161561d565b9096509450602087013591508082111561594357600080fd5b506159508782880161561d565b95989497509550505050565b60208152600061158660208301846157ed565b803580151581146133bf57600080fd5b6000806040838503121561599257600080fd5b61599b8361596f565b915060208301356159ab81615557565b809150509250929050565b600080600080600080600060e0888a0312156159d157600080fd5b6159da88615847565b96506159e860208901615847565b95506159f660408901615847565b9450615a0460608901615847565b9350615a12608089016155ef565b9250615a2060a08901615847565b9150615a2e60c089016155ef565b905092959891949750929550565b600060208284031215615a4e57600080fd5b813564ffffffffff8116811461158657600080fd5b60008060408385031215615a7657600080fd5b615a7f8361596f565b9150612eb2602084016155ef565b60008060408385031215615aa057600080fd5b82356001600160801b0381168114615ab757600080fd5b9150612eb26020840161596f565b600060208284031215615ad757600080fd5b5035919050565b600060208284031215615af057600080fd5b61158682615847565b60008060408385031215615b0c57600080fd5b8235615ab781615557565b60008060408385031215615b2a57600080fd5b823561599b81615557565b60008060008060608587031215615b4b57600080fd5b8435615b5681615557565b935060208501359250604085013567ffffffffffffffff811115615b7957600080fd5b615950878288016156f7565b600060208284031215615b9757600080fd5b815161158681615557565b634e487b7160e01b600052604160045260246000fd5b604081526000615bcb60408301856157ed565b828103602084015261277c81856157ed565b634e487b7160e01b600052603260045260246000fd5b600060208284031215615c0557600080fd5b813561158681615557565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff8281168282160390808211156131c8576131c8615c26565b67ffffffffffffffff818116838216028082169190828114615c7e57615c7e615c26565b505092915050565b67ffffffffffffffff8181168382160190808211156131c8576131c8615c26565b6001600160801b038181168382160190808211156131c8576131c8615c26565b6001600160801b038281168282160390808211156131c8576131c8615c26565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615d1957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000615d46604083018688615ce7565b828103602084015261299b818587615ce7565b604081526000615d6d604083018587615ce7565b8281036020840152612c4881856157ed565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a0830152613f6f60c083018486615d7f565b60008251615dfb818460208701615598565b9190910192915050565b600060208284031215615e1757600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a06060830152615e5360a083018688615ce7565b8281036080840152615e66818587615ce7565b9a9950505050505050505050565b83815260406020820152600061277c604083018486615d7f565b60006001600160a01b03808816835280871660208401525060806040830152615ebb608083018587615ce7565b90508260608301529695505050505050565b8082018082111561073557610735615c26565b8181038181111561073557610735615c26565b64ffffffffff8181168382160190808211156131c8576131c8615c26565b600061ffff80841680615f2657615f26615c10565b92169190910692915050565b600082615f4157615f41615c10565b600160ff1b821460001984141615615f5b57615f5b615c26565b500590565b600082615f6f57615f6f615c10565b500490565b61ffff8281168282160390808211156131c8576131c8615c2656fe9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122021d0d6a98b619f239edd28c667566f18472738c97ca0f112816c25af22bc051764736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004c8038038062004c8083398101604081905262000034916200006b565b6001600160a01b0392831660805290821660a0521660c052620000bf565b6001600160a01b03811681146200006857600080fd5b50565b6000806000606084860312156200008157600080fd5b83516200008e8162000052565b6020850151909350620000a18162000052565b6040850151909250620000b48162000052565b809150509250925092565b60805160a05160c051614afe6200018260003960008181610194015281816102f3015281816105e2015281816106c00152818161079c015281816108df01528181610c6c01528181611288015281816113240152818161148b0152818161150e0152818161185101528181611ae601528181611dcf0152818161272801528181612ac70152612b450152600081816104900152613a4701526000818161035b0152818161102d015281816111da01528181611fc901526133230152614afe6000f3fe6080604052600436106101845760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc146104f4578063e9361c0814610507578063f96fe9251461052757600080fd5b8063bb558a9f14610481578063c22159b6146104b4578063d0e380f2146104d457600080fd5b8063a0d376cf116100b0578063a0d376cf1461042e578063a3c7271a1461044e578063b066ea7c1461046e57600080fd5b806392fe8e70146103a4578063964f987c146103c45780639ab6156b1461040e57600080fd5b806362c067671161013857806381c2fdfb1161011257806381c2fdfb1461031757806388cc58e41461034c5780638efc2b2c1461037f57600080fd5b806362c067671461028c578063659ac74b146102ac5780636c9c0078146102e457600080fd5b80632a443fae116101695780632a443fae1461022c5780633dc8f8ec1461024c5780634b8018701461026c57600080fd5b80631a24f9a9146101d95780632075ad221461020c57600080fd5b366101d457336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d257604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101e557600080fd5b506101f96101f436600461401a565b61055b565b6040519081526020015b60405180910390f35b61021f61021a366004614085565b61085d565b6040516102039190614121565b34801561023857600080fd5b506101f961024736600461401a565b610abd565b34801561025857600080fd5b5061021f61026736600461401a565b610bea565b34801561027857600080fd5b506101f961028736600461401a565b610df0565b34801561029857600080fd5b506101d26102a7366004614134565b61102b565b3480156102b857600080fd5b506102cc6102c73660046141a1565b61119b565b6040516001600160a01b039091168152602001610203565b3480156102f057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561032357600080fd5b506103376103323660046141fd565b611252565b60408051928352602083019190915201610203565b34801561035857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b61039261038d3660046142b8565b6113ab565b604051610203969594939291906142fb565b3480156103b057600080fd5b5061021f6103bf36600461401a565b6115fa565b3480156103d057600080fd5b506103e46103df366004614368565b61173f565b604080516001600160801b0394851681529284166020840152921691810191909152606001610203565b34801561041a57600080fd5b506101f961042936600461401a565b6117cf565b34801561043a57600080fd5b506103e4610449366004614368565b611943565b34801561045a57600080fd5b506103926104693660046142b8565b611987565b6101f961047c366004614085565b611a64565b34801561048d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b3480156104c057600080fd5b506103376104cf3660046143b3565b611bde565b3480156104e057600080fd5b506101f96104ef36600461447b565b611cd4565b6101f9610502366004614085565b611d4d565b34801561051357600080fd5b506101d2610522366004614500565b611fc7565b34801561053357600080fd5b50610547610542366004614595565b6120ea565b60405162ffffff9091168152602001610203565b6000818042111561058d5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105a5575080515160208201515114155b806105c257506040810151518151516105bf9060016145d7565b14155b156105e05760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610625576106256145ea565b60200260200101516001600160a01b03161461068457604086015186515181518110610653576106536145ea565b602002602001015160405163cfec0e0160e01b815260040161058491906001600160a01b0391909116815260200190565b600061069d876000015188602001518960400151612156565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190614600565b90506107718860400151600081518110610747576107476145ea565b60200260200101513384600081518110610763576107636145ea565b60200260200101518d612266565b6107858289602001518a6040015130612287565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190614600565b6108199190614619565b945084891115610846576040516313fab00360e21b8152600481018a905260248101869052604401610584565b6108508786612706565b5050505095945050505050565b6060818042111561088a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b845151859015806108a2575080515160208201515114155b806108bf57506040810151518151516108bc9060016145d7565b14155b156108dd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061091e5761091e6145ea565b60200260200101516001600160a01b03161461094b578560400151600081518110610653576106536145ea565b6000610964876000015188602001518960400151612156565b905061097a87602001518289604001518b61279a565b93503484600081518110610990576109906145ea565b602002602001015111156109de5734846000815181106109b2576109b26145ea565b602002602001015160405163194ee21960e31b8152600401610584929190918252602082015260400190565b610a1c816000815181106109f4576109f46145ea565b602002602001015185600081518110610a0f57610a0f6145ea565b6020026020010151612ab9565b6000610a338289602001518a60400151888b612b70565b905088811015610a60576040516313fab00360e21b8152600481018a905260248101829052604401610584565b84600081518110610a7357610a736145ea565b6020026020010151341115610ab157610ab13386600081518110610a9957610a996145ea565b602002602001015134610aac9190614619565b612e8d565b50505050949350505050565b60008180421115610aea5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610b02575080515160208201515114155b80610b1f5750604081015151815151610b1c9060016145d7565b14155b15610b3d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b56876000015188602001518960400151612156565b9050610b9c8760400151600081518110610b7257610b726145ea565b60200260200101513383600081518110610b8e57610b8e6145ea565b60200260200101518c612266565b610bb1898289602001518a604001518a612f1f565b935083881115610bde576040516313fab00360e21b81526004810189905260248101859052604401610584565b50505095945050505050565b60608180421115610c175760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610c2f575080515160208201515114155b80610c4c5750604081015151815151610c499060016145d7565b14155b15610c6a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610caf57610caf6145ea565b60200260200101516001600160a01b031614610cdd57604086015186515181518110610653576106536145ea565b6000610cf6876000015188602001518960400151612156565b9050610d0c87602001518289604001518c61279a565b93508784600081518110610d2257610d226145ea565b60200260200101511115610d445787846000815181106109b2576109b26145ea565b610da28760400151600081518110610d5e57610d5e6145ea565b60200260200101513383600081518110610d7a57610d7a6145ea565b602002602001015187600081518110610d9557610d956145ea565b6020026020010151612266565b6000610db98289602001518a604001518830612b70565b905089811015610de6576040516313fab00360e21b8152600481018b905260248101829052604401610584565b6108508782612706565b60008180421115610e1d5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610e35575080515160208201515114155b80610e525750604081015151815151610e4f9060016145d7565b14155b15610e705760405163b91b4d4d60e01b815260040160405180910390fd5b6000610e89876000015188602001518960400151612156565b905060008760400151825181518110610ea457610ea46145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190614600565b9050610f658960400151600081518110610f3b57610f3b6145ea565b60200260200101513385600081518110610f5757610f576145ea565b60200260200101518e612266565b610f79838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190614600565b610ff09190614619565b9550858a111561101d576040516313fab00360e21b8152600481018b905260248101879052604401610584565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad919061462c565b6001600160a01b0316336001600160a01b0316146110de57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661110e5760001981146110fb57806110fd565b475b90506111098282612e8d565b505050565b600019811461111d5780611185565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190614600565b90506111096001600160a01b038416838361328c565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611249919061462c565b95945050505050565b60008082804211156112805760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b60006112b38c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff1660016132f2565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611319919061462c565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611358579899985b600080611369848e8e8e8e306133df565b915091508261137957808261137c565b81815b80975081985050505050506113928c8786613541565b61139c8684612706565b50509850989650505050505050565b6000808080606080826113e06113c460208a018a614649565b6113d460408b0160208c01614649565b8a6040013560016132f2565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611444919061462c565b6001600160a01b031661145a60208a018a614649565b6001600160a01b0316146114815760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166114b860208a018a614649565b6001600160a01b03161480156114d15750348860600135145b15611504576114f56114e960408a0160208b01614649565b33838b60800135612266565b6114ff8134612ab9565b6115db565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661153e60408a0160208b01614649565b6001600160a01b03161480156115575750348860800135145b15611578576114f561156c60208a018a614649565b33838b60600135612266565b6115856020890189614649565b61159560408a0160208b01614649565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a401610584565b6115e58882613562565b949d939c50919a509850965090945092505050565b606081804211156116275760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b8451518590158061163f575080515160208201515114155b8061165c57506040810151518151516116599060016145d7565b14155b1561167a5760405163b91b4d4d60e01b815260040160405180910390fd5b6000611693876000015188602001518960400151612156565b90506116a987602001518289604001518c61279a565b935087846000815181106116bf576116bf6145ea565b602002602001015111156116e15787846000815181106109b2576109b26145ea565b6116fb8760400151600081518110610d5e57610d5e6145ea565b60006117128289602001518a60400151888b612b70565b905089811015610850576040516313fab00360e21b8152600481018b905260248101829052604401610584565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa15801561179c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c09190614666565b91989097509095509350505050565b600081804211156117fc5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611814575080515160208201515114155b80611831575060408101515181515161182e9060016145d7565b14155b1561184f5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110611894576118946145ea565b60200260200101516001600160a01b0316146118c257604086015186515181518110610653576106536145ea565b60006118db876000015188602001518960400151612156565b90506118f78760400151600081518110610b7257610b726145ea565b61190c898289602001518a6040015130612f1f565b935083881115611939576040516313fab00360e21b81526004810189905260248101859052604401610584565b610bde8685612706565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f89060440161177f565b6000808080606080826119a06113c460208a018a614649565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a04919061462c565b6001600160a01b0316611a1a60208a018a614649565b6001600160a01b031614611a415760405163b33f8ab960e01b815260040160405180910390fd5b611a5161156c60208a018a614649565b6115db6114e960408a0160208b01614649565b60008180421115611a915760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611aa9575080515160208201515114155b80611ac65750604081015151815151611ac39060016145d7565b14155b15611ae45760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611b2557611b256145ea565b60200260200101516001600160a01b031614611b52578560400151600081518110610653576106536145ea565b6000611b6b876000015188602001518960400151612156565b9050611b9181600081518110611b8357611b836145ea565b602002602001015134612ab9565b611ba6348289602001518a604001518a612f1f565b935083881115611bd3576040516313fab00360e21b81526004810189905260248101859052604401610584565b505050949350505050565b6000808280421115611c0c5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6000611c1f8d8d8d61ffff1660016132f2565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c85919061462c565b6001600160a01b03168e6001600160a01b0316141590508015611ca6579899985b611cb4828c8c8c8c8c6133df565b90955093508015611cc3579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614600565b90505b92915050565b60008180421115611d7a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611d92575080515160208201515114155b80611daf5750604081015151815151611dac9060016145d7565b14155b15611dcd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611e0e57611e0e6145ea565b60200260200101516001600160a01b031614611e3b578560400151600081518110610653576106536145ea565b6000611e54876000015188602001518960400151612156565b905060008760400151825181518110611e6f57611e6f6145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190614600565b9050611f0283600081518110611b8357611b836145ea565b611f16838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015611f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f839190614600565b611f8d9190614619565b9550858a1115611fba576040516313fab00360e21b8152600481018b905260248101879052604401610584565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061462c565b6001600160a01b0316336001600160a01b03161461207a57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906120b0903090899089908990899089906004016146f3565b600060405180830381600087803b1580156120ca57600080fd5b505af11580156120de573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614733565b6060835167ffffffffffffffff81111561217257612172613d98565b60405190808252806020026020018201604052801561219b578160200160208202803683370190505b509050600080836000815181106121b4576121b46145ea565b6020026020010151905060005b835181101561225c578192508481600101815181106121e2576121e26145ea565b6020026020010151915061222a8383898481518110612203576122036145ea565b602002602001015189858151811061221d5761221d6145ea565b6020026020010151613a06565b84828151811061223c5761223c6145ea565b6001600160a01b03909216602092830291909101909101526001016121c1565b5050509392505050565b8015612281576122816001600160a01b038516848484613b06565b50505050565b6000806000806000866000815181106122a2576122a26145ea565b6020026020010151905060005b89518110156120de578981815181106122ca576122ca6145ea565b602002602001015192508881815181106122e6576122e66145ea565b60200260200101519450819550878160010181518110612308576123086145ea565b602002602001015191508951816001011461233f57898160010181518110612332576123326145ea565b6020026020010151612341565b865b9350600085600181111561235757612357614750565b036125fd57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561239d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c1919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b031610156124f6576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa15801561243d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124619190614600565b0390506000612471828585613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156124d757600080fd5b505af11580156124eb573d6000803e3d6000fd5b5050505050506125f6565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125659190614600565b0390506000612575828486613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156125db57600080fd5b505af11580156125ef573d6000803e3d6000fd5b5050505050505b50506126fe565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561264a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266e919061462c565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af11580156126d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fc9190614600565b505b6001016122af565b80600003612712575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561277457600080fd5b505af1158015612788573d6000803e3d6000fd5b505050506127968282612e8d565b5050565b6060825167ffffffffffffffff8111156127b6576127b6613d98565b6040519080825280602002602001820160405280156127df578160200160208202803683370190505b50905081818551815181106127f6576127f66145ea565b602090810291909101015283515b8015612ab057600084612818600184614619565b81518110612828576128286145ea565b602002602001015190506000876001846128429190614619565b81518110612852576128526145ea565b6020026020010151905060008760018561286c9190614619565b8151811061287c5761287c6145ea565b602002602001015190506000600181111561289957612899614750565b8260018111156128ab576128ab614750565b036129cd57600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612915919061477d565b506001600160701b031691506001600160701b0316915088868151811061293e5761293e6145ea565b60200260200101516001600160a01b0316856001600160a01b0316111561296157905b6000878781518110612975576129756145ea565b60200260200101519050612994838383613c159092919063ffffffff16565b6001600160801b0316886129a960018a614619565b815181106129b9576129b96145ea565b602002602001018181525050505050612a9a565b612a66818686815181106129e3576129e36145ea565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a57919061462c565b6001600160a01b03161461173f565b50506001600160801b031685612a7d600187614619565b81518110612a8d57612a8d6145ea565b6020026020010181815250505b5050508080612aa8906147c2565b915050612804565b50949350505050565b80600003612ac5575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612b2057600080fd5b505af1158015612b34573d6000803e3d6000fd5b506127969350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691508490508361328c565b60008060008060008088600081518110612b8c57612b8c6145ea565b6020026020010151905060005b8b51811015612e7e578b8181518110612bb457612bb46145ea565b602002602001015193508a8181518110612bd057612bd06145ea565b60200260200101519250819550898160010181518110612bf257612bf26145ea565b602002602001015191508b518160010114612c29578b8160010181518110612c1c57612c1c6145ea565b6020026020010151612c2b565b875b94506000836001811115612c4157612c41614750565b03612d4c57888160010181518110612c5b57612c5b6145ea565b60200260200101519650816001600160a01b0316866001600160a01b03161015612cff5760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b50505050612e76565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612cc8565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db0919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612e4a918916906353c059a0906044015b6020604051808303816000875af1158015612e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e369190614600565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612e6e57809950612e72565b8199505b5050505b600101612b99565b50505050505095945050505050565b80600003612e99575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612ee6576040519150601f19603f3d011682016040523d82523d6000602084013e612eeb565b606091505b50509050806111095760405163047b96f760e41b81526001600160a01b038416600482015260248101839052604401610584565b60008060008060008087600081518110612f3b57612f3b6145ea565b602002602001015190508a955060005b8a51811015612e7e578a8181518110612f6657612f666145ea565b60200260200101519250898181518110612f8257612f826145ea565b60200260200101519450819550888160010181518110612fa457612fa46145ea565b602002602001015191508a518160010114612fdb578a8160010181518110612fce57612fce6145ea565b6020026020010151612fdd565b875b93506000856001811115612ff357612ff3614750565b036131ad57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061305d919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561311c57613099898383613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156130ff57600080fd5b505af1158015613113573d6000803e3d6000fd5b505050506131a6565b613127898284613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561318d57600080fd5b505af11580156131a1573d6000803e3d6000fd5b505050505b5050613284565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613211919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052878316602483015292506000918291613258918816906353c059a090604401612df3565b6001600160801b031691506001600160801b03169150821561327c57809950613280565b8199505b5050505b600101612f4b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526122818482613cb4565b60405163704037bd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa15801561336c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339091906147d9565b6020015190506001600160a01b0381166133d757604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b949350505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613416949392919061485e565b6000604051808303816000875af1158015613435573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261345d919081019061489c565b905060005b81518110156134f157613494828281518110613480576134806145ea565b60200260200101516001600160801b031690565b6134a7906001600160801b0316856145d7565b93506134cc8282815181106134be576134be6145ea565b602002602001015160801c90565b6134df906001600160801b0316846145d7565b92506134ea81614922565b9050613462565b50878310806134ff57508682105b15613535576040516318ccfb7760e11b815260048101899052602481018490526044810188905260648101839052608401610584565b50965096945050505050565b8060000361354e57505050565b6111096001600160a01b038416838361328c565b600080600080606080876101c001358042111561359b5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6135a96101408a018a61493b565b90506135b96101208b018b61493b565b90501415806135e657506135d16101608a018a61493b565b90506135e16101208b018b61493b565b905014155b156136045760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613620575062ffffff6101008a0135115b1561364f5760405163197a55c760e11b815260e08a013560048201526101008a01356024820152604401610584565b600061365f6101208b018b61493b565b905067ffffffffffffffff81111561367957613679613d98565b6040519080825280602002602001820160405280156136a2578160200160208202803683370190505b5090506136b36101208b018b61493b565b905067ffffffffffffffff8111156136cd576136cd613d98565b6040519080825280602002602001820160405280156136f6578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375d9190614733565b62ffffff169050808b61010001358c60e0013501108061378757508a60e001358b61010001358201105b156137bd57604051637d50edab60e11b815260e08c013560048201526101008c0135602482015260448101829052606401610584565b60005b82518110156138c05760006137d96101208e018e61493b565b838181106137e9576137e96145ea565b90506020020135830190506000811280613805575062ffffff81115b15613826576040516370a82e6160e11b815260048101829052602401610584565b80878381518110613839576138396145ea565b602090810291909101015261389a6138556101408f018f61493b565b84818110613865576138656145ea565b905060200201358e80610160019061387d919061493b565b8581811061388d5761388d6145ea565b9050602002013583613d24565b8483815181106138ac576138ac6145ea565b6020908102919091010152506001016137c0565b50506000808a6001600160a01b031663383d15c58d6101800160208101906138e89190614649565b858f6101a00160208101906138fd9190614649565b6040518463ffffffff1660e01b815260040161391b93929190614985565b6000604051808303816000875af115801561393a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261396291908101906149e9565b9650909250905060006139758383613d5e565b6001600160801b0381169b50608081901c9a50905060a08d01358b108061399f57508c60c001358a105b156139db576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b9052608401610584565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613a1b57613a1b614750565b03613afa5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ab2919061462c565b90506001600160a01b038116613af557604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b6133d7565b611249858585856132f2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052613b748582613cb4565b5050505050565b600083600003613b9e5760405163b229ed3360e01b815260040160405180910390fd5b821580613ba9575081155b15613bc7576040516398c59a2960e01b815260040160405180910390fd5b6000613bd5856103e5614a8f565b90506000613be38483614a8f565b9050600082613bf4876103e8614a8f565b613bfe91906145d7565b9050613c0a8183614aa6565b979650505050505050565b600083600003613c385760405163b229ed3360e01b815260040160405180910390fd5b821580613c43575081155b15613c61576040516398c59a2960e01b815260040160405180910390fd5b6000613c6d8585614a8f565b613c79906103e8614a8f565b90506000613c878685614619565b613c93906103e5614a8f565b9050613c9f8183614aa6565b613caa9060016145d7565b9695505050505050565b600080600052602060008351602085016000875af19050808015613cf5573d8015613ce85760016000511483169250613cef565b843b151592505b50613d05565b3d15613d05573d6000803e3d6000fd5b50806111095760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681176133d7565b80820382811180613d7a57506001600160801b03808416908216115b15611d475760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613dd157613dd1613d98565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613e0057613e00613d98565b604052919050565b600067ffffffffffffffff821115613e2257613e22613d98565b5060051b60200190565b600082601f830112613e3d57600080fd5b81356020613e52613e4d83613e08565b613dd7565b82815260059290921b84018101918181019086841115613e7157600080fd5b8286015b84811015613e8c5780358352918301918301613e75565b509695505050505050565b6001600160a01b0381168114613eac57600080fd5b50565b8035613eba81613e97565b919050565b600082601f830112613ed057600080fd5b81356020613ee0613e4d83613e08565b82815260059290921b84018101918181019086841115613eff57600080fd5b8286015b84811015613e8c578035613f1681613e97565b8352918301918301613f03565b600060608284031215613f3557600080fd5b613f3d613dae565b9050813567ffffffffffffffff80821115613f5757600080fd5b613f6385838601613e2c565b8352602091508184013581811115613f7a57600080fd5b8401601f81018613613f8b57600080fd5b8035613f99613e4d82613e08565b81815260059190911b82018401908481019088831115613fb857600080fd5b928501925b82841015613fe457833560028110613fd55760008081fd5b82529285019290850190613fbd565b808688015250505050604084013591508082111561400157600080fd5b5061400e84828501613ebf565b60408301525092915050565b600080600080600060a0868803121561403257600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561405757600080fd5b61406388828901613f23565b935050606086013561407481613e97565b949793965091946080013592915050565b6000806000806080858703121561409b57600080fd5b84359350602085013567ffffffffffffffff8111156140b957600080fd5b6140c587828801613f23565b93505060408501356140d681613e97565b9396929550929360600135925050565b600081518084526020808501945080840160005b83811015614116578151875295820195908201906001016140fa565b509495945050505050565b602081526000611d4460208301846140e6565b60008060006060848603121561414957600080fd5b833561415481613e97565b9250602084013561416481613e97565b929592945050506040919091013590565b62ffffff81168114613eac57600080fd5b61ffff81168114613eac57600080fd5b8035613eba81614186565b600080600080608085870312156141b757600080fd5b84356141c281613e97565b935060208501356141d281613e97565b925060408501356141e281614175565b915060608501356141f281614186565b939692955090935050565b600080600080600080600080610100898b03121561421a57600080fd5b883561422581613e97565b9750602089013561423581614186565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561426057600080fd5b61426c8c838d01613e2c565b955060a08b013591508082111561428257600080fd5b5061428f8b828c01613e2c565b93505060c08901356142a081613e97565b8092505060e089013590509295985092959890939650565b6000602082840312156142ca57600080fd5b813567ffffffffffffffff8111156142e157600080fd5b82016101e081850312156142f457600080fd5b9392505050565b86815285602082015284604082015283606082015260c06080820152600061432660c08301856140e6565b82810360a084015261433881856140e6565b9998505050505050505050565b6001600160801b0381168114613eac57600080fd5b8015158114613eac57600080fd5b60008060006060848603121561437d57600080fd5b833561438881613e97565b9250602084013561439881614345565b915060408401356143a88161435a565b809150509250925092565b60008060008060008060008060006101208a8c0312156143d257600080fd5b89356143dd81613e97565b985060208a01356143ed81613e97565b97506143fb60408b01614196565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561442657600080fd5b6144328d838e01613e2c565b955060c08c013591508082111561444857600080fd5b506144558c828d01613e2c565b93505061446460e08b01613eaf565b91506101008a013590509295985092959850929598565b6000806040838503121561448e57600080fd5b823561449981613e97565b915060208301356144a981614175565b809150509250929050565b60008083601f8401126144c657600080fd5b50813567ffffffffffffffff8111156144de57600080fd5b6020830191508360208260051b85010111156144f957600080fd5b9250929050565b6000806000806000806080878903121561451957600080fd5b863561452481613e97565b9550602087013561453481613e97565b9450604087013567ffffffffffffffff8082111561455157600080fd5b61455d8a838b016144b4565b9096509450606089013591508082111561457657600080fd5b5061458389828a016144b4565b979a9699509497509295939492505050565b600080604083850312156145a857600080fd5b82356145b381613e97565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d4757611d476145c1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561461257600080fd5b5051919050565b81810381811115611d4757611d476145c1565b60006020828403121561463e57600080fd5b81516142f481613e97565b60006020828403121561465b57600080fd5b81356142f481613e97565b60008060006060848603121561467b57600080fd5b835161468681614345565b602085015190935061469781614345565b60408501519092506143a881614345565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156146da57600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b038089168352808816602084015250608060408301526147206080830186886146a8565b82810360608401526143388185876146a8565b60006020828403121561474557600080fd5b81516142f481614175565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613eba57600080fd5b60008060006060848603121561479257600080fd5b61479b84614766565b92506147a960208501614766565b9150604084015163ffffffff811681146143a857600080fd5b6000816147d1576147d16145c1565b506000190190565b6000608082840312156147eb57600080fd5b6040516080810181811067ffffffffffffffff8211171561480e5761480e613d98565b604052825161481c81614186565b8152602083015161482c81613e97565b6020820152604083015161483f8161435a565b604082015260608301516148528161435a565b60608201529392505050565b60006001600160a01b0380871683528086166020840152506080604083015261488a60808301856140e6565b8281036060840152613c0a81856140e6565b600060208083850312156148af57600080fd5b825167ffffffffffffffff8111156148c657600080fd5b8301601f810185136148d757600080fd5b80516148e5613e4d82613e08565b81815260059190911b8201830190838101908783111561490457600080fd5b928401925b82841015613c0a57835182529284019290840190614909565b600060018201614934576149346145c1565b5060010190565b6000808335601e1984360301811261495257600080fd5b83018035915067ffffffffffffffff82111561496d57600080fd5b6020019150600581901b36038213156144f957600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156149d0578551835294830194918301916001016149b4565b5050809450505080851660408501525050949350505050565b6000806000606084860312156149fe57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614a2457600080fd5b8501601f81018713614a3557600080fd5b8051614a43613e4d82613e08565b81815260059190911b82018301908381019089831115614a6257600080fd5b928401925b82841015614a8057835182529284019290840190614a67565b80955050505050509250925092565b8082028115828204841417611d4757611d476145c1565b600082614ac357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a75566c1a48ecb1a59038963081bd2fb270830ebc578f6dde060037597b3b38d64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b229ed3360e01b815260040160405180910390fd5b821580611e40575081155b15611e5e576040516398c59a2960e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b229ed3360e01b815260040160405180910390fd5b821580611eda575081155b15611ef8576040516398c59a2960e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b229ed3360e01b815260040160405180910390fd5b821580611f3b575081155b15611f59576040516398c59a2960e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc57604051630df4665760e21b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b576040516304cda58760e51b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea264697066735822122089625b3f677708ef8d8e8350bf945a8f12b2fdcdf5d9fe3e4307be5414ab829864736f6c63430008140033a2646970667358221220847ef192e043173b8206f255429191e29f19b69dd9cccca5701ebd87ac0c451c64736f6c63430008140033",
    "sourceMap": "3126:44:3:-:0;;;-1:-1:-1;;3126:44:3;3166:4;3126:44;;;1753:4:102;1705:54;;1807:17;591:11311:105;1807:17:102;;591:11311:105;1807:17:102;;;-1:-1:-1;;;3126:44:3;1807:17:102;;;:8;:17::i;:::-;-1:-1:-1;;;;;1765:60:102;;;1871:15;;;;;;;;;;;;-1:-1:-1;;;1871:15:102;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;1831:56:102;;;728:47:105;1197:5:102;1142:2;728:47:105;:::i;:::-;:54;;778:4;728:54;:::i;:::-;695:87;;789:58;;;-1:-1:-1;;;;;;789:58:105;805:42;789:58;;;591:11311;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;979:25:131;;;20293:33:4;-1:-1:-1;20344:7:4;;;;952:18:131;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:265:131:-;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:250::-;369:1;379:113;393:6;390:1;387:13;379:113;;;469:11;;;463:18;450:11;;;443:39;415:2;408:10;379:113;;;-1:-1:-1;;526:1:131;508:16;;501:27;284:250::o;539:289::-;670:3;708:6;702:13;724:66;783:6;778:3;771:4;763:6;759:17;724:66;:::i;:::-;806:16;;;;;539:289;-1:-1:-1;;539:289:131:o;1015:290::-;1085:6;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1180:16;;-1:-1:-1;;;;;1225:31:131;;1215:42;;1205:70;;1271:1;1268;1261:12;1205:70;1294:5;1015:290;-1:-1:-1;;;1015:290:131:o;1310:493::-;1516:1;1512;1507:3;1503:11;1499:19;1491:6;1487:32;1476:9;1469:51;1556:2;1551;1540:9;1536:18;1529:30;1450:4;1588:6;1582:13;1631:6;1626:2;1615:9;1611:18;1604:34;1647:79;1719:6;1714:2;1703:9;1699:18;1694:2;1686:6;1682:15;1647:79;:::i;:::-;1787:2;1766:15;-1:-1:-1;;1762:29:131;1747:45;;;;1794:2;1743:54;;1310:493;-1:-1:-1;;;1310:493:131:o;:::-;591:11311:105;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001ad5760003560e01c806366d9a9a011620000f5578063b5508aa91162000097578063e20c9f71116200006e578063e20c9f711462000342578063efbc8013146200034c578063fecaa223146200035657600080fd5b8063b5508aa91462000317578063b89e02331462000321578063ba414fa6146200033857600080fd5b8063889be5b711620000cc578063889be5b714620002ca578063916a17c614620002f6578063a7aa85e9146200030057600080fd5b806366d9a9a0146200028e57806385226c8114620002a75780638872168114620002c057600080fd5b80633c322dd3116200015f57806349789ef9116200013657806349789ef9146200025457806351f44d95146200027a5780635322e371146200028457600080fd5b80633c322dd314620002365780633e5e3c2314620002405780633f7286f4146200024a57600080fd5b80631ed7831c11620001945780631ed7831c14620001fa5780632ade38801462000213578063396b9c98146200022c57600080fd5b806301ffc9a714620001b25780630a9254e414620001ee575b600080fd5b620001d9620001c3366004620088cd565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b620001f86200036d565b005b6200020462000df0565b604051620001e591906200893f565b6200021d62000e54565b604051620001e59190620089a8565b620001f862000fa2565b620001f8620019a7565b6200020462001be5565b6200020462001c47565b6200026b6200026536600462008a80565b62001ca9565b604051908152602001620001e5565b620001f862001cfe565b620001f8620026fd565b62000298620030d8565b604051620001e5919062008ab8565b620002b1620031c2565b604051620001e5919062008b6f565b620001f86200329c565b620002e1620002db36600462008be9565b620034a1565b60405162ffffff9091168152602001620001e5565b62000298620034fc565b620001f86200031136600462008c40565b620035e6565b620002b162003a8c565b620001d96200033236600462008cdc565b62003b66565b620001d962003be9565b6200020462003ca8565b620001f862003d0a565b620001f86200036736600462008d02565b620046dd565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa158015620003f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200041d919081019062008e0a565b6302be17786040518363ffffffff1660e01b81526004016200044192919062008ea9565b6020604051808303816000875af115801562000461573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000487919062008ecd565b5062000492620049e7565b601d54670de0b6b3a76400009069d3c21bcecceda100000090620004cd906001600160a01b031630620004c784600a62008efd565b6200605d565b601e54620004ec906001600160a01b031630620004c784600a62008efd565b601c546200050b906001600160a01b031630620004c784600a62008efd565b6022546200052a906001600160a01b031630620004c784600a62008efd565b60215462000549906001600160a01b031630620004c784600a62008efd565b602a54601e54601d546001600160a01b039283169263e8e3370092811691166200057560028762008f2d565b86600080306200058742600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af115801562000604573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200062a919062008f5a565b5050602a54601c54601d546001600160a01b03928316935063e8e337009291821691168480600080306200066042600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af1158015620006dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000703919062008f5a565b5050602a54602254601d546001600160a01b03928316935063e8e337009291821691166200073360028762008f2d565b86600080306200074542600162008f44565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af1158015620007c2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007e8919062008f5a565b505060248054601e54601d5460405163659ac74b60e01b81526001600160a01b03928316600482015290821693810193909352628000006044840152600a606484015216915063659ac74b906084016020604051808303816000875af115801562000857573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200087d919062008f89565b50602454601c54601d546001600160a01b039283169263659ac74b9281169116620008ad62800000603262008fa9565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af11580156200090e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000934919062008f89565b5060248054602254601d5460405163659ac74b60e01b81526001600160a01b03928316600482015290821693810193909352628000006044840152600a6064840152169063659ac74b906084016020604051808303816000875af1158015620009a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009c7919062008f89565b50602454602154601d546001600160a01b039283169263659ac74b9281169116620009f762800000603262008fa9565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af115801562000a58573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a7e919062008f89565b50601e54601d5460009162000aa8916001600160a01b039182169116846280000060078662006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000adb90849060040162008ffa565b6000604051808303816000875af115801562000afb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b259190810190620091d1565b5050601c54601d5462000b6095506001600160a01b03918216945016915086905062000b5662800000603262008fa9565b6007600062006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000b9390849060040162008ffa565b6000604051808303816000875af115801562000bb3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000bdd9190810190620091d1565b5050602254601d5462000c0c95506001600160a01b039182169450169150859050628000006007600062006071565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000c3f90849060040162008ffa565b6000604051808303816000875af115801562000c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c899190810190620091d1565b5050602154601d5462000cba95506001600160a01b03918216945016915085905062000b5662800000603262008fa9565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000ced90849060040162008ffa565b6000604051808303816000875af115801562000d0d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d379190810190620091d1565b5050602154601d5462000d6895506001600160a01b03918216945016915086905062000b5662800000603262008fa9565b6025546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000d9b90849060040162008ffa565b6000604051808303816000875af115801562000dbb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000de59190810190620091d1565b505050505050505050565b6060601480548060200260200160405190810160405280929190818152602001828054801562000e4a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000e2b575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000f9957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000f8157838290600052602060002001805462000eed9062009261565b80601f016020809104026020016040519081016040528092919081815260200182805462000f1b9062009261565b801562000f6c5780601f1062000f405761010080835404028352916020019162000f6c565b820191906000526020600020905b81548152906001019060200180831162000f4e57829003601f168201915b50505050508152602001906001019062000ecb565b50505050815250508152602001906001019062000e78565b50505050905090565b604080516002808252606082018352600092602083019080368337505060225482519293506001600160a01b03169183915060009062000fe65762000fe66200929d565b6001600160a01b039283166020918202929092010152601d548251911690829060019081106200101a576200101a6200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a4090620010659086908690600401620092b3565b600060405180830381865afa15801562001083573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010ad919081019062009437565b9050620011248160800151600081518110620010cd57620010cd6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3100000000000000000000000000000081525062006209565b620011af81608001516001815181106200114257620011426200929d565b60200260200101516001600160801b031683600262001162919062009596565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a320000000000000000000000000000008152506200627d565b620012138160400151600081518110620011cd57620011cd6200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3300000000000000000000000000000081525062006209565b6200128b81606001516000815181106200123157620012316200929d565b602002602001015160018111156200124d576200124d620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620012ca9086908690600401620092b3565b600060405180830381865afa158015620012e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001312919081019062009437565b90506200138981608001516000815181106200133257620013326200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3500000000000000000000000000000081525062006209565b620014068160800151600181518110620013a757620013a76200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a360000000000000000000000000000008152506200627d565b6200146e81604001516000815181106200142457620014246200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3700000000000000000000000000000081525062006209565b620014e681606001516000815181106200148c576200148c6200929d565b60200260200101516001811115620014a857620014a8620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f333a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b031690635921422690620015219087908590600401620092b3565b600060405180830381865afa1580156200153f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001569919081019062009437565b9150620015f682608001516000815181106200158957620015896200929d565b60200260200101516001600160801b0316600283620015a99190620095da565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a390000000000000000000000000000008152506200627d565b6200166b82608001516001815181106200161457620016146200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3130000000000000000000000000000081525062006209565b620016cf82604001516000815181106200168957620016896200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3131000000000000000000000000000081525062006209565b620017478260600151600081518110620016ed57620016ed6200929d565b60200260200101516001811115620017095762001709620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620017859087908590600401620092b3565b600060405180830381865afa158015620017a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620017cd919081019062009437565b91506200184c8260800151600081518110620017ed57620017ed6200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313300000000000000000000000000008152506200627d565b620018c182608001516001815181106200186a576200186a6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3134000000000000000000000000000081525062006209565b620019298260400151600081518110620018df57620018df6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200194757620019476200929d565b60200260200101516001811115620019635762001963620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f333a3a3136000000000000000000000000000081525062006209565b50505050565b6028546040805163198a0e9f60e11b8152905162001a63926001600160a01b0316916333141d3e9160048083019260209291908290030181865afa158015620019f4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a1a919062008f89565b60255460408051808201909152601381527f746573745f436f6e7374727563746f723a3a310000000000000000000000000060208201526001600160a01b0390911690620062f4565b602854604080516307da8f5760e01b8152905162001b27926001600160a01b0316916307da8f579160048083019260209291908290030181865afa15801562001ab0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ad6919062008f89565b739ad6c38be94206ca50bb0d90783181662f0cfa106040518060400160405280601381526020017f746573745f436f6e7374727563746f723a3a3300000000000000000000000000815250620062f4565b6028546040805163652b7e3960e11b8152905162001be3926001600160a01b03169163ca56fc729160048083019260209291908290030181865afa15801562001b74573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b9a919062008f89565b60245460408051808201909152601381527f746573745f436f6e7374727563746f723a3a350000000000000000000000000060208201526001600160a01b0390911690620062f4565b565b6060601680548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6000808360ff1611801562001cc1575060008260ff16115b62001cd85762001cd2828462009603565b62001cf2565b600162001ce6838562009603565b62001cf291906200961f565b60ff1690505b92915050565b6040805160028082526060820183526000926020830190803683375050601e5482519293506001600160a01b03169183915060009062001d425762001d426200929d565b6001600160a01b039283166020918202929092010152601d5482519116908290600190811062001d765762001d766200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062001dc19086908690600401620092b3565b600060405180830381865afa15801562001ddf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e09919081019062009437565b905062001e80816080015160008151811062001e295762001e296200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3100000000000000000000000000000081525062006209565b62001f0b816080015160018151811062001e9e5762001e9e6200929d565b60200260200101516001600160801b031683600262001ebe919062009596565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a320000000000000000000000000000008152506200627d565b62001f6f816040015160008151811062001f295762001f296200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3300000000000000000000000000000081525062006209565b62001fe7816060015160008151811062001f8d5762001f8d6200929d565b6020026020010151600181111562001fa95762001fa9620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620020269086908690600401620092b3565b600060405180830381865afa15801562002044573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200206e919081019062009437565b9050620020e581608001516000815181106200208e576200208e6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3500000000000000000000000000000081525062006209565b6200216281608001516001815181106200210357620021036200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a360000000000000000000000000000008152506200627d565b620021ca81604001516000815181106200218057620021806200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3700000000000000000000000000000081525062006209565b620022428160600151600081518110620021e857620021e86200929d565b60200260200101516001811115620022045762002204620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f313a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b0316906359214226906200227d9087908590600401620092b3565b600060405180830381865afa1580156200229b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620022c5919081019062009437565b9150620023528260800151600081518110620022e557620022e56200929d565b60200260200101516001600160801b0316600283620023059190620095da565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a390000000000000000000000000000008152506200627d565b620023c782608001516001815181106200237057620023706200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3130000000000000000000000000000081525062006209565b6200242b8260400151600081518110620023e557620023e56200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3131000000000000000000000000000081525062006209565b620024a382606001516000815181106200244957620024496200929d565b60200260200101516001811115620024655762002465620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620024e19087908590600401620092b3565b600060405180830381865afa158015620024ff573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002529919081019062009437565b9150620025a882608001516000815181106200254957620025496200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313300000000000000000000000000008152506200627d565b6200261d8260800151600181518110620025c657620025c66200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3134000000000000000000000000000081525062006209565b6200268582604001516000815181106200263b576200263b6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3135000000000000000000000000000081525062006209565b620019a18260600151600081518110620026a357620026a36200929d565b60200260200101516001811115620026bf57620026bf620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f313a3a3136000000000000000000000000000081525062006209565b604080516002808252606082018352600092602083019080368337505060215482519293506001600160a01b0316918391506000906200274157620027416200929d565b6001600160a01b039283166020918202929092010152601d548251911690829060019081106200277557620027756200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a4090620027c09086908690600401620092b3565b600060405180830381865afa158015620027de573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002808919081019062009437565b90506200287f81608001516000815181106200282857620028286200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3100000000000000000000000000000081525062006209565b620028f481608001516001815181106200289d576200289d6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3200000000000000000000000000000081525062006331565b6200295c81604001516000815181106200291257620029126200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3300000000000000000000000000000081525062006209565b620029d481606001516000815181106200297a576200297a6200929d565b60200260200101516001811115620029965762002996620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a409062002a139086908690600401620092b3565b600060405180830381865afa15801562002a31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002a5b919081019062009437565b905062002ad2816080015160008151811062002a7b5762002a7b6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3500000000000000000000000000000081525062006209565b62002b4f816080015160018151811062002af05762002af06200929d565b60200260200101516001600160801b0316836001600160801b031666d529ae9e8600006040518060400160405280601181526020017f746573745f5363656e6172696f343a3a360000000000000000000000000000008152506200627d565b62002bb7816040015160008151811062002b6d5762002b6d6200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3700000000000000000000000000000081525062006209565b62002c2f816060015160008151811062002bd55762002bd56200929d565b6020026020010151600181111562002bf15762002bf1620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b03169063592142269062002c6a9087908590600401620092b3565b600060405180830381865afa15801562002c88573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002cb2919081019062009437565b915062002d29826080015160008151811062002cd25762002cd26200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a390000000000000000000000000000008152506200636e565b62002d9e826080015160018151811062002d475762002d476200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3130000000000000000000000000000081525062006209565b62002e06826040015160008151811062002dbc5762002dbc6200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3131000000000000000000000000000081525062006209565b62002e7e826060015160008151811062002e245762002e246200929d565b6020026020010151600181111562002e405762002e40620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b03169063592142269062002ebc9087908590600401620092b3565b600060405180830381865afa15801562002eda573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002f04919081019062009437565b915062002f83826080015160008151811062002f245762002f246200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313300000000000000000000000000008152506200627d565b62002ff8826080015160018151811062002fa15762002fa16200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3134000000000000000000000000000081525062006209565b6200306082604001516000815181106200301657620030166200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200307e576200307e6200929d565b602002602001015160018111156200309a576200309a620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a3136000000000000000000000000000081525062006209565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000f995760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620031a957602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200316a5790505b50505050508152505081526020019060010190620030fc565b60606018805480602002602001604051908101604052809291908181526020016000905b8282101562000f99578382906000526020600020018054620032089062009261565b80601f0160208091040260200160405190810160405280929190818152602001828054620032369062009261565b8015620032875780601f106200325b5761010080835404028352916020019162003287565b820191906000526020600020905b8154815290600101906020018083116200326957829003601f168201915b505050505081526020019060010190620031e6565b6040805160018082528183019092526060916020808301908036833701905050604051630618f58760e51b8152632973c80b60e01b6004820152909150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200331357600080fd5b505af115801562003328573d6000803e3d6000fd5b5050602854604051623e40a960e61b81526001600160a01b039091169250630f902a40915062003367908490670de0b6b3a764000090600401620092b3565b600060405180830381865afa15801562003385573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620033af919081019062009437565b50604051630618f58760e51b8152632973c80b60e01b6004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c31eb0e090602401600060405180830381600087803b1580156200340457600080fd5b505af115801562003419573d6000803e3d6000fd5b5050602854604051632c90a11360e11b81526001600160a01b03909116925063592142269150620034559084906301312d0090600401620092b3565b600060405180830381865afa15801562003473573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200349d919081019062009437565b5050565b600080620034b58462ffffff871662008f44565b905060008360ff1611620034ca5780620034e6565b620034d960ff8416826200963b565b620034e690600162008f44565b9050620034f381620063ab565b95945050505050565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000f995760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620035cd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116200358e5790505b5050505050815250508152602001906001019062003520565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003627573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200364d919062008f89565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003690573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620036b6919062008f89565b9050620036c5828b886200605d565b620036d2818b876200605d565b6000620036e0858562001ca9565b905060008167ffffffffffffffff81111562003700576200370062008d94565b6040519080825280602002602001820160405280156200372a578160200160208202803683370190505b50905060005b8281101562003829576000620037488b8389620034a1565b905060008b62ffffff168262ffffff16101580156200376a575060008960ff16115b6200377757600062003798565b620037986200379260ff8b16670de0b6b3a764000062008f2d565b620063d7565b905060008c62ffffff168362ffffff1611158015620037ba575060008960ff16115b620037c7576000620037e2565b620037e26200379260ff8b16670de0b6b3a764000062008f2d565b9050620037f182828562006403565b8585815181106200380657620038066200929d565b60200260200101818152505050505080620038219062009651565b905062003730565b506040516303223eab60e11b81526001600160a01b038d166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200388057600080fd5b505af115801562003895573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af1158015620038e9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200390f91906200967e565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af115801562003960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200398691906200967e565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620039e657600080fd5b505af1158015620039fb573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b815260040162003a31939291906200969c565b6000604051808303816000875af115801562003a51573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003a7b919081019062009702565b505050505050505050505050505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000f9957838290600052602060002001805462003ad29062009261565b80601f016020809104026020016040519081016040528092919081815260200182805462003b009062009261565b801562003b515780601f1062003b255761010080835404028352916020019162003b51565b820191906000526020600020905b81548152906001019060200180831162003b3357829003601f168201915b50505050508152602001906001019062003ab0565b60248054604051632aaf12cf60e21b815261ffff841660048201526000926001600160a01b039092169163aabc4b3c910161010060405180830381865afa15801562003bb6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003bdc919062009756565b9998505050505050505050565b60075460009060ff161562003c02575060075460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562003c7b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003ca1919062008ecd565b1415905090565b6060601380548060200260200160405190810160405280929190818152602001828054801562000e4a576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e2b575050505050905090565b6040805160028082526060820183526000926020830190803683375050601c5482519293506001600160a01b03169183915060009062003d4e5762003d4e6200929d565b6001600160a01b039283166020918202929092010152601d5482519116908290600190811062003d825762003d826200929d565b6001600160a01b039283166020918202929092010152602854604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062003dcd9086908690600401620092b3565b600060405180830381865afa15801562003deb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003e15919081019062009437565b905062003e8c816080015160008151811062003e355762003e356200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3100000000000000000000000000000081525062006209565b62003f01816080015160018151811062003eaa5762003eaa6200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3200000000000000000000000000000081525062006331565b62003f69816040015160008151811062003f1f5762003f1f6200929d565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3300000000000000000000000000000081525062006209565b62003fe1816060015160008151811062003f875762003f876200929d565b6020026020010151600181111562003fa35762003fa3620095c4565b60016040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3400000000000000000000000000000081525062006209565b602854604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620040209086908690600401620092b3565b600060405180830381865afa1580156200403e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004068919081019062009437565b9050620040df81608001516000815181106200408857620040886200929d565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3500000000000000000000000000000081525062006209565b6200415c8160800151600181518110620040fd57620040fd6200929d565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a360000000000000000000000000000008152506200627d565b620041c081604001516000815181106200417a576200417a6200929d565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3700000000000000000000000000000081525062006209565b620042388160600151600081518110620041de57620041de6200929d565b60200260200101516001811115620041fa57620041fa620095c4565b60006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a3800000000000000000000000000000081525062006209565b602854604051632c90a11360e11b8152662386f26fc10000916001600160a01b031690635921422690620042739087908590600401620092b3565b600060405180830381865afa15801562004291573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620042bb919081019062009437565b9150620043328260800151600081518110620042db57620042db6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a390000000000000000000000000000008152506200636e565b620043a782608001516001815181106200435057620043506200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3130000000000000000000000000000081525062006209565b6200440f8260400151600081518110620043c557620043c56200929d565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3131000000000000000000000000000081525062006209565b6200448782606001516000815181106200442d576200442d6200929d565b60200260200101516001811115620044495762004449620095c4565b60016040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3132000000000000000000000000000081525062006209565b50602854604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620044c59087908590600401620092b3565b600060405180830381865afa158015620044e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200450d919081019062009437565b91506200458c82608001516000815181106200452d576200452d6200929d565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313300000000000000000000000000008152506200627d565b620046018260800151600181518110620045aa57620045aa6200929d565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3134000000000000000000000000000081525062006209565b6200466582604001516000815181106200461f576200461f6200929d565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3135000000000000000000000000000081525062006209565b620019a182606001516000815181106200468357620046836200929d565b602002602001015160018111156200469f576200469f620095c4565b60006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a3136000000000000000000000000000081525062006209565b670de0b6b3a76400008311156200473b5760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062004749838362001ca9565b905060008167ffffffffffffffff81111562004769576200476962008d94565b60405190808252806020026020018201604052801562004793578160200160208202803683370190505b50905060008267ffffffffffffffff811115620047b457620047b462008d94565b604051908082528060200260200182016040528015620047de578160200160208202803683370190505b50905060005b83811015620048ec576000620047fc898388620034a1565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562004852573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004878919062008ecd565b90508162ffffff168584815181106200489557620048956200929d565b6020908102919091010152620048b5818a670de0b6b3a764000062006441565b848481518110620048ca57620048ca6200929d565b602002602001018181525050505080620048e49062009651565b9050620047e4565b5060405163ca669fa760e01b81526001600160a01b038b166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ca669fa790602401600060405180830381600087803b1580156200494357600080fd5b505af115801562004958573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062004990908d908d9087908790600401620097b0565b6000604051808303816000875af1158015620049b0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620049da9190810190620097fd565b5050505050505050505050565b601c80546001600160a01b03191673b31f66aa3c1e785363f0875a1b74e27b85fd66c79081179091553b60000362004ae957601c54604051737109709ecfa91a80626ff3989d68f67f5b1dd12d9163b4d6c782916001600160a01b039091169062004a529062008836565b604051809103906000f08015801562004a6f573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b815260040162004ab492919062009836565b600060405180830381600087803b15801562004acf57600080fd5b505af115801562004ae4573d6000803e3d6000fd5b505050505b600660405162004af99062008844565b60ff9091168152602001604051809103906000f08015801562004b20573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b039290921691909117905560405160069062004b529062008844565b60ff9091168152602001604051809103906000f08015801562004b79573d6000803e3d6000fd5b50601e80546001600160a01b0319166001600160a01b039290921691909117905560405160089062004bab9062008844565b60ff9091168152602001604051809103906000f08015801562004bd2573d6000803e3d6000fd5b50601f80546001600160a01b0319166001600160a01b039290921691909117905560405160129062004c049062008844565b60ff9091168152602001604051809103906000f08015801562004c2b573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691909117905560405160129062004c5d9062008844565b60ff9091168152602001604051809103906000f08015801562004c84573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b039290921691909117905560405160129062004cb69062008844565b60ff9091168152602001604051809103906000f08015801562004cdd573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b039290921691909117905560405162004d0c9062008852565b604051809103906000f08015801562004d29573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b03928316179055601c54604080516318caf8e360e31b81529190921660048201526024810191909152600760448201527f776e6174697665000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801562004dcf57600080fd5b505af115801562004de4573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004e6157600080fd5b505af115801562004e76573d6000803e3d6000fd5b5050601e54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004ef357600080fd5b505af115801562004f08573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801562004f8557600080fd5b505af115801562004f9a573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200501757600080fd5b505af11580156200502c573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620050a957600080fd5b505af1158015620050be573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600360448201526231373160e91b6064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200513557600080fd5b505af11580156200514a573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e0000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620051db57600080fd5b505af1158015620051f0573d6000803e3d6000fd5b5050602a80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602b8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040517f00000000000000000000000000000000000000000000000000000000000000009081906602d79883d2000090620052779062008860565b6001600160a01b0393841681529290911660208301526040820152606001604051809103906000f080158015620052b2573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169182179055604051620052e0906200886e565b6001600160a01b039091168152602001604051809103906000f0801580156200530d573d6000803e3d6000fd5b50602980546001600160a01b0319166001600160a01b039283169081179091556024805460405163b038478160e01b815260048101939093529092169163b03847819101600060405180830381600087803b1580156200536c57600080fd5b505af115801562005381573d6000803e3d6000fd5b505050506200538f6200646f565b6200539b600a62006812565b602454602b54601c546040516001600160a01b03938416939283169290911690620053c6906200887c565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562005403573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03928316908117909155602b54602454604051918416931691906200543e906200888a565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200547b573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316179055602554604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f7574657200000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b1580156200552157600080fd5b505af115801562005536573d6000803e3d6000fd5b5050602854604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f74657200000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620055c757600080fd5b505af1158015620055dc573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600760448201527f666163746f7279000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200567057600080fd5b505af115801562005685573d6000803e3d6000fd5b5050602954604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e00000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200571657600080fd5b505af11580156200572b573d6000803e3d6000fd5b5050602a54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f7574657256310000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015620057bc57600080fd5b505af1158015620057d1573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f7279563100000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156200586257600080fd5b505af115801562005877573d6000803e3d6000fd5b5050601c54602a5460405163095ea7b360e01b81526001600160a01b03918216600482015260001960248201529116925063095ea7b391506044016020604051808303816000875af1158015620058d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058f891906200967e565b50601d54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005950573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200597691906200967e565b50601e54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620059ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620059f491906200967e565b50601f54602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005a4c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005a7291906200967e565b50602254602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005aca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005af091906200967e565b50602054602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005b48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b6e91906200967e565b50602154602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005bc6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005bec91906200967e565b50602354602a5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005c44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c6a91906200967e565b50601c5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005cc2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ce891906200967e565b50601d5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005d40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d6691906200967e565b50601e5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005dbe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005de491906200967e565b50601f5460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005e3c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e6291906200967e565b5060225460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005eba573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ee091906200967e565b5060205460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005f38573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f5e91906200967e565b5060215460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005fb6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005fdc91906200967e565b5060235460255460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006034573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200605a91906200967e565b50565b6200606c8383836000620068b9565b505050565b6200610f604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600080600080620061238989898962006abc565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620061a18a8762006dcb90919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a001620061f8426103e862008f44565b90529b9a5050505050505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062006246908690869086906004016200985a565b60006040518083038186803b1580156200625f57600080fd5b505afa15801562006274573d6000803e3d6000fd5b50505050505050565b604051631ecb7d3360e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90631ecb7d3390620062bc9087908790879087906004016200987b565b60006040518083038186803b158015620062d557600080fd5b505afa158015620062ea573d6000803e3d6000fd5b5050505050505050565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d1906200624690869086908690600401620098a2565b604051636cd1e26960e11b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063d9a3c4d29062006246908690869086906004016200985a565b6040516365d5c13560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906365d5c1359062006246908690869086906004016200985a565b8062ffffff81168114620063d257604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff81168114620063d25760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b600080600062006452868662006e8f565b9150915062006465868686858562006eae565b9695505050505050565b601c546001600160a01b031615620064e45760248054601c54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620064ca57600080fd5b505af1158015620064df573d6000803e3d6000fd5b505050505b601d546001600160a01b031615620065595760248054601d54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200653f57600080fd5b505af115801562006554573d6000803e3d6000fd5b505050505b601e546001600160a01b031615620065ce5760248054601e54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620065b457600080fd5b505af1158015620065c9573d6000803e3d6000fd5b505050505b601f546001600160a01b031615620066435760248054601f54604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200662957600080fd5b505af11580156200663e573d6000803e3d6000fd5b505050505b6022546001600160a01b031615620066b85760248054602254604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200669e57600080fd5b505af1158015620066b3573d6000803e3d6000fd5b505050505b6020546001600160a01b0316156200672d5760248054602054604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200671357600080fd5b505af115801562006728573d6000803e3d6000fd5b505050505b6021546001600160a01b031615620067a25760248054602154604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b1580156200678857600080fd5b505af11580156200679d573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562001be35760248054602354604051635a44092360e01b81526001600160a01b039182166004820152911691635a4409239101600060405180830381600087803b158015620067fd57600080fd5b505af1158015620019a1573d6000803e3d6000fd5b6024805460405163379ee80360e01b815261ffff84166004820152611388928101839052601e604482015261025860648201526084810192909252619c4060a48301526103e860c48301526205573060e483015260006101048301526001600160a01b03169063379ee8039061012401600060405180830381600087803b1580156200689d57600080fd5b505af1158015620068b2573d6000803e3d6000fd5b5050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200690f91620098d0565b600060405180830381855afa9150503d80600081146200694c576040519150601f19603f3d011682016040523d82523d6000602084013e62006951565b606091505b509150506000818060200190518101906200696d919062008ecd565b9050620069a784620069a087620069996370a0823160e01b62006992600c8d62006f60565b9062006f88565b9062006fa6565b9062006fcf565b821562006ab45760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620069f29190620098d0565b600060405180830381855afa9150503d806000811462006a2f576040519150601f19603f3d011682016040523d82523d6000602084013e62006a34565b606091505b5091505060008180602001905181019062006a50919062008ecd565b90508286101562006a7b5762006a6786846200963b565b62006a7390826200963b565b905062006a96565b62006a8783876200963b565b62006a93908262008f44565b90505b620062ea81620069a06318160ddd60e01b62006992600c8d62006f60565b505050505050565b60608080600062006acf600287620098ee565b62ffffff1660000362006b255760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e73604482015260640162004732565b600062006b3460028862009913565b90508662ffffff1667ffffffffffffffff81111562006b575762006b5762008d94565b60405190808252806020026020018201604052801562006b81578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff81111562006ba55762006ba562008d94565b60405190808252806020026020018201604052801562006bcf578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff81111562006bf35762006bf362008d94565b60405190808252806020026020018201604052801562006c1d578160200160208202803683370190505b509250600062006c2f82600162008fa9565b62006c489062ffffff16670de0b6b3a764000062008f2d565b9050600062006c5983600162008fa9565b62006c6a9062ffffff168c62008f2d565b905060005b8962ffffff1681101562006dbc5762006c8a89600162008fa9565b62006c9b9062ffffff168262008efd565b62006ca88a600162008fa9565b62006cb490866200992c565b62006cc0908d6200994e565b62ffffff1662006cd1919062008f44565b88828151811062006ce65762006ce66200929d565b6020026020010181815250508362ffffff16811162006d22578286828151811062006d155762006d156200929d565b6020026020010181815250505b8362ffffff16811062006da7578287828151811062006d455762006d456200929d565b6020026020010181815250506000821162006d6257600062006d98565b62006d98608062006d8f8a848151811062006d815762006d816200929d565b602002602001015162006fdb565b84919062006fea565b62006da4908662008f44565b94505b8062006db38162009651565b91505062006c6f565b50505050945094509450949050565b6060825167ffffffffffffffff81111562006dea5762006dea62008d94565b60405190808252806020026020018201604052801562006e14578160200160208202803683370190505b50905060005b835181101562006e88578262ffffff1684828151811062006e3f5762006e3f6200929d565b602002602001015162006e5391906200996d565b82828151811062006e685762006e686200929d565b60209081029190910101528062006e7f8162009651565b91505062006e1a565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b60008160000362006ed45783838162006ecb5762006ecb62008f17565b049050620034f3565b83821062006ef5576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6005820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60038201805463ffffffff191660e083901c17905560008262006f81565b6002820180546001810182556000918252602082206001600160a01b0384169101558262006f81565b6200349d828262007016565b600062001cf882600a6200742d565b600060ff831684811b9061ffff6101008290031686901c90620064659087906001901b86858562006eae565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b94600093909290918301828280156200708957602002820191906000526020600020905b81548152602001906001019080831162007074575b505050505090506000836200709e836200746a565b604051602001620070b192919062009990565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a16835281529281209194509092909162007105918691889101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1662007140576200713e8762007517565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b031988168452825280832090519091839162007181918791899101620099c3565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620071c89190620098d0565b600060405180830381855afa9150503d806000811462007205576040519150601f19603f3d011682016040523d82523d6000602084013e6200720a565b606091505b509150620072279050816200722188602062008efd565b62007524565b604051630667f9d760e41b81526001600160a01b038a1660048201526024810185905290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d9063667f9d7090604401602060405180830381865afa1580156200728e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620072b4919062008ecd565b90508082146200736b5760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162004732565b6040516370ca10bb60e01b81526001600160a01b038916600482015260248101849052604481018a9052737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb90606401600060405180830381600087803b158015620073cf57600080fd5b505af1158015620073e4573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200741960028b01600062008898565b896004016000905550505050505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620034f38282620075c6565b60606000825160206200747e919062008efd565b67ffffffffffffffff81111562007499576200749962008d94565b6040519080825280601f01601f191660200182016040528015620074c4576020820181803683370190505b50905060005b835181101562006e88576000848281518110620074eb57620074eb6200929d565b6020026020010151905080826020026020018401525080806200750e9062009651565b915050620074ca565b600062001cf88262007845565b600080600060208551116200753b5784516200753e565b60205b905060005b81811015620075bc576200755981600862008efd565b8662007566838862008f44565b815181106200757957620075796200929d565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620075b38162009651565b91505062007543565b5090949350505050565b600080600083600003620075e45750600160801b915062001cf89050565b50826000811215620075f7579015906000035b62100000811015620077fd57600160801b9250846001600160801b038111156200762357911591600019045b6001821615620076355792830260801c925b800260801c60028216156200764c5792830260801c925b800260801c6004821615620076635792830260801c925b800260801c60088216156200767a5792830260801c925b800260801c6010821615620076915792830260801c925b800260801c6020821615620076a85792830260801c925b800260801c6040821615620076bf5792830260801c925b8002608090811c90821615620076d75792830260801c925b800260801c610100821615620076ef5792830260801c925b800260801c610200821615620077075792830260801c925b800260801c6104008216156200771f5792830260801c925b800260801c610800821615620077375792830260801c925b800260801c6110008216156200774f5792830260801c925b800260801c612000821615620077675792830260801c925b800260801c6140008216156200777f5792830260801c925b800260801c618000821615620077975792830260801c925b800260801c62010000821615620077b05792830260801c925b800260801c62020000821615620077c95792830260801c925b800260801c62040000821615620077e25792830260801c925b800260801c62080000821615620077fb5792830260801c925b505b826000036200782a57604051631dba598d60e11b8152600481018690526024810185905260440162004732565b81620078375782620034f3565b620034f38360001962008f2d565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620078b757602002820191906000526020600020905b815481526020019060010190808311620078a2575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200790392508591879101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620079a2576001600160a01b0384166000908152602087815260408083206001600160e01b0319871684528252808320905190929162007972918591879101620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620079b083620086f1565b604051602001620079c392919062009990565b60405160208183030381529060405290507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007a3357600080fd5b505af115801562007a48573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162007a699190620098d0565b600060405180830381855afa9150503d806000811462007aa6576040519150601f19603f3d011682016040523d82523d6000602084013e62007aab565b606091505b50915062007ac890508162007ac287602062008efd565b6200879e565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150737109709ecfa91a80626ff3989d68f67f5b1dd12d906365bc9481906024016000604051808303816000875af115801562007b2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007b549190810190620099ff565b509050805160010362007ef85760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898460008151811062007bac5762007bac6200929d565b60200260200101516040518363ffffffff1660e01b815260040162007be69291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562007c04573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007c2a919062008ecd565b90508062007c95577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062007c6a5762007c6a6200929d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b80831462007d4a5760405162461bcd60e51b815260206004820152606f60248201527f73746453746f726167652066696e642853746453746f72616765293a2050616360448201527f6b656420736c6f742e205468697320776f756c642063617573652064616e676560648201527f726f7573206f76657277726974696e6720616e642063757272656e746c79206960848201526e39b713ba1039bab83837b93a32b21760891b60a482015260c40162004732565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8888878960405160200162007d82929190620099c3565b604051602081830303815290604052805190602001208560008151811062007dae5762007dae6200929d565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a18160008151811062007e085762007e086200929d565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262007e53918a918c9101620099c3565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162007ebd918a918c9101620099c3565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff19169115159190911790555062008566565b600181511115620084f55760005b8151811015620084ee5760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d708a85858151811062007f5a5762007f5a6200929d565b60200260200101516040518363ffffffff1660e01b815260040162007f949291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa15801562007fb2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007fd8919062008ecd565b90508062008042577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5898484815181106200801757620080176200929d565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b838114620080515750620084d9565b8251811990737109709ecfa91a80626ff3989d68f67f5b1dd12d906370ca10bb908c908790879081106200808957620080896200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101849052606401600060405180830381600087803b158015620080e257600080fd5b505af1158015620080f7573d6000803e3d6000fd5b50505050600060608b6001600160a01b031688604051620081199190620098d0565b600060405180830381855afa9150503d806000811462008156576040519150601f19603f3d011682016040523d82523d6000602084013e6200815b565b606091505b509092509050620081738162007ac28c602062008efd565b9650508080156200818357508186145b156200841b577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c604051602001620081c1929190620099c3565b60405160208183030381529060405280519060200120888881518110620081ec57620081ec6200929d565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a18484815181106200824557620082456200929d565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262008290918d918f9101620099c3565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200831d929190620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c878781518110620083a057620083a06200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620083f957600080fd5b505af11580156200840e573d6000803e3d6000fd5b50505050505050620084ee565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166370ca10bb8c8787815181106200846357620084636200929d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015620084bc57600080fd5b505af1158015620084d1573d6000803e3d6000fd5b505050505050505b80620084e58162009651565b91505062007f06565b5062008566565b6040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162004732565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620085aa9188918a9101620099c3565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620086475760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162004732565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200867860028a01600062008898565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620086be9188918a9101620099c3565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b606060008251602062008705919062008efd565b67ffffffffffffffff81111562008720576200872062008d94565b6040519080825280601f01601f1916602001820160405280156200874b576020820181803683370190505b50905060005b835181101562006e885760008482815181106200877257620087726200929d565b602002602001015190508082602002602001840152508080620087959062009651565b91505062008751565b60008060006020855111620087b5578451620087b8565b60205b905060005b81811015620075bc57620087d381600862008efd565b86620087e0838862008f44565b81518110620087f357620087f36200929d565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200882d8162009651565b915050620087bd565b610b088062009a6b83390190565b610bfd806200a57383390190565b610c18806200b17083390190565b613199806200bd8883390190565b61615c806200ef2183390190565b614c80806201507d83390190565b612c138062019cfd83390190565b50805460008255906000526020600020908101906200605a91905b80821115620088c95760008155600101620088b3565b5090565b600060208284031215620088e057600080fd5b81356001600160e01b03198116811462006f8157600080fd5b600081518084526020808501945080840160005b83811015620089345781516001600160a01b0316875295820195908201906001016200890d565b509495945050505050565b60208152600062006f816020830184620088f9565b60005b838110156200897157818101518382015260200162008957565b50506000910152565b600081518084526200899481602086016020860162008954565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562008a5e57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562008a4757605f1989850301835262008a348486516200897a565b948e01949350918d019160010162008a15565b505050978a019794505091880191600101620089cf565b50919a9950505050505050505050565b803560ff81168114620063d257600080fd5b6000806040838503121562008a9457600080fd5b62008a9f8362008a6e565b915062008aaf6020840162008a6e565b90509250929050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562008b6057898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562008b4a5783516001600160e01b0319168252928b019260019290920191908b019062008b1e565b50978a0197955050509187019160010162008ae0565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562008bc857603f1988860301845262008bb58583516200897a565b9450928501929085019060010162008b96565b5092979650505050505050565b803562ffffff81168114620063d257600080fd5b60008060006060848603121562008bff57600080fd5b62008c0a8462008bd5565b92506020840135915062008c216040850162008a6e565b90509250925092565b6001600160a01b03811681146200605a57600080fd5b600080600080600080600080610100898b03121562008c5e57600080fd5b883562008c6b8162008c2a565b9750602089013562008c7d8162008c2a565b9650604089013562008c8f8162008c2a565b955062008c9f60608a0162008bd5565b94506080890135935060a0890135925062008cbd60c08a0162008a6e565b915062008ccd60e08a0162008a6e565b90509295985092959890939650565b60006020828403121562008cef57600080fd5b813561ffff8116811462006f8157600080fd5b600080600080600080600060e0888a03121562008d1e57600080fd5b873562008d2b8162008c2a565b9650602088013562008d3d8162008c2a565b9550604088013562008d4f8162008c2a565b945062008d5f6060890162008bd5565b93506080880135925062008d7660a0890162008a6e565b915062008d8660c0890162008a6e565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171562008dd05762008dd062008d94565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562008e025762008e0262008d94565b604052919050565b60006020828403121562008e1d57600080fd5b815167ffffffffffffffff8082111562008e3657600080fd5b818401915084601f83011262008e4b57600080fd5b81518181111562008e605762008e6062008d94565b62008e75601f8201601f191660200162008dd6565b915080825285602082850101111562008e8d57600080fd5b62008ea081602084016020860162008954565b50949350505050565b60408152600062008ebe60408301856200897a565b90508260208301529392505050565b60006020828403121562008ee057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762001cf85762001cf862008ee7565b634e487b7160e01b600052601260045260246000fd5b60008262008f3f5762008f3f62008f17565b500490565b8082018082111562001cf85762001cf862008ee7565b60008060006060848603121562008f7057600080fd5b8351925060208401519150604084015190509250925092565b60006020828403121562008f9c57600080fd5b815162006f818162008c2a565b62ffffff81811683821601908082111562006e885762006e8862008ee7565b600081518084526020808501945080840160005b83811015620089345781518752958201959082019060010162008fdc565b60208152620090156020820183516001600160a01b03169052565b600060208301516200903260408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e06101408181860152620090a361020086018462008fc8565b9250808601519050601f19610160818786030181880152620090c6858462008fc8565b945080880151925050610180818786030181880152620090e7858462008fc8565b945080880151925050506101a062009109818701836001600160a01b03169052565b86015190506101c062009126868201836001600160a01b03169052565b959095015193019290925250919050565b600067ffffffffffffffff82111562009154576200915462008d94565b5060051b60200190565b600082601f8301126200917057600080fd5b8151602062009189620091838362009137565b62008dd6565b82815260059290921b84018101918181019086841115620091a957600080fd5b8286015b84811015620091c65780518352918301918301620091ad565b509695505050505050565b60008060008060008060c08789031215620091eb57600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200922057600080fd5b6200922e8a838b016200915e565b935060a08901519150808211156200924557600080fd5b506200925489828a016200915e565b9150509295509295509295565b600181811c908216806200927657607f821691505b6020821081036200929757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b604081526000620092c86040830185620088f9565b90506001600160801b03831660208301529392505050565b600082601f830112620092f257600080fd5b8151602062009305620091838362009137565b82815260059290921b840181019181810190868411156200932557600080fd5b8286015b84811015620091c65780516200933f8162008c2a565b835291830191830162009329565b600082601f8301126200935f57600080fd5b8151602062009372620091838362009137565b82815260059290921b840181019181810190868411156200939257600080fd5b8286015b84811015620091c657805160028110620093b05760008081fd5b835291830191830162009396565b600082601f830112620093d057600080fd5b81516020620093e3620091838362009137565b82815260059290921b840181019181810190868411156200940357600080fd5b8286015b84811015620091c65780516001600160801b0381168114620094295760008081fd5b835291830191830162009407565b6000602082840312156200944a57600080fd5b815167ffffffffffffffff808211156200946357600080fd5b9083019060e082860312156200947857600080fd5b6200948262008daa565b8251828111156200949257600080fd5b620094a087828601620092e0565b825250602083015182811115620094b657600080fd5b620094c487828601620092e0565b602083015250604083015182811115620094dd57600080fd5b620094eb878286016200915e565b6040830152506060830151828111156200950457600080fd5b62009512878286016200934d565b6060830152506080830151828111156200952b57600080fd5b6200953987828601620093be565b60808301525060a0830151828111156200955257600080fd5b6200956087828601620093be565b60a08301525060c0830151828111156200957957600080fd5b6200958787828601620093be565b60c08301525095945050505050565b6001600160801b03818116838216028082169190828114620095bc57620095bc62008ee7565b505092915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160801b0380841680620095f757620095f762008f17565b92169190910492915050565b60ff818116838216019081111562001cf85762001cf862008ee7565b60ff828116828216039081111562001cf85762001cf862008ee7565b8181038181111562001cf85762001cf862008ee7565b60006001820162009666576200966662008ee7565b5060010190565b80518015158114620063d257600080fd5b6000602082840312156200969157600080fd5b62006f81826200966d565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015620096e957855183529483019491830191600101620096cb565b5050809450505080851660408501525050949350505050565b6000806000606084860312156200971857600080fd5b8351925060208401519150604084015167ffffffffffffffff8111156200973e57600080fd5b6200974c868287016200915e565b9150509250925092565b600080600080600080600080610100898b0312156200977457600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c0890151915062008ccd60e08a016200966d565b60006001600160a01b03808716835280861660208401525060806040830152620097de608083018562008fc8565b8281036060840152620097f2818562008fc8565b979650505050505050565b6000602082840312156200981057600080fd5b815167ffffffffffffffff8111156200982857600080fd5b62006439848285016200915e565b6001600160a01b03831681526040602082015260006200643960408301846200897a565b838152826020820152606060408201526000620034f360608301846200897a565b8481528360208201528260408201526080606082015260006200646560808301846200897a565b60006001600160a01b03808616835280851660208401525060606040830152620034f360608301846200897a565b60008251620098e481846020870162008954565b9190910192915050565b600062ffffff8084168062009907576200990762008f17565b92169190910692915050565b600062ffffff80841680620095f757620095f762008f17565b62ffffff818116838216028082169190828114620095bc57620095bc62008ee7565b62ffffff82811682821603908082111562006e885762006e8862008ee7565b818103600083128015838313168383128216171562006e885762006e8862008ee7565b6001600160e01b0319831681528151600090620099b581600485016020870162008954565b919091016004019392505050565b825160009082906020808701845b83811015620099ef57815185529382019390820190600101620099d1565b5050948252509092019392505050565b6000806040838503121562009a1357600080fd5b825167ffffffffffffffff8082111562009a2c57600080fd5b62009a3a868387016200915e565b9350602085015191508082111562009a5157600080fd5b5062009a60858286016200915e565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212202ab795b0ce94f91a024b1b71ac52b4e387b166615116741de962b87d1ded9a1864736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea26469706673582212205296d056711532a17a7f21b9195714e6ae436d190f9587fc6d35d78c684b979e64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea26469706673582212200988457821d8f641a4db2c08c8ebdf8daee4316adc97b169284e2643f76d147064736f6c6343000814003360806040523480156200001157600080fd5b506040516200319938038062003199833981016040819052620000349162000253565b816001600160a01b0381166200006557604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000708162000100565b5067016345785d8a0000811115620000ad57604051635e8988c160e01b81526004810182905267016345785d8a000060248201526044016200005c565b620000b8836200011e565b60048190556040805160008152602081018390527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a150505062000294565b600180546001600160a01b03191690556200011b81620001e6565b50565b6001600160a01b0381166200014657604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b0390811690821681036200018757600354604051634fcea97160e01b81526001600160a01b0390911660048201526024016200005c565b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910160405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200024e57600080fd5b919050565b6000806000606084860312156200026957600080fd5b620002748462000236565b9250620002846020850162000236565b9150604084015190509250925092565b612ef580620002a46000396000f3fe608060405234801561001057600080fd5b50600436106102de5760003560e01c8063701ab8c111610186578063aabc4b3c116100e3578063e203a31f11610097578063e92d0d5d11610071578063e92d0d5d14610627578063f2fde38b1461063a578063fd90c2be1461064d57600080fd5b8063e203a31f146105f0578063e30c397814610603578063e74b981b1461061457600080fd5b8063b0384781116100c8578063b0384781146105b7578063d547741f146105ca578063ddbfd941146105dd57600080fd5b8063aabc4b3c14610556578063af371065146105a657600080fd5b806380c5061e1161013a5780638da5cb5b1161011f5780638da5cb5b1461052a57806391d148541461053b578063a217fddf1461054e57600080fd5b806380c5061e146105145780638ce9aa1c1461051c57600080fd5b8063715018a61161016b578063715018a6146104f157806379ba5097146104f95780637daf5d661461050157600080fd5b8063701ab8c1146104ca578063704037bd146104d157600080fd5b8063379ee8031161023f5780634e937c3a116101f3578063659ac74b116101cd578063659ac74b146104845780636622e0d71461049757806369d56ea3146104b757600080fd5b80634e937c3a146104615780635a440923146104695780635b35875c1461047c57600080fd5b80633c78a941116102245780633c78a9411461042a5780634ccb20c01461043d5780634cd161d31461044e57600080fd5b8063379ee803146104045780633a2f1a911461041757600080fd5b8063248a9ca3116102965780632cc06b8c1161027b5780632cc06b8c146103cb5780632f2ff15d146103de57806336568abe146103f157600080fd5b8063248a9ca31461039557806327721842146103b857600080fd5b80630752092b116102c75780630752092b14610320578063093ff7691461034b5780631af5bacc1461036057600080fd5b806301ffc9a7146102e35780630282c9c11461030b575b600080fd5b6102f66102f13660046127ff565b610655565b60405190151581526020015b60405180910390f35b61031361068c565b6040516103029190612829565b61033361032e36600461286d565b610766565b6040516001600160a01b039091168152602001610302565b61035e6103593660046128c0565b610773565b005b6103877fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b604051908152602001610302565b6103876103a336600461286d565b60009081526002602052604090206001015490565b6102f66103c636600461297e565b610879565b61035e6103d936600461299b565b610886565b61035e6103ec3660046129e2565b6108d5565b61035e6103ff3660046129e2565b6108fa565b61035e610412366004612a22565b610932565b61035e610425366004612aca565b610a4e565b61035e61043836600461297e565b610b00565b6003546001600160a01b0316610333565b61035e61045c366004612b7b565b610b5e565b600654610387565b61035e61047736600461297e565b610c29565b610313610c9b565b610333610492366004612bae565b610cac565b6104aa6104a5366004612c06565b6111f7565b6040516103029190612c34565b61035e6104c5366004612ca8565b61138f565b6001610387565b6104e46104df366004612cf5565b611519565b6040516103029190612d36565b61035e611550565b61035e611564565b61033361050f36600461286d565b6115a8565b6103876115d8565b67016345785d8a0000610387565b6000546001600160a01b0316610333565b6102f66105493660046129e2565b6115e4565b610387600081565b61056961056436600461286d565b611630565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e082015261010001610302565b6005546001600160a01b0316610333565b61035e6105c536600461297e565b6116f1565b61035e6105d83660046129e2565b611832565b61035e6105eb36600461297e565b611857565b61035e6105fe366004612d72565b6118c9565b6001546001600160a01b0316610333565b61035e61062236600461297e565b611935565b61035e61063536600461286d565b611946565b61035e61064836600461297e565b6119e9565b600454610387565b60006001600160e01b03198216637965db0b60e01b148061068657506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600061069a6008611a5a565b90508015610762578067ffffffffffffffff8111156106bb576106bb612d8d565b6040519080825280602002602001820160405280156106e4578160200160208202803683370190505b5091506000805b8281101561075357600080610701600884611a65565b909250905061070f81611a81565b15610740578186858151811061072757610727612da3565b60209081029190910101528361073c81612dcf565b9450505b50508061074c90612dcf565b90506106eb565b5081811015610760578083525b505b5090565b6000610686600b83611a8d565b61077b611a99565b600061078c8b8b8b61ffff16611ac6565b6020015190506001600160a01b0381166107db5760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b15801561085457600080fd5b505af1158015610868573d6000803e3d6000fd5b505050505050505050505050505050565b6000610686600b83611b70565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa96108b081611b92565b604080516000808252602082019092526108cf91869186918691611b9c565b50505050565b6000828152600260205260409020600101546108f081611b92565b6108cf8383611ce3565b6001600160a01b03811633146109235760405163334bd91960e11b815260040160405180910390fd5b61092d8282611d0d565b505050565b61093a611a99565b60018961ffff16101561096657604051634f958e7160e01b815261ffff8a1660048201526024016107d2565b6000610978818a8a8a8a8a8a8a611d82565b905081156109905761098d81600160ff611e82565b90505b6109a0600861ffff8c1683611ea9565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa9610a7881611b92565b6001600160a01b0384161580610a965750836001600160a01b031916155b15610ab45760405163d43a15d160e01b815260040160405180910390fd5b610af78787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9c92505050565b50505050505050565b610b08611a99565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b4357600080fd5b505af1158015610b57573d6000803e3d6000fd5b5050505050565b610b66611a99565b610b75600861ffff8416611eb6565b610b9857604051637d9160bf60e11b815261ffff831660048201526024016107d2565b6000610ba9600861ffff8516611ec2565b905081151560ff82901c151503610bd3576040516311be38db60e11b815260040160405180910390fd5b610bf061ffff8416610be7838560ff611e82565b60089190611ea9565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b610c31611a99565b610c3c600b82611ece565b610c64576040516303ce0ad960e01b81526001600160a01b03821660048201526024016107d2565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b6060610ca76008611ee3565b905090565b6000610cbd600861ffff8416611eb6565b610ce057604051637d9160bf60e11b815261ffff831660048201526024016107d2565b6000610cf1600861ffff8516611ec2565b90506000610d076000546001600160a01b031690565b6001600160a01b0316336001600160a01b0316149050610d2682611a81565b158015610d31575080155b15610d5b576040516304fc2fe760e11b815233600482015261ffff851660248201526044016107d2565b610d66600b87611b70565b610d8e57604051638e888ef360e01b81526001600160a01b03871660048201526024016107d2565b856001600160a01b0316876001600160a01b031603610dcb57604051632f9b185360e01b81526001600160a01b03881660048201526024016107d2565b610dd58585611ef0565b50600080610de38989611f34565b90925090506001600160a01b038216610e0f57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526007602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615610e845760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff871660448201526064016107d2565b6005546001600160a01b031680610eae576040516328b4fcf960e21b815260040160405180910390fd5b6040516bffffffffffffffffffffffff1960608c811b821660208401528b901b1660348201527fffff00000000000000000000000000000000000000000000000000000000000060f089901b166048820152610f5b908290604a0160408051601f198184030181528282526001600160a01b03808916602085015287169183019190915261ffff8b1660608301529060800160405160208183030381529060405280519060200120611f5d565b6040805160808101825261ffff808b168083526001600160a01b0380861660208086018281528c15158789019081526000606089018181528e8716808352600786528b83208f89168085529087528c84208a855287528c84209b518c549651955193511515600160b81b0260ff60b81b19941515600160b01b02949094167fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff96909a1662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009097169b169a909a179490941792909216959095171790965560068054600181019091557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916909217909155938152600d8452848120928152919092529190912091975061109e9250612018565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff8860016006805490506110ec9190612de8565b604080516001600160a01b03909316835260208301919091520160405180910390a4846001600160a01b03166347973bff61112686612024565b61112f87612030565b61113888612040565b61114189612050565b61114a8a612060565b6111538b612071565b61115c8c612081565b6040516001600160e01b031960e08a901b16815261ffff978816600482015295871660248701529386166044860152918516606485015262ffffff9081166084850152931660a4830152821660c4820152908a1660e482015261010401600060405180830381600087803b1580156111d357600080fd5b505af11580156111e7573d6000803e3d6000fd5b5050505050505050949350505050565b60606000806112068585611f34565b6001600160a01b038083166000908152600d60209081526040808320938516835292905290812092945090925061123c82612092565b90508015611385578067ffffffffffffffff81111561125d5761125d612d8d565b6040519080825280602002602001820160405280156112af57816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161127b5790505b506001600160a01b03808616600090815260076020908152604080832093881683529290529081209196505b828110156113825760006112f76112f28684611a8d565b61209c565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b90049091161515606082015289519192509089908490811061136e5761136e612da3565b6020908102919091010152506001016112db565b50505b5050505092915050565b611397611a99565b6000806113a48686611f34565b6001600160a01b0380831660009081526007602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b909204909116151560608301529294509092509061145e5760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff861660448201526064016107d2565b831515816060015115150361148557604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526007602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b0260ff60b81b1990911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f9061150890871515815260200190565b60405180910390a250505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152611548848484611ac6565b949350505050565b611558611a99565b61156260006120c6565b565b60015433906001600160a01b0316811461159c5760405163118cdaa760e01b81526001600160a01b03821660048201526024016107d2565b6115a5816120c6565b50565b6000600682815481106115bd576115bd612da3565b6000918252602090912001546001600160a01b031692915050565b6000610ca7600b612092565b60008261160257506000546001600160a01b03828116911614610686565b60008381526002602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b60008080808080808061164460088a611eb6565b61166457604051637d9160bf60e11b8152600481018a90526024016107d2565b600061167160088b611ec2565b905061167c81612024565b61ffff16985061168b81612030565b61ffff16975061169a81612040565b61ffff1696506116a981612050565b61ffff1695506116b881612060565b62ffffff1694506116c881612071565b61ffff1693506116d781612081565b62ffffff16925060ff81901c915050919395975091939597565b6116f9611a99565b306001600160a01b0316816001600160a01b03166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611741573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117659190612dfb565b6001600160a01b03161461179757604051630a3e70af60e11b81526001600160a01b03821660048201526024016107d2565b6005546001600160a01b0390811690821681036117d257604051630ded3b9560e31b81526001600160a01b03831660048201526024016107d2565b600580546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b60008281526002602052604090206001015461184d81611b92565b6108cf8383611d0d565b61185f611a99565b61186a600b826120df565b61189257604051638e888ef360e01b81526001600160a01b03821660048201526024016107d2565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b6118d1611a99565b6118e0600861ffff83166120f4565b61190357604051637d9160bf60e11b815261ffff821660048201526024016107d2565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b61193d611a99565b6115a581612100565b61194e611a99565b60045481810361197457604051631baa31e960e21b8152600481018390526024016107d2565b67016345785d8a00008211156119ae57604051635e8988c160e01b81526004810183905267016345785d8a000060248201526044016107d2565b600482905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e509101611826565b6119f1611a99565b600180546001600160a01b0383166001600160a01b03199091168117909155611a226000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6000610686826121be565b6000808080611a7486866121c9565b9097909650945050505050565b600060ff82901c610686565b600061162983836121f4565b6000546001600160a01b031633146115625760405163118cdaa760e01b81523360048201526024016107d2565b604080516080810182526000808252602082018190529181018290526060810191909152611af48484611f34565b6001600160a01b03918216600090815260076020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515611629565b6115a5813361221e565b6000611bad86868661ffff16611ac6565b6020015190506001600160a01b038116611bf75760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff851660448201526064016107d2565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5a9190612e18565b03611c7b5760405163b70cd0db60e01b8152600481018490526024016107d2565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d90611ca99086908690600401612e31565b600060405180830381600087803b158015611cc357600080fd5b505af1158015611cd7573d6000803e3d6000fd5b50505050505050505050565b600082611d0357604051633e3253cf60e11b815260040160405180910390fd5b611629838361225b565b6000611d1983836115e4565b15611d7a5760008381526002602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610686565b506000610686565b60008561ffff168761ffff161180611d9f5750610fff8661ffff16115b80611daf57506127108561ffff16115b80611dbf57506109c48361ffff16115b80611dd15750620fffff8262ffffff16115b15611def57604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b60006115488484611e94576000611e97565b60015b600180861b19929092169116841b1790565b60006115488484846122e7565b60006116298383612304565b60006116298383612310565b6000611629836001600160a01b038416612357565b606060006116298361239e565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611f2b82826123a9565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115611f55579192915b509192909150565b600060408303516020840351845180602087010180516002830161ffca811115611f8f5763c8c781396000526004601cfd5b6c5af43d3d93803e603357fd5bf3895289600d8a03527d6100003d81600a3d39f3363d3d373d3d3d3d610000806035363936013d738160481b176035820160d81b1760218a03528060f01b835287603f8201601f8b036000f596505085611ffe5763301164256000526004601cfd5b90528552601f19850152603f199093019290925250919050565b60006116298383612357565b600061ffff8216610686565b60006106868260101c610fff1690565b600061068682601c1c610fff1690565b60006106868260281c613fff1690565b60006106868260361c62ffffff1690565b600061068682604e1c613fff1690565b600061068682605c1c620fffff1690565b6000610686825490565b8061ffff811681146120c1576040516364ae406d60e01b815260040160405180910390fd5b919050565b600180546001600160a01b03191690556115a581612612565b6000611629836001600160a01b038416612662565b60006116298383612755565b6001600160a01b03811661212757604051632573cfb960e21b815260040160405180910390fd5b6003546001600160a01b03908116908216810361216657600354604051634fcea97160e01b81526001600160a01b0390911660048201526024016107d2565b600380546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa708401527219101611826565b600061068682612092565b600080806121d78585611a8d565b600081815260029690960160205260409095205494959350505050565b600082600001828154811061220b5761220b612da3565b9060005260206000200154905092915050565b61222882826115e4565b6122575760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107d2565b5050565b600061226783836115e4565b611d7a5760008381526002602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561229f3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610686565b600082815260028401602052604081208290556115488484612018565b60006116298383612772565b60008181526002830160205260408120548015801561233657506123348484612304565b155b156116295760405163015ab34360e11b8152600481018490526024016107d2565b6000818152600183016020526040812054611d7a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610686565b60606106868261278a565b6000806000836000036123c55750600160801b91506106869050565b508260008112156123d7579015906000035b621000008110156125d057600160801b9250846fffffffffffffffffffffffffffffffff81111561240a57911591600019045b600182161561241b5792830260801c925b800260801c60028216156124315792830260801c925b800260801c60048216156124475792830260801c925b800260801c600882161561245d5792830260801c925b800260801c60108216156124735792830260801c925b800260801c60208216156124895792830260801c925b800260801c604082161561249f5792830260801c925b8002608090811c908216156124b65792830260801c925b800260801c6101008216156124cd5792830260801c925b800260801c6102008216156124e45792830260801c925b800260801c6104008216156124fb5792830260801c925b800260801c6108008216156125125792830260801c925b800260801c6110008216156125295792830260801c925b800260801c6120008216156125405792830260801c925b800260801c6140008216156125575792830260801c925b800260801c61800082161561256e5792830260801c925b800260801c620100008216156125865792830260801c925b800260801c6202000082161561259e5792830260801c925b800260801c620400008216156125b65792830260801c925b800260801c620800008216156125ce5792830260801c925b505b826000036125fb57604051631dba598d60e11b815260048101869052602481018590526044016107d2565b816126065782611f2b565b611f2b83600019612e87565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000818152600183016020526040812054801561274b576000612686600183612de8565b855490915060009061269a90600190612de8565b90508082146126ff5760008660000182815481106126ba576126ba612da3565b90600052602060002001549050808760000184815481106126dd576126dd612da3565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061271057612710612ea9565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610686565b6000915050610686565b600081815260028301602052604081208190556116298383612797565b60008181526001830160205260408120541515611629565b60606000611629836127a3565b60006116298383612662565b6060816000018054806020026020016040519081016040528092919081815260200182805480156127f357602002820191906000526020600020905b8154815260200190600101908083116127df575b50505050509050919050565b60006020828403121561281157600080fd5b81356001600160e01b03198116811461162957600080fd5b6020808252825182820181905260009190848201906040850190845b8181101561286157835183529284019291840191600101612845565b50909695505050505050565b60006020828403121561287f57600080fd5b5035919050565b6001600160a01b03811681146115a557600080fd5b803561ffff811681146120c157600080fd5b803562ffffff811681146120c157600080fd5b6000806000806000806000806000806101408b8d0312156128e057600080fd5b8a356128eb81612886565b995060208b01356128fb81612886565b985061290960408c0161289b565b975061291760608c0161289b565b965061292560808c0161289b565b955061293360a08c0161289b565b945061294160c08c0161289b565b935061294f60e08c016128ad565b925061295e6101008c0161289b565b915061296d6101208c016128ad565b90509295989b9194979a5092959850565b60006020828403121561299057600080fd5b813561162981612886565b6000806000606084860312156129b057600080fd5b83356129bb81612886565b925060208401356129cb81612886565b91506129d96040850161289b565b90509250925092565b600080604083850312156129f557600080fd5b823591506020830135612a0781612886565b809150509250929050565b803580151581146120c157600080fd5b60008060008060008060008060006101208a8c031215612a4157600080fd5b612a4a8a61289b565b9850612a5860208b0161289b565b9750612a6660408b0161289b565b9650612a7460608b0161289b565b9550612a8260808b0161289b565b9450612a9060a08b016128ad565b9350612a9e60c08b0161289b565b9250612aac60e08b016128ad565b9150612abb6101008b01612a12565b90509295985092959850929598565b60008060008060008060a08789031215612ae357600080fd5b8635612aee81612886565b95506020870135612afe81612886565b9450612b0c6040880161289b565b935060608701359250608087013567ffffffffffffffff80821115612b3057600080fd5b818901915089601f830112612b4457600080fd5b813581811115612b5357600080fd5b8a6020828501011115612b6557600080fd5b6020830194508093505050509295509295509295565b60008060408385031215612b8e57600080fd5b612b978361289b565b9150612ba560208401612a12565b90509250929050565b60008060008060808587031215612bc457600080fd5b8435612bcf81612886565b93506020850135612bdf81612886565b9250612bed604086016128ad565b9150612bfb6060860161289b565b905092959194509250565b60008060408385031215612c1957600080fd5b8235612c2481612886565b91506020830135612a0781612886565b6020808252825182820181905260009190848201906040850190845b8181101561286157612c9583855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101612c50565b60008060008060808587031215612cbe57600080fd5b8435612cc981612886565b93506020850135612cd981612886565b9250612ce76040860161289b565b9150612bfb60608601612a12565b600080600060608486031215612d0a57600080fd5b8335612d1581612886565b92506020840135612d2581612886565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101610686565b600060208284031215612d8457600080fd5b6116298261289b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612de157612de1612db9565b5060010190565b8181038181111561068657610686612db9565b600060208284031215612e0d57600080fd5b815161162981612886565b600060208284031215612e2a57600080fd5b5051919050565b82815260006020604081840152835180604085015260005b81811015612e6557858101830151858201606001528201612e49565b506000606082860101526060601f19601f830116850101925050509392505050565b600082612ea457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220b00d0a5cf7685e65a7ef61c67470d2c6e2b920abe76b20398614a3917c6549f464736f6c6343000814003360c06040523480156200001157600080fd5b506040516200615c3803806200615c83398101604081905262000034916200010a565b6001600160a01b03811660a052306080526200004f62000056565b506200013c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a75760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001075780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011d57600080fd5b81516001600160a01b03811681146200013557600080fd5b9392505050565b60805160a051615fe56200017760003960008181610505015281816113ce015281816121da01526136a5015260006104720152615fe56000f3fe608060405234801561001057600080fd5b50600436106102765760003560e01c806388cc58e411610160578063c9939f5e116100d8578063e584b6541161008c578063e985e9c511610071578063e985e9c5146106c9578063ea3446bf146106ec578063f5e29329146106ff57600080fd5b8063e584b654146106a3578063e77366f8146106b657600080fd5b8063d8dfcea0116100bd578063d8dfcea01461067b578063da10610c14610683578063dbe65edc1461069b57600080fd5b8063c9939f5e14610660578063d3b9fbe41461067357600080fd5b8063a1af5b9a1161012f578063abcd783011610114578063abcd7830146105f0578063bd85b0391461062d578063c7bd65861461064d57600080fd5b8063a1af5b9a146105c1578063a41a01fb146105c957600080fd5b806388cc58e4146105035780638940a16a146105295780638d7024e51461056757806395d89b41146105a257600080fd5b806347973bff116101f357806355182894116101c25780636653851a116101a75780636653851a14610494578063781a8915146104a75780637ca0de30146104b157600080fd5b806355182894146104285780635c60da1b1461046d57600080fd5b806347973bff146103cf5780634c7cffbd146103e25780634e1273f4146103f557806353c059a01461041557600080fd5b80630abe96881161024a57806317fad7fc1161022f57806317fad7fc146103855780631b057f6d1461039a578063383d15c5146103ad57600080fd5b80630abe96881461033457806317f11ecc1461036a57600080fd5b8062fdd58e1461027b57806305e8746d146102a157806306fdde03146102ca5780630902f1ac1461030c575b600080fd5b61028e61028936600461556c565b610712565b6040519081526020015b60405180910390f35b3660011981013560f01c90033560601c5b6040516001600160a01b039091168152602001610298565b60408051808201909152601481527f4c697175696469747920426f6f6b20546f6b656e00000000000000000000000060208201525b60405161029891906155bc565b610314610740565b604080516001600160801b03938416815292909116602083015201610298565b610314610342366004615602565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b61037261077a565b60405161ffff9091168152602001610298565b610398610393366004615662565b61079b565b005b6103986103a8366004615739565b6107f6565b6103c06103bb366004615785565b610915565b60405161029893929190615828565b6103986103dd366004615859565b610b9b565b61028e6103f0366004615602565b610cf9565b6104086104033660046158f0565b610d29565b604051610298919061595c565b61028e61042336600461597f565b610dff565b610430611138565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a001610298565b6102b27f000000000000000000000000000000000000000000000000000000000000000081565b6103986104a23660046159b6565b6111e2565b620100095461028e565b6104b961121b565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e001610298565b7f00000000000000000000000000000000000000000000000000000000000000006102b2565b61053c610537366004615a3c565b611283565b6040805167ffffffffffffffff94851681529284166020840152921691810191909152606001610298565b61056f611382565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff9091166060820152608001610298565b60408051808201909152600381526213109560ea1b60208201526102ff565b61028e6113c2565b6105dc6105d7366004615a63565b61157a565b60405162ffffff9091168152602001610298565b6106036105fe366004615a8d565b61158d565b604080516001600160801b0394851681529284166020840152921691810191909152606001610298565b61028e61063b366004615ac5565b60009081526001602052604090205490565b61039861065b366004615ade565b611732565b61040861066e366004615662565b6117c8565b610398611af2565b610314611b86565b3660011981013560f01c90036014013560601c6102b2565b6105dc611ba1565b6103986106b1366004615af9565b611bae565b6106036106c4366004615a8d565b611bbd565b6106dc6106d7366004615b17565b611d03565b6040519015158152602001610298565b6103986106fa366004615b35565b611d0f565b6105dc61070d366004615ac5565b611fed565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b905090565b60008061077161075d60055460045461201890919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b600061073b60003660011981013560f090811c90910360280135901c905090565b6107a3612052565b62010009546107b8813389898989898961208a565b6107c687878787878761212a565b6107dd6001600080516020615f9083398151915255565b6107ed8133898989898989612188565b50505050505050565b6107fe612052565b6108066121cf565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108cf5750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561089f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c39190615b85565b6001600160a01b031614155b156108ed57604051631b5de6eb60e01b815260040160405180910390fd5b6108f8848484612218565b506109106001600080516020615f9083398151915255565b505050565b6000806060866109248161223f565b61092c612052565b600086900361094e5760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561097b5761097b615ba2565b6040519080825280602002602001820160405280156109a4578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109c3576109c3615ba2565b6040519080825280602002602001820160405280156109ec578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a0b57610a0b615ba2565b604051908082528060200260200182016040528015610a34578160200160208202803683370190505b509052600454909150610a60813660011981013560f01c90038035606090811c9160140135901c61227b565b9650610a7083338d8d8d8c6122bb565b610a7d8a8a898e86612305565b9550610a93610a8c8888612018565b829061243a565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610ae191908b90615bb8565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b2d929190615bb8565b60405180910390a38515610b5f57610b5f863660011981013560f01c90038035606090811c9160140135901c8b612474565b610b766001600080516020615f9083398151915255565b610b8d83338d8d8d610b888d8d612018565b6124d2565b505050509450945094915050565b610ba36121cf565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610bee5750825b905060008267ffffffffffffffff166001148015610c0b5750303b155b905081158015610c19575080155b15610c375760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c6b57845468ff00000000000000001916680100000000000000001785555b610c73612514565b610c9f610c93610c8e8860035461252490919063ffffffff16565b612573565b8e8e8e8e8e8e8e6125c7565b8315610cea57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610735610d1d60003660011981013560f090811c90910360280135901c905090565b62ffffff84169061274e565b60608382610d378282612785565b8567ffffffffffffffff811115610d5057610d50615ba2565b604051908082528060200260200182016040528015610d79578160200160208202803683370190505b50925060005b86811015610df457610dcf888883818110610d9c57610d9c615bdd565b9050602002016020810190610db19190615bf3565b878784818110610dc357610dc3615bdd565b90506020020135610712565b848281518110610de157610de1615bdd565b6020908102919091010152600101610d7f565b505050949350505050565b6000610e09612052565b6201000954600454600554600086610e3d57610e383660011981013560f01c90036014013560601c84906127a5565b610e57565b610e573660011981013560f01c90033560601c84906127da565b90506000819003610e7b57604051637df801c760e01b815260040160405180910390fd5b86610e898533898486612809565b610e93848361243a565b6003549094506000610eba60003660011981013560f090811c90910360280135901c905090565b90506000610ec78361286d565b9050610ed38342612879565b92505b62ffffff8116600090815260066020526040902054610ef68186156128ef565b61101a57610f04848361291e565b935060008080610f188488888b898e6129a6565b91945092509050821561101657610f2f8984612018565b9850610f3b8d8361243a565b9c506000610f56610f4b89612bcc565b839061ffff16612bdc565b90508015610f7757610f688b8261243a565b9a50610f748482612018565b93505b610f8b83610f85878761243a565b90612018565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca70888787610fd88e612c52565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036110295750611073565b60006110358684612c63565b905062ffffff8116158061104d575062ffffff818116145b1561106b57604051631a6d7fb160e31b815260040160405180910390fd5b915050610ed6565b60008990036110955760405163439df85d60e11b815260040160405180910390fd5b61109f878a612018565b60045560058690556110b3600a8483612c85565b92506110bf8382612524565b60035583156110eb576110e63660011981013560f01c90036014013560601c8a908c612da0565b611106565b6111063660011981013560f01c90033560601c8a908c612de0565b61111d6001600080516020615f9083398151915255565b61112a88338c878d612df1565b505050505050505092915050565b6003546078906000908190819081908161115182612e4e565b905061ffff8116156111d957600061116a600a83612e5e565b9650905061117781612ebc565b965061118281612ec8565b94508464ffffffffff1660000361119857600095505b61ffff8616156111d7576111c98661ffff168361ffff16816111bc576111bc615c10565b600a916001910601612ee9565b90506111d481612ec8565b93505b505b50509091929394565b6111ea612052565b6111f26121cf565b611204600354888888888888886125c7565b6107ed6001600080516020615f9083398151915255565b600080600080600080600080600354905061123581612ebc565b975061124081612f19565b965061124b81612f29565b955061125681612f39565b945061126181612f49565b935061126c81612bcc565b925061127781612f5a565b91505090919293949596565b6000806000806003549050600061129982612e4e565b905061ffff811615806112b25750428664ffffffffff16115b156112c9576000806000945094509450505061137b565b60006112d7600a8389612f6b565b91985096509450905064ffffffffff80881690821610156113775761130d6112fe8461286d565b849064ffffffffff8a1661308e565b9250600061131b8289615c3c565b90508064ffffffffff1661132e8561286d565b62ffffff1661133d9190615c5a565b6113479088615c86565b96508064ffffffffff1661135a85612c52565b62ffffff166113699190615c5a565b6113739087615c86565b9550505b5050505b9193909250565b6000806000806000600354905061139881612c52565b94506113a3816130a6565b93506113ae816130b7565b92506113b9816130c8565b91505090919293565b60006113cc612052565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144e9190615b85565b6001600160a01b0316336001600160a01b03161461147f57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c60006114da826114a25760006114a5565b60015b60ff166000856001600160801b0316116114c05760006114c3565b60015b60ff169060801b6001600160801b03919091161790565b90506114e68482612018565b9450841561155c5760058190556004546115009086612018565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261155c853660011981013560f01c90038035606090811c9160140135901c33612474565b505050506115776001600080516020615f9083398151915255565b90565b60006115868383612c63565b9392505050565b60035460009083908290816115b760003660011981013560f090811c90910360280135901c905090565b905060006115c48361286d565b90506115d08342612879565b92505b62ffffff81166000908152600660205260408120546115f39089156130db565b90506001600160801b038116156116d957600061161562ffffff84168561274e565b90506000876001600160801b0316836001600160801b031611611638578261163a565b875b9050611646868561291e565b955060008a611669576116646001600160801b0383168460806130fb565b61167e565b61167e6001600160801b038316608085613131565b9050600061168c8888613167565b905060006116a36001600160801b03841683613186565b90506116af8184615ca7565b6116b9908d615ca7565b9b506116c5848c615cc7565b9a506116d1818b615ca7565b995050505050505b856001600160801b03166000036116f05750611728565b60006116fc8984612c63565b905062ffffff81161580611714575062ffffff818116145b15611720575050611728565b9150506115d3565b5050509250925092565b61173a612052565b600354600061174882612e4e565b90508061ffff166000036117675750600161176382826131cf565b6003555b611773600a828561321e565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a250506117c56001600080516020615f9083398151915255565b50565b606086336117d68282613307565b61180b5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b611813612052565b8515806118205750858414155b1561183e57604051633ab7870760e01b815260040160405180910390fd5b620100095461185381338c8c8c8c8c8c613353565b898767ffffffffffffffff81111561186d5761186d615ba2565b604051908082528060200260200182016040528015611896578160200160208202803683370190505b5094506000805b898110156119ea5760006118c88c8c848181106118bc576118bc615bdd565b90506020020135613399565b905060008a8a848181106118de576118de615bdd565b9050602002013590508060000361190f57604051636996a92560e01b815262ffffff83166004820152602401611802565b62ffffff8216600081815260066020908152604080832054600190925290912054909161193e908890856133c4565b600061194b838584613445565b905060008190036119765760405163fd44792960e01b815262ffffff86166004820152602401611802565b6119808382612018565b9250838203611996576119946007866134bd565b505b62ffffff851660009081526006602052604090208390558b5181908d90889081106119c3576119c3615bdd565b60209081029190910101526119d8878261243a565b9650856001019550505050505061189d565b506004546119f89082612018565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611a41908f908f908f908f90615d32565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611a9093929190615d59565b60405180910390a3611abc813660011981013560f01c90038035606090811c9160140135901c8e612474565b611ad36001600080516020615f9083398151915255565b611ae38333848e8e8e8e8e61355f565b50505050509695505050505050565b611afa612052565b611b026121cf565b600354611b16611b1182612573565b6135a5565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611b44836130b7565b611b4d846130a6565b6040805162ffffff93841681529290911660208301520160405180910390a250611b846001600080516020615f9083398151915255565b565b60055460009081906001600160801b0381169060801c610771565b600061073b60035461286d565b611bb93383836135da565b5050565b6000808080611bd56001600160801b0387168661368f565b6003549091506000611bfc60003660011981013560f090811c90910360280135901c905090565b90506000611c098361286d565b9050611c158342612879565b92505b62ffffff8116600090815260066020526040902054611c38818a156128ef565b611ca557611c46848361291e565b935060008080611c5a8488888f898d6129a6565b919450925090508215611ca157611c718884612018565b9750611c7e828d156130db565b611c88908b615ca7565b9950611c94818d6130db565b611c9e908a615ca7565b98505b5050505b6000859003611cb45750611cec565b6000611cc08a84612c63565b905062ffffff81161580611cd8575062ffffff818116145b15611ce4575050611cec565b915050611c18565b611cf684896130db565b9650505050509250925092565b60006115868383613307565b611d17612052565b6000839003611d395760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611d4c866136a0565b9050611d5a833389896137a8565b611d7e863660011981013560f01c90038035606090811c9160140135901c8a612474565b6000806001600160a01b038916631faa6b8760e01b333660011981013560f01c90033560601c3660011981013560f01c90036014013560601c8c888d8d604051602401611dd19796959493929190615da8565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611e279190615de9565b6000604051808303816000865af19150503d8060008114611e64576040519150601f19603f3d011682016040523d82523d6000602084013e611e69565b606091505b5091509150811580611e7d57508051602014155b80611ebb57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c281806020019051810190611eb89190615e05565b14155b15611ed957604051634a57011360e01b815260040160405180910390fd5b6000611efe813660011981013560f01c90038035606090811c9160140135901c61227b565b9050611f14611f0d868661243a565b82906137fd565b15611f3257604051630e3c717160e11b815260040160405180910390fd5b6000611f3e8287612018565b6004839055600554909150611f53908261243a565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d90611f919061286d565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a3611fd36001600080516020615f9083398151915255565b611fe087338d8885613841565b5050505050505050505050565b600061073561201160003660011981013560f090811c90910360280135901c905090565b839061389d565b8082038281118061203457506001600160801b03808416908216115b156107355760405163e599af5560e01b815260040160405180910390fd5b600080516020615f9083398151915280546001190161208457604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561212057612120886379c8ccf760e01b898989898989896040516024016120d19796959493929190615e1e565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526138e2565b5050505050505050565b85336121368282613307565b6121665760405163548f773d60e01b81526001600160a01b03808416600483015282166024820152604401611802565b612120888888888888613946565b6001600080516020615f9083398151915255565b750200000000000000000000000000000000000000000088161561212057612120886367ddb27860e01b898989898989896040516024016120d19796959493929190615e1e565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611b8457604051632486085360e01b815260040160405180910390fd5b82156109105761091083634e430b5a60e01b8585856040516024016120d193929190615e74565b6001600160a01b038116158061225d57506001600160a01b03811630145b156117c5576040516345c210e760e11b815260040160405180910390fd5b60006122b384610f8561228d85613aa9565b61229687613aa9565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156122fd576122fd86630d4abdb360e01b87878787876040516024016120d1959493929190615e8e565b505050505050565b60008061232760003660011981013560f090811c90910360280135901c905090565b60035490915060006123388261286d565b905086935060005b8881101561242d576000806123768a8d8d8681811061236157612361615bdd565b90506020020135613b1890919063ffffffff16565b91509150600080600061238c898886888c613b61565b9194509250905061239d8a83612018565b99508362ffffff168b6000015187815181106123bb576123bb615bdd565b602002602001018181525050808b6020015187815181106123de576123de615bdd565b602002602001018181525050828b60400151878151811061240157612401615bdd565b60200260200101818152505061241d8c8562ffffff1685613d6f565b8560010195505050505050612340565b5050505095945050505050565b8181018281108061245657506001600160801b03808416908216105b15610735576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c81156124a6576124a66001600160a01b038616846001600160801b038516613dbc565b6001600160801b038116156122fd576122fd6001600160a01b038516846001600160801b038416613dbc565b742000000000000000000000000000000000000000008616156122fd576122fd86637a51a4c660e01b87878787876040516024016120d1959493929190615e8e565b61251c613e0d565b611b84613e5b565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611586565b60008061257f8361286d565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611586565b61ffff87161580156125db575061ffff8616155b80156125e9575061ffff8516155b80156125f7575061ffff8416155b8015612606575062ffffff8316155b8015612614575061ffff8216155b8015612623575062ffffff8116155b15612641576040516331375e0360e11b815260040160405180910390fd5b6126518888888888888888613e63565b9750600061267460003660011981013560f090811c90910360280135901c905090565b905060006126828a84613f7c565b905060006126908284613fda565b61269a838561401a565b6126a49190615ecd565b905067016345785d8a00008111156126cf576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff190161277c828261403e565b95945050505050565b808214611bb9576040516340311ffd60e11b815260040160405180910390fd5b6000806127b28460801c90565b90506122b3816127c185613aa9565b6127cb9190615cc7565b6001600160801b031660801b90565b60006001600160801b0383166122b3816127f385613aa9565b6127fd9190615cc7565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612866576040516001600160a01b0380861660248301528416604482015282151560648201526084810182905261286690869063feee373560e01b9060a4016120d1565b5050505050565b600060e882901c610735565b600080612885846130c8565b6128969064ffffffffff1684615ee0565b90506128a184612f19565b61ffff1681106128e5576128b484612573565b93506128bf84612f29565b61ffff1681106128d9576128d484600061429e565b6128e2565b6128e2846135a5565b93505b6122b3848461430c565b60008161290f576129008360801c90565b6001600160801b031615611586565b50506001600160801b03161590565b60008061292a846130b7565b62ffffff169050600080828562ffffff161161294d578462ffffff168303612956565b828562ffffff16035b91506127108202612966876130a6565b62ffffff16019050600061297987612f5a565b62ffffff16905080821161298d578161298f565b805b915061299b8783613f7c565b979650505050505050565b60008080806129ba62ffffff87168961274e565b905060006129c98b89156130db565b90506000886129f4576129ef6129ea6001600160801b0384168560806130fb565b614365565b612a0c565b612a0c6129ea6001600160801b038416608086613131565b90506000612a1a8c8c613167565b90506000612a316001600160801b03841683613186565b9050612a3d8184615ca7565b92506000612a4b8a8d6130db565b9050600080856001600160801b0316836001600160801b031610612a76575084915082905085612aec565b612a896001600160801b0384168661438f565b91506000612a978385615cc7565b6001600160801b031690508e612abb57612ab66129ea8260808c6143c6565b612aca565b612aca6129ea828b60806143f0565b9150876001600160801b0316826001600160801b03161115612aea578791505b505b8d612b2657612b04836001600160801b031660801b90565b6001600160801b038216612b21846001600160801b031660801b90565b612b4e565b6001600160801b038316612b43826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612ba0612b9a85610f85888f61243a90919063ffffffff16565b8361445e565b1115612bbf5760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061073582604e1c613fff1690565b6000816001600160801b0316600003612bf757506000610735565b6127106001600160801b038316811015612c2457604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006107358260701c620fffff1690565b600082612c7a57612c7560078361447a565b611586565b6115866007836145c6565b600080612c9184612e4e565b90508061ffff16600003612ca85783915050611586565b6000612cb48683612ee9565b90506000612cc1826146f6565b90506000612cce83614702565b612cdb9060ff1683615ef3565b90508064ffffffffff16612cee42614711565b64ffffffffff161115612d94576000806000612d338464ffffffffff164203612d168c61286d565b612d1f8d612c52565b612d298e8e614739565b8a93929190614769565b9250925092506000612d4487612ebc565b905064ffffffffff861642036078811115612d74575096879006600101964295506000612d718c8a6131cf565b9b505b612d8282868686858c6147ce565b97505050505050612d94888585614872565b50949695505050505050565b6000612dac8460801c90565b90506001600160801b03811615612dda57612dda6001600160a01b038416836001600160801b038416613dbc565b50505050565b60006001600160801b038416612dac565b74020000000000000000000000000000000000000000851615612866576040516001600160a01b038086166024830152841660448201528215156064820152608481018290526128669086906353e8079b60e01b9060a4016120d1565b60006107358260d81c61ffff1690565b600080612e6b8484612ee9565b9150612e7682612ebc565b90508061ffff168361ffff1614612eb557612e99612e948583612ee9565b612ebc565b90508061ffff168361ffff1611612eb05780612eb2565b825b90505b9250929050565b600061ffff8216610735565b6000612ed382614702565b60ff16612edf836146f6565b6107359190615ef3565b600081612ef58161489f565b8361ffff60001985018116908110612f0f57612f0f615bdd565b0154949350505050565b60006107358260101c610fff1690565b600061073582601c1c610fff1690565b60006107358260281c613fff1690565b60006107358260361c62ffffff1690565b600061073582605c1c620fffff1690565b600080600080600080612f7e8989612e5e565b909250905064ffffffffff8716612fb58a612f99848c615f11565b61ffff1661ffff8110612fae57612fae615bdd565b0154612ec8565b64ffffffffff161115612fdb57604051631c4e7f9560e21b815260040160405180910390fd5b612fe482612ec8565b95508664ffffffffff168664ffffffffff16116130265785613005836148c4565b61300e846148da565b613017856148f0565b95509550955095505050613085565b8695506000806130388b8b8b86614906565b9150915060008961304883612ec8565b6130529190615c3c565b9050600061305f84612ec8565b613069908c615c3c565b905061307784848484614a58565b919a50985096505050505050505b93509350935093565b600061309a8483612879565b93506122b3848461291e565b60006107358260841c620fffff1690565b60006107358260981c62ffffff1690565b60006107358260b01c64ffffffffff1690565b6000816130ec57612c758360801c90565b6001600160801b038316611586565b60006131088484846143f0565b9050600160ff83161b8061311e5761311e615c10565b83850915611586576122b3600182615ecd565b600061313e8484846143c6565b9050818061314e5761314e615c10565b600160ff85161b850915611586576122b3600182615ecd565b60006115866131768484613fda565b613180858561401a565b01614365565b60008161319281614bbc565b6001600160801b03808416670de0b6b3a764000081900391829160001991881602820101816131c3576131c3615c10565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611586565b600061322a8484612ee9565b9050600061323782612ebc565b90508261ffff168161ffff161061326157604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146132925761ffff82161561328b576132868683612ee9565b613294565b6000613294565b825b905060006132a182612ebc565b61ffff169050808661ffff16116132b857806132be565b8561ffff165b905061ffff83165b8561ffff168110156132f05781888261ffff81106132e6576132e6615bdd565b01556001016132c6565b506107ed878761ffff868116881890891617614872565b6000816001600160a01b0316836001600160a01b031614806115865750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b74400000000000000000000000000000000000000000881615612120576121208863ea9db9d360e01b898989898989896040516024016120d19796959493929190615e1e565b8062ffffff811681146133bf57604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561342157604051625b387760e31b81526001600160a01b03861660048201526024810185905260448101849052606401611802565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c82808315613478576134756129ea886001600160801b03871689614bee565b91505b6001600160801b038316156134a15761349e6129ea886001600160801b03861689614bee565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461355357600083815260028701602052604081208290558190036135475750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613545578654600160ff83161b191687555b505b60019350505050610735565b50600095945050505050565b74800000000000000000000000000000000000000000881615612120576121208863fdc2725760e01b898989898989896040516024016120d19796959493929190615e1e565b6000806135b183612c52565b62ffffff16905060006135c384612f39565b61ffff1690506127108282020461277c858261429e565b826135e48161223f565b826001600160a01b0316846001600160a01b0316036136215760405163782ee70760e01b81526001600160a01b0385166004820152602401611802565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816130ec57612c758360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137259190615e05565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff9061375e90670de0b6b3a7640000908616850283015b04614365565b9250613790670de0b6b3a764000082866001600160801b0316856001600160801b031602018161375857613758615c10565b915050608081901b6001600160801b0383161761277c565b74040000000000000000000000000000000000000000841615612dda576040516001600160a01b0380851660248301528316604482015260648101829052612dda90859063505d903360e01b906084016120d1565b60006001600160801b0383811690608085811c9185169085901c8184108061299b5750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612866576040516001600160a01b0380861660248301528416604482015260648101839052608481018290526128669086906360bed5f360e01b9060a4016120d1565b600061271061ffff60801b608084901b1604600160801b01816138bf82614c0e565b6138c886614c0e565b6138d29190615f32565b905061277c816280000001613399565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613916573d6000803e3d6000fd5b8060005160e01c14601f3d1116831692505081612dda57604051636c93cb9b60e01b815260040160405180910390fd5b82816139528282612785565b8661395c8161223f565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613a405760008a8a8381811061399b5761399b615bdd565b90506020020135905060008989848181106139b8576139b8615bdd565b600085815260208981526040909120549102929092013592505081811015613a15578e83836040516358b4690f60e01b8152600401611802939291906001600160a01b039390931683526020830191909152604082015260600190565b600092835260208681526040808520928490039092558590529091208054909101905560010161397f565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613a949493929190615d32565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610735906001600160a01b038416906370a0823190602401602060405180830381865afa158015613af4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129ea9190615e05565b6000806000806000613b2987614d1b565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613b88908b61274e565b90506000613ba78962ffffff1660009081526001602052604090205490565b9050613bb583898484614dbe565b909650945084935062ffffff808b16908a1603613ced57613bd7878a4261308e565b96506000613be984898e89868c614f44565b90508015613ce7576000613c0784613c018985612018565b9061445e565b90506000613c22613c178b612bcc565b849061ffff16612bdc565b90508015613c4857613c348782612018565b600554909750613c44908261243a565b6005555b6000613c6286613c01613c5b8786612018565b8a9061243a565b9050613c6f838683614bee565b9950613c7d600a8c8f612c85565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613cdb9392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b50613cf8565b613cf8858b8b615039565b851580613d03575083155b15613d2857604051634c98d35760e11b815262ffffff8a166004820152602401611802565b80600003613d3d57613d3b60078a61509f565b505b613d47838561243a565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b60008281526001602052604081208054839290613d8d908490615ecd565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052612dda848261512c565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611b8457604051631afcd79f60e31b815260040160405180910390fd5b612174613e0d565b60008561ffff168761ffff161180613e805750610fff8661ffff16115b80613e9057506127108561ffff16115b80613ea057506109c48361ffff16115b80613eb25750620fffff8262ffffff16115b15613ed057604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff161115613fa757604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611586565b600080613fe684612f49565b62ffffff16905080156131c85760008361ffff1661400386612c52565b62ffffff16029050606460638280028402016131c3565b60008161ffff1661402a84612ebc565b61ffff16026402540be40002905092915050565b60008060008360000361405a5750600160801b91506107359050565b5082600081121561406c579015906000035b6210000081101561425c57600160801b9250846001600160801b0381111561409657911591600019045b60018216156140a75792830260801c925b800260801c60028216156140bd5792830260801c925b800260801c60048216156140d35792830260801c925b800260801c60088216156140e95792830260801c925b800260801c60108216156140ff5792830260801c925b800260801c60208216156141155792830260801c925b800260801c604082161561412b5792830260801c925b8002608090811c908216156141425792830260801c925b800260801c6101008216156141595792830260801c925b800260801c6102008216156141705792830260801c925b800260801c6104008216156141875792830260801c925b800260801c61080082161561419e5792830260801c925b800260801c6110008216156141b55792830260801c925b800260801c6120008216156141cc5792830260801c925b800260801c6140008216156141e35792830260801c925b800260801c6180008216156141fa5792830260801c925b800260801c620100008216156142125792830260801c925b800260801c6202000082161561422a5792830260801c925b800260801c620400008216156142425792830260801c925b800260801c6208000082161561425a5792830260801c925b505b8260000361428757604051631dba598d60e11b81526004810186905260248101859052604401611802565b81614292578261277c565b61277c83600019615f60565b6000620fffff8262ffffff1611156142c957604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611586565b60008061431883614711565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176122b3565b806001600160801b03811681146133bf57604051632f45db3d60e21b815260040160405180910390fd5b60008161439b81614bbc565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612c489087906001901b86858561519c565b60008060006143ff8686615248565b9150915081600014614415578360ff1682901c92505b801561445557600160ff85161b811061444157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c61277c828286615267565b60008061ffff600884901c1660ff8085169081146144cf57600082815260028701602052604081205493506144af84836152d2565b905060001981146144cd5760089290921b9091179250610735915050565b505b5060ff80821690600883901c90821461454957600081815260018801602052604081205494506144ff85846152d2565b9050600019811461454757600882901b8117600081815260028a0160205260409020549550935061452f856152e1565b60ff1660088560001c901b1795505050505050610735565b505b60ff818116925082146145b95786549350600061456685846152d2565b905060001981146145b75760008181526001890160205260409020549450905080614590856152e1565b60ff16600883901b17600081815260028a0160205260409020549550935061452f856152e1565b505b5060009695505050505050565b60008061ffff600884901c1660ff8416801561461957600082815260028701602052604081205493506145f9848361537d565b905060001981146146175760089290921b9091179250610735915050565b505b5060ff8116600882901c81156146785760008181526001880160205260408120549450614646858461537d565b9050600019811461467657600882901b8117600081815260028a0160205260409020549550935061452f8561538d565b505b60ff8116915081156146e757865493506000614694858461537d565b905060001981146146e557600081815260018901602052604090205494509050806146be8561538d565b60ff16600883901b17600081815260028a0160205260409020549550935061452f8561538d565b505b5062ffffff9695505050505050565b600060d882901c610735565b60006107358260d01c60ff1690565b8064ffffffffff811681146133bf576040516350dbfc8760e11b815260040160405180910390fd5b6000806147458461286d565b90508062ffffff168362ffffff1611614760578281036122b3565b90910392915050565b64ffffffffff841662ffffff84811682029184821681029184160261478d886148c4565b6147979084615c86565b92506147a2886148da565b6147ac9083615c86565b91506147b7886148f0565b6147c19082615c86565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff00000000000000000000000000000000000000000000000000000016811761299b565b8161487c8161489f565b818461ffff6000198601811690811061489757614897615bdd565b015550505050565b8061ffff166000036117c55760405163944e113960e01b815260040160405180910390fd5b60006107358260101c67ffffffffffffffff1690565b60006107358260501c67ffffffffffffffff1690565b60006107358260901c67ffffffffffffffff1690565b6000808080614916600186615f74565b61ffff16905060008060008961ffff1690505b8385116149d4576000600161493e8688615ecd565b901c9050888183089a508b61ffff808d1690811061495e5761495e615bdd565b0154935061496b84612ec8565b92508964ffffffffff168364ffffffffff1611156149955761498e600182615ee0565b94506149ce565b8964ffffffffff168364ffffffffff1610156149bd576149b6816001615ecd565b95506149ce565b838497509750505050505050614a4f565b50614929565b8164ffffffffff168964ffffffffff161015614a25578961ffff166000036149fa578799505b8a61ffff6000198c018116908110614a1457614a14615bdd565b015483965096505050505050614a4f565b8760018b089950828b61ffff808d16908110614a4357614a43615bdd565b01549650965050505050505b94509492505050565b600080600080614a67886148c4565b67ffffffffffffffff1690506000614a7e896148da565b67ffffffffffffffff1690506000614a958a6148f0565b67ffffffffffffffff1690508664ffffffffff16600003614abc5791945092509050614bb2565b6000614ac78a6148c4565b67ffffffffffffffff1690506000614ade8b6148da565b67ffffffffffffffff1690506000614af58c6148f0565b67ffffffffffffffff1690508a64ffffffffff16600003614b205791975095509350614bb292505050565b6000614b3664ffffffffff808d16908e16615ecd565b9050808b64ffffffffff1685028d64ffffffffff1689020181614b5b57614b5b615c10565b049950808b64ffffffffff1684028d64ffffffffff1688020181614b8157614b81615c10565b049850808b64ffffffffff1683028d64ffffffffff1687020181614ba757614ba7615c10565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b031611156117c557604051638630bc6b60e01b815260040160405180910390fd5b6000806000614bfd8686615248565b91509150612c48868686858561519c565b600081600103614c215750607f19919050565b81600003614c425760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614c6a57506001614c85565b5060001982600160fe1b81614c8157614c81615c10565b0492505b6000614c94607f85901c61538d565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114614d10576f400000000000000000000000000000005b6000811315614d0e57908002607f1c90600160801b8210614d06579384019360019190911c905b60011d614cdf565b505b50500260011b919050565b60008080614d338460581c67ffffffffffffffff1690565b9250614d498460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff841180614d845750670de0b6b3a76400008367ffffffffffffffff16115b80614da05750670de0b6b3a76400008267ffffffffffffffff16115b1561137b57604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c82614ddc838389615267565b905080600003614df6575060009350839250614a4f915050565b6000614e028a8961445e565b9050801580614e0f575086155b15614e2b57614e1d82615428565b899550955050505050614a4f565b614e36828883614bee565b95506000614e4587838a61549a565b905080831115614ee4576000614e5b8285615ee0565b9050600160801b8110614e9c57608081901c858111614e7a5780614e7c565b855b9050614e888187615ee0565b9550614e98608082901b83615ee0565b9150505b898110614ed0576000614eaf8b83615f60565b9050868111614ebe5780614ec0565b865b9050614ecc8188615ee0565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611614f16614f108d8d61243a565b8b61445e565b1115614f355760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b600081600003614f5657506000612c48565b6001600160801b038416608085901c600080614f8861075d614f788d8b61243a565b88614f83818c615ecd565b613445565b91509150836001600160801b0316826001600160801b03161115614feb576000614fce614fb58c8c613167565b614fbf8487615cc7565b6001600160801b0316906154b7565b9050614fe3816001600160801b031660801b90565b95505061502b565b826001600160801b0316816001600160801b0316111561502b57600061501e6150148c8c613167565b614fbf8588615cc7565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156150555750608083901b15155b8061507a57508162ffffff168162ffffff1611801561507a57506001600160801b0383115b156109105760405163227bd87160e21b815262ffffff82166004820152602401611802565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b8117808214613553576000838152600287016020526040812082905582900361354757600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613545578654600160ff83161b1787555060019350505050610735565b600080600052602060008351602085016000875af1905080801561516d573d80156151605760016000511483169250615167565b843b151592505b5061517d565b3d1561517d573d6000803e3d6000fd5b50806109105760405163197138bd60e11b815260040160405180910390fd5b6000816000036151bd578383816151b5576151b5615c10565b04905061277c565b8382106151dd576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156152a257508083028184828161528357615283615c10565b04146152a2576040516363f1e01f60e01b815260040160405180910390fd5b82156115865760809290921b91820182811015611586576040516363f1e01f60e01b815260040160405180910390fd5b600061158683600184016154f8565b60008160801b80156152f557608091508092505b8260401b90508015615308579150604001815b8260201b9050801561531b579150602001815b8260101b9050801561532e579150601001815b8260081b90508015615341579150600801815b8260041b90508015615354579150600401815b8260021b90508015615367579150600201815b508160011b15615375576001015b60ff03919050565b6000611586836000198401615526565b60006001600160801b038211156153a65750608090811c905b67ffffffffffffffff8211156153be57604091821c91015b63ffffffff8211156153d257602091821c91015b61ffff8211156153e457601091821c91015b60ff8211156153f557600891821c91015b600f82111561540657600491821c91015b600382111561541757600291821c91015b60018211156133bf57600101919050565b60008160000361543a57506000919050565b60006154458361538d565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106154945782611586565b50919050565b60006154a7848484614bee565b9050818061311e5761311e615c10565b6000816154c381614bbc565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a764000091909101026131c3565b60ff81169190911c906000821561551c5781615513846152e1565b0160ff16611586565b5060001992915050565b60ff8181031691821b91600090831561554c57806155438561538d565b60ff16036122b3565b506000199392505050565b6001600160a01b03811681146117c557600080fd5b6000806040838503121561557f57600080fd5b823561558a81615557565b946020939093013593505050565b60005b838110156155b357818101518382015260200161559b565b50506000910152565b60208152600082518060208401526155db816040850160208701615598565b601f01601f19169190910160400192915050565b803562ffffff811681146133bf57600080fd5b60006020828403121561561457600080fd5b611586826155ef565b60008083601f84011261562f57600080fd5b50813567ffffffffffffffff81111561564757600080fd5b6020830191508360208260051b8501011115612eb557600080fd5b6000806000806000806080878903121561567b57600080fd5b863561568681615557565b9550602087013561569681615557565b9450604087013567ffffffffffffffff808211156156b357600080fd5b6156bf8a838b0161561d565b909650945060608901359150808211156156d857600080fd5b506156e589828a0161561d565b979a9699509497509295939492505050565b60008083601f84011261570957600080fd5b50813567ffffffffffffffff81111561572157600080fd5b602083019150836020828501011115612eb557600080fd5b60008060006040848603121561574e57600080fd5b83359250602084013567ffffffffffffffff81111561576c57600080fd5b615778868287016156f7565b9497909650939450505050565b6000806000806060858703121561579b57600080fd5b84356157a681615557565b9350602085013567ffffffffffffffff8111156157c257600080fd5b6157ce8782880161561d565b90945092505060408501356157e281615557565b939692955090935050565b600081518084526020808501945080840160005b8381101561581d57815187529582019590820190600101615801565b509495945050505050565b83815282602082015260606040820152600061277c60608301846157ed565b803561ffff811681146133bf57600080fd5b600080600080600080600080610100898b03121561587657600080fd5b61587f89615847565b975061588d60208a01615847565b965061589b60408a01615847565b95506158a960608a01615847565b94506158b760808a016155ef565b93506158c560a08a01615847565b92506158d360c08a016155ef565b91506158e160e08a016155ef565b90509295985092959890939650565b6000806000806040858703121561590657600080fd5b843567ffffffffffffffff8082111561591e57600080fd5b61592a8883890161561d565b9096509450602087013591508082111561594357600080fd5b506159508782880161561d565b95989497509550505050565b60208152600061158660208301846157ed565b803580151581146133bf57600080fd5b6000806040838503121561599257600080fd5b61599b8361596f565b915060208301356159ab81615557565b809150509250929050565b600080600080600080600060e0888a0312156159d157600080fd5b6159da88615847565b96506159e860208901615847565b95506159f660408901615847565b9450615a0460608901615847565b9350615a12608089016155ef565b9250615a2060a08901615847565b9150615a2e60c089016155ef565b905092959891949750929550565b600060208284031215615a4e57600080fd5b813564ffffffffff8116811461158657600080fd5b60008060408385031215615a7657600080fd5b615a7f8361596f565b9150612eb2602084016155ef565b60008060408385031215615aa057600080fd5b82356001600160801b0381168114615ab757600080fd5b9150612eb26020840161596f565b600060208284031215615ad757600080fd5b5035919050565b600060208284031215615af057600080fd5b61158682615847565b60008060408385031215615b0c57600080fd5b8235615ab781615557565b60008060408385031215615b2a57600080fd5b823561599b81615557565b60008060008060608587031215615b4b57600080fd5b8435615b5681615557565b935060208501359250604085013567ffffffffffffffff811115615b7957600080fd5b615950878288016156f7565b600060208284031215615b9757600080fd5b815161158681615557565b634e487b7160e01b600052604160045260246000fd5b604081526000615bcb60408301856157ed565b828103602084015261277c81856157ed565b634e487b7160e01b600052603260045260246000fd5b600060208284031215615c0557600080fd5b813561158681615557565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff8281168282160390808211156131c8576131c8615c26565b67ffffffffffffffff818116838216028082169190828114615c7e57615c7e615c26565b505092915050565b67ffffffffffffffff8181168382160190808211156131c8576131c8615c26565b6001600160801b038181168382160190808211156131c8576131c8615c26565b6001600160801b038281168282160390808211156131c8576131c8615c26565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115615d1957600080fd5b8260051b80836020870137939093016020019392505050565b604081526000615d46604083018688615ce7565b828103602084015261299b818587615ce7565b604081526000615d6d604083018587615ce7565b8281036020840152612c4881856157ed565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a0830152613f6f60c083018486615d7f565b60008251615dfb818460208701615598565b9190910192915050565b600060208284031215615e1757600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a06060830152615e5360a083018688615ce7565b8281036080840152615e66818587615ce7565b9a9950505050505050505050565b83815260406020820152600061277c604083018486615d7f565b60006001600160a01b03808816835280871660208401525060806040830152615ebb608083018587615ce7565b90508260608301529695505050505050565b8082018082111561073557610735615c26565b8181038181111561073557610735615c26565b64ffffffffff8181168382160190808211156131c8576131c8615c26565b600061ffff80841680615f2657615f26615c10565b92169190910692915050565b600082615f4157615f41615c10565b600160ff1b821460001984141615615f5b57615f5b615c26565b500590565b600082615f6f57615f6f615c10565b500490565b61ffff8281168282160390808211156131c8576131c8615c2656fe9b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122021d0d6a98b619f239edd28c667566f18472738c97ca0f112816c25af22bc051764736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004c8038038062004c8083398101604081905262000034916200006b565b6001600160a01b0392831660805290821660a0521660c052620000bf565b6001600160a01b03811681146200006857600080fd5b50565b6000806000606084860312156200008157600080fd5b83516200008e8162000052565b6020850151909350620000a18162000052565b6040850151909250620000b48162000052565b809150509250925092565b60805160a05160c051614afe6200018260003960008181610194015281816102f3015281816105e2015281816106c00152818161079c015281816108df01528181610c6c01528181611288015281816113240152818161148b0152818161150e0152818161185101528181611ae601528181611dcf0152818161272801528181612ac70152612b450152600081816104900152613a4701526000818161035b0152818161102d015281816111da01528181611fc901526133230152614afe6000f3fe6080604052600436106101845760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc146104f4578063e9361c0814610507578063f96fe9251461052757600080fd5b8063bb558a9f14610481578063c22159b6146104b4578063d0e380f2146104d457600080fd5b8063a0d376cf116100b0578063a0d376cf1461042e578063a3c7271a1461044e578063b066ea7c1461046e57600080fd5b806392fe8e70146103a4578063964f987c146103c45780639ab6156b1461040e57600080fd5b806362c067671161013857806381c2fdfb1161011257806381c2fdfb1461031757806388cc58e41461034c5780638efc2b2c1461037f57600080fd5b806362c067671461028c578063659ac74b146102ac5780636c9c0078146102e457600080fd5b80632a443fae116101695780632a443fae1461022c5780633dc8f8ec1461024c5780634b8018701461026c57600080fd5b80631a24f9a9146101d95780632075ad221461020c57600080fd5b366101d457336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101d257604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101e557600080fd5b506101f96101f436600461401a565b61055b565b6040519081526020015b60405180910390f35b61021f61021a366004614085565b61085d565b6040516102039190614121565b34801561023857600080fd5b506101f961024736600461401a565b610abd565b34801561025857600080fd5b5061021f61026736600461401a565b610bea565b34801561027857600080fd5b506101f961028736600461401a565b610df0565b34801561029857600080fd5b506101d26102a7366004614134565b61102b565b3480156102b857600080fd5b506102cc6102c73660046141a1565b61119b565b6040516001600160a01b039091168152602001610203565b3480156102f057600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b34801561032357600080fd5b506103376103323660046141fd565b611252565b60408051928352602083019190915201610203565b34801561035857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b61039261038d3660046142b8565b6113ab565b604051610203969594939291906142fb565b3480156103b057600080fd5b5061021f6103bf36600461401a565b6115fa565b3480156103d057600080fd5b506103e46103df366004614368565b61173f565b604080516001600160801b0394851681529284166020840152921691810191909152606001610203565b34801561041a57600080fd5b506101f961042936600461401a565b6117cf565b34801561043a57600080fd5b506103e4610449366004614368565b611943565b34801561045a57600080fd5b506103926104693660046142b8565b611987565b6101f961047c366004614085565b611a64565b34801561048d57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102cc565b3480156104c057600080fd5b506103376104cf3660046143b3565b611bde565b3480156104e057600080fd5b506101f96104ef36600461447b565b611cd4565b6101f9610502366004614085565b611d4d565b34801561051357600080fd5b506101d2610522366004614500565b611fc7565b34801561053357600080fd5b50610547610542366004614595565b6120ea565b60405162ffffff9091168152602001610203565b6000818042111561058d5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105a5575080515160208201515114155b806105c257506040810151518151516105bf9060016145d7565b14155b156105e05760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610625576106256145ea565b60200260200101516001600160a01b03161461068457604086015186515181518110610653576106536145ea565b602002602001015160405163cfec0e0160e01b815260040161058491906001600160a01b0391909116815260200190565b600061069d876000015188602001518960400151612156565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610707573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072b9190614600565b90506107718860400151600081518110610747576107476145ea565b60200260200101513384600081518110610763576107636145ea565b60200260200101518d612266565b6107858289602001518a6040015130612287565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156107eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080f9190614600565b6108199190614619565b945084891115610846576040516313fab00360e21b8152600481018a905260248101869052604401610584565b6108508786612706565b5050505095945050505050565b6060818042111561088a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b845151859015806108a2575080515160208201515114155b806108bf57506040810151518151516108bc9060016145d7565b14155b156108dd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061091e5761091e6145ea565b60200260200101516001600160a01b03161461094b578560400151600081518110610653576106536145ea565b6000610964876000015188602001518960400151612156565b905061097a87602001518289604001518b61279a565b93503484600081518110610990576109906145ea565b602002602001015111156109de5734846000815181106109b2576109b26145ea565b602002602001015160405163194ee21960e31b8152600401610584929190918252602082015260400190565b610a1c816000815181106109f4576109f46145ea565b602002602001015185600081518110610a0f57610a0f6145ea565b6020026020010151612ab9565b6000610a338289602001518a60400151888b612b70565b905088811015610a60576040516313fab00360e21b8152600481018a905260248101829052604401610584565b84600081518110610a7357610a736145ea565b6020026020010151341115610ab157610ab13386600081518110610a9957610a996145ea565b602002602001015134610aac9190614619565b612e8d565b50505050949350505050565b60008180421115610aea5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610b02575080515160208201515114155b80610b1f5750604081015151815151610b1c9060016145d7565b14155b15610b3d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b56876000015188602001518960400151612156565b9050610b9c8760400151600081518110610b7257610b726145ea565b60200260200101513383600081518110610b8e57610b8e6145ea565b60200260200101518c612266565b610bb1898289602001518a604001518a612f1f565b935083881115610bde576040516313fab00360e21b81526004810189905260248101859052604401610584565b50505095945050505050565b60608180421115610c175760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610c2f575080515160208201515114155b80610c4c5750604081015151815151610c499060016145d7565b14155b15610c6a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610caf57610caf6145ea565b60200260200101516001600160a01b031614610cdd57604086015186515181518110610653576106536145ea565b6000610cf6876000015188602001518960400151612156565b9050610d0c87602001518289604001518c61279a565b93508784600081518110610d2257610d226145ea565b60200260200101511115610d445787846000815181106109b2576109b26145ea565b610da28760400151600081518110610d5e57610d5e6145ea565b60200260200101513383600081518110610d7a57610d7a6145ea565b602002602001015187600081518110610d9557610d956145ea565b6020026020010151612266565b6000610db98289602001518a604001518830612b70565b905089811015610de6576040516313fab00360e21b8152600481018b905260248101829052604401610584565b6108508782612706565b60008180421115610e1d5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580610e35575080515160208201515114155b80610e525750604081015151815151610e4f9060016145d7565b14155b15610e705760405163b91b4d4d60e01b815260040160405180910390fd5b6000610e89876000015188602001518960400151612156565b905060008760400151825181518110610ea457610ea46145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610efb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1f9190614600565b9050610f658960400151600081518110610f3b57610f3b6145ea565b60200260200101513385600081518110610f5757610f576145ea565b60200260200101518e612266565b610f79838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe69190614600565b610ff09190614619565b9550858a111561101d576040516313fab00360e21b8152600481018b905260248101879052604401610584565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad919061462c565b6001600160a01b0316336001600160a01b0316146110de57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661110e5760001981146110fb57806110fd565b475b90506111098282612e8d565b505050565b600019811461111d5780611185565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611161573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111859190614600565b90506111096001600160a01b038416838361328c565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611225573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611249919061462c565b95945050505050565b60008082804211156112805760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b60006112b38c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff1660016132f2565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156112f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611319919061462c565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611358579899985b600080611369848e8e8e8e306133df565b915091508261137957808261137c565b81815b80975081985050505050506113928c8786613541565b61139c8684612706565b50509850989650505050505050565b6000808080606080826113e06113c460208a018a614649565b6113d460408b0160208c01614649565b8a6040013560016132f2565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611420573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611444919061462c565b6001600160a01b031661145a60208a018a614649565b6001600160a01b0316146114815760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166114b860208a018a614649565b6001600160a01b03161480156114d15750348860600135145b15611504576114f56114e960408a0160208b01614649565b33838b60800135612266565b6114ff8134612ab9565b6115db565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661153e60408a0160208b01614649565b6001600160a01b03161480156115575750348860800135145b15611578576114f561156c60208a018a614649565b33838b60600135612266565b6115856020890189614649565b61159560408a0160208b01614649565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a401610584565b6115e58882613562565b949d939c50919a509850965090945092505050565b606081804211156116275760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b8451518590158061163f575080515160208201515114155b8061165c57506040810151518151516116599060016145d7565b14155b1561167a5760405163b91b4d4d60e01b815260040160405180910390fd5b6000611693876000015188602001518960400151612156565b90506116a987602001518289604001518c61279a565b935087846000815181106116bf576116bf6145ea565b602002602001015111156116e15787846000815181106109b2576109b26145ea565b6116fb8760400151600081518110610d5e57610d5e6145ea565b60006117128289602001518a60400151888b612b70565b905089811015610850576040516313fab00360e21b8152600481018b905260248101829052604401610584565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa15801561179c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117c09190614666565b91989097509095509350505050565b600081804211156117fc5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611814575080515160208201515114155b80611831575060408101515181515161182e9060016145d7565b14155b1561184f5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110611894576118946145ea565b60200260200101516001600160a01b0316146118c257604086015186515181518110610653576106536145ea565b60006118db876000015188602001518960400151612156565b90506118f78760400151600081518110610b7257610b726145ea565b61190c898289602001518a6040015130612f1f565b935083881115611939576040516313fab00360e21b81526004810189905260248101859052604401610584565b610bde8685612706565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f89060440161177f565b6000808080606080826119a06113c460208a018a614649565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a04919061462c565b6001600160a01b0316611a1a60208a018a614649565b6001600160a01b031614611a415760405163b33f8ab960e01b815260040160405180910390fd5b611a5161156c60208a018a614649565b6115db6114e960408a0160208b01614649565b60008180421115611a915760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611aa9575080515160208201515114155b80611ac65750604081015151815151611ac39060016145d7565b14155b15611ae45760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611b2557611b256145ea565b60200260200101516001600160a01b031614611b52578560400151600081518110610653576106536145ea565b6000611b6b876000015188602001518960400151612156565b9050611b9181600081518110611b8357611b836145ea565b602002602001015134612ab9565b611ba6348289602001518a604001518a612f1f565b935083881115611bd3576040516313fab00360e21b81526004810189905260248101859052604401610584565b505050949350505050565b6000808280421115611c0c5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6000611c1f8d8d8d61ffff1660016132f2565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c85919061462c565b6001600160a01b03168e6001600160a01b0316141590508015611ca6579899985b611cb4828c8c8c8c8c6133df565b90955093508015611cc3579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611d20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614600565b90505b92915050565b60008180421115611d7a5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b84515185901580611d92575080515160208201515114155b80611daf5750604081015151815151611dac9060016145d7565b14155b15611dcd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611e0e57611e0e6145ea565b60200260200101516001600160a01b031614611e3b578560400151600081518110610653576106536145ea565b6000611e54876000015188602001518960400151612156565b905060008760400151825181518110611e6f57611e6f6145ea565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611eea9190614600565b9050611f0283600081518110611b8357611b836145ea565b611f16838a602001518b604001518b612287565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015611f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f839190614600565b611f8d9190614619565b9550858a1115611fba576040516313fab00360e21b8152600481018b905260248101879052604401610584565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612025573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612049919061462c565b6001600160a01b0316336001600160a01b03161461207a57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906120b0903090899089908990899089906004016146f3565b600060405180830381600087803b1580156120ca57600080fd5b505af11580156120de573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612132573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d449190614733565b6060835167ffffffffffffffff81111561217257612172613d98565b60405190808252806020026020018201604052801561219b578160200160208202803683370190505b509050600080836000815181106121b4576121b46145ea565b6020026020010151905060005b835181101561225c578192508481600101815181106121e2576121e26145ea565b6020026020010151915061222a8383898481518110612203576122036145ea565b602002602001015189858151811061221d5761221d6145ea565b6020026020010151613a06565b84828151811061223c5761223c6145ea565b6001600160a01b03909216602092830291909101909101526001016121c1565b5050509392505050565b8015612281576122816001600160a01b038516848484613b06565b50505050565b6000806000806000866000815181106122a2576122a26145ea565b6020026020010151905060005b89518110156120de578981815181106122ca576122ca6145ea565b602002602001015192508881815181106122e6576122e66145ea565b60200260200101519450819550878160010181518110612308576123086145ea565b602002602001015191508951816001011461233f57898160010181518110612332576123326145ea565b6020026020010151612341565b865b9350600085600181111561235757612357614750565b036125fd57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561239d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123c1919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b031610156124f6576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa15801561243d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124619190614600565b0390506000612471828585613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156124d757600080fd5b505af11580156124eb573d6000803e3d6000fd5b5050505050506125f6565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612541573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125659190614600565b0390506000612575828486613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b1580156125db57600080fd5b505af11580156125ef573d6000803e3d6000fd5b5050505050505b50506126fe565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561264a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061266e919061462c565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af11580156126d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126fc9190614600565b505b6001016122af565b80600003612712575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561277457600080fd5b505af1158015612788573d6000803e3d6000fd5b505050506127968282612e8d565b5050565b6060825167ffffffffffffffff8111156127b6576127b6613d98565b6040519080825280602002602001820160405280156127df578160200160208202803683370190505b50905081818551815181106127f6576127f66145ea565b602090810291909101015283515b8015612ab057600084612818600184614619565b81518110612828576128286145ea565b602002602001015190506000876001846128429190614619565b81518110612852576128526145ea565b6020026020010151905060008760018561286c9190614619565b8151811061287c5761287c6145ea565b602002602001015190506000600181111561289957612899614750565b8260018111156128ab576128ab614750565b036129cd57600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156128f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612915919061477d565b506001600160701b031691506001600160701b0316915088868151811061293e5761293e6145ea565b60200260200101516001600160a01b0316856001600160a01b0316111561296157905b6000878781518110612975576129756145ea565b60200260200101519050612994838383613c159092919063ffffffff16565b6001600160801b0316886129a960018a614619565b815181106129b9576129b96145ea565b602002602001018181525050505050612a9a565b612a66818686815181106129e3576129e36145ea565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a57919061462c565b6001600160a01b03161461173f565b50506001600160801b031685612a7d600187614619565b81518110612a8d57612a8d6145ea565b6020026020010181815250505b5050508080612aa8906147c2565b915050612804565b50949350505050565b80600003612ac5575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612b2057600080fd5b505af1158015612b34573d6000803e3d6000fd5b506127969350506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691508490508361328c565b60008060008060008088600081518110612b8c57612b8c6145ea565b6020026020010151905060005b8b51811015612e7e578b8181518110612bb457612bb46145ea565b602002602001015193508a8181518110612bd057612bd06145ea565b60200260200101519250819550898160010181518110612bf257612bf26145ea565b602002602001015191508b518160010114612c29578b8160010181518110612c1c57612c1c6145ea565b6020026020010151612c2b565b875b94506000836001811115612c4157612c41614750565b03612d4c57888160010181518110612c5b57612c5b6145ea565b60200260200101519650816001600160a01b0316866001600160a01b03161015612cff5760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612ce257600080fd5b505af1158015612cf6573d6000803e3d6000fd5b50505050612e76565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612cc8565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db0919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612e4a918916906353c059a0906044015b6020604051808303816000875af1158015612e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e369190614600565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612e6e57809950612e72565b8199505b5050505b600101612b99565b50505050505095945050505050565b80600003612e99575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114612ee6576040519150601f19603f3d011682016040523d82523d6000602084013e612eeb565b606091505b50509050806111095760405163047b96f760e41b81526001600160a01b038416600482015260248101839052604401610584565b60008060008060008087600081518110612f3b57612f3b6145ea565b602002602001015190508a955060005b8a51811015612e7e578a8181518110612f6657612f666145ea565b60200260200101519250898181518110612f8257612f826145ea565b60200260200101519450819550888160010181518110612fa457612fa46145ea565b602002602001015191508a518160010114612fdb578a8160010181518110612fce57612fce6145ea565b6020026020010151612fdd565b875b93506000856001811115612ff357612ff3614750565b036131ad57600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613039573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061305d919061477d565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561311c57613099898383613b7b565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156130ff57600080fd5b505af1158015613113573d6000803e3d6000fd5b505050506131a6565b613127898284613b7b565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561318d57600080fd5b505af11580156131a1573d6000803e3d6000fd5b505050505b5050613284565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156131ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613211919061462c565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052878316602483015292506000918291613258918816906353c059a090604401612df3565b6001600160801b031691506001600160801b03169150821561327c57809950613280565b8199505b5050505b600101612f4b565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526122818482613cb4565b60405163704037bd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa15801561336c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061339091906147d9565b6020015190506001600160a01b0381166133d757604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b949350505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613416949392919061485e565b6000604051808303816000875af1158015613435573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261345d919081019061489c565b905060005b81518110156134f157613494828281518110613480576134806145ea565b60200260200101516001600160801b031690565b6134a7906001600160801b0316856145d7565b93506134cc8282815181106134be576134be6145ea565b602002602001015160801c90565b6134df906001600160801b0316846145d7565b92506134ea81614922565b9050613462565b50878310806134ff57508682105b15613535576040516318ccfb7760e11b815260048101899052602481018490526044810188905260648101839052608401610584565b50965096945050505050565b8060000361354e57505050565b6111096001600160a01b038416838361328c565b600080600080606080876101c001358042111561359b5760405163dae7ca7d60e01b815260048101829052426024820152604401610584565b6135a96101408a018a61493b565b90506135b96101208b018b61493b565b90501415806135e657506135d16101608a018a61493b565b90506135e16101208b018b61493b565b905014155b156136045760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613620575062ffffff6101008a0135115b1561364f5760405163197a55c760e11b815260e08a013560048201526101008a01356024820152604401610584565b600061365f6101208b018b61493b565b905067ffffffffffffffff81111561367957613679613d98565b6040519080825280602002602001820160405280156136a2578160200160208202803683370190505b5090506136b36101208b018b61493b565b905067ffffffffffffffff8111156136cd576136cd613d98565b6040519080825280602002602001820160405280156136f6578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613739573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061375d9190614733565b62ffffff169050808b61010001358c60e0013501108061378757508a60e001358b61010001358201105b156137bd57604051637d50edab60e11b815260e08c013560048201526101008c0135602482015260448101829052606401610584565b60005b82518110156138c05760006137d96101208e018e61493b565b838181106137e9576137e96145ea565b90506020020135830190506000811280613805575062ffffff81115b15613826576040516370a82e6160e11b815260048101829052602401610584565b80878381518110613839576138396145ea565b602090810291909101015261389a6138556101408f018f61493b565b84818110613865576138656145ea565b905060200201358e80610160019061387d919061493b565b8581811061388d5761388d6145ea565b9050602002013583613d24565b8483815181106138ac576138ac6145ea565b6020908102919091010152506001016137c0565b50506000808a6001600160a01b031663383d15c58d6101800160208101906138e89190614649565b858f6101a00160208101906138fd9190614649565b6040518463ffffffff1660e01b815260040161391b93929190614985565b6000604051808303816000875af115801561393a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261396291908101906149e9565b9650909250905060006139758383613d5e565b6001600160801b0381169b50608081901c9a50905060a08d01358b108061399f57508c60c001358a105b156139db576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b9052608401610584565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613a1b57613a1b614750565b03613afa5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613a8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ab2919061462c565b90506001600160a01b038116613af557604051636b2471d160e11b81526001600160a01b0380871660048301528516602482015260448101849052606401610584565b6133d7565b611249858585856132f2565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052613b748582613cb4565b5050505050565b600083600003613b9e5760405163b229ed3360e01b815260040160405180910390fd5b821580613ba9575081155b15613bc7576040516398c59a2960e01b815260040160405180910390fd5b6000613bd5856103e5614a8f565b90506000613be38483614a8f565b9050600082613bf4876103e8614a8f565b613bfe91906145d7565b9050613c0a8183614aa6565b979650505050505050565b600083600003613c385760405163b229ed3360e01b815260040160405180910390fd5b821580613c43575081155b15613c61576040516398c59a2960e01b815260040160405180910390fd5b6000613c6d8585614a8f565b613c79906103e8614a8f565b90506000613c878685614619565b613c93906103e5614a8f565b9050613c9f8183614aa6565b613caa9060016145d7565b9695505050505050565b600080600052602060008351602085016000875af19050808015613cf5573d8015613ce85760016000511483169250613cef565b843b151592505b50613d05565b3d15613d05573d6000803e3d6000fd5b50806111095760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681176133d7565b80820382811180613d7a57506001600160801b03808416908216115b15611d475760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613dd157613dd1613d98565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613e0057613e00613d98565b604052919050565b600067ffffffffffffffff821115613e2257613e22613d98565b5060051b60200190565b600082601f830112613e3d57600080fd5b81356020613e52613e4d83613e08565b613dd7565b82815260059290921b84018101918181019086841115613e7157600080fd5b8286015b84811015613e8c5780358352918301918301613e75565b509695505050505050565b6001600160a01b0381168114613eac57600080fd5b50565b8035613eba81613e97565b919050565b600082601f830112613ed057600080fd5b81356020613ee0613e4d83613e08565b82815260059290921b84018101918181019086841115613eff57600080fd5b8286015b84811015613e8c578035613f1681613e97565b8352918301918301613f03565b600060608284031215613f3557600080fd5b613f3d613dae565b9050813567ffffffffffffffff80821115613f5757600080fd5b613f6385838601613e2c565b8352602091508184013581811115613f7a57600080fd5b8401601f81018613613f8b57600080fd5b8035613f99613e4d82613e08565b81815260059190911b82018401908481019088831115613fb857600080fd5b928501925b82841015613fe457833560028110613fd55760008081fd5b82529285019290850190613fbd565b808688015250505050604084013591508082111561400157600080fd5b5061400e84828501613ebf565b60408301525092915050565b600080600080600060a0868803121561403257600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561405757600080fd5b61406388828901613f23565b935050606086013561407481613e97565b949793965091946080013592915050565b6000806000806080858703121561409b57600080fd5b84359350602085013567ffffffffffffffff8111156140b957600080fd5b6140c587828801613f23565b93505060408501356140d681613e97565b9396929550929360600135925050565b600081518084526020808501945080840160005b83811015614116578151875295820195908201906001016140fa565b509495945050505050565b602081526000611d4460208301846140e6565b60008060006060848603121561414957600080fd5b833561415481613e97565b9250602084013561416481613e97565b929592945050506040919091013590565b62ffffff81168114613eac57600080fd5b61ffff81168114613eac57600080fd5b8035613eba81614186565b600080600080608085870312156141b757600080fd5b84356141c281613e97565b935060208501356141d281613e97565b925060408501356141e281614175565b915060608501356141f281614186565b939692955090935050565b600080600080600080600080610100898b03121561421a57600080fd5b883561422581613e97565b9750602089013561423581614186565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561426057600080fd5b61426c8c838d01613e2c565b955060a08b013591508082111561428257600080fd5b5061428f8b828c01613e2c565b93505060c08901356142a081613e97565b8092505060e089013590509295985092959890939650565b6000602082840312156142ca57600080fd5b813567ffffffffffffffff8111156142e157600080fd5b82016101e081850312156142f457600080fd5b9392505050565b86815285602082015284604082015283606082015260c06080820152600061432660c08301856140e6565b82810360a084015261433881856140e6565b9998505050505050505050565b6001600160801b0381168114613eac57600080fd5b8015158114613eac57600080fd5b60008060006060848603121561437d57600080fd5b833561438881613e97565b9250602084013561439881614345565b915060408401356143a88161435a565b809150509250925092565b60008060008060008060008060006101208a8c0312156143d257600080fd5b89356143dd81613e97565b985060208a01356143ed81613e97565b97506143fb60408b01614196565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561442657600080fd5b6144328d838e01613e2c565b955060c08c013591508082111561444857600080fd5b506144558c828d01613e2c565b93505061446460e08b01613eaf565b91506101008a013590509295985092959850929598565b6000806040838503121561448e57600080fd5b823561449981613e97565b915060208301356144a981614175565b809150509250929050565b60008083601f8401126144c657600080fd5b50813567ffffffffffffffff8111156144de57600080fd5b6020830191508360208260051b85010111156144f957600080fd5b9250929050565b6000806000806000806080878903121561451957600080fd5b863561452481613e97565b9550602087013561453481613e97565b9450604087013567ffffffffffffffff8082111561455157600080fd5b61455d8a838b016144b4565b9096509450606089013591508082111561457657600080fd5b5061458389828a016144b4565b979a9699509497509295939492505050565b600080604083850312156145a857600080fd5b82356145b381613e97565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611d4757611d476145c1565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561461257600080fd5b5051919050565b81810381811115611d4757611d476145c1565b60006020828403121561463e57600080fd5b81516142f481613e97565b60006020828403121561465b57600080fd5b81356142f481613e97565b60008060006060848603121561467b57600080fd5b835161468681614345565b602085015190935061469781614345565b60408501519092506143a881614345565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156146da57600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b038089168352808816602084015250608060408301526147206080830186886146a8565b82810360608401526143388185876146a8565b60006020828403121561474557600080fd5b81516142f481614175565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613eba57600080fd5b60008060006060848603121561479257600080fd5b61479b84614766565b92506147a960208501614766565b9150604084015163ffffffff811681146143a857600080fd5b6000816147d1576147d16145c1565b506000190190565b6000608082840312156147eb57600080fd5b6040516080810181811067ffffffffffffffff8211171561480e5761480e613d98565b604052825161481c81614186565b8152602083015161482c81613e97565b6020820152604083015161483f8161435a565b604082015260608301516148528161435a565b60608201529392505050565b60006001600160a01b0380871683528086166020840152506080604083015261488a60808301856140e6565b8281036060840152613c0a81856140e6565b600060208083850312156148af57600080fd5b825167ffffffffffffffff8111156148c657600080fd5b8301601f810185136148d757600080fd5b80516148e5613e4d82613e08565b81815260059190911b8201830190838101908783111561490457600080fd5b928401925b82841015613c0a57835182529284019290840190614909565b600060018201614934576149346145c1565b5060010190565b6000808335601e1984360301811261495257600080fd5b83018035915067ffffffffffffffff82111561496d57600080fd5b6020019150600581901b36038213156144f957600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156149d0578551835294830194918301916001016149b4565b5050809450505080851660408501525050949350505050565b6000806000606084860312156149fe57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614a2457600080fd5b8501601f81018713614a3557600080fd5b8051614a43613e4d82613e08565b81815260059190911b82018301908381019089831115614a6257600080fd5b928401925b82841015614a8057835182529284019290840190614a67565b80955050505050509250925092565b8082028115828204841417611d4757611d476145c1565b600082614ac357634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a75566c1a48ecb1a59038963081bd2fb270830ebc578f6dde060037597b3b38d64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b229ed3360e01b815260040160405180910390fd5b821580611e40575081155b15611e5e576040516398c59a2960e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b229ed3360e01b815260040160405180910390fd5b821580611eda575081155b15611ef8576040516398c59a2960e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b229ed3360e01b815260040160405180910390fd5b821580611f3b575081155b15611f59576040516398c59a2960e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc57604051630df4665760e21b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b576040516304cda58760e51b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea264697066735822122089625b3f677708ef8d8e8350bf945a8f12b2fdcdf5d9fe3e4307be5414ab829864736f6c63430008140033a2646970667358221220847ef192e043173b8206f255429191e29f19b69dd9cccca5701ebd87ac0c451c64736f6c63430008140033",
    "sourceMap": "591:11311:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:149:102;;;;;;:::i;:::-;-1:-1:-1;;;;;;5688:41:102;-1:-1:-1;;;5688:41:102;;5587:149;;;;470:14:131;;463:22;445:41;;433:2;418:18;5587:149:102;;;;;;;;854:2676:105;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;3360:151::-;;;:::i;:::-;;;;;;;:::i;8070:1929:105:-;;;:::i;3536:335::-;;;:::i;3221:133:6:-;;;:::i;2922:141::-;;;:::i;12007:168:102:-;;;;;;:::i;:::-;;:::i;:::-;;;4249:25:131;;;4237:2;4222:18;12007:168:102;4103:177:131;4236:1927:105;;;:::i;10005:1895::-;;;:::i;2738:178:6:-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3877:353:105:-;;;:::i;12181:205:102:-;;;;;;:::i;:::-;;:::i;:::-;;;7355:8:131;7343:21;;;7325:40;;7313:2;7298:18;12181:205:102;7181:190:131;3069:146:6;;;:::i;10032:1171:102:-;;;;;;:::i;:::-;;:::i;2157:141:6:-;;;:::i;12392:134:102:-;;;;;;:::i;:::-;;:::i;1243:204:2:-;;;:::i;2304:142:6:-;;;:::i;6169:1895:105:-;;;:::i;11209:792:102:-;;;;;;:::i;:::-;;:::i;854:2676:105:-;917:22;;-1:-1:-1;;;917:22:105;;9751:2:131;917:22:105;;;9733:21:131;9790:1;9770:18;;;9763:29;9828:11;9808:18;;;9801:39;897:19:105;;;;;;917:9;;9857:18:131;;917:22:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:22:105;;;;;;;;;;;;:::i;:::-;941:8;897:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;960:13;:11;:13::i;:::-;1124:4;;1013;;1057;;1111:60;;-1:-1:-1;;;;;1124:4:105;1139;1146:24;1057:4;1146:2;:24;:::i;:::-;1111:4;:60::i;:::-;1194:4;;1181:60;;-1:-1:-1;;;;;1194:4:105;1209;1216:24;1221:19;1216:2;:24;:::i;1181:60::-;1264:7;;1251:63;;-1:-1:-1;;;;;1264:7:105;1282:4;1289:24;1294:19;1289:2;:24;:::i;1251:63::-;1337:4;;1324:60;;-1:-1:-1;;;;;1337:4:105;1352;1359:24;1364:19;1359:2;:24;:::i;1324:60::-;1407:3;;1394:59;;-1:-1:-1;;;;;1407:3:105;1421:4;1428:24;1433:19;1428:2;:24;:::i;1394:59::-;1495:8;;1538:4;;1565;;-1:-1:-1;;;;;1495:8:105;;;;:21;;1538:4;;;1565;1584:22;1605:1;1584:18;:22;:::i;:::-;1639:18;1671:1;;1709:4;1728:19;:15;1746:1;1728:19;:::i;:::-;1495:262;;;;;;-1:-1:-1;;;;;;1495:262:105;;;-1:-1:-1;;;;;12910:15:131;;;1495:262:105;;;12892:34:131;12962:15;;;12942:18;;;12935:43;12994:18;;;12987:34;;;;13037:18;;;13030:34;;;;13080:19;;;13073:35;;;;13124:19;;;13117:35;13189:15;;;13168:19;;;13161:44;13221:19;;;13214:35;;;;12803:19;;1495:262:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1768:8:105;;1811:7;;1841:4;;-1:-1:-1;;;;;1768:8:105;;;;-1:-1:-1;1768:21:105;;1811:7;;;;1841:4;1860:19;;1768:8;;1985:4;2004:19;:15;1768:8;2004:19;:::i;:::-;1768:265;;;;;;-1:-1:-1;;;;;;1768:265:105;;;-1:-1:-1;;;;;12910:15:131;;;1768:265:105;;;12892:34:131;12962:15;;;12942:18;;;12935:43;12994:18;;;12987:34;;;;13037:18;;;13030:34;;;;13080:19;;;13073:35;;;;13124:19;;;13117:35;13189:15;;;13168:19;;;13161:44;13221:19;;;13214:35;;;;12803:19;;1768:265:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2044:8:105;;2087:4;;2114;;-1:-1:-1;;;;;2044:8:105;;;;-1:-1:-1;2044:21:105;;2087:4;;;;2114;2133:22;2154:1;2133:18;:22;:::i;:::-;2188:18;2220:1;;2258:4;2277:19;:15;2295:1;2277:19;:::i;:::-;2044:262;;;;;;-1:-1:-1;;;;;;2044:262:105;;;-1:-1:-1;;;;;12910:15:131;;;2044:262:105;;;12892:34:131;12962:15;;;12942:18;;;12935:43;12994:18;;;12987:34;;;;13037:18;;;13030:34;;;;13080:19;;;13073:35;;;;13124:19;;;13117:35;13189:15;;;13168:19;;;13161:44;13221:19;;;13214:35;;;;12803:19;;2044:262:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2317:7:105;;;2338:4;;2344;;2317:58;;-1:-1:-1;;;2317:58:105;;-1:-1:-1;;;;;2338:4:105;;;2317:58;;;13899:34:131;2344:4:105;;;13949:18:131;;;13942:43;;;;987:7:102;14001:18:131;;;13994:49;1142:2:102;14059:18:131;;;14052:47;2317:7:105;;-1:-1:-1;2317:20:105;;13810:19:131;;2317:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2404:7:105;;2425;;2434:4;;-1:-1:-1;;;;;2404:7:105;;;;:20;;2425:7;;;2434:4;2440:11;987:7:102;2449:2:105;2440:11;:::i;:::-;2404:66;;-1:-1:-1;;;;;;2404:66:105;;;;;;;-1:-1:-1;;;;;13917:15:131;;;2404:66:105;;;13899:34:131;13969:15;;;;13949:18;;;13942:43;14033:8;14021:21;14001:18;;;13994:49;1142:2:102;14059:18:131;;;14052:47;13810:19;;2404:66:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2502:7:105;;;2523:4;;2529;;2502:58;;-1:-1:-1;;;2502:58:105;;-1:-1:-1;;;;;2523:4:105;;;2502:58;;;13899:34:131;2529:4:105;;;13949:18:131;;;13942:43;;;;987:7:102;14001:18:131;;;13994:49;1142:2:102;14059:18:131;;;14052:47;2502:7:105;;:20;;13810:19:131;;2502:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2589:7:105;;2610:3;;2615:4;;-1:-1:-1;;;;;2589:7:105;;;;:20;;2610:3;;;2615:4;2621:11;987:7:102;2630:2:105;2621:11;:::i;:::-;2589:62;;-1:-1:-1;;;;;;2589:62:105;;;;;;;-1:-1:-1;;;;;13917:15:131;;;2589:62:105;;;13899:34:131;13969:15;;;;13949:18;;;13942:43;14033:8;14021:21;14001:18;;;13994:49;1142:2:102;14059:18:131;;;14052:47;13810:19;;2589:62:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2805:4:105;;2811;;2711:56;;2782:69;;-1:-1:-1;;;;;2805:4:105;;;;2811;2817:19;987:7:102;2846:1:105;2711:56;2782:22;:69::i;:::-;2861:6;;:40;;-1:-1:-1;;;2861:40:105;;2711:140;;-1:-1:-1;;;;;;2861:6:105;;:19;;:40;;2711:140;;2861:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2861:40:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2957:7:105;;2966:4;;2934:76;;-1:-1:-1;;;;;;2957:7:105;;;;-1:-1:-1;2966:4:105;;-1:-1:-1;2972:18:105;;-1:-1:-1;2992:11:105;987:7:102;3001:2:105;2992:11;:::i;:::-;3005:1;3008;2934:22;:76::i;:::-;3020:6;;:40;;-1:-1:-1;;;3020:40:105;;2912:98;;-1:-1:-1;;;;;;3020:6:105;;:19;;:40;;2912:98;;3020:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3020:40:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3116:4:105;;3122;;3093:69;;-1:-1:-1;;;;;;3116:4:105;;;;-1:-1:-1;3122:4:105;;-1:-1:-1;3128:19:105;;-1:-1:-1;987:7:102;3157:1:105;3116:4;3093:22;:69::i;:::-;3172:6;;:40;;-1:-1:-1;;;3172:40:105;;3071:91;;-1:-1:-1;;;;;;3172:6:105;;:19;;:40;;3071:91;;3172:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3172:40:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3268:3:105;;3273:4;;3245:73;;-1:-1:-1;;;;;;3268:3:105;;;;-1:-1:-1;3273:4:105;;-1:-1:-1;3279:19:105;;-1:-1:-1;3300:11:105;987:7:102;3309:2:105;3300:11;:::i;3245:73::-;3328:6;;:40;;-1:-1:-1;;;3328:40:105;;3223:95;;-1:-1:-1;;;;;;3328:6:105;;:19;;:40;;3223:95;;3328:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3328:40:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3424:3:105;;3429:4;;3401:72;;-1:-1:-1;;;;;;3424:3:105;;;;-1:-1:-1;3429:4:105;;-1:-1:-1;3435:18:105;;-1:-1:-1;3455:11:105;987:7:102;3464:2:105;3455:11;:::i;3401:72::-;3483:6;;:40;;-1:-1:-1;;;3483:40:105;;3379:94;;-1:-1:-1;;;;;;3483:6:105;;:19;;:40;;3379:94;;3483:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3483:40:105;;;;;;;;;;;;:::i;:::-;;;;;;;887:2643;;;854:2676::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;8070:1929:105:-;8213:16;;;8227:1;8213:16;;;;;;;;8188:22;;8213:16;;;;;;;;-1:-1:-1;;8258:4:105;;8239:8;;;;-1:-1:-1;;;;;;8258:4:105;;8239:8;;-1:-1:-1;8258:4:105;;8239:8;;;;:::i;:::-;-1:-1:-1;;;;;8239:24:105;;;:8;;;;;;;;;:24;8292:4;;8273:8;;8292:4;;;8273:5;;8292:4;;8273:8;;;;;;:::i;:::-;-1:-1:-1;;;;;8273:24:105;;;:8;;;;;;;;;:24;8397:6;;:48;;-1:-1:-1;;;8397:48:105;;8353:4;;8334:16;;8397:6;;:31;;:48;;8429:5;;8353:4;;8397:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8397:48:105;;;;;;;;;;;;:::i;:::-;8367:78;;8456:57;8465:5;:13;;;8479:1;8465:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8456:57:105;8483:8;-1:-1:-1;;;;;8456:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;8523:76;8541:5;:13;;;8555:1;8541:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8523:76:105;8559:8;8570:1;8559:12;;;;:::i;:::-;-1:-1:-1;;;;;8523:76:105;8573:4;8523:76;;;;;;;;;;;;;;;;;:17;:76::i;:::-;8609:51;8618:5;:14;;;8633:1;8618:17;;;;;;;;:::i;:::-;;;;;;;8637:1;8609:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;8670:60;8687:5;:14;;;8702:1;8687:17;;;;;;;;:::i;:::-;;;;;;;8679:26;;;;;;;;:::i;:::-;8707:1;8670:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;8802:6;;:48;;-1:-1:-1;;;8802:48:105;;8778:6;;-1:-1:-1;;;;;;8802:6:105;;;;:31;;:48;;8834:5;;8778:6;;8802:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8802:48:105;;;;;;;;;;;;:::i;:::-;8794:56;;8861:57;8870:5;:13;;;8884:1;8870:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8861:57:105;8888:8;-1:-1:-1;;;;;8861:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;8928:72;8946:5;:13;;;8960:1;8946:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8928:72:105;8964:8;-1:-1:-1;;;;;8928:72:105;8974:4;8928:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;9010:66;9019:5;:14;;;9034:1;9019:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;9010:66:105;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;9086:60;9103:5;:14;;;9118:1;9103:17;;;;;;;;:::i;:::-;;;;;;;9095:26;;;;;;;;:::i;:::-;9123:1;9086:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;9226:6;;:50;;-1:-1:-1;;;9226:50:105;;9204:4;;-1:-1:-1;;;;;9226:6:105;;:32;;:50;;9259:5;;9204:4;;9226:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9226:50:105;;;;;;;;;;;;:::i;:::-;9218:58;;9287:77;9305:5;:13;;;9319:1;9305:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9287:77:105;9335:1;9323:9;:13;;;;:::i;:::-;-1:-1:-1;;;;;9287:77:105;9338:4;9287:77;;;;;;;;;;;;;;;;;:17;:77::i;:::-;9374:59;9383:5;:13;;;9397:1;9383:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9374:59:105;9401:9;-1:-1:-1;;;;;9374:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;9443:52;9452:5;:14;;;9467:1;9452:17;;;;;;;;:::i;:::-;;;;;;;9471:1;9443:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;9505:61;9522:5;:14;;;9537:1;9522:17;;;;;;;;:::i;:::-;;;;;;;9514:26;;;;;;;;:::i;:::-;9542:1;9505:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;9640:6:105;;:50;;-1:-1:-1;;;9640:50:105;;9616:6;;-1:-1:-1;;;;;9640:6:105;;:32;;:50;;9673:5;;9616:6;;9640:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9640:50:105;;;;;;;;;;;;:::i;:::-;9632:58;;9701:74;9719:5;:13;;;9733:1;9719:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9701:74:105;9737:9;-1:-1:-1;;;;;9701:74:105;9748:4;9701:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;9785:59;9794:5;:13;;;9808:1;9794:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9785:59:105;9812:9;-1:-1:-1;;;;;9785:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;9854:67;9863:5;:14;;;9878:1;9863:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;9854:67:105;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;9931:61;9948:5;:14;;;9963:1;9948:17;;;;;;;;:::i;:::-;;;;;;;9940:26;;;;;;;;:::i;:::-;9968:1;9931:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;8108:1891;;;;8070:1929::o;3536:335::-;3603:6;;:20;;;-1:-1:-1;;;3603:20:105;;;;3586:79;;-1:-1:-1;;;;;3603:6:105;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3634:6;;3586:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3634:6:105;;;;3586:8;:79::i;:::-;3692:6;;:21;;;-1:-1:-1;;;3692:21:105;;;;3675:98;;-1:-1:-1;;;;;3692:6:105;;:19;;:21;;;;;;;;;;;;;;:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;235:42:104;3675:98:105;;;;;;;;;;;;;;;;;:8;:98::i;:::-;3800:6;;:21;;;-1:-1:-1;;;3800:21:105;;;;3783:81;;-1:-1:-1;;;;;3800:6:105;;:19;;:21;;;;;;;;;;;;;;:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3832:7;;3783:81;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3832:7:105;;;;3783:8;:81::i;:::-;3536:335::o;3221:133:6:-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;12007:168:102:-;12078:7;12113:1;12104:6;:10;;;:24;;;;;12127:1;12118:6;:10;;;12104:24;:64;;12153:15;12162:6;12153;:15;:::i;:::-;12104:64;;;12149:1;12131:15;12140:6;12131;:15;:::i;:::-;:19;;;;:::i;:::-;12097:71;;;;12007:168;;;;;:::o;4236:1927:105:-;4377:16;;;4391:1;4377:16;;;;;;;;4352:22;;4377:16;;;;;;;;-1:-1:-1;;4422:4:105;;4403:8;;;;-1:-1:-1;;;;;;4422:4:105;;4403:8;;-1:-1:-1;4422:4:105;;4403:8;;;;:::i;:::-;-1:-1:-1;;;;;4403:24:105;;;:8;;;;;;;;;:24;4456:4;;4437:8;;4456:4;;;4437:5;;4456:4;;4437:8;;;;;;:::i;:::-;-1:-1:-1;;;;;4437:24:105;;;:8;;;;;;;;;:24;4561:6;;:48;;-1:-1:-1;;;4561:48:105;;4517:4;;4498:16;;4561:6;;:31;;:48;;4593:5;;4517:4;;4561:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4561:48:105;;;;;;;;;;;;:::i;:::-;4531:78;;4620:57;4629:5;:13;;;4643:1;4629:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4620:57:105;4647:8;-1:-1:-1;;;;;4620:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;4687:76;4705:5;:13;;;4719:1;4705:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4687:76:105;4723:8;4734:1;4723:12;;;;:::i;:::-;-1:-1:-1;;;;;4687:76:105;4737:4;4687:76;;;;;;;;;;;;;;;;;:17;:76::i;:::-;4773:51;4782:5;:14;;;4797:1;4782:17;;;;;;;;:::i;:::-;;;;;;;4801:1;4773:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;4834:60;4851:5;:14;;;4866:1;4851:17;;;;;;;;:::i;:::-;;;;;;;4843:26;;;;;;;;:::i;:::-;4871:1;4834:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;4966:6;;:48;;-1:-1:-1;;;4966:48:105;;4942:6;;-1:-1:-1;;;;;;4966:6:105;;;;:31;;:48;;4998:5;;4942:6;;4966:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4966:48:105;;;;;;;;;;;;:::i;:::-;4958:56;;5025:57;5034:5;:13;;;5048:1;5034:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5025:57:105;5052:8;-1:-1:-1;;;;;5025:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;5092:72;5110:5;:13;;;5124:1;5110:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5092:72:105;5128:8;-1:-1:-1;;;;;5092:72:105;5138:4;5092:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;5174:66;5183:5;:14;;;5198:1;5183:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;5174:66:105;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;5250:60;5267:5;:14;;;5282:1;5267:17;;;;;;;;:::i;:::-;;;;;;;5259:26;;;;;;;;:::i;:::-;5287:1;5250:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;5390:6;;:50;;-1:-1:-1;;;5390:50:105;;5368:4;;-1:-1:-1;;;;;5390:6:105;;:32;;:50;;5423:5;;5368:4;;5390:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5390:50:105;;;;;;;;;;;;:::i;:::-;5382:58;;5451:77;5469:5;:13;;;5483:1;5469:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5451:77:105;5499:1;5487:9;:13;;;;:::i;:::-;-1:-1:-1;;;;;5451:77:105;5502:4;5451:77;;;;;;;;;;;;;;;;;:17;:77::i;:::-;5538:59;5547:5;:13;;;5561:1;5547:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5538:59:105;5565:9;-1:-1:-1;;;;;5538:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;5607:52;5616:5;:14;;;5631:1;5616:17;;;;;;;;:::i;:::-;;;;;;;5635:1;5607:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;5669:61;5686:5;:14;;;5701:1;5686:17;;;;;;;;:::i;:::-;;;;;;;5678:26;;;;;;;;:::i;:::-;5706:1;5669:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;5804:6:105;;:50;;-1:-1:-1;;;5804:50:105;;5780:6;;-1:-1:-1;;;;;5804:6:105;;:32;;:50;;5837:5;;5780:6;;5804:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5804:50:105;;;;;;;;;;;;:::i;:::-;5796:58;;5865:74;5883:5;:13;;;5897:1;5883:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5865:74:105;5901:9;-1:-1:-1;;;;;5865:74:105;5912:4;5865:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;5949:59;5958:5;:13;;;5972:1;5958:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5949:59:105;5976:9;-1:-1:-1;;;;;5949:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;6018:67;6027:5;:14;;;6042:1;6027:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;6018:67:105;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;6095:61;6112:5;:14;;;6127:1;6112:17;;;;;;;;:::i;:::-;;;;;;;6104:26;;;;;;;;:::i;:::-;6132:1;6095:61;;;;;;;;;;;;;;;;;:8;:61::i;10005:1895::-;10123:16;;;10137:1;10123:16;;;;;;;;10098:22;;10123:16;;;;;;;;-1:-1:-1;;10168:3:105;;10149:8;;;;-1:-1:-1;;;;;;10168:3:105;;10149:8;;-1:-1:-1;10168:3:105;;10149:8;;;;:::i;:::-;-1:-1:-1;;;;;10149:23:105;;;:8;;;;;;;;;:23;10201:4;;10182:8;;10201:4;;;10182:5;;10201:4;;10182:8;;;;;;:::i;:::-;-1:-1:-1;;;;;10182:24:105;;;:8;;;;;;;;;:24;10306:6;;:48;;-1:-1:-1;;;10306:48:105;;10262:4;;10243:16;;10306:6;;:31;;:48;;10338:5;;10262:4;;10306:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10306:48:105;;;;;;;;;;;;:::i;:::-;10276:78;;10365:57;10374:5;:13;;;10388:1;10374:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10365:57:105;10392:8;-1:-1:-1;;;;;10365:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10432;10441:5;:13;;;10455:1;10441:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10432:57:105;10459:8;-1:-1:-1;;;;;10432:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10499:66;10508:5;:14;;;10523:1;10508:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;10499:66:105;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;10575:60;10592:5;:14;;;10607:1;10592:17;;;;;;;;:::i;:::-;;;;;;;10584:26;;;;;;;;:::i;:::-;10612:1;10575:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;10707:6;;:48;;-1:-1:-1;;;10707:48:105;;10683:6;;-1:-1:-1;;;;;;10707:6:105;;;;:31;;:48;;10739:5;;10683:6;;10707:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10707:48:105;;;;;;;;;;;;:::i;:::-;10699:56;;10766:57;10775:5;:13;;;10789:1;10775:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10766:57:105;10793:8;-1:-1:-1;;;;;10766:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10833:72;10851:5;:13;;;10865:1;10851:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10833:72:105;10869:8;-1:-1:-1;;;;;10833:72:105;10879:4;10833:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;10915:66;10924:5;:14;;;10939:1;10924:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;10915:66:105;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;10991:60;11008:5;:14;;;11023:1;11008:17;;;;;;;;:::i;:::-;;;;;;;11000:26;;;;;;;;:::i;:::-;11028:1;10991:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;11131:6;;:50;;-1:-1:-1;;;11131:50:105;;11109:4;;-1:-1:-1;;;;;11131:6:105;;:32;;:50;;11164:5;;11109:4;;11131:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11131:50:105;;;;;;;;;;;;:::i;:::-;11123:58;;11192;11201:5;:13;;;11215:1;11201:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11192:58:105;11219:9;-1:-1:-1;;;;;11192:58:105;;;;;;;;;;;;;;;;;;:8;:58::i;:::-;11260:59;11269:5;:13;;;11283:1;11269:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11260:59:105;11287:9;-1:-1:-1;;;;;11260:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;11329:67;11338:5;:14;;;11353:1;11338:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;11329:67:105;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;11406:61;11423:5;:14;;;11438:1;11423:17;;;;;;;;:::i;:::-;;;;;;;11415:26;;;;;;;;:::i;:::-;11443:1;11406:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;11541:6:105;;:50;;-1:-1:-1;;;11541:50:105;;11517:6;;-1:-1:-1;;;;;11541:6:105;;:32;;:50;;11574:5;;11517:6;;11541:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11541:50:105;;;;;;;;;;;;:::i;:::-;11533:58;;11602:74;11620:5;:13;;;11634:1;11620:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11602:74:105;11638:9;-1:-1:-1;;;;;11602:74:105;11649:4;11602:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;11686:59;11695:5;:13;;;11709:1;11695:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11686:59:105;11713:9;-1:-1:-1;;;;;11686:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;11755:67;11764:5;:14;;;11779:1;11764:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;11755:67:105;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;11832:61;11849:5;:14;;;11864:1;11849:17;;;;;;;;:::i;:::-;;;;;;;11841:26;;;;;;;;:::i;:::-;11869:1;11832:61;;;;;;;;;;;;;;;;;:8;:61::i;2738:178:6:-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:353:105;3964:16;;;3978:1;3964:16;;;;;;;;;3924:22;;3964:16;;;;;;;;;;;-1:-1:-1;;3990:57:105;;-1:-1:-1;;;3990:57:105;;-1:-1:-1;;;3990:57:105;;;25634:52:131;3956:24:105;;-1:-1:-1;3990:15:105;;;;25607:18:131;;3990:57:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4057:6:105;;:44;;-1:-1:-1;;;4057:44:105;;-1:-1:-1;;;;;4057:6:105;;;;-1:-1:-1;4057:31:105;;-1:-1:-1;4057:44:105;;4089:5;;4096:4;;4057:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4057:44:105;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4111:57:105;;-1:-1:-1;;;4111:57:105;;-1:-1:-1;;;4111:57:105;;;25634:52:131;4111:15:105;;;;25607:18:131;;4111:57:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4178:6:105;;:45;;-1:-1:-1;;;4178:45:105;;-1:-1:-1;;;;;4178:6:105;;;;-1:-1:-1;4178:32:105;;-1:-1:-1;4178:45:105;;4211:5;;4218:4;;4178:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4178:45:105;;;;;;;;;;;;:::i;:::-;;3914:316;3877:353::o;12181:205:102:-;12259:6;;12290:12;12301:1;12290:12;;;;:::i;:::-;12277:25;;12326:1;12317:6;:10;;;:33;;12348:2;12317:33;;;12330:11;;;;:2;:11;:::i;:::-;:15;;12344:1;12330:15;:::i;:::-;12312:38;;12368:11;:2;:9;:11::i;:::-;12361:18;12181:205;-1:-1:-1;;;;;12181:205:102:o;3069:146:6:-;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10032:1171:102;10261:13;10277:6;-1:-1:-1;;;;;10277:16:102;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10261:34;;10305:13;10321:6;-1:-1:-1;;;;;10321:16:102;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10305:34;;10350:36;10363:6;10372:4;10378:7;10350:4;:36::i;:::-;10396;10409:6;10418:4;10424:7;10396:4;:36::i;:::-;10443:13;10459:28;10472:6;10480;10459:12;:28::i;:::-;10443:44;;10498:40;10555:5;10541:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10541:20:102;;10498:63;;10577:9;10572:412;10592:5;10588:1;:9;10572:412;;;10618:9;10630:26;10636:8;10646:1;10649:6;10630:5;:26::i;:::-;10618:38;;10671:15;10695:8;10689:14;;:2;:14;;;;:28;;;;;10716:1;10707:6;:10;;;10689:28;:74;;10762:1;10689:74;;;10720:39;10721:28;;;;357:4:68;10721:28:102;:::i;:::-;10720:37;:39::i;:::-;10671:92;;10777:15;10801:8;10795:14;;:2;:14;;;;:28;;;;;10822:1;10813:6;:10;;;10795:28;:74;;10868:1;10795:74;;;10826:39;10827:28;;;;357:4:68;10827:28:102;:::i;10826:39::-;10777:92;;10913:60;10950:8;10960;10970:2;10913:36;:60::i;:::-;10884:23;10908:1;10884:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;10604:380;;;10599:3;;;;:::i;:::-;;;10572:412;;;-1:-1:-1;10994:19:102;;-1:-1:-1;;;10994:19:102;;-1:-1:-1;;;;;27203:55:131;;10994:19:102;;;27185:74:131;10994:13:102;;;;27158:18:131;;10994:19:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11023:41:102;;-1:-1:-1;;;11023:41:102;;-1:-1:-1;;;;;27462:55:131;;;11023:41:102;;;27444:74:131;27534:18;;;27527:34;;;11023:15:102;;;-1:-1:-1;11023:15:102;;-1:-1:-1;27417:18:131;;11023:41:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11074:41:102;;-1:-1:-1;;;11074:41:102;;-1:-1:-1;;;;;27462:55:131;;;11074:41:102;;;27444:74:131;27534:18;;;27527:34;;;11074:15:102;;;;;27417:18:131;;11074:41:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11125:12:102;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11150:6;-1:-1:-1;;;;;11150:11:102;;11162:2;11166:23;11191:4;11150:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11150:46:102;;;;;;;;;;;;:::i;:::-;;;;10251:952;;;;10032:1171;;;;;;;;:::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12392:134:102;12493:7;;;:26;;-1:-1:-1;;;12493:26:102;;29472:6:131;29460:19;;12493:26:102;;;29442:38:131;12451:11:102;;-1:-1:-1;;;;;12493:7:102;;;;:17;;29415:18:131;12493:26:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12474:45;12392:134;-1:-1:-1;;;;;;;;;12392:134:102:o;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;:7;:39;;;27444:74:131;;;1398:17:2;27534:18:131;;;27527:34;1428:1:2;;1377:7;;27417:18:131;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;6169:1895:105:-;6313:16;;;6327:1;6313:16;;;;;;;;6288:22;;6313:16;;;;;;;;-1:-1:-1;;6358:7:105;;6339:8;;;;-1:-1:-1;;;;;;6358:7:105;;6339:8;;-1:-1:-1;6358:7:105;;6339:8;;;;:::i;:::-;-1:-1:-1;;;;;6339:27:105;;;:8;;;;;;;;;:27;6395:4;;6376:8;;6395:4;;;6376:5;;6395:4;;6376:8;;;;;;:::i;:::-;-1:-1:-1;;;;;6376:24:105;;;:8;;;;;;;;;:24;6500:6;;:48;;-1:-1:-1;;;6500:48:105;;6456:4;;6437:16;;6500:6;;:31;;:48;;6532:5;;6456:4;;6500:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6500:48:105;;;;;;;;;;;;:::i;:::-;6470:78;;6559:57;6568:5;:13;;;6582:1;6568:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6559:57:105;6586:8;-1:-1:-1;;;;;6559:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;6626;6635:5;:13;;;6649:1;6635:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6626:57:105;6653:8;-1:-1:-1;;;;;6626:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;6693:66;6702:5;:14;;;6717:1;6702:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;6693:66:105;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;6769:60;6786:5;:14;;;6801:1;6786:17;;;;;;;;:::i;:::-;;;;;;;6778:26;;;;;;;;:::i;:::-;6806:1;6769:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;6901:6;;:48;;-1:-1:-1;;;6901:48:105;;6877:6;;-1:-1:-1;;;;;;6901:6:105;;;;:31;;:48;;6933:5;;6877:6;;6901:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6901:48:105;;;;;;;;;;;;:::i;:::-;6893:56;;6960:57;6969:5;:13;;;6983:1;6969:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6960:57:105;6987:8;-1:-1:-1;;;;;6960:57:105;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;7027:72;7045:5;:13;;;7059:1;7045:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7027:72:105;7063:8;-1:-1:-1;;;;;7027:72:105;7073:4;7027:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;7109:51;7118:5;:14;;;7133:1;7118:17;;;;;;;;:::i;:::-;;;;;;;7137:1;7109:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;7170:60;7187:5;:14;;;7202:1;7187:17;;;;;;;;:::i;:::-;;;;;;;7179:26;;;;;;;;:::i;:::-;7207:1;7170:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;7310:6;;:50;;-1:-1:-1;;;7310:50:105;;7288:4;;-1:-1:-1;;;;;7310:6:105;;:32;;:50;;7343:5;;7288:4;;7310:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7310:50:105;;;;;;;;;;;;:::i;:::-;7302:58;;7371;7380:5;:13;;;7394:1;7380:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7371:58:105;7398:9;-1:-1:-1;;;;;7371:58:105;;;;;;;;;;;;;;;;;;:8;:58::i;:::-;7439:59;7448:5;:13;;;7462:1;7448:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7439:59:105;7466:9;-1:-1:-1;;;;;7439:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;7508:67;7517:5;:14;;;7532:1;7517:17;;;;;;;;:::i;:::-;;;;;;;1142:2:102;7508:67:105;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;7585:61;7602:5;:14;;;7617:1;7602:17;;;;;;;;:::i;:::-;;;;;;;7594:26;;;;;;;;:::i;:::-;7622:1;7585:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;7720:6:105;;:50;;-1:-1:-1;;;7720:50:105;;7696:6;;-1:-1:-1;;;;;7720:6:105;;:32;;:50;;7753:5;;7696:6;;7720:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7720:50:105;;;;;;;;;;;;:::i;:::-;7712:58;;7781:74;7799:5;:13;;;7813:1;7799:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7781:74:105;7817:9;-1:-1:-1;;;;;7781:74:105;7828:4;7781:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;7865:59;7874:5;:13;;;7888:1;7874:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7865:59:105;7892:9;-1:-1:-1;;;;;7865:59:105;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;7934:52;7943:5;:14;;;7958:1;7943:17;;;;;;;;:::i;:::-;;;;;;;7962:1;7934:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;7996:61;8013:5;:14;;;8028:1;8013:17;;;;;;;;:::i;:::-;;;;;;;8005:26;;;;;;;;:::i;:::-;8033:1;7996:61;;;;;;;;;;;;;;;;;:8;:61::i;11209:792:102:-;357:4:68;11430:13:102;:36;;11422:73;;;;-1:-1:-1;;;11422:73:102;;30823:2:131;11422:73:102;;;30805:21:131;30862:2;30842:18;;;30835:30;30901:26;30881:18;;;30874:54;30945:18;;11422:73:102;;;;;;;;;11506:13;11522:28;11535:6;11543;11522:12;:28::i;:::-;11506:44;;11561:20;11598:5;11584:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11584:20:102;;11561:43;;11614:24;11655:5;11641:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11641:20:102;;11614:47;;11677:9;11672:253;11692:5;11688:1;:9;11672:253;;;11718:9;11730:26;11736:8;11746:1;11749:6;11730:5;:26::i;:::-;11782;;-1:-1:-1;;;11782:26:102;;-1:-1:-1;;;;;31165:55:131;;;11782:26:102;;;31147:74:131;31269:8;31257:21;;31237:18;;;31230:49;11718:38:102;;-1:-1:-1;11770:9:102;;11782:16;;;;;31120:18:131;;11782:26:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11770:38;;11832:2;11823:11;;:3;11827:1;11823:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;11861:53;:1;11879:13;357:4:68;11861:17:102;:53::i;:::-;11848:7;11856:1;11848:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;11704:221;;11699:3;;;;:::i;:::-;;;11672:253;;;-1:-1:-1;11935:14:102;;-1:-1:-1;;;11935:14:102;;-1:-1:-1;;;;;27203:55:131;;11935:14:102;;;27185:74:131;11935:8:102;;;;27158:18:131;;11935:14:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11959:35:102;;-1:-1:-1;;;11959:35:102;;-1:-1:-1;;;;;11959:11:102;;;-1:-1:-1;11959:11:102;;-1:-1:-1;11959:35:102;;11971:4;;11977:2;;11981:3;;11986:7;;11959:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11959:35:102;;;;;;;;;;;;:::i;:::-;;11412:589;;;11209:792;;;;;;;:::o;2549:3032::-;2591:7;:45;;-1:-1:-1;;;;;;2591:45:102;590:42:104;2591:45:102;;;;;;2689:28;2591:7;2689:33;2685:118;;2754:7;;2772:13;;2738:7;;;;-1:-1:-1;;;;;2754:7:102;;;;2772:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2764:27:102;;;;;;;;;;;;;;;;;;;;;;;;2738:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2685:118;2858:1;2844:16;;;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;2844:16:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2837:4:102;:23;;-1:-1:-1;;;;;;2837:23:102;-1:-1:-1;;;;;2837:23:102;;;;;;;;;;2877:16;;2891:1;;2877:16;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;2877:16:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2870:4:102;:23;;-1:-1:-1;;;;;;2870:23:102;-1:-1:-1;;;;;2870:23:102;;;;;;;;;;2910:16;;2924:1;;2910:16;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;2910:16:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2903:4:102;:23;;-1:-1:-1;;;;;;2903:23:102;-1:-1:-1;;;;;2903:23:102;;;;;;;;;;2943:17;;2957:2;;2943:17;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;2943:17:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2936:4:102;:24;;-1:-1:-1;;;;;;2936:24:102;-1:-1:-1;;;;;2936:24:102;;;;;;;;;;2977:17;;2991:2;;2977:17;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;2977:17:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2970:4:102;:24;;-1:-1:-1;;;;;;2970:24:102;-1:-1:-1;;;;;2970:24:102;;;;;;;;;;3010:17;;3024:2;;3010:17;;;:::i;:::-;32874:4:131;32862:17;;;32844:36;;32832:2;32817:18;3010:17:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3004:3:102;:23;;-1:-1:-1;;;;;;3004:23:102;-1:-1:-1;;;;;3004:23:102;;;;;;;;;;3048:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3037:8:102;:37;;-1:-1:-1;;;;;;3037:37:102;-1:-1:-1;;;;;3037:37:102;;;;;;3125:7;;3108:37;;;-1:-1:-1;;;3108:37:102;;3125:7;;;;3108:37;;;33502:74:131;33592:18;;;33585:30;;;;33651:1;33631:18;;;33624:29;33689:9;33669:18;;;33662:37;3108:8:102;;;;33716:19:131;;3108:37:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3172:4:102;;3155:31;;;-1:-1:-1;;;3155:31:102;;-1:-1:-1;;;;;3172:4:102;;;3155:31;;;;33958:74:131;;;;34048:18;;;34041:30;;;;34087:18;;;34080:29;-1:-1:-1;;;34125:18:131;;;34118:34;3155:8:102;;-1:-1:-1;3155:8:102;;-1:-1:-1;34169:19:131;;3155:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3213:4:102;;3196:31;;;-1:-1:-1;;;3196:31:102;;-1:-1:-1;;;;;3213:4:102;;;3196:31;;;;34411:74:131;;;;34501:18;;;34494:30;;;;34540:18;;;34533:29;-1:-1:-1;;;34578:18:131;;;34571:34;3196:8:102;;-1:-1:-1;3196:8:102;;-1:-1:-1;34622:19:131;;3196:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3254:4:102;;3237:31;;;-1:-1:-1;;;3237:31:102;;-1:-1:-1;;;;;3254:4:102;;;3237:31;;;;34864:74:131;;;;34954:18;;;34947:30;;;;34993:18;;;34986:29;-1:-1:-1;;;35031:18:131;;;35024:34;3237:8:102;;-1:-1:-1;3237:8:102;;-1:-1:-1;35075:19:131;;3237:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3295:4:102;;3278:31;;;-1:-1:-1;;;3278:31:102;;-1:-1:-1;;;;;3295:4:102;;;3278:31;;;;35317:74:131;;;;35407:18;;;35400:30;;;;35446:18;;;35439:29;-1:-1:-1;;;35484:18:131;;;35477:34;3278:8:102;;-1:-1:-1;3278:8:102;;-1:-1:-1;35528:19:131;;3278:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3336:4:102;;3319:31;;;-1:-1:-1;;;3319:31:102;;-1:-1:-1;;;;;3336:4:102;;;3319:31;;;;35770:74:131;;;;35860:18;;;35853:30;;;;35899:18;;;35892:29;-1:-1:-1;;;35937:18:131;;;35930:34;3319:8:102;;-1:-1:-1;3319:8:102;;-1:-1:-1;35981:19:131;;3319:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3377:3:102;;3360:29;;;-1:-1:-1;;;3360:29:102;;-1:-1:-1;;;;;3377:3:102;;;3360:29;;;36223:74:131;36313:18;;;36306:30;36372:1;36352:18;;;36345:29;-1:-1:-1;;;36390:18:131;;;36383:33;3360:8:102;;-1:-1:-1;3360:8:102;;-1:-1:-1;36433:19:131;;3360:29:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3416:8:102;;3399:39;;;-1:-1:-1;;;3399:39:102;;-1:-1:-1;;;;;3416:8:102;;;3399:39;;;36675:74:131;36765:18;;;36758:30;36824:1;36804:18;;;36797:29;36862:10;36842:18;;;36835:38;3399:8:102;;-1:-1:-1;3399:8:102;;-1:-1:-1;36890:19:131;;3399:39:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3481:8:102;:57;;-1:-1:-1;;;;;;3481:57:102;;;325:42:104;3481:57:102;;;;3548:9;:58;;;;;235:42:104;3548:58:102;;;-1:-1:-1;;3653:46:102;;3667:3;;;;1694:4;;3653:46;;;:::i;:::-;-1:-1:-1;;;;;37217:15:131;;;37199:34;;37269:15;;;;37264:2;37249:18;;37242:43;37316:2;37301:18;;37294:34;37126:2;37111:18;3653:46:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3643:7:102;:56;;-1:-1:-1;;;;;;3643:56:102;-1:-1:-1;;;;;3643:56:102;;;;;;;;;3730:19;;;;;:::i;:::-;-1:-1:-1;;;;;27203:55:131;;;27185:74;;27173:2;27158:18;3730:19:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3709:18:102;:40;;-1:-1:-1;;;;;;3709:40:102;-1:-1:-1;;;;;3709:40:102;;;;;;;;;3785:7;;;:60;;-1:-1:-1;;;3785:60:102;;;;;27185:74:131;;;;3785:7:102;;;;:31;;27158:18:131;3785:60:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:30;:28;:30::i;:::-;3895:42;1142:2;3895:24;:42::i;:::-;4007:7;;4016:9;;4044:7;;3994:60;;-1:-1:-1;;;;;4007:7:102;;;;4016:9;;;;4044:7;;;;3994:60;;;:::i;:::-;-1:-1:-1;;;;;37928:15:131;;;37910:34;;37980:15;;;37975:2;37960:18;;37953:43;38032:15;;;38027:2;38012:18;;38005:43;37837:2;37822:18;3994:60:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3973:6:102;:81;;-1:-1:-1;;;;;;3973:81:102;-1:-1:-1;;;;;3973:81:102;;;;;;;;;4133:9;;4165:7;;4099:113;;4133:9;;;;4165:7;;3973:81;4099:113;;;:::i;:::-;-1:-1:-1;;;;;37928:15:131;;;37910:34;;37980:15;;;37975:2;37960:18;;37953:43;38032:15;;;38027:2;38012:18;;38005:43;37837:2;37822:18;4099:113:102;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4090:6:102;:122;;-1:-1:-1;;;;;;4090:122:102;-1:-1:-1;;;;;4090:122:102;;;;;;4276:6;;4259:35;;;-1:-1:-1;;;4259:35:102;;4276:6;;;;4259:35;;;38683:74:131;38773:18;;;38766:30;;;;38832:1;38812:18;;;38805:29;38870:8;38850:18;;;38843:36;4259:8:102;;;;38896:19:131;;4259:35:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4321:6:102;;4304:35;;;-1:-1:-1;;;4304:35:102;;-1:-1:-1;;;;;4321:6:102;;;4304:35;;;39138:74:131;39228:18;;;39221:30;39287:1;39267:18;;;39260:29;39325:8;39305:18;;;39298:36;4304:8:102;;-1:-1:-1;4304:8:102;;-1:-1:-1;39351:19:131;;4304:35:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4366:7:102;;;4349:37;;;-1:-1:-1;;;4349:37:102;;-1:-1:-1;;;;;4366:7:102;;;4349:37;;;39593:74:131;39683:18;;;39676:30;;;;39742:1;39722:18;;;39715:29;39780:9;39760:18;;;39753:37;4349:8:102;;-1:-1:-1;4349:8:102;;-1:-1:-1;39807:19:131;;4349:37:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4413:18:102;;4396:59;;;-1:-1:-1;;;4396:59:102;;-1:-1:-1;;;;;4413:18:102;;;4396:59;;;40049:74:131;40139:18;;;40132:30;40198:2;40178:18;;;40171:30;40237:20;40217:18;;;40210:48;4396:8:102;;-1:-1:-1;4396:8:102;;-1:-1:-1;40275:19:131;;4396:59:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4506:8:102;;4489:39;;;-1:-1:-1;;;4489:39:102;;-1:-1:-1;;;;;4506:8:102;;;4489:39;;;40517:74:131;40607:18;;;40600:30;40666:1;40646:18;;;40639:29;40704:10;40684:18;;;40677:38;4489:8:102;;-1:-1:-1;4489:8:102;;-1:-1:-1;40732:19:131;;4489:39:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4555:9:102;;4538:41;;;-1:-1:-1;;;4538:41:102;;-1:-1:-1;;;;;4555:9:102;;;4538:41;;;40974:74:131;41064:18;;;41057:30;41123:1;41103:18;;;41096:29;41161:11;41141:18;;;41134:39;4538:8:102;;-1:-1:-1;4538:8:102;;-1:-1:-1;41190:19:131;;4538:41:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4627:7:102;;4651:8;;4627:53;;-1:-1:-1;;;4627:53:102;;-1:-1:-1;;;;;4651:8:102;;;4627:53;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4627:7:102;;;-1:-1:-1;4627:15:102;;-1:-1:-1;27417:18:131;;4627:53:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4690:4:102;;4711:8;;4690:50;;-1:-1:-1;;;4690:50:102;;-1:-1:-1;;;;;4711:8:102;;;4690:50;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4690:4:102;;;:12;;27417:18:131;;4690:50:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4750:4:102;;4771:8;;4750:50;;-1:-1:-1;;;4750:50:102;;-1:-1:-1;;;;;4771:8:102;;;4750:50;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4750:4:102;;;:12;;27417:18:131;;4750:50:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4810:4:102;;4831:8;;4810:50;;-1:-1:-1;;;4810:50:102;;-1:-1:-1;;;;;4831:8:102;;;4810:50;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4810:4:102;;;:12;;27417:18:131;;4810:50:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4870:4:102;;4891:8;;4870:50;;-1:-1:-1;;;4870:50:102;;-1:-1:-1;;;;;4891:8:102;;;4870:50;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4870:4:102;;;:12;;27417:18:131;;4870:50:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4930:4:102;;4951:8;;4930:50;;-1:-1:-1;;;4930:50:102;;-1:-1:-1;;;;;4951:8:102;;;4930:50;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4930:4:102;;;:12;;27417:18:131;;4930:50:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4990:3:102;;5010:8;;4990:49;;-1:-1:-1;;;4990:49:102;;-1:-1:-1;;;;;5010:8:102;;;4990:49;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;4990:3:102;;;:11;;27417:18:131;;4990:49:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5049:8:102;;5074;;5049:54;;-1:-1:-1;;;5049:54:102;;-1:-1:-1;;;;;5074:8:102;;;5049:54;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5049:8:102;;;:16;;27417:18:131;;5049:54:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5114:7:102;;5138:6;;5114:51;;-1:-1:-1;;;5114:51:102;;-1:-1:-1;;;;;5138:6:102;;;5114:51;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5114:7:102;;;:15;;27417:18:131;;5114:51:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5175:4:102;;5196:6;;5175:48;;-1:-1:-1;;;5175:48:102;;-1:-1:-1;;;;;5196:6:102;;;5175:48;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5175:4:102;;;:12;;27417:18:131;;5175:48:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5233:4:102;;5254:6;;5233:48;;-1:-1:-1;;;5233:48:102;;-1:-1:-1;;;;;5254:6:102;;;5233:48;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5233:4:102;;;:12;;27417:18:131;;5233:48:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5291:4:102;;5312:6;;5291:48;;-1:-1:-1;;;5291:48:102;;-1:-1:-1;;;;;5312:6:102;;;5291:48;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5291:4:102;;;:12;;27417:18:131;;5291:48:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5349:4:102;;5370:6;;5349:48;;-1:-1:-1;;;5349:48:102;;-1:-1:-1;;;;;5370:6:102;;;5349:48;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5349:4:102;;;:12;;27417:18:131;;5349:48:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5407:4:102;;5428:6;;5407:48;;-1:-1:-1;;;5407:48:102;;-1:-1:-1;;;;;5428:6:102;;;5407:48;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5407:4:102;;;:12;;27417:18:131;;5407:48:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5465:3:102;;5485:6;;5465:47;;-1:-1:-1;;;5465:47:102;;-1:-1:-1;;;;;5485:6:102;;;5465:47;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5465:3:102;;;:11;;27417:18:131;;5465:47:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5522:8:102;;5547:6;;5522:52;;-1:-1:-1;;;5522:52:102;;-1:-1:-1;;;;;5547:6:102;;;5522:52;;;27444:74:131;-1:-1:-1;;27534:18:131;;;27527:34;5522:8:102;;;:16;;27417:18:131;;5522:52:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2549:3032::o;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;7759:1036:102:-;7964:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7964:56:102;8033:20;8055:30;8087;8119:17;8152:52;8168:9;8179:7;8188:10;8200:3;8152:15;:52::i;:::-;8032:172;;;;;;;;8237:551;;;;;;;;8289:6;-1:-1:-1;;;;;8237:551:102;;;;;8317:6;-1:-1:-1;;;;;8237:551:102;;;;;1142:2;8237:551;;;;;;8385:9;8237:551;;;;8417:9;8237:551;;;;8452:1;8237:551;;;;8479:1;8237:551;;;;8511:7;8237:551;;;;;;8544:1;8237:551;;;;8569:30;8591:7;8569:3;:21;;:30;;;;:::i;:::-;8237:551;;;;;;;;;;;;;;-1:-1:-1;;;;;8701:3:102;8237:551;;;;;;;;;;;;;8755:22;:15;8773:4;8755:22;:::i;:::-;8237:551;;8215:573;7759:1036;-1:-1:-1;;;;;;;;;;;7759:1036:102:o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;:11;;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2386:134;;;:::o;18636:288::-;18862:55;;-1:-1:-1;;;18862:55:2;;:20;;;;:55;;18883:4;;18889:5;;18896:15;;18913:3;;18862:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18636:288;;;;:::o;3570:134::-;3668:29;;-1:-1:-1;;;3668:29:2;;:11;;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;13228:134::-;13326:29;;-1:-1:-1;;;13326:29:2;;:11;;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;12044:134::-;12142:29;;-1:-1:-1;;;12142:29:2;;:11;;;;:29;;12154:4;;12160:5;;12167:3;;12142:29;;;:::i;10230:135:82:-;10323:1;10304:20;;;;;10300:58;;10333:25;;-1:-1:-1;;;10333:25:82;;;;;;;;;;;10300:58;10230:135;;;:::o;8705:::-;8798:1;8779:20;;;;;8775:58;;8808:25;;-1:-1:-1;;;8808:25:82;;;;;;;;;;;1208:392:80;668:2;1392:29:79;;;;;725:2:80;1392:29:79;;;;;1377:45;1547:46:80;;;1377:45:79;;1547:46:80;1538:55;1208:392;-1:-1:-1;;;;1208:392:80:o;950:247:86:-;1041:14;1068:13;1083;1100:18;1113:1;1116;1100:12;:18::i;:::-;1067:51;;;;1136:54;1158:1;1161;1164:11;1177:5;1184;1136:21;:54::i;:::-;1129:61;950:247;-1:-1:-1;;;;;;950:247:86:o;6046:628:102:-;6117:7;;-1:-1:-1;;;;;6117:7:102;6109:30;6105:66;;6141:7;;;6163;;6141:30;;-1:-1:-1;;;6141:30:102;;-1:-1:-1;;;;;6163:7:102;;;6141:30;;;27185:74:131;6141:7:102;;;:21;;27158:18:131;6141:30:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6105:66;6193:4;;-1:-1:-1;;;;;6193:4:102;6185:27;6181:60;;6214:7;;;6236:4;;6214:27;;-1:-1:-1;;;6214:27:102;;-1:-1:-1;;;;;6236:4:102;;;6214:27;;;27185:74:131;6214:7:102;;;:21;;27158:18:131;6214:27:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6181:60;6263:4;;-1:-1:-1;;;;;6263:4:102;6255:27;6251:60;;6284:7;;;6306:4;;6284:27;;-1:-1:-1;;;6284:27:102;;-1:-1:-1;;;;;6306:4:102;;;6284:27;;;27185:74:131;6284:7:102;;;:21;;27158:18:131;6284:27:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6251:60;6333:4;;-1:-1:-1;;;;;6333:4:102;6325:27;6321:60;;6354:7;;;6376:4;;6354:27;;-1:-1:-1;;;6354:27:102;;-1:-1:-1;;;;;6376:4:102;;;6354:27;;;27185:74:131;6354:7:102;;;:21;;27158:18:131;6354:27:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6321:60;6403:4;;-1:-1:-1;;;;;6403:4:102;6395:27;6391:60;;6424:7;;;6446:4;;6424:27;;-1:-1:-1;;;6424:27:102;;-1:-1:-1;;;;;6446:4:102;;;6424:27;;;27185:74:131;6424:7:102;;;:21;;27158:18:131;6424:27:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6391:60;6473:4;;-1:-1:-1;;;;;6473:4:102;6465:27;6461:60;;6494:7;;;6516:4;;6494:27;;-1:-1:-1;;;6494:27:102;;-1:-1:-1;;;;;6516:4:102;;;6494:27;;;27185:74:131;6494:7:102;;;:21;;27158:18:131;6494:27:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6461:60;6543:3;;-1:-1:-1;;;;;6543:3:102;6535:26;6531:58;;6563:7;;;6585:3;;6563:26;;-1:-1:-1;;;6563:26:102;;-1:-1:-1;;;;;6585:3:102;;;6563:26;;;27185:74:131;6563:7:102;;;:21;;27158:18:131;6563:26:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6531:58;6611:8;;-1:-1:-1;;;;;6611:8:102;6603:31;6599:68;;6636:7;;;6658:8;;6636:31;;-1:-1:-1;;;6636:31:102;;-1:-1:-1;;;;;6658:8:102;;;6636:31;;;27185:74:131;6636:7:102;;;:21;;27158:18:131;6636:31:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6680:422;6749:7;;;:346;;-1:-1:-1;;;6749:346:102;;43594:6:131;43627:15;;6749:346:102;;;43609:34:131;1197:5:102;43659:18:131;;;43652:43;;;1257:2:102;43711:18:131;;;43704:43;1313:3:102;43763:18:131;;;43756:43;43815:19;;;43808:44;;;;1441:6:102;43895:19:131;;;43888:44;1503:5:102;43948:19:131;;;43941:44;1576:7:102;44001:19:131;;;43994:44;6749:7:102;44054:19:131;;;44047:51;-1:-1:-1;;;;;6749:7:102;;:17;;43556:19:131;;6749:346:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6680:422;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;27203:55:131;;;27501:38:4;;;;27185:74:131;;;;27501:38:4;;;;;;;;;;27158:18:131;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;27748:414::-;27416:752;;27331:837;;;;:::o;8801:1225:102:-;8952:20;;;9074:17;9120:14;9133:1;9120:10;:14;:::i;:::-;:19;;9138:1;9120:19;9116:92;;9155:42;;-1:-1:-1;;;9155:42:102;;44789:2:131;9155:42:102;;;44771:21:131;;;44808:18;;;44801:30;44867:34;44847:18;;;44840:62;44919:18;;9155:42:102;44587:356:131;9116:92:102;9218:13;9234:14;9247:1;9234:10;:14;:::i;:::-;9218:30;;9278:10;9264:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9264:25:102;;9258:31;;9330:10;9316:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9316:25:102;;9300:41;;9381:10;9367:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9367:25:102;-1:-1:-1;9351:41:102;-1:-1:-1;9402:23:102;9451:10;:6;9460:1;9451:10;:::i;:::-;9428:34;;;;357:4:68;9428:34:102;:::i;:::-;9402:60;-1:-1:-1;9472:20:102;9508:10;:6;9517:1;9508:10;:::i;:::-;9495:24;;;;:9;:24;:::i;:::-;9472:47;;9535:9;9530:490;9550:10;9546:14;;:1;:14;9530:490;;;9626:7;9630:3;9626:1;:7;:::i;:::-;9621:13;;;;:1;:13;:::i;:::-;9610:7;9614:3;9610:1;:7;:::i;:::-;9600:18;;:6;:18;:::i;:::-;9590:28;;:7;:28;:::i;:::-;:44;;;;;;:::i;:::-;9581:3;9585:1;9581:6;;;;;;;;:::i;:::-;;;;;;:53;;;;;9658:6;9653:11;;:1;:11;9649:84;;9703:15;9684:13;9698:1;9684:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;9649:84;9755:6;9750:11;;:1;:11;9746:264;;9800:15;9781:13;9795:1;9781:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;9861:1;9846:12;:16;:149;;9994:1;9846:149;;;9885:86;252:3:68;9940:30:102;9962:3;9966:1;9962:6;;;;;;;;:::i;:::-;;;;;;;9940:14;:30::i;:::-;9885:12;;:86;:30;:86::i;:::-;9833:162;;;;:::i;:::-;;;9746:264;9562:3;;;;:::i;:::-;;;;9530:490;;;;9106:920;;;8801:1225;;;;;;;;;:::o;685:365:103:-;805:27;875:11;:18;862:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;862:32:103;;848:46;;909:9;904:140;928:11;:18;924:1;:22;904:140;;;1024:7;1016:16;;991:11;1003:1;991:14;;;;;;;;:::i;:::-;;;;;;;984:49;;;;:::i;:::-;967:11;979:1;967:14;;;;;;;;:::i;:::-;;;;;;;;;;:66;948:3;;;;:::i;:::-;;;;904:140;;;;685:365;;;;:::o;6214:547:86:-;6280:13;;-1:-1:-1;;6648:1:86;6645;6638:20;6687:1;6684;6680:9;6671:18;;6738:5;6734:2;6731:13;6723:5;6719:2;6715:14;6711:34;6702:43;;;6214:547;;;;;:::o;7202:3395::-;7352:14;7444:5;7453:1;7444:10;7440:3151;;7515:11;7507:5;:19;;;;;:::i;:::-;;7498:28;;7440:3151;;;7671:11;7662:5;:20;7658:66;;7691:33;;-1:-1:-1;;;7691:33:86;;;;;;;;;;;7658:66;7823:17;7958:11;7955:1;7952;7945:25;8537:1;8522:12;;:16;;8507:32;;8489:15;8938;;;8934:29;;;8930:37;;;8072:20;;;8061:32;;;9067:15;;;;8119:21;;8769:19;;;9058:24;;;;9453:1;8657:25;;;;9434:1;:15;;9433:21;;9697;;;9693:25;;9682:36;9770:21;;;9766:25;;9755:36;9844:21;;;9840:25;;9829:36;9918:21;;;9914:25;;9903:36;9992:21;;;9988:25;;9977:36;10067:21;;;10063:25;;;10052:36;;;10551:15;;;;;;-1:-1:-1;;;;7202:3395:86:o;9231:156:9:-;4680:12;;;:22;;-1:-1:-1;;;;;;4680:22:9;-1:-1:-1;;;;;4680:22:9;;;;;-1:-1:-1;4680:12:9;9344:36;9337:43;9231:156;-1:-1:-1;;;9231:156:9:o;9393:143::-;4835:9;;;:16;;-1:-1:-1;;4835:16:9;;;;;;;;-1:-1:-1;4835:9:9;9499:30;4736:143;9698:152;5151:10;;;:47;;;;;;;9772:18;5151:47;;;;;;-1:-1:-1;;;;;5175:21:9;;5151:47;;;9833:4;9809:34;5047:179;10474:120;10554:33;10568:4;10582:3;10554:13;:33::i;5742:146:102:-;5800:13;5833:48;5860:2;1142;5833:26;:48::i;4588:437:86:-;4684:14;4765:11;;;;;;;4863:19;4869:3;:12;;;4863:19;;;;;4954:64;;4765:1;;4979;:11;;4992;4765;4863:19;4954:21;:64::i;10966:1095:9:-;11060:12;;;;11096:9;;;;11137:11;;;;11181:10;;;11158:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11060:12:9;;;;11096:9;;;;;;11046:11;;11158:33;;11181:10;;11158:33;;11181:10;11158:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11202:17;11239:4;11245:12;11253:3;11245:7;:12::i;:::-;11222:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;11222:36:9;;;;;;;;;-1:-1:-1;;;;;11273:15:9;;;;;;:10;;;11222:36;11273:15;;;;;;-1:-1:-1;;;;;;11273:21:9;;;;;;;;;11222:36;;-1:-1:-1;11273:21:9;;:15;;11305:34;;11322:3;;11327:11;;11305:34;;:::i;:::-;;;;-1:-1:-1;;11305:34:9;;;;;;;;;11295:45;;11305:34;11295:45;;;;11273:68;;;;;;;;;;-1:-1:-1;11273:68:9;;;;11268:110;;11357:10;11362:4;11357;:10::i;:::-;;11268:110;-1:-1:-1;;;;;11410:15:9;;11387:12;11410:15;;;;;;;;;;;-1:-1:-1;;;;;;11410:21:9;;;;;;;;;11442:34;;11410:21;;11387:12;;11442:34;;11459:3;;11464:11;;11442:34;;:::i;:::-;;;;;;;;;;;;;11432:45;;;;;;11410:68;;;;;;;;;;;;11402:77;;11387:92;;11490:12;11529:17;11550:3;-1:-1:-1;;;;;11550:14:9;11565:4;11550:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11526:44:9;-1:-1:-1;11591:38:9;;-1:-1:-1;11526:44:9;11612:16;11617:11;11612:2;:16;:::i;:::-;11591:14;:38::i;:::-;11664:18;;-1:-1:-1;;;11664:18:9;;-1:-1:-1;;;;;27462:55:131;;11664:18:9;;;27444:74:131;27534:18;;;27527:34;;;11584:45:9;;-1:-1:-1;11649:12:9;;-1:-1:-1;11664:7:9;;;;27417:18:131;;11664::9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11649:33;;11705:4;11697;:12;11693:218;;11725:175;;-1:-1:-1;;;11725:175:9;;46983:2:131;11725:175:9;;;46965:21:131;47022:3;47002:18;;;46995:31;47062:34;47042:18;;;47035:62;47133:34;47113:18;;;47106:62;47205:34;47184:19;;;47177:63;-1:-1:-1;;;47256:19:131;;;47249:46;47312:19;;11725:175:9;46781:556:131;11725:175:9;11920:24;;-1:-1:-1;;;11920:24:9;;-1:-1:-1;;;;;47562:55:131;;11920:24:9;;;47544:74:131;47634:18;;;47627:34;;;47677:18;;;47670:34;;;11920:8:9;;;;47517:18:131;;11920:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11961:12:9;;;11954:19;;-1:-1:-1;;;;;;11954:19:9;;;-1:-1:-1;11990:9:9;;;11983:16;;-1:-1:-1;;11983:16:9;;;12009:17;-1:-1:-1;12016:10:9;;11961:12;12009:17;:::i;:::-;12043:4;:11;;12036:18;;;11036:1025;;;;;;;;10966:1095;;:::o;806:217:75:-;880:13;617:6:68;1818:42:75;252:3:68;1818:42:75;;;;1817:72;-1:-1:-1;;;1799:90:75;2179:11;;;-1:-1:-1;;2172:35:75;998:18;1799:90;2172:35;998:8;:18::i;13395:393:9:-;13454:12;13478:19;13510:1;:8;13521:2;13510:13;;;;:::i;:::-;13500:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13500:24:9;;13478:46;;13539:9;13534:224;13558:1;:8;13554:1;:12;13534:224;;;13587:9;13599:1;13601;13599:4;;;;;;;;:::i;:::-;;;;;;;13587:16;;13732:1;13726;13722:2;13718:10;13714:2;13710:19;13702:6;13698:32;13691:43;13673:75;13568:3;;;;;:::i;:::-;;;;13534:224;;9110:115;9167:7;9193:25;9213:4;9193:19;:25::i;13034:304::-;13112:7;13131:11;13153;13178:2;13167:1;:8;:13;:29;;13188:1;:8;13167:29;;;13183:2;13167:29;13153:43;;13211:9;13206:106;13230:3;13226:1;:7;13206:106;;;13295:5;:1;13299;13295:5;:::i;:::-;13269:1;13271:10;13280:1;13271:6;:10;:::i;:::-;13269:13;;;;;;;;:::i;:::-;;;;;;;13261:40;;13254:47;;;;;13235:3;;;;:::i;:::-;;;;13206:106;;;-1:-1:-1;13328:3:9;;13034:304;-1:-1:-1;;;;13034:304:9:o;4107:3600:85:-;4164:14;4190:11;4211:12;4238:1;4243;4238:6;4234:34;;-1:-1:-1;;;;295:17:68;-1:-1:-1;4246:22:85;;-1:-1:-1;4246:22:85;4234:34;-1:-1:-1;4310:1:85;4337;4327:12;;4324:109;;;4405:14;;;4370:1;4366:12;4324:109;4464:8;4457:4;:15;4453:3060;;;-1:-1:-1;;;295:17:68;-1:-1:-1;4568:1:85;-1:-1:-1;;;;;4589:41:85;;4586:161;;;4715:14;;;-1:-1:-1;;4664:20:85;4586:161;4778:3;4772:4;4768:14;4765:62;;;4804:20;;;4799:3;4795:30;;4765:62;4864:21;;4859:3;4855:31;4916:3;4906:14;;4903:62;;;4942:20;;;4937:3;4933:30;;4903:62;5002:21;;4997:3;4993:31;5054:3;5044:14;;5041:62;;;5080:20;;;5075:3;5071:30;;5041:62;5140:21;;5135:3;5131:31;5192:3;5182:14;;5179:62;;;5218:20;;;5213:3;5209:30;;5179:62;5278:21;;5273:3;5269:31;5330:4;5320:15;;5317:63;;;5357:20;;;5352:3;5348:30;;5317:63;5417:21;;5412:3;5408:31;5469:4;5459:15;;5456:63;;;5496:20;;;5491:3;5487:30;;5456:63;5556:21;;5551:3;5547:31;5608:4;5598:15;;5595:63;;;5635:20;;;5630:3;5626:30;;5595:63;5695:21;;5690:3;5686:31;;;;5737:15;;5734:63;;;5774:20;;;5769:3;5765:30;;5734:63;5834:21;;5829:3;5825:31;5886:5;5876:16;;5873:64;;;5914:20;;;5909:3;5905:30;;5873:64;5974:21;;5969:3;5965:31;6026:5;6016:16;;6013:64;;;6054:20;;;6049:3;6045:30;;6013:64;6114:21;;6109:3;6105:31;6166:5;6156:16;;6153:64;;;6194:20;;;6189:3;6185:30;;6153:64;6254:21;;6249:3;6245:31;6306:5;6296:16;;6293:64;;;6334:20;;;6329:3;6325:30;;6293:64;6394:21;;6389:3;6385:31;6446:6;6436:17;;6433:65;;;6475:20;;;6470:3;6466:30;;6433:65;6535:21;;6530:3;6526:31;6587:6;6577:17;;6574:65;;;6616:20;;;6611:3;6607:30;;6574:65;6676:21;;6671:3;6667:31;6728:6;6718:17;;6715:65;;;6757:20;;;6752:3;6748:30;;6715:65;6817:21;;6812:3;6808:31;6869:6;6859:17;;6856:65;;;6898:20;;;6893:3;6889:30;;6856:65;6958:21;;6953:3;6949:31;7010:7;7000:18;;6997:66;;;7040:20;;;7035:3;7031:30;;6997:66;7100:21;;7095:3;7091:31;7152:7;7142:18;;7139:66;;;7182:20;;;7177:3;7173:30;;7139:66;7242:21;;7237:3;7233:31;7294:7;7284:18;;7281:66;;;7324:20;;;7319:3;7315:30;;7281:66;7384:21;;7379:3;7375:31;7436:7;7426:18;;7423:66;;;7466:20;;;7461:3;7457:30;;7423:66;;4453:3060;7583:6;7593:1;7583:11;7579:59;;7603:35;;-1:-1:-1;;;7603:35:85;;;;;47887:25:131;;;47928:18;;;47921:34;;;47860:18;;7603:35:85;47715:246:131;7579:59:85;7656:6;:44;;7694:6;7656:44;;;7665:26;7685:6;-1:-1:-1;;7665:26:85;:::i;1264:3304:9:-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;-1:-1:-1;;;;;1354:12:9;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1536:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;1536:21:9;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:9;:15;;-1:-1:-1;1568:34:9;;-1:-1:-1;1452:33:9;;1590:11;;1568:34;;:::i;:::-;;;;-1:-1:-1;;1568:34:9;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:9;;;;1532:174;;;-1:-1:-1;;;;;1627:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;1627:21:9;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3304;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;588:28;580:37;;-1:-1:-1;;;;;1781:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;-1:-1:-1;;;;;1862:14:9;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:9;-1:-1:-1;1903:38:9;;-1:-1:-1;1838:44:9;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;-1:-1:-1;;;1990:25:9;;-1:-1:-1;;;;;27203:55:131;;1990:25:9;;;27185:74:131;1896:45:9;;-1:-1:-1;1963:22:9;;-1:-1:-1;1990:11:9;;;;27158:18:131;;1990:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1990:25:9;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2167;;2062:12;588:28;580:37;;-1:-1:-1;;;;;2077:7:9;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;27462:55:131;;;;27444:74;;27549:2;27534:18;;27527:34;27432:2;27417:18;;27270:297;2077:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:9;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;-1:-1:-1;;;;;27462:55:131;;;27444:74;;27534:18;;;27527:34;27417:18;2160:44:9;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;-1:-1:-1;;;2268:187:9;;46983:2:131;2268:187:9;;;46965:21:131;47022:3;47002:18;;;46995:31;47062:34;47042:18;;;47035:62;47133:34;47113:18;;;47106:62;47205:34;47184:19;;;47177:63;-1:-1:-1;;;47256:19:131;;;47249:46;47312:19;;2268:187:9;46781:556:131;2268:187:9;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2488:86;;;-1:-1:-1;;;;;48832:55:131;;;48814:74;;-1:-1:-1;;;;;;48924:33:131;;;48904:18;;;48897:61;;;;48974:18;;;48967:34;49032:2;49017:18;;49010:34;48801:3;48786:19;2488:86:9;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2588:15:9;;2659:17;2588:15;;;;;;;;;;-1:-1:-1;;;;;;2588:21:9;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;-1:-1:-1;;2620:34:9;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:9;;;:88;;;;-1:-1:-1;;;;;2690:15:9;;;;2761:4;2690:10;;;:15;;;;;-1:-1:-1;;;;;;2690:21:9;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:9;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;-1:-1:-1;;2722:34:9;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:9;:75;;-1:-1:-1;;2690:75:9;;;;;;;;;;-1:-1:-1;2025:2167:9;;;2801:1;2786:5;:12;:16;2782:1410;;;2823:9;2818:1259;2842:5;:12;2838:1;:16;2818:1259;;;2879:12;588:28;580:37;;-1:-1:-1;;;;;2894:7:9;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;27462:55:131;;;;27444:74;;27549:2;27534:18;;27527:34;27432:2;27417:18;;27270:297;2894:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:9;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;-1:-1:-1;;;;;27462:55:131;;;27444:74;;27534:18;;;27527:34;27417:18;2985:44:9;;;;;;;2934:114;3077:4;3069;:12;3065:67;;3105:8;;;3065:67;3229:8;;3167:5;;;3215:8;;;;3224:3;;3229:5;;3235:1;;3229:8;;;;;;:::i;:::-;;;;;;;;;;;3215:32;;-1:-1:-1;;;;;;3215:32:9;;;;;;;-1:-1:-1;;;;;47562:55:131;;;3215:32:9;;;47544:74:131;47634:18;;;47627:34;47677:18;;;47670:34;;;47517:18;;3215:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3265:12;3317:17;3374:3;-1:-1:-1;;;;;3374:14:9;3389:4;3374:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3356:38:9;;-1:-1:-1;3356:38:9;-1:-1:-1;3423:38:9;3356;3444:16;3449:11;3444:2;:16;:::i;3423:38::-;3416:45;;3295:185;3502:7;:26;;;;;3521:7;3513:4;:15;3502:26;3498:518;;;3626:86;3636:3;3641:4;3674:3;3679:11;3657:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3647:45;;;;;;3702:5;3708:1;3702:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3626:86;;;-1:-1:-1;;;;;48832:55:131;;;48814:74;;-1:-1:-1;;;;;;48924:33:131;;;48904:18;;;48897:61;;;;48974:18;;;48967:34;49032:2;49017:18;;49010:34;48801:3;48786:19;3626:86:9;;;;;;;3813:5;3819:1;3813:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;3734:15:9;;3805:17;3734:15;;;;;;;;;;-1:-1:-1;;;;;;3734:21:9;;;;;;;;;3766:34;;3813:8;;3734:21;;3766:34;;3783:3;;3788:11;;3766:34;;:::i;:::-;;;;;;;;;;;;;3756:45;;;;;;3734:68;;;;;;;;;;;:88;;;;3915:4;3844;:10;;:15;3855:3;-1:-1:-1;;;;;3844:15:9;-1:-1:-1;;;;;3844:15:9;;;;;;;;;;;;:21;3860:4;-1:-1:-1;;;;;3844:21:9;;-1:-1:-1;;;;;3844:21:9;;;;;;;;;;;;;:68;3893:3;3898:11;3876:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3866:45;;;;;;3844:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;588:28;580:37;;-1:-1:-1;;;;;3941:8:9;;3950:3;3955:5;3961:1;3955:8;;;;;;;;:::i;:::-;;;;;;;;;;;3941:29;;-1:-1:-1;;;;;;3941:29:9;;;;;;;-1:-1:-1;;;;;47562:55:131;;;3941:29:9;;;47544:74:131;47634:18;;;47627:34;47677:18;;;47670:34;;;47517:18;;3941:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3992:5;;;;;3498:518;588:28;580:37;;-1:-1:-1;;;;;4033:8:9;;4042:3;4047:5;4053:1;4047:8;;;;;;;;:::i;:::-;;;;;;;;;;;4033:29;;-1:-1:-1;;;;;;4033:29:9;;;;;;;-1:-1:-1;;;;;47562:55:131;;;4033:29:9;;;47544:74:131;47634:18;;;47627:34;47677:18;;;47670:34;;;47517:18;;4033:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1216;;;2818:1259;2856:3;;;;:::i;:::-;;;;2818:1259;;;;2782:1410;;;4107:74;;;-1:-1:-1;;;4107:74:9;;49257:2:131;4107:74:9;;;49239:21:131;49276:18;;;49269:30;;;;49335:34;49315:18;;;49308:62;49406:34;49386:18;;;49379:62;49458:19;;4107:74:9;49055:428:131;2782:1410:9;-1:-1:-1;;;;;4223:15:9;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;4223:21:9;;;;;;;;;4255:34;;4223:21;;:15;4255:34;;4272:3;;4277:11;;4255:34;;:::i;:::-;;;;-1:-1:-1;;4255:34:9;;;;;;;;;4245:45;;4255:34;4245:45;;;;4223:68;;;;;;;;;;-1:-1:-1;4223:68:9;;;;4202:162;;;;-1:-1:-1;;;4202:162:9;;49690:2:131;4202:162:9;;;49672:21:131;49729:2;49709:18;;;49702:30;49768:34;49748:18;;;49741:62;49839:17;49819:18;;;49812:45;49874:19;;4202:162:9;49488:411:131;4202:162:9;4382:12;;;4375:19;;-1:-1:-1;;;;;;4375:19:9;;;4411:9;;;4404:16;;-1:-1:-1;;4404:16:9;;;4430:17;-1:-1:-1;4437:10:9;;4382:12;4430:17;:::i;:::-;4457:18;4464:11;;;4457:18;;;-1:-1:-1;;;;;4493:15:9;;;;;;;;;;;;-1:-1:-1;;;;;;4493:21:9;;;;;;;;;4525:34;;4493:21;;4457:18;4525:34;;4542:3;;4547:11;;4525:34;;:::i;:::-;;;;;;;;;;;;;4515:45;;;;;;4493:68;;;;;;;;;;;;4486:75;;;;;;;;;1264:3304;;;:::o;8473:393::-;8532:12;8556:19;8588:1;:8;8599:2;8588:13;;;;:::i;:::-;8578:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8578:24:9;;8556:46;;8617:9;8612:224;8636:1;:8;8632:1;:12;8612:224;;;8665:9;8677:1;8679;8677:4;;;;;;;;:::i;:::-;;;;;;;8665:16;;8810:1;8804;8800:2;8796:10;8792:2;8788:19;8780:6;8776:32;8769:43;8751:75;8646:3;;;;;:::i;:::-;;;;8612:224;;8163:304;8241:7;8260:11;8282;8307:2;8296:1;:8;:13;:29;;8317:1;:8;8296:29;;;8312:2;8296:29;8282:43;;8340:9;8335:106;8359:3;8355:1;:7;8335:106;;;8424:5;:1;8428;8424:5;:::i;:::-;8398:1;8400:10;8409:1;8400:6;:10;:::i;:::-;8398:13;;;;;;;;:::i;:::-;;;;;;;8390:40;;8383:47;;;;;8364:3;;;;:::i;:::-;;;;8335:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:131:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:131;;209:43;;199:71;;266:1;263;256:12;629:484;682:3;720:5;714:12;747:6;742:3;735:19;773:4;802:2;797:3;793:12;786:19;;839:2;832:5;828:14;860:1;870:218;884:6;881:1;878:13;870:218;;;949:13;;-1:-1:-1;;;;;945:62:131;933:75;;1028:12;;;;1063:15;;;;906:1;899:9;870:218;;;-1:-1:-1;1104:3:131;;629:484;-1:-1:-1;;;;;629:484:131:o;1118:261::-;1297:2;1286:9;1279:21;1260:4;1317:56;1369:2;1358:9;1354:18;1346:6;1317:56;:::i;1384:250::-;1469:1;1479:113;1493:6;1490:1;1487:13;1479:113;;;1569:11;;;1563:18;1550:11;;;1543:39;1515:2;1508:10;1479:113;;;-1:-1:-1;;1626:1:131;1608:16;;1601:27;1384:250::o;1639:271::-;1681:3;1719:5;1713:12;1746:6;1741:3;1734:19;1762:76;1831:6;1824:4;1819:3;1815:14;1808:4;1801:5;1797:16;1762:76;:::i;:::-;1892:2;1871:15;-1:-1:-1;;1867:29:131;1858:39;;;;1899:4;1854:50;;1639:271;-1:-1:-1;;1639:271:131:o;1915:1765::-;2148:2;2200:21;;;2270:13;;2173:18;;;2292:22;;;2119:4;;2148:2;2333;;2351:18;;;;2388:1;2431:15;;;2416:31;;2412:40;;2475:15;;;2119:4;;2539:1112;2555:6;2550:3;2547:15;2539:1112;;;-1:-1:-1;;2624:22:131;;;2620:36;2608:49;;2680:13;;2767:9;;-1:-1:-1;;;;;2763:58:131;2748:74;;2861:11;;2855:18;2893:15;;;2886:27;;;2974:19;;2720:15;;;3006:24;;;3187:21;;;;3053:2;3135:17;;;3123:30;;3119:39;;;3077:15;;;;3232:1;3246:296;3262:8;3257:3;3254:17;3246:296;;;3368:2;3364:7;3355:6;3347;3343:19;3339:33;3332:5;3325:48;3400:42;3435:6;3424:8;3418:15;3400:42;:::i;:::-;3471:17;;;;3390:52;-1:-1:-1;3514:14:131;;;;3290:1;3281:11;3246:296;;;-1:-1:-1;;;3629:12:131;;;;3565:6;-1:-1:-1;;3594:15:131;;;;2581:1;2572:11;2539:1112;;;-1:-1:-1;3668:6:131;;1915:1765;-1:-1:-1;;;;;;;;;;1915:1765:131:o;3685:156::-;3751:20;;3811:4;3800:16;;3790:27;;3780:55;;3831:1;3828;3821:12;3846:252;3910:6;3918;3971:2;3959:9;3950:7;3946:23;3942:32;3939:52;;;3987:1;3984;3977:12;3939:52;4010:27;4027:9;4010:27;:::i;:::-;4000:37;;4056:36;4088:2;4077:9;4073:18;4056:36;:::i;:::-;4046:46;;3846:252;;;;;:::o;4285:1590::-;4487:4;4516:2;4556;4545:9;4541:18;4586:2;4575:9;4568:21;4609:6;4644;4638:13;4675:6;4667;4660:22;4701:2;4691:12;;4734:2;4723:9;4719:18;4712:25;;4796:2;4786:6;4783:1;4779:14;4768:9;4764:30;4760:39;4834:2;4826:6;4822:15;4855:1;4876;4886:960;4902:6;4897:3;4894:15;4886:960;;;4971:22;;;-1:-1:-1;;4967:36:131;4955:49;;5027:13;;5114:9;;-1:-1:-1;;;;;5110:58:131;5095:74;;5208:11;;5202:18;5240:15;;;5233:27;;;5321:19;;5067:15;;;5353:24;;;5443:21;;;;5488:1;;5411:2;5399:15;;;5502:236;5518:8;5513:3;5510:17;5502:236;;;5599:15;;-1:-1:-1;;;;;;5595:42:131;5581:57;;5707:17;;;;5546:1;5537:11;;;;;5664:14;;;;5502:236;;;-1:-1:-1;5824:12:131;;;;5761:5;-1:-1:-1;;;5789:15:131;;;;4928:1;4919:11;4886:960;;;-1:-1:-1;5863:6:131;;4285:1590;-1:-1:-1;;;;;;;;;4285:1590:131:o;5880:803::-;6042:4;6071:2;6111;6100:9;6096:18;6141:2;6130:9;6123:21;6164:6;6199;6193:13;6230:6;6222;6215:22;6268:2;6257:9;6253:18;6246:25;;6330:2;6320:6;6317:1;6313:14;6302:9;6298:30;6294:39;6280:53;;6368:2;6360:6;6356:15;6389:1;6399:255;6413:6;6410:1;6407:13;6399:255;;;6506:2;6502:7;6490:9;6482:6;6478:22;6474:36;6469:3;6462:49;6534:40;6567:6;6558;6552:13;6534:40;:::i;:::-;6524:50;-1:-1:-1;6632:12:131;;;;6597:15;;;;6435:1;6428:9;6399:255;;;-1:-1:-1;6671:6:131;;5880:803;-1:-1:-1;;;;;;;5880:803:131:o;6688:161::-;6755:20;;6815:8;6804:20;;6794:31;;6784:59;;6839:1;6836;6829:12;6854:322;6928:6;6936;6944;6997:2;6985:9;6976:7;6972:23;6968:32;6965:52;;;7013:1;7010;7003:12;6965:52;7036:28;7054:9;7036:28;:::i;:::-;7026:38;;7111:2;7100:9;7096:18;7083:32;7073:42;;7134:36;7166:2;7155:9;7151:18;7134:36;:::i;:::-;7124:46;;6854:322;;;;;:::o;7376:154::-;-1:-1:-1;;;;;7455:5:131;7451:54;7444:5;7441:65;7431:93;;7520:1;7517;7510:12;7535:898;7668:6;7676;7684;7692;7700;7708;7716;7724;7777:3;7765:9;7756:7;7752:23;7748:33;7745:53;;;7794:1;7791;7784:12;7745:53;7833:9;7820:23;7852:31;7877:5;7852:31;:::i;:::-;7902:5;-1:-1:-1;7959:2:131;7944:18;;7931:32;7972:33;7931:32;7972:33;:::i;:::-;8024:7;-1:-1:-1;8083:2:131;8068:18;;8055:32;8096:33;8055:32;8096:33;:::i;:::-;8148:7;-1:-1:-1;8174:37:131;8207:2;8192:18;;8174:37;:::i;:::-;8164:47;;8258:3;8247:9;8243:19;8230:33;8220:43;;8310:3;8299:9;8295:19;8282:33;8272:43;;8334:37;8366:3;8355:9;8351:19;8334:37;:::i;:::-;8324:47;;8390:37;8422:3;8411:9;8407:19;8390:37;:::i;:::-;8380:47;;7535:898;;;;;;;;;;;:::o;8438:272::-;8496:6;8549:2;8537:9;8528:7;8524:23;8520:32;8517:52;;;8565:1;8562;8555:12;8517:52;8604:9;8591:23;8654:6;8647:5;8643:18;8636:5;8633:29;8623:57;;8676:1;8673;8666:12;8715:829;8839:6;8847;8855;8863;8871;8879;8887;8940:3;8928:9;8919:7;8915:23;8911:33;8908:53;;;8957:1;8954;8947:12;8908:53;8996:9;8983:23;9015:31;9040:5;9015:31;:::i;:::-;9065:5;-1:-1:-1;9122:2:131;9107:18;;9094:32;9135:33;9094:32;9135:33;:::i;:::-;9187:7;-1:-1:-1;9246:2:131;9231:18;;9218:32;9259:33;9218:32;9259:33;:::i;:::-;9311:7;-1:-1:-1;9337:37:131;9370:2;9355:18;;9337:37;:::i;:::-;9327:47;;9421:3;9410:9;9406:19;9393:33;9383:43;;9445:37;9477:3;9466:9;9462:19;9445:37;:::i;:::-;9435:47;;9501:37;9533:3;9522:9;9518:19;9501:37;:::i;:::-;9491:47;;8715:829;;;;;;;;;;:::o;9886:127::-;9947:10;9942:3;9938:20;9935:1;9928:31;9978:4;9975:1;9968:15;10002:4;9999:1;9992:15;10018:253;10090:2;10084:9;10132:4;10120:17;;10167:18;10152:34;;10188:22;;;10149:62;10146:88;;;10214:18;;:::i;:::-;10250:2;10243:22;10018:253;:::o;10276:275::-;10347:2;10341:9;10412:2;10393:13;;-1:-1:-1;;10389:27:131;10377:40;;10447:18;10432:34;;10468:22;;;10429:62;10426:88;;;10494:18;;:::i;:::-;10530:2;10523:22;10276:275;;-1:-1:-1;10276:275:131:o;10556:719::-;10636:6;10689:2;10677:9;10668:7;10664:23;10660:32;10657:52;;;10705:1;10702;10695:12;10657:52;10738:9;10732:16;10767:18;10808:2;10800:6;10797:14;10794:34;;;10824:1;10821;10814:12;10794:34;10862:6;10851:9;10847:22;10837:32;;10907:7;10900:4;10896:2;10892:13;10888:27;10878:55;;10929:1;10926;10919:12;10878:55;10958:2;10952:9;10980:2;10976;10973:10;10970:36;;;10986:18;;:::i;:::-;11028:53;11071:2;11052:13;;-1:-1:-1;;11048:27:131;11077:2;11044:36;11028:53;:::i;:::-;11015:66;;11104:2;11097:5;11090:17;11144:7;11139:2;11134;11130;11126:11;11122:20;11119:33;11116:53;;;11165:1;11162;11155:12;11116:53;11178:67;11242:2;11237;11230:5;11226:14;11221:2;11217;11213:11;11178:67;:::i;:::-;-1:-1:-1;11264:5:131;10556:719;-1:-1:-1;;;;10556:719:131:o;11280:306::-;11472:2;11461:9;11454:21;11435:4;11492:45;11533:2;11522:9;11518:18;11510:6;11492:45;:::i;:::-;11484:53;;11573:6;11568:2;11557:9;11553:18;11546:34;11280:306;;;;;:::o;11591:184::-;11661:6;11714:2;11702:9;11693:7;11689:23;11685:32;11682:52;;;11730:1;11727;11720:12;11682:52;-1:-1:-1;11753:16:131;;11591:184;-1:-1:-1;11591:184:131:o;11780:127::-;11841:10;11836:3;11832:20;11829:1;11822:31;11872:4;11869:1;11862:15;11896:4;11893:1;11886:15;11912:168;11985:9;;;12016;;12033:15;;;12027:22;;12013:37;12003:71;;12054:18;;:::i;12085:127::-;12146:10;12141:3;12137:20;12134:1;12127:31;12177:4;12174:1;12167:15;12201:4;12198:1;12191:15;12217:120;12257:1;12283;12273:35;;12288:18;;:::i;:::-;-1:-1:-1;12322:9:131;;12217:120::o;12342:125::-;12407:9;;;12428:10;;;12425:36;;;12441:18;;:::i;13260:306::-;13348:6;13356;13364;13417:2;13405:9;13396:7;13392:23;13388:32;13385:52;;;13433:1;13430;13423:12;13385:52;13462:9;13456:16;13446:26;;13512:2;13501:9;13497:18;13491:25;13481:35;;13556:2;13545:9;13541:18;13535:25;13525:35;;13260:306;;;;;:::o;14110:268::-;14197:6;14250:2;14238:9;14229:7;14225:23;14221:32;14218:52;;;14266:1;14263;14256:12;14218:52;14298:9;14292:16;14317:31;14342:5;14317:31;:::i;14383:170::-;14450:8;14478:10;;;14490;;;14474:27;;14513:11;;;14510:37;;;14527:18;;:::i;15095:434::-;15147:3;15185:5;15179:12;15212:6;15207:3;15200:19;15238:4;15267:2;15262:3;15258:12;15251:19;;15304:2;15297:5;15293:14;15325:1;15335:169;15349:6;15346:1;15343:13;15335:169;;;15410:13;;15398:26;;15444:12;;;;15479:15;;;;15371:1;15364:9;15335:169;;15534:1945;15739:2;15728:9;15721:21;15751:53;15800:2;15789:9;15785:18;15776:6;15770:13;-1:-1:-1;;;;;563:54:131;551:67;;497:127;15751:53;15702:4;15851:2;15843:6;15839:15;15833:22;15864:52;15912:2;15901:9;15897:18;15883:12;-1:-1:-1;;;;;563:54:131;551:67;;497:127;15864:52;;15970:2;15962:6;15958:15;15952:22;15947:2;15936:9;15932:18;15925:50;16030:2;16022:6;16018:15;16012:22;16006:3;15995:9;15991:19;15984:51;16090:3;16082:6;16078:16;16072:23;16066:3;16055:9;16051:19;16044:52;16151:3;16143:6;16139:16;16133:23;16127:3;16116:9;16112:19;16105:52;16212:3;16204:6;16200:16;16194:23;16188:3;16177:9;16173:19;16166:52;16255:3;16247:6;16243:16;16237:23;16279:3;16318:2;16313;16302:9;16298:18;16291:30;16358:2;16350:6;16346:15;16340:22;16330:32;;;16381:3;16420:2;16415;16404:9;16400:18;16393:30;16472:2;16464:6;16460:15;16454:22;16432:44;;;16495:6;16520:3;16559:2;16554;16543:9;16539:18;16532:30;16585:64;16644:3;16633:9;16629:19;16613:14;16585:64;:::i;:::-;16571:78;;16698:2;16690:6;16686:15;16680:22;16658:44;;16725:2;16721:7;16747:3;16814:2;16802:9;16794:6;16790:22;16786:31;16781:2;16770:9;16766:18;16759:59;16841:51;16885:6;16869:14;16841:51;:::i;:::-;16827:65;;16941:2;16933:6;16929:15;16923:22;16901:44;;;16964:3;17031:2;17019:9;17011:6;17007:22;17003:31;16998:2;16987:9;16983:18;16976:59;17058:51;17102:6;17086:14;17058:51;:::i;:::-;17044:65;;17158:2;17150:6;17146:15;17140:22;17118:44;;;;17182:3;17194:55;17244:3;17233:9;17229:19;17213:14;-1:-1:-1;;;;;563:54:131;551:67;;497:127;17194:55;17286:16;;17280:23;;-1:-1:-1;17323:3:131;17335:55;17370:19;;;17280:23;-1:-1:-1;;;;;563:54:131;551:67;;497:127;17335:55;17432:16;;;;17426:23;17406:18;;17399:51;;;;-1:-1:-1;17467:6:131;15534:1945;-1:-1:-1;15534:1945:131:o;17484:183::-;17544:4;17577:18;17569:6;17566:30;17563:56;;;17599:18;;:::i;:::-;-1:-1:-1;17644:1:131;17640:14;17656:4;17636:25;;17484:183::o;17672:659::-;17737:5;17790:3;17783:4;17775:6;17771:17;17767:27;17757:55;;17808:1;17805;17798:12;17757:55;17837:6;17831:13;17863:4;17887:60;17903:43;17943:2;17903:43;:::i;:::-;17887:60;:::i;:::-;17981:15;;;18067:1;18063:10;;;;18051:23;;18047:32;;;18012:12;;;;18091:15;;;18088:35;;;18119:1;18116;18109:12;18088:35;18155:2;18147:6;18143:15;18167:135;18183:6;18178:3;18175:15;18167:135;;;18249:10;;18237:23;;18280:12;;;;18200;;18167:135;;;-1:-1:-1;18320:5:131;17672:659;-1:-1:-1;;;;;;17672:659:131:o;18336:861::-;18501:6;18509;18517;18525;18533;18541;18594:3;18582:9;18573:7;18569:23;18565:33;18562:53;;;18611:1;18608;18601:12;18562:53;18640:9;18634:16;18624:26;;18690:2;18679:9;18675:18;18669:25;18659:35;;18734:2;18723:9;18719:18;18713:25;18703:35;;18778:2;18767:9;18763:18;18757:25;18747:35;;18826:3;18815:9;18811:19;18805:26;18850:18;18891:2;18883:6;18880:14;18877:34;;;18907:1;18904;18897:12;18877:34;18930:72;18994:7;18985:6;18974:9;18970:22;18930:72;:::i;:::-;18920:82;;19048:3;19037:9;19033:19;19027:26;19011:42;;19078:2;19068:8;19065:16;19062:36;;;19094:1;19091;19084:12;19062:36;;19117:74;19183:7;19172:8;19161:9;19157:24;19117:74;:::i;:::-;19107:84;;;18336:861;;;;;;;;:::o;19202:380::-;19281:1;19277:12;;;;19324;;;19345:61;;19399:4;19391:6;19387:17;19377:27;;19345:61;19452:2;19444:6;19441:14;19421:18;19418:38;19415:161;;19498:10;19493:3;19489:20;19486:1;19479:31;19533:4;19530:1;19523:15;19561:4;19558:1;19551:15;19415:161;;19202:380;;;:::o;19587:127::-;19648:10;19643:3;19639:20;19636:1;19629:31;19679:4;19676:1;19669:15;19703:4;19700:1;19693:15;19719:373;19926:2;19915:9;19908:21;19889:4;19946:56;19998:2;19987:9;19983:18;19975:6;19946:56;:::i;:::-;19938:64;;-1:-1:-1;;;;;20042:6:131;20038:47;20033:2;20022:9;20018:18;20011:75;19719:373;;;;;:::o;20097:734::-;20162:5;20215:3;20208:4;20200:6;20196:17;20192:27;20182:55;;20233:1;20230;20223:12;20182:55;20262:6;20256:13;20288:4;20312:60;20328:43;20368:2;20328:43;:::i;20312:60::-;20406:15;;;20492:1;20488:10;;;;20476:23;;20472:32;;;20437:12;;;;20516:15;;;20513:35;;;20544:1;20541;20534:12;20513:35;20580:2;20572:6;20568:15;20592:210;20608:6;20603:3;20600:15;20592:210;;;20681:3;20675:10;20698:31;20723:5;20698:31;:::i;:::-;20742:18;;20780:12;;;;20625;;20592:210;;20836:818;20906:5;20959:3;20952:4;20944:6;20940:17;20936:27;20926:55;;20977:1;20974;20967:12;20926:55;21006:6;21000:13;21032:4;21056:60;21072:43;21112:2;21072:43;:::i;21056:60::-;21150:15;;;21236:1;21232:10;;;;21220:23;;21216:32;;;21181:12;;;;21260:15;;;21257:35;;;21288:1;21285;21278:12;21257:35;21324:2;21316:6;21312:15;21336:289;21352:6;21347:3;21344:15;21336:289;;;21425:3;21419:10;21462:1;21455:5;21452:12;21442:110;;21506:1;21535:2;21531;21524:14;21442:110;21565:18;;21603:12;;;;21369;;21336:289;;21659:858;21724:5;21777:3;21770:4;21762:6;21758:17;21754:27;21744:55;;21795:1;21792;21785:12;21744:55;21824:6;21818:13;21850:4;21874:60;21890:43;21930:2;21890:43;:::i;21874:60::-;21968:15;;;22054:1;22050:10;;;;22038:23;;22034:32;;;21999:12;;;;22078:15;;;22075:35;;;22106:1;22103;22096:12;22075:35;22142:2;22134:6;22130:15;22154:334;22170:6;22165:3;22162:15;22154:334;;;22243:3;22237:10;-1:-1:-1;;;;;22284:5:131;22280:46;22273:5;22270:57;22260:155;;22369:1;22398:2;22394;22387:14;22260:155;22428:18;;22466:12;;;;22187;;22154:334;;22522:1766;22616:6;22669:2;22657:9;22648:7;22644:23;22640:32;22637:52;;;22685:1;22682;22675:12;22637:52;22718:9;22712:16;22747:18;22788:2;22780:6;22777:14;22774:34;;;22804:1;22801;22794:12;22774:34;22827:22;;;;22883:4;22865:16;;;22861:27;22858:47;;;22901:1;22898;22891:12;22858:47;22927:22;;:::i;:::-;22980:2;22974:9;23008:2;22998:8;22995:16;22992:36;;;23024:1;23021;23014:12;22992:36;23051:67;23110:7;23099:8;23095:2;23091:17;23051:67;:::i;:::-;23044:5;23037:82;;23158:2;23154;23150:11;23144:18;23187:2;23177:8;23174:16;23171:36;;;23203:1;23200;23193:12;23171:36;23239:67;23298:7;23287:8;23283:2;23279:17;23239:67;:::i;:::-;23234:2;23227:5;23223:14;23216:91;;23346:2;23342;23338:11;23332:18;23375:2;23365:8;23362:16;23359:36;;;23391:1;23388;23381:12;23359:36;23427:67;23486:7;23475:8;23471:2;23467:17;23427:67;:::i;:::-;23422:2;23415:5;23411:14;23404:91;;23534:2;23530;23526:11;23520:18;23563:2;23553:8;23550:16;23547:36;;;23579:1;23576;23569:12;23547:36;23615:72;23679:7;23668:8;23664:2;23660:17;23615:72;:::i;:::-;23610:2;23603:5;23599:14;23592:96;;23727:3;23723:2;23719:12;23713:19;23757:2;23747:8;23744:16;23741:36;;;23773:1;23770;23763:12;23741:36;23810:67;23869:7;23858:8;23854:2;23850:17;23810:67;:::i;:::-;23804:3;23797:5;23793:15;23786:92;;23917:3;23913:2;23909:12;23903:19;23947:2;23937:8;23934:16;23931:36;;;23963:1;23960;23953:12;23931:36;24000:67;24059:7;24048:8;24044:2;24040:17;24000:67;:::i;:::-;23994:3;23987:5;23983:15;23976:92;;24107:3;24103:2;24099:12;24093:19;24137:2;24127:8;24124:16;24121:36;;;24153:1;24150;24143:12;24121:36;24190:67;24249:7;24238:8;24234:2;24230:17;24190:67;:::i;:::-;24184:3;24173:15;;24166:92;-1:-1:-1;24177:5:131;22522:1766;-1:-1:-1;;;;;22522:1766:131:o;24293:274::-;-1:-1:-1;;;;;24431:10:131;;;24443;;;24427:27;24474:20;;;;24365:34;24513:24;;;24503:58;;24541:18;;:::i;:::-;24503:58;;24293:274;;;;:::o;24572:127::-;24633:10;24628:3;24624:20;24621:1;24614:31;24664:4;24661:1;24654:15;24688:4;24685:1;24678:15;24704:216;24744:1;-1:-1:-1;;;;;24831:2:131;24828:1;24824:10;24853:3;24843:37;;24860:18;;:::i;:::-;24898:10;;24894:20;;;;;24704:216;-1:-1:-1;;24704:216:131:o;25181:148::-;25269:4;25248:12;;;25262;;;25244:31;;25287:13;;25284:39;;;25303:18;;:::i;25334:151::-;25424:4;25417:12;;;25403;;;25399:31;;25442:14;;25439:40;;;25459:18;;:::i;26494:128::-;26561:9;;;26582:11;;;26579:37;;;26596:18;;:::i;26899:135::-;26938:3;26959:17;;;26956:43;;26979:18;;:::i;:::-;-1:-1:-1;27026:1:131;27015:13;;26899:135::o;27572:164::-;27648:13;;27697;;27690:21;27680:32;;27670:60;;27726:1;27723;27716:12;27741:202;27808:6;27861:2;27849:9;27840:7;27836:23;27832:32;27829:52;;;27877:1;27874;27867:12;27829:52;27900:37;27927:9;27900:37;:::i;27948:854::-;28146:4;28194:2;28183:9;28179:18;-1:-1:-1;;;;;28297:2:131;28289:6;28285:15;28274:9;28267:34;28320:2;28358;28353;28342:9;28338:18;28331:30;28381:6;28416;28410:13;28447:6;28439;28432:22;28485:3;28474:9;28470:19;28463:26;;28524:2;28516:6;28512:15;28498:29;;28545:1;28555:169;28569:6;28566:1;28563:13;28555:169;;;28630:13;;28618:26;;28699:15;;;;28664:12;;;;28591:1;28584:9;28555:169;;;28559:3;;28741;28733:11;;;;28792:2;28784:6;28780:15;28775:2;28764:9;28760:18;28753:43;;;27948:854;;;;;;:::o;28807:485::-;28920:6;28928;28936;28989:2;28977:9;28968:7;28964:23;28960:32;28957:52;;;29005:1;29002;28995:12;28957:52;29034:9;29028:16;29018:26;;29084:2;29073:9;29069:18;29063:25;29053:35;;29132:2;29121:9;29117:18;29111:25;29159:18;29151:6;29148:30;29145:50;;;29191:1;29188;29181:12;29145:50;29214:72;29278:7;29269:6;29258:9;29254:22;29214:72;:::i;:::-;29204:82;;;28807:485;;;;;:::o;29491:634::-;29621:6;29629;29637;29645;29653;29661;29669;29677;29730:3;29718:9;29709:7;29705:23;29701:33;29698:53;;;29747:1;29744;29737:12;29698:53;29776:9;29770:16;29760:26;;29826:2;29815:9;29811:18;29805:25;29795:35;;29870:2;29859:9;29855:18;29849:25;29839:35;;29914:2;29903:9;29899:18;29893:25;29883:35;;29958:3;29947:9;29943:19;29937:26;29927:36;;30003:3;29992:9;29988:19;29982:26;29972:36;;30048:3;30037:9;30033:19;30027:26;30017:36;;30072:47;30114:3;30103:9;30099:19;30072:47;:::i;31290:686::-;31566:4;-1:-1:-1;;;;;31676:2:131;31668:6;31664:15;31653:9;31646:34;31728:2;31720:6;31716:15;31711:2;31700:9;31696:18;31689:43;;31768:3;31763:2;31752:9;31748:18;31741:31;31795:56;31846:3;31835:9;31831:19;31823:6;31795:56;:::i;:::-;31899:9;31891:6;31887:22;31882:2;31871:9;31867:18;31860:50;31927:43;31963:6;31955;31927:43;:::i;:::-;31919:51;31290:686;-1:-1:-1;;;;;;;31290:686:131:o;31981:363::-;32076:6;32129:2;32117:9;32108:7;32104:23;32100:32;32097:52;;;32145:1;32142;32135:12;32097:52;32178:9;32172:16;32211:18;32203:6;32200:30;32197:50;;;32243:1;32240;32233:12;32197:50;32266:72;32330:7;32321:6;32310:9;32306:22;32266:72;:::i;32349:338::-;-1:-1:-1;;;;;32528:6:131;32524:55;32513:9;32506:74;32616:2;32611;32600:9;32596:18;32589:30;32487:4;32636:45;32677:2;32666:9;32662:18;32654:6;32636:45;:::i;41220:362::-;41425:6;41414:9;41407:25;41468:6;41463:2;41452:9;41448:18;41441:34;41511:2;41506;41495:9;41491:18;41484:30;41388:4;41531:45;41572:2;41561:9;41557:18;41549:6;41531:45;:::i;41587:435::-;41820:6;41809:9;41802:25;41863:6;41858:2;41847:9;41843:18;41836:34;41906:6;41901:2;41890:9;41886:18;41879:34;41949:3;41944:2;41933:9;41929:18;41922:31;41783:4;41970:46;42011:3;42000:9;41996:19;41988:6;41970:46;:::i;42027:441::-;42195:4;-1:-1:-1;;;;;42305:2:131;42297:6;42293:15;42282:9;42275:34;42357:2;42349:6;42345:15;42340:2;42329:9;42325:18;42318:43;;42397:2;42392;42381:9;42377:18;42370:30;42417:45;42458:2;42447:9;42443:18;42435:6;42417:45;:::i;44109:287::-;44238:3;44276:6;44270:13;44292:66;44351:6;44346:3;44339:4;44331:6;44327:17;44292:66;:::i;:::-;44374:16;;;;;44109:287;-1:-1:-1;;44109:287:131:o;44401:181::-;44432:1;44458:8;44493:2;44490:1;44486:10;44515:3;44505:37;;44522:18;;:::i;:::-;44560:10;;44556:20;;;;;44401:181;-1:-1:-1;;44401:181:131:o;44948:189::-;44987:1;45013:8;45048:2;45045:1;45041:10;45070:3;45060:37;;45077:18;;:::i;45142:247::-;45213:8;45253:10;;;45265;;;45249:27;45296:20;;;;45213:8;45335:24;;;45325:58;;45363:18;;:::i;45394:173::-;45462:8;45503:10;;;45491;;;45487:27;;45526:12;;;45523:38;;;45541:18;;:::i;45572:200::-;45638:9;;;45611:4;45666:9;;45694:10;;45706:12;;;45690:29;45729:12;;;45721:21;;45687:56;45684:82;;;45746:18;;:::i;45777:384::-;-1:-1:-1;;;;;;45962:33:131;;45950:46;;46019:13;;45932:3;;46041:74;46019:13;46104:1;46095:11;;46088:4;46076:17;;46041:74;:::i;:::-;46135:16;;;;46153:1;46131:24;;45777:384;-1:-1:-1;;;45777:384:131:o;46166:610::-;46412:13;;46355:3;;46386;;46465:4;46492:15;;;46355:3;46535:175;46549:6;46546:1;46543:13;46535:175;;;46612:13;;46598:28;;46648:14;;;;46685:15;;;;46571:1;46564:9;46535:175;;;-1:-1:-1;;46719:21:131;;;-1:-1:-1;46756:14:131;;;;;-1:-1:-1;;;46166:610:131:o;47966:614::-;48095:6;48103;48156:2;48144:9;48135:7;48131:23;48127:32;48124:52;;;48172:1;48169;48162:12;48124:52;48205:9;48199:16;48234:18;48275:2;48267:6;48264:14;48261:34;;;48291:1;48288;48281:12;48261:34;48314:72;48378:7;48369:6;48358:9;48354:22;48314:72;:::i;:::-;48304:82;;48432:2;48421:9;48417:18;48411:25;48395:41;;48461:2;48451:8;48448:16;48445:36;;;48477:1;48474;48467:12;48445:36;;48500:74;48566:7;48555:8;48544:9;48540:24;48500:74;:::i;:::-;48490:84;;;47966:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "98446": [
        {
          "start": 21057,
          "length": 32
        },
        {
          "start": 25019,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Constructor()": "3c322dd3",
    "test_InvalidLength()": "88721681",
    "test_Scenario1()": "51f44d95",
    "test_Scenario2()": "efbc8013",
    "test_Scenario3()": "396b9c98",
    "test_Scenario4()": "5322e371"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Uint128x128Math__PowUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Constructor\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_InvalidLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario1\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario2\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario3\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario4\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Market deployed: - USDT/USDC, V1 with low liquidity, V2 with high liquidity - WNATIVE/USDC, V1 with high liquidity, V2 with low liquidity - WETH/USDC, V1 with low liquidity, V2.2 with high liquidity - BNB/USDC, V2 with high liquidity, V2.2 with low liquidity Every market with low liquidity has a slighly higher price. It should be picked with small amounts but not with large amounts. All tokens are considered 18 decimals for simplification purposes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/integration/LBQuoter.t.sol\":\"LiquidityBinQuoterTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c\",\"dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0xccb4767ab5398f28b4bf258021d57b9ca226fed828ba26ec6e79fb5fc49f7052\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb5e06280d8cb198a770e8b144ba3a280f7189012a85dee338c1230bb4b7ddcb\",\"dweb:/ipfs/QmY2JEmGLH6iDyNB1zwGZ97ATBwHa4s1CX27DiXzEZf7s2\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b\",\"dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4\",\"dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533\",\"dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7\",\"dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9\",\"dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x22eb0aa534285d73a73a04eaf0fbec53f680a7273edd9ea9c0215ae38e652711\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7537b3e55fc893a89b6571d4f1f230c9720b54402d0eed5df93c7855c2000641\",\"dweb:/ipfs/QmYJhnyULK72GtrPuzuUjSnSU1Ug4XnwMnzx9Bo35vSMjW\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x77a859e2999dba53f300c0e333d9f926acc695f0f0326d7dc8ac324460283ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d353199cdd9cae11ab9838406a15498f4923108966c523a336cdaf207b21b07b\",\"dweb:/ipfs/QmR4xyAeNGwTUgQENaEGxRkvF7zdUbPKrasiSWSjeES5WK\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x97bcf4b747f4d89b74bb476a3642e40da07d89f4ae79f7d8f3b541822d7cebe4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc661162ec72a7c60aa24370c9e7e41ebbf60258fb677c0ea5e05a850b229817\",\"dweb:/ipfs/QmSKrhGmNx2SJTnU3FmuWCgCUgK1Gb7sgdsUjmLcrBXwDZ\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x8a6c0bb454f610d49c9a26b57109dc4c2512f8b75a08f2f13a6aa096a4136231\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79c9d9a035a57770c24b3940a6d79052ba83aaae643ea32a0cbd6ead383355ad\",\"dweb:/ipfs/QmWohZTiowM8YtG9gKFqGnnFTZvrnRz2LSkSJytAS4nrP4\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb36f9e25be004ad59e4cadff31ccb80701f20e240984e9f27d4fa4c481ba76b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://64cacbc9517892191513f076f280046ee024e0bcc2f5f0baea7952106a1aa76d\",\"dweb:/ipfs/QmdZsJJ1TZ4sirNgvqG9W5pegM1bCbXyb6LEDxJ7pCQ7K6\"]},\"src/interfaces/IJoeFactory.sol\":{\"keccak256\":\"0xd1f116ee8133101c2c07112dfe871fabdcb182f9b84468765b58a5136d661ba6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://39e15e3db5f37a23410e6917d0f006390bfe48bb7e1549242e2927c498ee9c70\",\"dweb:/ipfs/QmapjmXv1ouKPGL7vvLYaaFakxZ3YJb55LdNe2nyN8RZaz\"]},\"src/interfaces/IJoePair.sol\":{\"keccak256\":\"0x8f3f3f22167722e8e0b200768ef953b5f5a84064cf385e16d162ac4229f34c23\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c7d698db18059eadd0490f68c69b04b5349150346601dc6951d8cc2a2796bc25\",\"dweb:/ipfs/Qmd2CxzN7GtM8BhkotDroJkWLEYdvT8U3vwYSK4chbSWos\"]},\"src/interfaces/IJoeRouter01.sol\":{\"keccak256\":\"0xf4b1231b30bfc09c20708865915b67eb0bf906fc09ad0da2b0b724a8d83d58f7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3b3ba0bb0ac3d075019262b184fb833e9cd0b5faea4a6a7db36c43a7871a2474\",\"dweb:/ipfs/QmPKEFQHdXUP5wadWwicUopbAerQZtpvPRRpCJsbJ3XGDq\"]},\"src/interfaces/IJoeRouter02.sol\":{\"keccak256\":\"0x7845f6f38ec7dc5bc327055ab11d386dce9159211969243234a1826cd5261557\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1afddf6f53ed0096d6a1b03bb02af5df352f4d9bb588592d2184f4a901d3933e\",\"dweb:/ipfs/QmZGiDagk2CD2PVKQE34Prq9nKw3WxdeiinwjQDKZafLuM\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0x03806497102c036a26e13fc7734c7eb2dc2e746a7e07bba9743e49c696d5e83c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cff60a63ce5e38fcd7634d6f0c10062b17eb9906cdee51163631164f848af2e\",\"dweb:/ipfs/QmeR1WY7ccnUxdQYCgGjnMzuUkqnwNErcLoS8jG7QPYcq8\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x0595b40912fd6ba4c3ea7d6739e467b4381c9d6cc85218c5bd3536c9fb4ecc2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a8f1cdd283a42c87aa87f9d39734e40e7d054a436c86fc6594cb6c2627bd85e\",\"dweb:/ipfs/QmQfaLb1FTPcCs7vQ6qf7SXuqgQzXLAWnaMyZkixkNN8WE\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xab58bd3202e2cf14d43a17246a9d1294d135357d33164a2113b61c57b1129cae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678695cf709471e3969602a1adae5b2ba09617f73feb9787e35f6985286ddcd5\",\"dweb:/ipfs/QmUBjdC5131ho5Jb797e6Lf6yZSU9BgBh1cvrNzWWtfLd5\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x50691b25afe50c5f24b7dc4d89e15872c1ff833962503ee3985616025d715f25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296e023253effdf4e2900eb3562cd6139f6e4948815cd125d2a3db866e351ed1\",\"dweb:/ipfs/QmaWdjKforJGooUYRPz9XqETyzfQesrtyteYPwgCD4Xh6D\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x6dd45a103c84d545155f1d1010c0b0cfe4e9e4097ab7c50a8498756e46f2c80a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d5dba25033c025dc6a9124d4fb88e6c146d87b24518adfc789b6bef31673140\",\"dweb:/ipfs/QmYdAxVvvvBsPDnMx7vLHma8Yuaqj9MW6f4TP2ixPyH3Eq\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x7910e19e35a01a163a9f8c4040dc19e1663c4d562a22a1181d25610ebc5295a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d477e76d0bdc62be7968bc2b80b588e19c56564d9503595066a3c18f642842af\",\"dweb:/ipfs/QmY4MkuWHULoK5Wce56i89AWZeEwdDk5gchnC2haWh2Zz2\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51\",\"dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xadf5f2fc6defaf2676268318178af243ec966809d0ef952c3734b26e6e42ae06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07610f6ec8f24c10c696e82df384ae2bcba65fd773e543186b9b663b0d75d24a\",\"dweb:/ipfs/QmSVb3WAhQV1sNKrtutWCcfsoA6288fJYbbcPrN9Q5ezjp\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0x6ec82e130bfcee455420f5b6025dd9f6237654c5d081b1a929de1c4ac942387a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba0a398ffeea4227ce9eee3a76c97a47a8ac39ac2b85cda60bc24a93c5c7386a\",\"dweb:/ipfs/QmP1oUtTGG6PWu1n9T7n38iQVKMsDavhA9kCyLSjWTEgLt\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0xa6195c864ee0b8dca8fca9e7caa57cbd7bc9030c70aae4e1f1539db72390c2e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2a000530f5d9bd7a9c6c908c568d256a66f2b3e69d0ec78e027162f25b7393f9\",\"dweb:/ipfs/QmZypaixp9XeSCY5sWCrQXqQYUXEZpzqcHQSq7WowYraP5\"]},\"src/libraries/Clone.sol\":{\"keccak256\":\"0x07e80742324ba0e91af1221b07a2868ba736c42e02c29c216da047c9c13d6814\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://74ef31549ae883e5249c2e7b324fe309eb152e0e654da7e4e9f89cc2e35534a3\",\"dweb:/ipfs/QmbMhooa3LV9RDrAzVYBpw4vAurHztt638vCuKF5E4ymjV\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xeb531944284c1a12410b47605869a65f7a3d6f97e24e9dff5a9b8972e9dd6e5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4840c7e6de5c27bd9c46bed582bdaa9e7de4b9d3e9441a4b7b0de40f6ae1e7ca\",\"dweb:/ipfs/QmNZnqNc2MayvLR3VsmPZ3tzhkFkPgD3J7tKLwWr6mzFxM\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x577da4f975f0b547bcfabe9fe6ca8562bcbe12459e0b4b40408829453eabedef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbd6b51786286234c95eaa6e20b78365ee661baacf8fa8d15b1208eebaf1b3c7\",\"dweb:/ipfs/QmSNtWqGMiuzCjYnLTMKCuYFkAcNunQ5uXKSPeU3jt7uRh\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x128845623787e6d43d1827defe114499d8c917fd3fea8f1a783ae42174076ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f653b932ebff34f5c39f8536e80da6a4f5778285210c2602a8f9766faf3d7fc\",\"dweb:/ipfs/Qmc8hSHLbyx7dvwpd9aHCRp9GFqYH3kWqyXzRC7kFoDrAj\"]},\"src/libraries/JoeLibrary.sol\":{\"keccak256\":\"0x8d5f41e6a440f97475138cff9a22eef7cfe24dc489c4dcd28d64206eba50c243\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c7e3a7450f460794f5ccfb4b1b8c6a9ad13c20b2ce3a62ba2acb2a17e1021131\",\"dweb:/ipfs/QmbaerUuNUgT1DYy1vm7eFCk6JpCy6dkpfpAcYZsNNH3Lm\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x16fa0f11ffc303f7c8aa65b8a416a5e26ce9dd7bd7e879d44e1c8ab5d5c49a3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3d2277abdca1bce6a2506faf028c1215a17c9d886146f2b12ea56b1f5ddb409\",\"dweb:/ipfs/QmTbS7WN5QC7wb86UYfDpYC5jryZnsaUAh4iNPmEenWZWF\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0x53163f663dad415ede2e5f0705700268445eb0586070fb253ff65f9afbcc1a8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f07672f538f7b0a4b826379f988d5cd17c93eab371b8dee597a2228f2c1533d\",\"dweb:/ipfs/Qmaq2AUCiRzrqnWPVE7TH62ZTUcYJ4cXSGGRQV4q8ASELZ\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe660c07d0812609a65bcdccc1d7212116e8075c3a86cf9b15ead3639b0f9fdb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61c85e1bc1107f22b13c3c5e43fdda89eb6ed3f9ab9df123e18914b24f3ff054\",\"dweb:/ipfs/QmUewajrhnmLPJ7qgDmXb4FZbNJdtArxGu5eQca8Mo1YTb\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xa30227012c3e9e07538b93352235803799df37cc45bc9e52386114da02e0e5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9845d1d0c074569569cdeb21ee77e94140062cce50ccf5cb3ab3c43dc1fe8675\",\"dweb:/ipfs/QmQb3AMgzzhrYpgAiHBZzsTo95RGzvGTj9BEXnjv3PrKRd\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x7b359776521706ae1291cbf8707919aaa5cb78d59b9dfbe5393322c393250b1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb9fe4accf6abda06f8b4ba02f86d37df109e4b8d14b78a848eb4b4cee359485\",\"dweb:/ipfs/QmSTkrek6fhvgiato8tC6ARz4M11Ynqgyuy7d2QeGiWXEG\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xd7caeb3b8c48ac9015c89a5fc6e6387a421359c0d773b6cd276baa17eb8c4c3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://100c723b4e0739a2fcb9e6f429c0db1583392a92bb8e85af41f1e1b3f632ab50\",\"dweb:/ipfs/QmSCWAoZfo8hS4ZUUcohahc93pMLSUXFHLfkpLq7QBkPBz\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x0508102d0e1197ec2e323bd518fae0862c379345a1473e095509ff53c6070e74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebcaba260405c768eacd1a9aaf5e824936324410b85a57b87383832fca8ab580\",\"dweb:/ipfs/QmVDrsm2RVPXB6L8bNmMQnxNnrUeavscWPtfERVCbRY6i7\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x4e57313a54c7809e23cfbda591daf98f21fbabe6db88168c98f62e9cf48199bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f14817b310ad63744d86bdcb460d5b226c450d180e61ef7a6aae00bf02bb9bab\",\"dweb:/ipfs/QmR6ua4JXdFgwaUKzRTCbBvQGKvQD2arHS1RkDf8zTzU2e\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x3e22926e8f7d352568f01a896860c83b3ab35b47a0ed9a0f2e780a82aa52f4a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3fc2ade1520197ab28ad6292a1d70d3182b9741030ad69c8a915b4c09ebec1f5\",\"dweb:/ipfs/QmYRtP5AiMXCpiBPrmuWd2R1mYGyuXoa24GeZJRUBSS7wH\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x49e66f461bfb118708ce22674b9335314f192f59fe07d1935d3d8b4e9319a364\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb230239bf4397b3d5c9af9409e0595c241edea0de388d6f2637cfc9b553a67f\",\"dweb:/ipfs/QmXFhcmeB1sZJWKcwXTJwfpNfbQ6V7p5ex7QoXnaoDWDyp\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0xf4499104510a5ea48a68cec3dfc9608ae939294e62706fe05f41db41be4e8ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://917742b80d321e51ff44332cbedb5e256a7a01488fe1231f9228eb88d12abda7\",\"dweb:/ipfs/QmS737xKXgbzKW8h5VkfRgrR4qVsyq3s1HqomvM4VnujX6\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xe84206e2561ef32aef2d23ce5022f0174898a26d4d60346675e7a7fd76054fc0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4238023aeb54caf0d245b00063b37a736142413d3040a175b8d5765ee148242d\",\"dweb:/ipfs/QmSqvRJAxtCLjkp19rW8jxzvocr6e478u2Ge5iLyJojJXF\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0xa85a6d3be7cdf95ec9b246d36c3843de738af3df11fcc2bf8bf6e15c350870d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffa97dbe1dc755a243a81a2590e3f25e5399549351a941c2835cca190a0a3fa0\",\"dweb:/ipfs/QmbKUhSjHj1Y48dCPfiYSLybQ8miYfQ99EWsWdP8orpeaB\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x31086d83be376b4eeeeab569a84b159ddc829ebc85caff99e888fcd516b3923c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://940437928363c899ca71dcd1a3f8926db7d39772d1c049e88108aafc2f0344bc\",\"dweb:/ipfs/QmWy3BwLRFcZmDM3xsBN6aMAkw3RiNWh9Qzx5QbbQ5Ahqo\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0xd724051563686f523e9128c42c6fc7ad50264aacc1abb2c6159d1277a45d0325\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d3357c24673521f2f3a6e0c4db2631d6c0d983944f3196f725472c021945149f\",\"dweb:/ipfs/QmUPLCeDXx9Qzk5ESGEbx9AuADLERDs1dpvPVqU1Kmtgr9\"]},\"test/integration/LBQuoter.t.sol\":{\"keccak256\":\"0x33ca71868f0569e47e3097a41df2905246a2b725c5da280cf64ad8d58270e02c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cca389d00fd6109a03368a0c44792cacbc9c770b1be9d6aa1bb777c230a5da8d\",\"dweb:/ipfs/QmWg5hzZ1XpcUGprMKK7gGeuVdvWstzfyn3r2RRnxNszdm\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x19b31723b648f1fe95ea027288d8c197153c239785bfe7e1a22e56f18fb5e3b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4b82fc01b2d7b112a676bc5bc00f3f4f514b6354d234900b76b0e88c8e0aa88\",\"dweb:/ipfs/QmWu2mLvYYNrf1CqZQat22mnbAiyVvwbYReCmvYsZXFNZa\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xadf6f8e7aa56d629625914ae98987efdbe77aec6e0b25e9e270b630b2cf96724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433605d01f5203ca097d8c6b3e7ddd4d83da0df37bf71a4c168c4c21eb50135b\",\"dweb:/ipfs/QmfAsfxgeiGQzEjeLig4etExAdg7v4joG4AE9tMrgDfuv3\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "Uint128x128Math__PowUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Constructor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_InvalidLength"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario1"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario3"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario4"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/integration/LBQuoter.t.sol": "LiquidityBinQuoterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361",
        "urls": [
          "bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c",
          "dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0xccb4767ab5398f28b4bf258021d57b9ca226fed828ba26ec6e79fb5fc49f7052",
        "urls": [
          "bzz-raw://fb5e06280d8cb198a770e8b144ba3a280f7189012a85dee338c1230bb4b7ddcb",
          "dweb:/ipfs/QmY2JEmGLH6iDyNB1zwGZ97ATBwHa4s1CX27DiXzEZf7s2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763",
        "urls": [
          "bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b",
          "dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362",
        "urls": [
          "bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4",
          "dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876",
        "urls": [
          "bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533",
          "dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9",
        "urls": [
          "bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b",
          "dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308",
        "urls": [
          "bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80",
          "dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12",
        "urls": [
          "bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7",
          "dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x6fac27fb1885a1d9fd2ce3f8fac4e44a6596ca4d44207c9ef2541ba8c941291e",
        "urls": [
          "bzz-raw://2079378abdb36baec15c23bc2353b73a3d28d1d0610b436b0c1c4e6fa61d65c9",
          "dweb:/ipfs/QmVZkRFMzKW7sLaugKSTbMNnUBKWF3QDsoMi5uoQFyVMjf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x22eb0aa534285d73a73a04eaf0fbec53f680a7273edd9ea9c0215ae38e652711",
        "urls": [
          "bzz-raw://7537b3e55fc893a89b6571d4f1f230c9720b54402d0eed5df93c7855c2000641",
          "dweb:/ipfs/QmYJhnyULK72GtrPuzuUjSnSU1Ug4XnwMnzx9Bo35vSMjW"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x77a859e2999dba53f300c0e333d9f926acc695f0f0326d7dc8ac324460283ae7",
        "urls": [
          "bzz-raw://d353199cdd9cae11ab9838406a15498f4923108966c523a336cdaf207b21b07b",
          "dweb:/ipfs/QmR4xyAeNGwTUgQENaEGxRkvF7zdUbPKrasiSWSjeES5WK"
        ],
        "license": "MIT"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x97bcf4b747f4d89b74bb476a3642e40da07d89f4ae79f7d8f3b541822d7cebe4",
        "urls": [
          "bzz-raw://bc661162ec72a7c60aa24370c9e7e41ebbf60258fb677c0ea5e05a850b229817",
          "dweb:/ipfs/QmSKrhGmNx2SJTnU3FmuWCgCUgK1Gb7sgdsUjmLcrBXwDZ"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x8a6c0bb454f610d49c9a26b57109dc4c2512f8b75a08f2f13a6aa096a4136231",
        "urls": [
          "bzz-raw://79c9d9a035a57770c24b3940a6d79052ba83aaae643ea32a0cbd6ead383355ad",
          "dweb:/ipfs/QmWohZTiowM8YtG9gKFqGnnFTZvrnRz2LSkSJytAS4nrP4"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb36f9e25be004ad59e4cadff31ccb80701f20e240984e9f27d4fa4c481ba76b8",
        "urls": [
          "bzz-raw://64cacbc9517892191513f076f280046ee024e0bcc2f5f0baea7952106a1aa76d",
          "dweb:/ipfs/QmdZsJJ1TZ4sirNgvqG9W5pegM1bCbXyb6LEDxJ7pCQ7K6"
        ],
        "license": "MIT"
      },
      "src/interfaces/IJoeFactory.sol": {
        "keccak256": "0xd1f116ee8133101c2c07112dfe871fabdcb182f9b84468765b58a5136d661ba6",
        "urls": [
          "bzz-raw://39e15e3db5f37a23410e6917d0f006390bfe48bb7e1549242e2927c498ee9c70",
          "dweb:/ipfs/QmapjmXv1ouKPGL7vvLYaaFakxZ3YJb55LdNe2nyN8RZaz"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IJoePair.sol": {
        "keccak256": "0x8f3f3f22167722e8e0b200768ef953b5f5a84064cf385e16d162ac4229f34c23",
        "urls": [
          "bzz-raw://c7d698db18059eadd0490f68c69b04b5349150346601dc6951d8cc2a2796bc25",
          "dweb:/ipfs/Qmd2CxzN7GtM8BhkotDroJkWLEYdvT8U3vwYSK4chbSWos"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IJoeRouter01.sol": {
        "keccak256": "0xf4b1231b30bfc09c20708865915b67eb0bf906fc09ad0da2b0b724a8d83d58f7",
        "urls": [
          "bzz-raw://3b3ba0bb0ac3d075019262b184fb833e9cd0b5faea4a6a7db36c43a7871a2474",
          "dweb:/ipfs/QmPKEFQHdXUP5wadWwicUopbAerQZtpvPRRpCJsbJ3XGDq"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IJoeRouter02.sol": {
        "keccak256": "0x7845f6f38ec7dc5bc327055ab11d386dce9159211969243234a1826cd5261557",
        "urls": [
          "bzz-raw://1afddf6f53ed0096d6a1b03bb02af5df352f4d9bb588592d2184f4a901d3933e",
          "dweb:/ipfs/QmZGiDagk2CD2PVKQE34Prq9nKw3WxdeiinwjQDKZafLuM"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0x03806497102c036a26e13fc7734c7eb2dc2e746a7e07bba9743e49c696d5e83c",
        "urls": [
          "bzz-raw://3cff60a63ce5e38fcd7634d6f0c10062b17eb9906cdee51163631164f848af2e",
          "dweb:/ipfs/QmeR1WY7ccnUxdQYCgGjnMzuUkqnwNErcLoS8jG7QPYcq8"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x0595b40912fd6ba4c3ea7d6739e467b4381c9d6cc85218c5bd3536c9fb4ecc2b",
        "urls": [
          "bzz-raw://5a8f1cdd283a42c87aa87f9d39734e40e7d054a436c86fc6594cb6c2627bd85e",
          "dweb:/ipfs/QmQfaLb1FTPcCs7vQ6qf7SXuqgQzXLAWnaMyZkixkNN8WE"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xab58bd3202e2cf14d43a17246a9d1294d135357d33164a2113b61c57b1129cae",
        "urls": [
          "bzz-raw://678695cf709471e3969602a1adae5b2ba09617f73feb9787e35f6985286ddcd5",
          "dweb:/ipfs/QmUBjdC5131ho5Jb797e6Lf6yZSU9BgBh1cvrNzWWtfLd5"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x50691b25afe50c5f24b7dc4d89e15872c1ff833962503ee3985616025d715f25",
        "urls": [
          "bzz-raw://296e023253effdf4e2900eb3562cd6139f6e4948815cd125d2a3db866e351ed1",
          "dweb:/ipfs/QmaWdjKforJGooUYRPz9XqETyzfQesrtyteYPwgCD4Xh6D"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x6dd45a103c84d545155f1d1010c0b0cfe4e9e4097ab7c50a8498756e46f2c80a",
        "urls": [
          "bzz-raw://8d5dba25033c025dc6a9124d4fb88e6c146d87b24518adfc789b6bef31673140",
          "dweb:/ipfs/QmYdAxVvvvBsPDnMx7vLHma8Yuaqj9MW6f4TP2ixPyH3Eq"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x7910e19e35a01a163a9f8c4040dc19e1663c4d562a22a1181d25610ebc5295a1",
        "urls": [
          "bzz-raw://d477e76d0bdc62be7968bc2b80b588e19c56564d9503595066a3c18f642842af",
          "dweb:/ipfs/QmY4MkuWHULoK5Wce56i89AWZeEwdDk5gchnC2haWh2Zz2"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70",
        "urls": [
          "bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51",
          "dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xadf5f2fc6defaf2676268318178af243ec966809d0ef952c3734b26e6e42ae06",
        "urls": [
          "bzz-raw://07610f6ec8f24c10c696e82df384ae2bcba65fd773e543186b9b663b0d75d24a",
          "dweb:/ipfs/QmSVb3WAhQV1sNKrtutWCcfsoA6288fJYbbcPrN9Q5ezjp"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0x6ec82e130bfcee455420f5b6025dd9f6237654c5d081b1a929de1c4ac942387a",
        "urls": [
          "bzz-raw://ba0a398ffeea4227ce9eee3a76c97a47a8ac39ac2b85cda60bc24a93c5c7386a",
          "dweb:/ipfs/QmP1oUtTGG6PWu1n9T7n38iQVKMsDavhA9kCyLSjWTEgLt"
        ],
        "license": "MIT"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0xa6195c864ee0b8dca8fca9e7caa57cbd7bc9030c70aae4e1f1539db72390c2e7",
        "urls": [
          "bzz-raw://2a000530f5d9bd7a9c6c908c568d256a66f2b3e69d0ec78e027162f25b7393f9",
          "dweb:/ipfs/QmZypaixp9XeSCY5sWCrQXqQYUXEZpzqcHQSq7WowYraP5"
        ],
        "license": "MIT"
      },
      "src/libraries/Clone.sol": {
        "keccak256": "0x07e80742324ba0e91af1221b07a2868ba736c42e02c29c216da047c9c13d6814",
        "urls": [
          "bzz-raw://74ef31549ae883e5249c2e7b324fe309eb152e0e654da7e4e9f89cc2e35534a3",
          "dweb:/ipfs/QmbMhooa3LV9RDrAzVYBpw4vAurHztt638vCuKF5E4ymjV"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xeb531944284c1a12410b47605869a65f7a3d6f97e24e9dff5a9b8972e9dd6e5a",
        "urls": [
          "bzz-raw://4840c7e6de5c27bd9c46bed582bdaa9e7de4b9d3e9441a4b7b0de40f6ae1e7ca",
          "dweb:/ipfs/QmNZnqNc2MayvLR3VsmPZ3tzhkFkPgD3J7tKLwWr6mzFxM"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x577da4f975f0b547bcfabe9fe6ca8562bcbe12459e0b4b40408829453eabedef",
        "urls": [
          "bzz-raw://cbd6b51786286234c95eaa6e20b78365ee661baacf8fa8d15b1208eebaf1b3c7",
          "dweb:/ipfs/QmSNtWqGMiuzCjYnLTMKCuYFkAcNunQ5uXKSPeU3jt7uRh"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x128845623787e6d43d1827defe114499d8c917fd3fea8f1a783ae42174076ddc",
        "urls": [
          "bzz-raw://1f653b932ebff34f5c39f8536e80da6a4f5778285210c2602a8f9766faf3d7fc",
          "dweb:/ipfs/Qmc8hSHLbyx7dvwpd9aHCRp9GFqYH3kWqyXzRC7kFoDrAj"
        ],
        "license": "MIT"
      },
      "src/libraries/JoeLibrary.sol": {
        "keccak256": "0x8d5f41e6a440f97475138cff9a22eef7cfe24dc489c4dcd28d64206eba50c243",
        "urls": [
          "bzz-raw://c7e3a7450f460794f5ccfb4b1b8c6a9ad13c20b2ce3a62ba2acb2a17e1021131",
          "dweb:/ipfs/QmbaerUuNUgT1DYy1vm7eFCk6JpCy6dkpfpAcYZsNNH3Lm"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x16fa0f11ffc303f7c8aa65b8a416a5e26ce9dd7bd7e879d44e1c8ab5d5c49a3a",
        "urls": [
          "bzz-raw://e3d2277abdca1bce6a2506faf028c1215a17c9d886146f2b12ea56b1f5ddb409",
          "dweb:/ipfs/QmTbS7WN5QC7wb86UYfDpYC5jryZnsaUAh4iNPmEenWZWF"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0x53163f663dad415ede2e5f0705700268445eb0586070fb253ff65f9afbcc1a8b",
        "urls": [
          "bzz-raw://4f07672f538f7b0a4b826379f988d5cd17c93eab371b8dee597a2228f2c1533d",
          "dweb:/ipfs/Qmaq2AUCiRzrqnWPVE7TH62ZTUcYJ4cXSGGRQV4q8ASELZ"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe660c07d0812609a65bcdccc1d7212116e8075c3a86cf9b15ead3639b0f9fdb7",
        "urls": [
          "bzz-raw://61c85e1bc1107f22b13c3c5e43fdda89eb6ed3f9ab9df123e18914b24f3ff054",
          "dweb:/ipfs/QmUewajrhnmLPJ7qgDmXb4FZbNJdtArxGu5eQca8Mo1YTb"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xa30227012c3e9e07538b93352235803799df37cc45bc9e52386114da02e0e5cf",
        "urls": [
          "bzz-raw://9845d1d0c074569569cdeb21ee77e94140062cce50ccf5cb3ab3c43dc1fe8675",
          "dweb:/ipfs/QmQb3AMgzzhrYpgAiHBZzsTo95RGzvGTj9BEXnjv3PrKRd"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x7b359776521706ae1291cbf8707919aaa5cb78d59b9dfbe5393322c393250b1f",
        "urls": [
          "bzz-raw://bb9fe4accf6abda06f8b4ba02f86d37df109e4b8d14b78a848eb4b4cee359485",
          "dweb:/ipfs/QmSTkrek6fhvgiato8tC6ARz4M11Ynqgyuy7d2QeGiWXEG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xd7caeb3b8c48ac9015c89a5fc6e6387a421359c0d773b6cd276baa17eb8c4c3f",
        "urls": [
          "bzz-raw://100c723b4e0739a2fcb9e6f429c0db1583392a92bb8e85af41f1e1b3f632ab50",
          "dweb:/ipfs/QmSCWAoZfo8hS4ZUUcohahc93pMLSUXFHLfkpLq7QBkPBz"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x0508102d0e1197ec2e323bd518fae0862c379345a1473e095509ff53c6070e74",
        "urls": [
          "bzz-raw://ebcaba260405c768eacd1a9aaf5e824936324410b85a57b87383832fca8ab580",
          "dweb:/ipfs/QmVDrsm2RVPXB6L8bNmMQnxNnrUeavscWPtfERVCbRY6i7"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x4e57313a54c7809e23cfbda591daf98f21fbabe6db88168c98f62e9cf48199bb",
        "urls": [
          "bzz-raw://f14817b310ad63744d86bdcb460d5b226c450d180e61ef7a6aae00bf02bb9bab",
          "dweb:/ipfs/QmR6ua4JXdFgwaUKzRTCbBvQGKvQD2arHS1RkDf8zTzU2e"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x3e22926e8f7d352568f01a896860c83b3ab35b47a0ed9a0f2e780a82aa52f4a8",
        "urls": [
          "bzz-raw://3fc2ade1520197ab28ad6292a1d70d3182b9741030ad69c8a915b4c09ebec1f5",
          "dweb:/ipfs/QmYRtP5AiMXCpiBPrmuWd2R1mYGyuXoa24GeZJRUBSS7wH"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x49e66f461bfb118708ce22674b9335314f192f59fe07d1935d3d8b4e9319a364",
        "urls": [
          "bzz-raw://bb230239bf4397b3d5c9af9409e0595c241edea0de388d6f2637cfc9b553a67f",
          "dweb:/ipfs/QmXFhcmeB1sZJWKcwXTJwfpNfbQ6V7p5ex7QoXnaoDWDyp"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0xf4499104510a5ea48a68cec3dfc9608ae939294e62706fe05f41db41be4e8ff4",
        "urls": [
          "bzz-raw://917742b80d321e51ff44332cbedb5e256a7a01488fe1231f9228eb88d12abda7",
          "dweb:/ipfs/QmS737xKXgbzKW8h5VkfRgrR4qVsyq3s1HqomvM4VnujX6"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xe84206e2561ef32aef2d23ce5022f0174898a26d4d60346675e7a7fd76054fc0",
        "urls": [
          "bzz-raw://4238023aeb54caf0d245b00063b37a736142413d3040a175b8d5765ee148242d",
          "dweb:/ipfs/QmSqvRJAxtCLjkp19rW8jxzvocr6e478u2Ge5iLyJojJXF"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0xa85a6d3be7cdf95ec9b246d36c3843de738af3df11fcc2bf8bf6e15c350870d6",
        "urls": [
          "bzz-raw://ffa97dbe1dc755a243a81a2590e3f25e5399549351a941c2835cca190a0a3fa0",
          "dweb:/ipfs/QmbKUhSjHj1Y48dCPfiYSLybQ8miYfQ99EWsWdP8orpeaB"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x31086d83be376b4eeeeab569a84b159ddc829ebc85caff99e888fcd516b3923c",
        "urls": [
          "bzz-raw://940437928363c899ca71dcd1a3f8926db7d39772d1c049e88108aafc2f0344bc",
          "dweb:/ipfs/QmWy3BwLRFcZmDM3xsBN6aMAkw3RiNWh9Qzx5QbbQ5Ahqo"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0xd724051563686f523e9128c42c6fc7ad50264aacc1abb2c6159d1277a45d0325",
        "urls": [
          "bzz-raw://d3357c24673521f2f3a6e0c4db2631d6c0d983944f3196f725472c021945149f",
          "dweb:/ipfs/QmUPLCeDXx9Qzk5ESGEbx9AuADLERDs1dpvPVqU1Kmtgr9"
        ],
        "license": "UNLICENSED"
      },
      "test/integration/LBQuoter.t.sol": {
        "keccak256": "0x33ca71868f0569e47e3097a41df2905246a2b725c5da280cf64ad8d58270e02c",
        "urls": [
          "bzz-raw://cca389d00fd6109a03368a0c44792cacbc9c770b1be9d6aa1bb777c230a5da8d",
          "dweb:/ipfs/QmWg5hzZ1XpcUGprMKK7gGeuVdvWstzfyn3r2RRnxNszdm"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x19b31723b648f1fe95ea027288d8c197153c239785bfe7e1a22e56f18fb5e3b8",
        "urls": [
          "bzz-raw://e4b82fc01b2d7b112a676bc5bc00f3f4f514b6354d234900b76b0e88c8e0aa88",
          "dweb:/ipfs/QmWu2mLvYYNrf1CqZQat22mnbAiyVvwbYReCmvYsZXFNZa"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xadf6f8e7aa56d629625914ae98987efdbe77aec6e0b25e9e270b630b2cf96724",
        "urls": [
          "bzz-raw://433605d01f5203ca097d8c6b3e7ddd4d83da0df37bf71a4c168c4c21eb50135b",
          "dweb:/ipfs/QmfAsfxgeiGQzEjeLig4etExAdg7v4joG4AE9tMrgDfuv3"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/integration/LBQuoter.t.sol",
    "id": 101531,
    "exportedSymbols": {
      "AccessControl": [
        46028
      ],
      "AvalancheAddresses": [
        100123
      ],
      "BinHelper": [
        66632
      ],
      "BitMath": [
        70140
      ],
      "Clone": [
        66754
      ],
      "Constants": [
        66792
      ],
      "ERC20": [
        47341
      ],
      "ERC20Mock": [
        116197
      ],
      "ERC20TransferTaxMock": [
        116251
      ],
      "Encoded": [
        70347
      ],
      "EnumerableMap": [
        50220
      ],
      "EnumerableSet": [
        50833
      ],
      "FeeHelper": [
        66985
      ],
      "FlashBorrower": [
        116980
      ],
      "Hooks": [
        67859
      ],
      "IERC20": [
        47419
      ],
      "IJoeFactory": [
        61939
      ],
      "IJoePair": [
        62182
      ],
      "IJoeRouter01": [
        62491
      ],
      "IJoeRouter02": [
        62581
      ],
      "ILBFactory": [
        63046
      ],
      "ILBFlashLoanCallback": [
        63071
      ],
      "ILBHooks": [
        63244
      ],
      "ILBLegacyFactory": [
        63610
      ],
      "ILBLegacyPair": [
        64026
      ],
      "ILBLegacyRouter": [
        64435
      ],
      "ILBPair": [
        65002
      ],
      "ILBRouter": [
        65534
      ],
      "ILBToken": [
        65657
      ],
      "IWNATIVE": [
        65673
      ],
      "ImmutableClone": [
        67937
      ],
      "JoeLibrary": [
        68143
      ],
      "LBFactory": [
        54016
      ],
      "LBPair": [
        56821
      ],
      "LBQuoter": [
        58109
      ],
      "LBRouter": [
        61346
      ],
      "LBToken": [
        61865
      ],
      "LiquidityBinQuoterTest": [
        101530
      ],
      "LiquidityConfigurations": [
        70517
      ],
      "OracleHelper": [
        68800
      ],
      "Ownable": [
        46259
      ],
      "Ownable2Step": [
        46345
      ],
      "PackedUint128Math": [
        70871
      ],
      "PairParameterHelper": [
        69657
      ],
      "PriceHelper": [
        69831
      ],
      "ReentrancyGuardUpgradeable": [
        69960
      ],
      "SafeCast": [
        71619
      ],
      "SafeERC20": [
        47868
      ],
      "SampleMath": [
        72044
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3507
      ],
      "StdCheats": [
        6360
      ],
      "StdInvariant": [
        6685
      ],
      "StdStorage": [
        7451
      ],
      "StdStyle": [
        10301
      ],
      "StdUtils": [
        11087
      ],
      "Test": [
        11134
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        99922
      ],
      "TokenHelper": [
        70046
      ],
      "TreeMath": [
        72976
      ],
      "Uint256x256Math": [
        73612
      ],
      "Utils": [
        100090
      ],
      "Vm": [
        14564
      ],
      "WNATIVE": [
        117290
      ],
      "console": [
        22628
      ],
      "console2": [
        30753
      ],
      "safeconsole": [
        45478
      ],
      "stdError": [
        6426
      ],
      "stdJson": [
        7277
      ],
      "stdMath": [
        7419
      ],
      "stdStorage": [
        9090
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:11863:105",
    "nodes": [
      {
        "id": 100125,
        "nodeType": "PragmaDirective",
        "src": "40:24:105",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 100126,
        "nodeType": "ImportDirective",
        "src": "66:35:105",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "../helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 101531,
        "sourceUnit": 99923,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 101530,
        "nodeType": "ContractDefinition",
        "src": "591:11311:105",
        "nodes": [
          {
            "id": 100133,
            "nodeType": "UsingForDirective",
            "src": "643:46:105",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 100130,
              "name": "Utils",
              "nameLocations": [
                "649:5:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 100090,
              "src": "649:5:105"
            },
            "typeName": {
              "id": 100132,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 100131,
                "name": "ILBRouter.LiquidityParameters",
                "nameLocations": [
                  "659:9:105",
                  "669:19:105"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 65174,
                "src": "659:29:105"
              },
              "referencedDeclaration": 65174,
              "src": "659:29:105",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LiquidityParameters_$65174_storage_ptr",
                "typeString": "struct ILBRouter.LiquidityParameters"
              }
            }
          },
          {
            "id": 100143,
            "nodeType": "VariableDeclaration",
            "src": "695:87:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "defaultBaseFee",
            "nameLocation": "711:14:105",
            "scope": 101530,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 100134,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 100142,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 100140,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "id": 100135,
                  "name": "DEFAULT_BIN_STEP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 98410,
                  "src": "728:16:105",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "arguments": [
                    {
                      "id": 100138,
                      "name": "DEFAULT_BASE_FACTOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 98413,
                      "src": "755:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    ],
                    "id": 100137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "747:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 100136,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "747:7:105",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 100139,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "747:28:105",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "728:47:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653130",
                "id": 100141,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "778:4:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000000_by_1",
                  "typeString": "int_const 10000000000"
                },
                "value": "1e10"
              },
              "src": "728:54:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 100146,
            "nodeType": "VariableDeclaration",
            "src": "789:58:105",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "wethe",
            "nameLocation": "797:5:105",
            "scope": 101530,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 100144,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:105",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834394435633242644666616336434532424664423636343046344638306632323662633130624142",
              "id": 100145,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "805:42:105",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB"
            },
            "visibility": "internal"
          },
          {
            "id": 100457,
            "nodeType": "FunctionDefinition",
            "src": "854:2676:105",
            "nodes": [],
            "body": {
              "id": 100456,
              "nodeType": "Block",
              "src": "887:2643:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6176616c616e636865",
                            "id": 100155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "927:11:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            },
                            "value": "avalanche"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            }
                          ],
                          "expression": {
                            "id": 100153,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "917:2:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$14564",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 100154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "920:6:105",
                          "memberName": "rpcUrl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13776,
                          "src": "917:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) view external returns (string memory)"
                          }
                        },
                        "id": 100156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:22:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3436303132323830",
                        "id": 100157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_46012280_by_1",
                          "typeString": "int_const 46012280"
                        },
                        "value": "46012280"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_46012280_by_1",
                          "typeString": "int_const 46012280"
                        }
                      ],
                      "expression": {
                        "id": 100150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "897:2:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 100152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "900:16:105",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14066,
                      "src": "897:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 100158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:53:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 100159,
                  "nodeType": "ExpressionStatement",
                  "src": "897:53:105"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 100160,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "960:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LiquidityBinQuoterTest_$101530_$",
                          "typeString": "type(contract super LiquidityBinQuoterTest)"
                        }
                      },
                      "id": 100162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "966:5:105",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 99049,
                      "src": "960:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 100163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:13:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100164,
                  "nodeType": "ExpressionStatement",
                  "src": "960:13:105"
                },
                {
                  "assignments": [
                    100166
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100166,
                      "mutability": "mutable",
                      "name": "lowLiquidityAmount",
                      "nameLocation": "992:18:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100456,
                      "src": "984:26:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "984:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100168,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 100167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "984:33:105"
                },
                {
                  "assignments": [
                    100170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100170,
                      "mutability": "mutable",
                      "name": "highLiquidityAmount",
                      "nameLocation": "1035:19:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100456,
                      "src": "1027:27:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100172,
                  "initialValue": {
                    "hexValue": "31653234",
                    "id": 100171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1057:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "value": "1e24"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:34:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100176,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98468,
                            "src": "1124:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1116:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1116:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1116:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100180,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1139:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1131:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100178,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1131:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1131:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 100182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1146:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 100183,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "1151:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1146:24:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100173,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1111:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100186,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:60:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100190,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98471,
                            "src": "1194:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1186:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1186:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100194,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1209:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1201:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100192,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1201:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1201:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 100196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1216:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 100197,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "1221:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1216:24:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100187,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1181:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100200,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:60:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100204,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98465,
                            "src": "1264:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$117290",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$117290",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 100203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1256:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100202,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1256:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1256:16:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100208,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1282:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1274:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100206,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1274:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1274:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 100210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1289:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 100211,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "1294:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1289:24:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100201,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1251:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:63:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100214,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:63:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100218,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98483,
                            "src": "1337:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100216,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100222,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1352:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1344:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1344:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 100224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1359:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 100225,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "1364:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1359:24:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100215,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1324:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100228,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:60:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100232,
                            "name": "bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98480,
                            "src": "1407:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1399:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100230,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1399:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1399:12:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100236,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1421:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1413:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1413:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1413:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 100238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1428:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 100239,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "1433:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1428:24:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 100229,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5862,
                        5879,
                        6002
                      ],
                      "referencedDeclaration": 5879,
                      "src": "1394:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 100241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100242,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100248,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98471,
                            "src": "1538:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1530:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1530:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1530:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100252,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98468,
                            "src": "1565:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1557:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100250,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1557:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1557:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100254,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100166,
                          "src": "1584:18:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 100255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1584:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100257,
                        "name": "lowLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100166,
                        "src": "1639:18:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 100259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 100262,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1709:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1701:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100260,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1701:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 100264,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1728:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 100265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1734:9:105",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1728:15:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 100266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1728:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100243,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98507,
                        "src": "1495:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoeRouter02_$62581",
                          "typeString": "contract IJoeRouter02"
                        }
                      },
                      "id": 100245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1504:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62220,
                      "src": "1495:21:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 100268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1495:262:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 100269,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:262:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100275,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98465,
                            "src": "1811:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$117290",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$117290",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 100274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1803:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100273,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1803:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1803:16:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100279,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98468,
                            "src": "1841:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1833:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100277,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1833:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1833:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 100281,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100170,
                        "src": "1860:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100282,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100170,
                        "src": "1914:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1947:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 100284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 100287,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1985:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1977:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100285,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1977:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1977:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 100289,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2004:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 100290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2010:9:105",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2004:15:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 100291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2022:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2004:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100270,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98507,
                        "src": "1768:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoeRouter02_$62581",
                          "typeString": "contract IJoeRouter02"
                        }
                      },
                      "id": 100272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1777:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62220,
                      "src": "1768:21:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 100293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:265:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 100294,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:265:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 100300,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98483,
                            "src": "2087:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2079:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100298,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2079:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2079:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100304,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98468,
                            "src": "2114:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 100303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2106:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100302,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2106:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2106:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100306,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100166,
                          "src": "2133:18:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 100307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2154:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2133:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100309,
                        "name": "lowLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100166,
                        "src": "2188:18:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2220:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 100311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2235:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 100314,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2258:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$101530",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 100313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2250:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2250:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2250:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 100319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 100316,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2277:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 100317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2283:9:105",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2277:15:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 100318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2295:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2277:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 100295,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98507,
                        "src": "2044:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IJoeRouter02_$62581",
                          "typeString": "contract IJoeRouter02"
                        }
                      },
                      "id": 100297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2053:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62220,
                      "src": "2044:21:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 100320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:262:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 100321,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:262:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100325,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98471,
                        "src": "2338:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100326,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98468,
                        "src": "2344:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100327,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98404,
                        "src": "2350:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100328,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "2358:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100322,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98489,
                        "src": "2317:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$54016",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 100324,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2325:12:105",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53257,
                      "src": "2317:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$65002_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:58:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$65002",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100330,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100334,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98465,
                        "src": "2425:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$117290",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 100335,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98468,
                        "src": "2434:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 100338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100336,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98404,
                          "src": "2440:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 100337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2449:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "2440:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100339,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "2453:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$117290",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100331,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98489,
                        "src": "2404:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$54016",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 100333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2412:12:105",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53257,
                      "src": "2404:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$65002_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$65002",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100341,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100345,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98483,
                        "src": "2523:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100346,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98468,
                        "src": "2529:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100347,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98404,
                        "src": "2535:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100348,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "2543:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100342,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98489,
                        "src": "2502:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$54016",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 100344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2510:12:105",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53257,
                      "src": "2502:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$65002_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:58:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$65002",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100350,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100354,
                        "name": "bnb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98480,
                        "src": "2610:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100355,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98468,
                        "src": "2615:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 100358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100356,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98404,
                          "src": "2621:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 100357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2630:2:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "2621:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 100359,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "2634:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 100351,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98489,
                        "src": "2589:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$54016",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 100353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2597:12:105",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53257,
                      "src": "2589:20:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$65002_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 100360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:62:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$65002",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 100361,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:62:105"
                },
                {
                  "assignments": [
                    100366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100366,
                      "mutability": "mutable",
                      "name": "liquidityParameters",
                      "nameLocation": "2748:19:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100456,
                      "src": "2711:56:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters"
                      },
                      "typeName": {
                        "id": 100365,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100364,
                          "name": "ILBRouter.LiquidityParameters",
                          "nameLocations": [
                            "2711:9:105",
                            "2721:19:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 65174,
                          "src": "2711:29:105"
                        },
                        "referencedDeclaration": 65174,
                        "src": "2711:29:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_storage_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100375,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100368,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98471,
                        "src": "2805:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100369,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98468,
                        "src": "2811:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 100370,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100170,
                        "src": "2817:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100371,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98404,
                        "src": "2838:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 100372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2846:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      {
                        "hexValue": "30",
                        "id": 100373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2849:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 100367,
                      "name": "getLiquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99393,
                      "src": "2782:22:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$65174_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                      }
                    },
                    "id": 100374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:69:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2711:140:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100379,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100366,
                        "src": "2881:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100376,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98492,
                        "src": "2861:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$61346",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2868:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58532,
                      "src": "2861:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$65174_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:40:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100381,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:40:105"
                },
                {
                  "expression": {
                    "id": 100393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100382,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100366,
                      "src": "2912:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100384,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98465,
                          "src": "2957:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$117290",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 100385,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "2966:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100386,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100166,
                          "src": "2972:18:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 100389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100387,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98404,
                            "src": "2992:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 100388,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3001:2:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "2992:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 100390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3005:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 100391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3008:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$117290",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100383,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99393,
                        "src": "2934:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$65174_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2934:76:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "2912:98:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100394,
                  "nodeType": "ExpressionStatement",
                  "src": "2912:98:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100398,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100366,
                        "src": "3040:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100395,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98492,
                        "src": "3020:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$61346",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3027:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58532,
                      "src": "3020:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$65174_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:40:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100400,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:40:105"
                },
                {
                  "expression": {
                    "id": 100410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100401,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100366,
                      "src": "3071:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100403,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98483,
                          "src": "3116:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100404,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "3122:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100405,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "3128:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 100406,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98404,
                          "src": "3149:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 100407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3157:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 100408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3160:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100402,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99393,
                        "src": "3093:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$65174_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3093:69:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3071:91:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100411,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:91:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100415,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100366,
                        "src": "3192:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100412,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98492,
                        "src": "3172:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$61346",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3179:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58532,
                      "src": "3172:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$65174_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:40:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100417,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:40:105"
                },
                {
                  "expression": {
                    "id": 100429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100418,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100366,
                      "src": "3223:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100420,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98480,
                          "src": "3268:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100421,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "3273:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100422,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100170,
                          "src": "3279:19:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 100425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100423,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98404,
                            "src": "3300:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 100424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3309:2:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "3300:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 100426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 100427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3316:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100419,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99393,
                        "src": "3245:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$65174_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100428,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3245:73:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3223:95:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100430,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:95:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100434,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100366,
                        "src": "3348:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100431,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98492,
                        "src": "3328:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$61346",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3335:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58532,
                      "src": "3328:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$65174_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3328:40:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100436,
                  "nodeType": "ExpressionStatement",
                  "src": "3328:40:105"
                },
                {
                  "expression": {
                    "id": 100448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100437,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100366,
                      "src": "3379:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100439,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98480,
                          "src": "3424:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100440,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "3429:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 100441,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100166,
                          "src": "3435:18:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 100444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 100442,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98404,
                            "src": "3455:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 100443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3464:2:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "3455:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 100445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3468:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 100446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 100438,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99393,
                        "src": "3401:22:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$47419_$_t_contract$_IERC20_$47419_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$65174_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 100447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:72:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3379:94:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 100449,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:94:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100453,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100366,
                        "src": "3503:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$65174_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 100450,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98492,
                        "src": "3483:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$61346",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 100452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3490:12:105",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58532,
                      "src": "3483:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$65174_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 100454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:40:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 100455,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:40:105"
                }
              ]
            },
            "baseFunctions": [
              99049
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "863:5:105",
            "overrides": {
              "id": 100148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "878:8:105"
            },
            "parameters": {
              "id": 100147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:2:105"
            },
            "returnParameters": {
              "id": 100149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "887:0:105"
            },
            "scope": 101530,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100501,
            "nodeType": "FunctionDefinition",
            "src": "3536:335:105",
            "nodes": [],
            "body": {
              "id": 100500,
              "nodeType": "Block",
              "src": "3576:295:105",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 100463,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98501,
                                "src": "3603:6:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$58109",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 100464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3610:11:105",
                              "memberName": "getRouterV2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56946,
                              "src": "3603:18:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 100465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3603:20:105",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3595:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3595:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:29:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100469,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98492,
                            "src": "3634:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBRouter_$61346",
                              "typeString": "contract LBRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBRouter_$61346",
                              "typeString": "contract LBRouter"
                            }
                          ],
                          "id": 100468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3626:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100467,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3626:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3626:15:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a31",
                        "id": 100471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3643:21:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c567442d13ee1b26fde83dca06b68e0563152a0b2d8f5496986745ffc3686fbf",
                          "typeString": "literal_string \"test_Constructor::1\""
                        },
                        "value": "test_Constructor::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c567442d13ee1b26fde83dca06b68e0563152a0b2d8f5496986745ffc3686fbf",
                          "typeString": "literal_string \"test_Constructor::1\""
                        }
                      ],
                      "id": 100460,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3586:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 100472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3586:79:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100473,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:79:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 100477,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98501,
                                "src": "3692:6:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$58109",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 100478,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3699:12:105",
                              "memberName": "getFactoryV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56924,
                              "src": "3692:19:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 100479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3692:21:105",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3684:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100475,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3684:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3684:30:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 100481,
                          "name": "AvalancheAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100123,
                          "src": "3716:18:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$100123_$",
                            "typeString": "type(library AvalancheAddresses)"
                          }
                        },
                        "id": 100482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3735:14:105",
                        "memberName": "JOE_V1_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 100098,
                        "src": "3716:33:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a33",
                        "id": 100483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3751:21:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cae4d8d7c6ad6deb12ffebf3dda33b29ce151df4884fbfbfde83dc7e6e994f9e",
                          "typeString": "literal_string \"test_Constructor::3\""
                        },
                        "value": "test_Constructor::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cae4d8d7c6ad6deb12ffebf3dda33b29ce151df4884fbfbfde83dc7e6e994f9e",
                          "typeString": "literal_string \"test_Constructor::3\""
                        }
                      ],
                      "id": 100474,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3675:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 100484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:98:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100485,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:98:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 100489,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98501,
                                "src": "3800:6:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$58109",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 100490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3807:12:105",
                              "memberName": "getFactoryV2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56935,
                              "src": "3800:19:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 100491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3800:21:105",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 100488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3792:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100487,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3792:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3792:30:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 100495,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98489,
                            "src": "3832:7:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$54016",
                              "typeString": "contract LBFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBFactory_$54016",
                              "typeString": "contract LBFactory"
                            }
                          ],
                          "id": 100494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3824:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 100493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3824:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3824:16:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a35",
                        "id": 100497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3842:21:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efb629698b6d58864f5cefb4cc6ff72a002a984d119785b6ef81f571f795a377",
                          "typeString": "literal_string \"test_Constructor::5\""
                        },
                        "value": "test_Constructor::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efb629698b6d58864f5cefb4cc6ff72a002a984d119785b6ef81f571f795a377",
                          "typeString": "literal_string \"test_Constructor::5\""
                        }
                      ],
                      "id": 100486,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3783:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 100498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3783:81:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100499,
                  "nodeType": "ExpressionStatement",
                  "src": "3783:81:105"
                }
              ]
            },
            "functionSelector": "3c322dd3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Constructor",
            "nameLocation": "3545:16:105",
            "parameters": {
              "id": 100458,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3561:2:105"
            },
            "returnParameters": {
              "id": 100459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:105"
            },
            "scope": 101530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100549,
            "nodeType": "FunctionDefinition",
            "src": "3877:353:105",
            "nodes": [],
            "body": {
              "id": 100548,
              "nodeType": "Block",
              "src": "3914:316:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100508,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "3941:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100548,
                      "src": "3924:22:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100506,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3924:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100507,
                        "nodeType": "ArrayTypeName",
                        "src": "3924:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100509,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3924:22:105"
                },
                {
                  "expression": {
                    "id": 100516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100510,
                      "name": "route",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100508,
                      "src": "3956:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 100514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3978:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 100513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3964:13:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 100511,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3968:7:105",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 100512,
                          "nodeType": "ArrayTypeName",
                          "src": "3968:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 100515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3964:16:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3956:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 100517,
                  "nodeType": "ExpressionStatement",
                  "src": "3956:24:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 100521,
                            "name": "LBQuoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58109,
                            "src": "4006:8:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LBQuoter_$58109_$",
                              "typeString": "type(contract LBQuoter)"
                            }
                          },
                          "id": 100522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4015:22:105",
                          "memberName": "LBQuoter_InvalidLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56860,
                          "src": "4006:31:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 100523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4038:8:105",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4006:40:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 100518,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3990:2:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 100520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3993:12:105",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14531,
                      "src": "3990:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 100524,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100525,
                  "nodeType": "ExpressionStatement",
                  "src": "3990:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100529,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100508,
                        "src": "4089:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 100530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4096:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 100526,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "4057:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 100528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4064:24:105",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57451,
                      "src": "4057:31:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 100531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4057:44:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100532,
                  "nodeType": "ExpressionStatement",
                  "src": "4057:44:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 100536,
                            "name": "LBQuoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58109,
                            "src": "4127:8:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LBQuoter_$58109_$",
                              "typeString": "type(contract LBQuoter)"
                            }
                          },
                          "id": 100537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4136:22:105",
                          "memberName": "LBQuoter_InvalidLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56860,
                          "src": "4127:31:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 100538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4159:8:105",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4127:40:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 100533,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4111:2:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 100535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4114:12:105",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14531,
                      "src": "4111:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 100539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4111:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100540,
                  "nodeType": "ExpressionStatement",
                  "src": "4111:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 100544,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100508,
                        "src": "4211:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "32306536",
                        "id": 100545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4218:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        },
                        "value": "20e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        }
                      ],
                      "expression": {
                        "id": 100541,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "4178:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 100543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4185:25:105",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58005,
                      "src": "4178:32:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 100546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4178:45:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100547,
                  "nodeType": "ExpressionStatement",
                  "src": "4178:45:105"
                }
              ]
            },
            "functionSelector": "88721681",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_InvalidLength",
            "nameLocation": "3886:18:105",
            "parameters": {
              "id": 100502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3904:2:105"
            },
            "returnParameters": {
              "id": 100503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3914:0:105"
            },
            "scope": 101530,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100797,
            "nodeType": "FunctionDefinition",
            "src": "4236:1927:105",
            "nodes": [],
            "body": {
              "id": 100796,
              "nodeType": "Block",
              "src": "4274:1889:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100556,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "4369:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100796,
                      "src": "4352:22:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4352:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100555,
                        "nodeType": "ArrayTypeName",
                        "src": "4352:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100562,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 100560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4391:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 100559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4377:13:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100557,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4381:7:105",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100558,
                        "nodeType": "ArrayTypeName",
                        "src": "4381:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 100561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4377:16:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4352:41:105"
                },
                {
                  "expression": {
                    "id": 100570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100563,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100556,
                        "src": "4403:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 100565,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 100564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4409:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4403:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100568,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98471,
                          "src": "4422:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 100567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4414:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4414:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4414:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4403:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 100571,
                  "nodeType": "ExpressionStatement",
                  "src": "4403:24:105"
                },
                {
                  "expression": {
                    "id": 100579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100572,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100556,
                        "src": "4437:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 100574,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 100573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4443:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4437:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100577,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "4456:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 100576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4448:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100575,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4448:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4448:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4437:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 100580,
                  "nodeType": "ExpressionStatement",
                  "src": "4437:24:105"
                },
                {
                  "assignments": [
                    100582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100582,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4506:8:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100796,
                      "src": "4498:16:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 100581,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4498:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100584,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 100583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4517:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4498:23:105"
                },
                {
                  "assignments": [
                    100589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100589,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "4553:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100796,
                      "src": "4531:27:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 100588,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100587,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4531:8:105",
                            "4540:5:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56890,
                          "src": "4531:14:105"
                        },
                        "referencedDeclaration": 56890,
                        "src": "4531:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$56890_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100595,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100592,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100556,
                        "src": "4593:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 100593,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100582,
                        "src": "4600:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 100590,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "4561:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 100591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4568:24:105",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57451,
                      "src": "4561:31:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 100594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4561:48:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4531:78:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100597,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "4629:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100598,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4635:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "4629:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100600,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4643:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4629:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100601,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100582,
                        "src": "4647:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a31",
                        "id": 100602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4657:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b1295a7e162f4dfd7db4a4bdf346da4585feeefe2fa31f4812db7b12f07dfb1",
                          "typeString": "literal_string \"test_Scenario1::1\""
                        },
                        "value": "test_Scenario1::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b1295a7e162f4dfd7db4a4bdf346da4585feeefe2fa31f4812db7b12f07dfb1",
                          "typeString": "literal_string \"test_Scenario1::1\""
                        }
                      ],
                      "id": 100596,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4620:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4620:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100604,
                  "nodeType": "ExpressionStatement",
                  "src": "4620:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100606,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "4705:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100607,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4711:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "4705:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100609,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4719:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4705:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 100612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100610,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100582,
                          "src": "4723:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 100611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4734:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4723:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 100613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4737:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a32",
                        "id": 100614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4743:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb1c8fd433f803136d7d9f7582d3a30790788387d1b6fe02bca04e1c28de22da",
                          "typeString": "literal_string \"test_Scenario1::2\""
                        },
                        "value": "test_Scenario1::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb1c8fd433f803136d7d9f7582d3a30790788387d1b6fe02bca04e1c28de22da",
                          "typeString": "literal_string \"test_Scenario1::2\""
                        }
                      ],
                      "id": 100605,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "4687:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4687:76:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100616,
                  "nodeType": "ExpressionStatement",
                  "src": "4687:76:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100618,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "4782:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100619,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4788:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "4782:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100621,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4797:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4782:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4801:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a33",
                        "id": 100623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4804:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_551a62f30eddd0de7561dca8e928c1c785451f2e328deb9d8894d8d4bd288e8d",
                          "typeString": "literal_string \"test_Scenario1::3\""
                        },
                        "value": "test_Scenario1::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_551a62f30eddd0de7561dca8e928c1c785451f2e328deb9d8894d8d4bd288e8d",
                          "typeString": "literal_string \"test_Scenario1::3\""
                        }
                      ],
                      "id": 100617,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4773:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4773:51:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100625,
                  "nodeType": "ExpressionStatement",
                  "src": "4773:51:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100629,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100589,
                                "src": "4851:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100630,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4857:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "4851:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100632,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4866:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4851:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4843:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100627,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4843:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4843:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4871:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a34",
                        "id": 100635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4874:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2220becade7cec102a7dd1846951e59f81c327e78538d22440eb281b4b23e3e",
                          "typeString": "literal_string \"test_Scenario1::4\""
                        },
                        "value": "test_Scenario1::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2220becade7cec102a7dd1846951e59f81c327e78538d22440eb281b4b23e3e",
                          "typeString": "literal_string \"test_Scenario1::4\""
                        }
                      ],
                      "id": 100626,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4834:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4834:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100637,
                  "nodeType": "ExpressionStatement",
                  "src": "4834:60:105"
                },
                {
                  "expression": {
                    "id": 100640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100638,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100582,
                      "src": "4931:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 100639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4942:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "4931:17:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 100641,
                  "nodeType": "ExpressionStatement",
                  "src": "4931:17:105"
                },
                {
                  "expression": {
                    "id": 100648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100642,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100589,
                      "src": "4958:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100645,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100556,
                          "src": "4998:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100646,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100582,
                          "src": "5005:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100643,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "4966:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4973:24:105",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57451,
                        "src": "4966:31:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4966:48:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "4958:56:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100649,
                  "nodeType": "ExpressionStatement",
                  "src": "4958:56:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100651,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5034:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100652,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5040:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5034:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100654,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5048:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5034:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100655,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100582,
                        "src": "5052:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a35",
                        "id": 100656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5062:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0849a42bcb64c156120d5345fbc169b7ffc3c5e6745a5758c220a6cc9a3bf76",
                          "typeString": "literal_string \"test_Scenario1::5\""
                        },
                        "value": "test_Scenario1::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0849a42bcb64c156120d5345fbc169b7ffc3c5e6745a5758c220a6cc9a3bf76",
                          "typeString": "literal_string \"test_Scenario1::5\""
                        }
                      ],
                      "id": 100650,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5025:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5025:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100658,
                  "nodeType": "ExpressionStatement",
                  "src": "5025:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100660,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5110:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100661,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5116:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5110:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100663,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5124:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5110:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100664,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100582,
                        "src": "5128:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 100665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5138:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a36",
                        "id": 100666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5144:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22cab05f456a9917c84d56442001fbebd8dc6ca351379b3417b585542450084c",
                          "typeString": "literal_string \"test_Scenario1::6\""
                        },
                        "value": "test_Scenario1::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22cab05f456a9917c84d56442001fbebd8dc6ca351379b3417b585542450084c",
                          "typeString": "literal_string \"test_Scenario1::6\""
                        }
                      ],
                      "id": 100659,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5092:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5092:72:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100668,
                  "nodeType": "ExpressionStatement",
                  "src": "5092:72:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100670,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5183:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100671,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5189:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "5183:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100673,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5198:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5183:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100674,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "5202:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a37",
                        "id": 100675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5220:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26e15ad0c99c2c7dc0d06ccdc966891f7324697c27b0ae925c8362b30a445820",
                          "typeString": "literal_string \"test_Scenario1::7\""
                        },
                        "value": "test_Scenario1::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26e15ad0c99c2c7dc0d06ccdc966891f7324697c27b0ae925c8362b30a445820",
                          "typeString": "literal_string \"test_Scenario1::7\""
                        }
                      ],
                      "id": 100669,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5174:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5174:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100677,
                  "nodeType": "ExpressionStatement",
                  "src": "5174:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100681,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100589,
                                "src": "5267:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100682,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5273:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "5267:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100684,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5282:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5267:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5259:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100679,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5259:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5259:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 100686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5287:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a38",
                        "id": 100687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5290:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75686eb2afc3ebb6c46a7ce72ee518739a43885698649b5d588c359510a9eeb9",
                          "typeString": "literal_string \"test_Scenario1::8\""
                        },
                        "value": "test_Scenario1::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75686eb2afc3ebb6c46a7ce72ee518739a43885698649b5d588c359510a9eeb9",
                          "typeString": "literal_string \"test_Scenario1::8\""
                        }
                      ],
                      "id": 100678,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5250:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5250:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100689,
                  "nodeType": "ExpressionStatement",
                  "src": "5250:60:105"
                },
                {
                  "assignments": [
                    100691
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100691,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "5356:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 100796,
                      "src": "5348:17:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 100690,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5348:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100693,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 100692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5368:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5348:24:105"
                },
                {
                  "expression": {
                    "id": 100700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100694,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100589,
                      "src": "5382:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100697,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100556,
                          "src": "5423:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100698,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100691,
                          "src": "5430:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100695,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "5390:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5397:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "5390:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5390:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "5382:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100701,
                  "nodeType": "ExpressionStatement",
                  "src": "5382:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100703,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5469:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100704,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5475:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5469:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100706,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5483:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5469:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 100709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 100707,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100691,
                          "src": "5487:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 100708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5499:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5487:13:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 100710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5502:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a39",
                        "id": 100711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5508:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6681d6942c973e6e0cc5118e365b27ee0a6a26ba4d98865ecc407dc399f79cd4",
                          "typeString": "literal_string \"test_Scenario1::9\""
                        },
                        "value": "test_Scenario1::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6681d6942c973e6e0cc5118e365b27ee0a6a26ba4d98865ecc407dc399f79cd4",
                          "typeString": "literal_string \"test_Scenario1::9\""
                        }
                      ],
                      "id": 100702,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5451:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5451:77:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100713,
                  "nodeType": "ExpressionStatement",
                  "src": "5451:77:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100715,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5547:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100716,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5553:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5547:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100718,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5561:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5547:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100719,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100691,
                        "src": "5565:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3130",
                        "id": 100720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5576:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4f5122edb89903638f7c065c2aa05b8dadca3bee8522efb35ca7fbccc0decd4",
                          "typeString": "literal_string \"test_Scenario1::10\""
                        },
                        "value": "test_Scenario1::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4f5122edb89903638f7c065c2aa05b8dadca3bee8522efb35ca7fbccc0decd4",
                          "typeString": "literal_string \"test_Scenario1::10\""
                        }
                      ],
                      "id": 100714,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5538:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100722,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100724,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5616:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100725,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5622:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "5616:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100727,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100726,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5631:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5616:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5635:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3131",
                        "id": 100729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5638:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de88294725c534db3166d6c4e1a0c4e9e55b16c87f96f982c87a400263fc82e6",
                          "typeString": "literal_string \"test_Scenario1::11\""
                        },
                        "value": "test_Scenario1::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de88294725c534db3166d6c4e1a0c4e9e55b16c87f96f982c87a400263fc82e6",
                          "typeString": "literal_string \"test_Scenario1::11\""
                        }
                      ],
                      "id": 100723,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5607:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:52:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100731,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:52:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100735,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100589,
                                "src": "5686:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100736,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5692:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "5686:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100738,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100737,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5701:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5686:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100734,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5678:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100733,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5678:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5678:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5706:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3132",
                        "id": 100741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5709:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c5547359ff473c64c3b4ef1490f770770a54722f22850c9a8e5d9e2143eb527",
                          "typeString": "literal_string \"test_Scenario1::12\""
                        },
                        "value": "test_Scenario1::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c5547359ff473c64c3b4ef1490f770770a54722f22850c9a8e5d9e2143eb527",
                          "typeString": "literal_string \"test_Scenario1::12\""
                        }
                      ],
                      "id": 100732,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5669:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5669:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100743,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:61:105"
                },
                {
                  "expression": {
                    "id": 100746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100744,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100691,
                      "src": "5768:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 100745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5780:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "5768:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 100747,
                  "nodeType": "ExpressionStatement",
                  "src": "5768:18:105"
                },
                {
                  "expression": {
                    "id": 100754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100748,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100589,
                      "src": "5796:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100751,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100556,
                          "src": "5837:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100752,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100691,
                          "src": "5844:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100749,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "5804:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5811:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "5804:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5804:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "5796:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100755,
                  "nodeType": "ExpressionStatement",
                  "src": "5796:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100757,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5883:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100758,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5889:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5883:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100760,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5897:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5883:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100761,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100691,
                        "src": "5901:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 100762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5912:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3133",
                        "id": 100763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5918:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdca0f759c8b6673ac4f96cdad29bb01c0fff4acd6578f0afe45165d59be6bf2",
                          "typeString": "literal_string \"test_Scenario1::13\""
                        },
                        "value": "test_Scenario1::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdca0f759c8b6673ac4f96cdad29bb01c0fff4acd6578f0afe45165d59be6bf2",
                          "typeString": "literal_string \"test_Scenario1::13\""
                        }
                      ],
                      "id": 100756,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5865:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:74:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100765,
                  "nodeType": "ExpressionStatement",
                  "src": "5865:74:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100767,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "5958:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100768,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5964:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "5958:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100770,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5972:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5958:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100771,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100691,
                        "src": "5976:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3134",
                        "id": 100772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5987:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f9ced837466f5d8ee27ab6d9987aa8e1231618f335ca5dce4bb0d6e9aed6f3c",
                          "typeString": "literal_string \"test_Scenario1::14\""
                        },
                        "value": "test_Scenario1::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f9ced837466f5d8ee27ab6d9987aa8e1231618f335ca5dce4bb0d6e9aed6f3c",
                          "typeString": "literal_string \"test_Scenario1::14\""
                        }
                      ],
                      "id": 100766,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5949:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5949:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100774,
                  "nodeType": "ExpressionStatement",
                  "src": "5949:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100776,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100589,
                            "src": "6027:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100777,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6033:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "6027:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100779,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6042:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6027:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100780,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "6046:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3135",
                        "id": 100781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6064:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cfda752708129c521a47c5d42a7cbe3f188b33fed1906b82ef1f9bccb06c93c",
                          "typeString": "literal_string \"test_Scenario1::15\""
                        },
                        "value": "test_Scenario1::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cfda752708129c521a47c5d42a7cbe3f188b33fed1906b82ef1f9bccb06c93c",
                          "typeString": "literal_string \"test_Scenario1::15\""
                        }
                      ],
                      "id": 100775,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6018:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6018:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100783,
                  "nodeType": "ExpressionStatement",
                  "src": "6018:67:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100787,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100589,
                                "src": "6112:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100788,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6118:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "6112:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100790,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6127:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6112:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6104:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100785,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6104:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6104:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 100792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6132:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3136",
                        "id": 100793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6135:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ff741964272714ffbf2610f2e2ef00d93bc2e6e4131a0e4e66807b0f6d0bbcf",
                          "typeString": "literal_string \"test_Scenario1::16\""
                        },
                        "value": "test_Scenario1::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ff741964272714ffbf2610f2e2ef00d93bc2e6e4131a0e4e66807b0f6d0bbcf",
                          "typeString": "literal_string \"test_Scenario1::16\""
                        }
                      ],
                      "id": 100784,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6095:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6095:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100795,
                  "nodeType": "ExpressionStatement",
                  "src": "6095:61:105"
                }
              ]
            },
            "functionSelector": "51f44d95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario1",
            "nameLocation": "4245:14:105",
            "parameters": {
              "id": 100550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4259:2:105"
            },
            "returnParameters": {
              "id": 100551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4274:0:105"
            },
            "scope": 101530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101039,
            "nodeType": "FunctionDefinition",
            "src": "6169:1895:105",
            "nodes": [],
            "body": {
              "id": 101038,
              "nodeType": "Block",
              "src": "6207:1857:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    100804
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100804,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "6305:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101038,
                      "src": "6288:22:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100802,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6288:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100803,
                        "nodeType": "ArrayTypeName",
                        "src": "6288:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100810,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 100808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6327:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 100807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6313:13:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 100805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6317:7:105",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 100806,
                        "nodeType": "ArrayTypeName",
                        "src": "6317:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 100809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6313:16:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6288:41:105"
                },
                {
                  "expression": {
                    "id": 100818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100811,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100804,
                        "src": "6339:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 100813,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 100812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6345:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6339:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100816,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98465,
                          "src": "6358:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$117290",
                            "typeString": "contract WNATIVE"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$117290",
                            "typeString": "contract WNATIVE"
                          }
                        ],
                        "id": 100815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6350:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100814,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6350:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6350:16:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6339:27:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 100819,
                  "nodeType": "ExpressionStatement",
                  "src": "6339:27:105"
                },
                {
                  "expression": {
                    "id": 100827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 100820,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100804,
                        "src": "6376:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 100822,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 100821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6382:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6376:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100825,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "6395:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 100824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6387:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 100823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6387:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 100826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6387:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6376:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 100828,
                  "nodeType": "ExpressionStatement",
                  "src": "6376:24:105"
                },
                {
                  "assignments": [
                    100830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100830,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6445:8:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101038,
                      "src": "6437:16:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 100829,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6437:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100832,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 100831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6456:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6437:23:105"
                },
                {
                  "assignments": [
                    100837
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100837,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "6492:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101038,
                      "src": "6470:27:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 100836,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 100835,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "6470:8:105",
                            "6479:5:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56890,
                          "src": "6470:14:105"
                        },
                        "referencedDeclaration": 56890,
                        "src": "6470:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$56890_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100843,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 100840,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100804,
                        "src": "6532:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 100841,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6539:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 100838,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "6500:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 100839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6507:24:105",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57451,
                      "src": "6500:31:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 100842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6500:48:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6470:78:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100845,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "6568:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100846,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6574:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "6568:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100848,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6582:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6568:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100849,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6586:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a31",
                        "id": 100850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6596:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42fc75d17d21d5d2bae24c45a6c6647288721eef8af866e7ba22dd982b1dd986",
                          "typeString": "literal_string \"test_Scenario2::1\""
                        },
                        "value": "test_Scenario2::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42fc75d17d21d5d2bae24c45a6c6647288721eef8af866e7ba22dd982b1dd986",
                          "typeString": "literal_string \"test_Scenario2::1\""
                        }
                      ],
                      "id": 100844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6559:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6559:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100852,
                  "nodeType": "ExpressionStatement",
                  "src": "6559:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100854,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "6635:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100855,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6641:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "6635:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100857,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6649:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6635:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100858,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6653:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a32",
                        "id": 100859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6663:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_513f2bb95608545082364a1aba7eb214adb118b30b3753ddecfb9a1ac8ac71c3",
                          "typeString": "literal_string \"test_Scenario2::2\""
                        },
                        "value": "test_Scenario2::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_513f2bb95608545082364a1aba7eb214adb118b30b3753ddecfb9a1ac8ac71c3",
                          "typeString": "literal_string \"test_Scenario2::2\""
                        }
                      ],
                      "id": 100853,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "6626:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6626:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100861,
                  "nodeType": "ExpressionStatement",
                  "src": "6626:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100863,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "6702:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100864,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6708:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "6702:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100866,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6717:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6702:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100867,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "6721:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a33",
                        "id": 100868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6739:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e7746affd5ddf438c183c255912cb4d8c3c2de7f79dad7a5544decf55d4733",
                          "typeString": "literal_string \"test_Scenario2::3\""
                        },
                        "value": "test_Scenario2::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e7746affd5ddf438c183c255912cb4d8c3c2de7f79dad7a5544decf55d4733",
                          "typeString": "literal_string \"test_Scenario2::3\""
                        }
                      ],
                      "id": 100862,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6693:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6693:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100870,
                  "nodeType": "ExpressionStatement",
                  "src": "6693:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100874,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100837,
                                "src": "6786:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100875,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6792:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "6786:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100877,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6801:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6786:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6778:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100872,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6778:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 100879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6806:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a34",
                        "id": 100880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6809:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_351364948135c9d7515e0592722e6833da5a69aac801aec08ab568b1931d3f28",
                          "typeString": "literal_string \"test_Scenario2::4\""
                        },
                        "value": "test_Scenario2::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_351364948135c9d7515e0592722e6833da5a69aac801aec08ab568b1931d3f28",
                          "typeString": "literal_string \"test_Scenario2::4\""
                        }
                      ],
                      "id": 100871,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6769:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6769:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100882,
                  "nodeType": "ExpressionStatement",
                  "src": "6769:60:105"
                },
                {
                  "expression": {
                    "id": 100885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100883,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100830,
                      "src": "6866:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 100884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6877:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "6866:17:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 100886,
                  "nodeType": "ExpressionStatement",
                  "src": "6866:17:105"
                },
                {
                  "expression": {
                    "id": 100893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100887,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100837,
                      "src": "6893:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100890,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100804,
                          "src": "6933:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100891,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100830,
                          "src": "6940:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100888,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "6901:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6908:24:105",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57451,
                        "src": "6901:31:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100892,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6901:48:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6893:56:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100894,
                  "nodeType": "ExpressionStatement",
                  "src": "6893:56:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100896,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "6969:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100897,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6975:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "6969:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100899,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6983:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6969:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100900,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "6987:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a35",
                        "id": 100901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6997:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d840498e861845e6ac86966630b4a1307645adf8b1d6f038207e99d3a75c554",
                          "typeString": "literal_string \"test_Scenario2::5\""
                        },
                        "value": "test_Scenario2::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d840498e861845e6ac86966630b4a1307645adf8b1d6f038207e99d3a75c554",
                          "typeString": "literal_string \"test_Scenario2::5\""
                        }
                      ],
                      "id": 100895,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6960:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6960:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100903,
                  "nodeType": "ExpressionStatement",
                  "src": "6960:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100905,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7045:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100906,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7051:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "7045:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100908,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7059:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7045:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100909,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100830,
                        "src": "7063:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 100910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7073:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a36",
                        "id": 100911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7079:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104489c8a608d3bfb145e80ecb13b01a0b85cbbafc8011e8e13fef203ddd27c4",
                          "typeString": "literal_string \"test_Scenario2::6\""
                        },
                        "value": "test_Scenario2::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104489c8a608d3bfb145e80ecb13b01a0b85cbbafc8011e8e13fef203ddd27c4",
                          "typeString": "literal_string \"test_Scenario2::6\""
                        }
                      ],
                      "id": 100904,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "7027:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7027:72:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100913,
                  "nodeType": "ExpressionStatement",
                  "src": "7027:72:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100915,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7118:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100916,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7124:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "7118:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100918,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100917,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7133:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7118:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7137:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a37",
                        "id": 100920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7140:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9dff47b0927f906f6699ad581959350914c151cf69deb545d4929c2d3c92ada",
                          "typeString": "literal_string \"test_Scenario2::7\""
                        },
                        "value": "test_Scenario2::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9dff47b0927f906f6699ad581959350914c151cf69deb545d4929c2d3c92ada",
                          "typeString": "literal_string \"test_Scenario2::7\""
                        }
                      ],
                      "id": 100914,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7109:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7109:51:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100922,
                  "nodeType": "ExpressionStatement",
                  "src": "7109:51:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100926,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100837,
                                "src": "7187:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100927,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7193:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "7187:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100929,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7202:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7187:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7179:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100924,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7179:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7179:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 100931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7207:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a38",
                        "id": 100932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7210:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64b7ba0ffe3b08b17a175cb16c43869e0c55054a247970bd37f9240ed60f4b2d",
                          "typeString": "literal_string \"test_Scenario2::8\""
                        },
                        "value": "test_Scenario2::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64b7ba0ffe3b08b17a175cb16c43869e0c55054a247970bd37f9240ed60f4b2d",
                          "typeString": "literal_string \"test_Scenario2::8\""
                        }
                      ],
                      "id": 100923,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7170:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7170:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100934,
                  "nodeType": "ExpressionStatement",
                  "src": "7170:60:105"
                },
                {
                  "assignments": [
                    100936
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 100936,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "7276:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101038,
                      "src": "7268:17:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 100935,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7268:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 100938,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 100937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7288:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7268:24:105"
                },
                {
                  "expression": {
                    "id": 100945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100939,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100837,
                      "src": "7302:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100942,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100804,
                          "src": "7343:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100943,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100936,
                          "src": "7350:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100940,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "7310:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7317:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "7310:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7310:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "7302:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100946,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100948,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7380:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100949,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7386:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "7380:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100951,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7394:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7380:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100952,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100936,
                        "src": "7398:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a39",
                        "id": 100953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7409:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d18f613c2ac34fc5fb283ce0c2291f2ff715b7b15e49a9d03f05a7a0c29e39a",
                          "typeString": "literal_string \"test_Scenario2::9\""
                        },
                        "value": "test_Scenario2::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d18f613c2ac34fc5fb283ce0c2291f2ff715b7b15e49a9d03f05a7a0c29e39a",
                          "typeString": "literal_string \"test_Scenario2::9\""
                        }
                      ],
                      "id": 100947,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1590,
                        1608,
                        1662,
                        1680
                      ],
                      "referencedDeclaration": 1608,
                      "src": "7371:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7371:58:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100955,
                  "nodeType": "ExpressionStatement",
                  "src": "7371:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100957,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7448:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100958,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7454:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "7448:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 100960,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 100959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7462:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7448:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 100961,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100936,
                        "src": "7466:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3130",
                        "id": 100962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7477:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9bcea95dc4bd5bf876b93121c4354d34fdc8afad95914b0dfc26deb7aa30003",
                          "typeString": "literal_string \"test_Scenario2::10\""
                        },
                        "value": "test_Scenario2::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9bcea95dc4bd5bf876b93121c4354d34fdc8afad95914b0dfc26deb7aa30003",
                          "typeString": "literal_string \"test_Scenario2::10\""
                        }
                      ],
                      "id": 100956,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7439:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7439:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100964,
                  "nodeType": "ExpressionStatement",
                  "src": "7439:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100966,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7517:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 100967,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7523:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "7517:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 100969,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 100968,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7532:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7517:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 100970,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "7536:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3131",
                        "id": 100971,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7554:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97c805f40b26b85e573bc7c24dcc99ada1f576b898dbf18db51a3b4de192899a",
                          "typeString": "literal_string \"test_Scenario2::11\""
                        },
                        "value": "test_Scenario2::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97c805f40b26b85e573bc7c24dcc99ada1f576b898dbf18db51a3b4de192899a",
                          "typeString": "literal_string \"test_Scenario2::11\""
                        }
                      ],
                      "id": 100965,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7508:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7508:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100973,
                  "nodeType": "ExpressionStatement",
                  "src": "7508:67:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 100977,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100837,
                                "src": "7602:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 100978,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7608:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "7602:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 100980,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 100979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7617:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7602:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 100976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7594:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 100975,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7594:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 100981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7594:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 100982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7622:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3132",
                        "id": 100983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7625:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ed14782e39f2751f389223886ed6ff7914d6bb5e3fefab5907e4ed3edbc0559",
                          "typeString": "literal_string \"test_Scenario2::12\""
                        },
                        "value": "test_Scenario2::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ed14782e39f2751f389223886ed6ff7914d6bb5e3fefab5907e4ed3edbc0559",
                          "typeString": "literal_string \"test_Scenario2::12\""
                        }
                      ],
                      "id": 100974,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7585:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 100984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7585:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 100985,
                  "nodeType": "ExpressionStatement",
                  "src": "7585:61:105"
                },
                {
                  "expression": {
                    "id": 100988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100986,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100936,
                      "src": "7684:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 100987,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7696:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "7684:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 100989,
                  "nodeType": "ExpressionStatement",
                  "src": "7684:18:105"
                },
                {
                  "expression": {
                    "id": 100996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100990,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100837,
                      "src": "7712:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 100993,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100804,
                          "src": "7753:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 100994,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 100936,
                          "src": "7760:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 100991,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "7720:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 100992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7727:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "7720:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 100995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7720:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "7712:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 100997,
                  "nodeType": "ExpressionStatement",
                  "src": "7712:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 100999,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7799:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101000,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7805:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "7799:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101002,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7813:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7799:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101003,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100936,
                        "src": "7817:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7828:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3133",
                        "id": 101005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7834:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fcd82d7482440b3402d57dc67aef1690e690e88bfb0178d9e300a029d565b7",
                          "typeString": "literal_string \"test_Scenario2::13\""
                        },
                        "value": "test_Scenario2::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fcd82d7482440b3402d57dc67aef1690e690e88bfb0178d9e300a029d565b7",
                          "typeString": "literal_string \"test_Scenario2::13\""
                        }
                      ],
                      "id": 100998,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "7781:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7781:74:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101007,
                  "nodeType": "ExpressionStatement",
                  "src": "7781:74:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101009,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7874:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101010,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7880:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "7874:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101012,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7888:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7874:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101013,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100936,
                        "src": "7892:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3134",
                        "id": 101014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7903:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ed8e91dc2fad4ce3b0b161f20de53aa0ceb13df6212c817b1da1aa9ad30fa08",
                          "typeString": "literal_string \"test_Scenario2::14\""
                        },
                        "value": "test_Scenario2::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ed8e91dc2fad4ce3b0b161f20de53aa0ceb13df6212c817b1da1aa9ad30fa08",
                          "typeString": "literal_string \"test_Scenario2::14\""
                        }
                      ],
                      "id": 101008,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7865:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7865:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101016,
                  "nodeType": "ExpressionStatement",
                  "src": "7865:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101018,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 100837,
                            "src": "7943:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101019,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7949:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "7943:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101021,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7958:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7943:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7962:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3135",
                        "id": 101023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7965:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2855eedc58c00742ff202f95ebeef7523da799a66879eb9ba39f25dec6864396",
                          "typeString": "literal_string \"test_Scenario2::15\""
                        },
                        "value": "test_Scenario2::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2855eedc58c00742ff202f95ebeef7523da799a66879eb9ba39f25dec6864396",
                          "typeString": "literal_string \"test_Scenario2::15\""
                        }
                      ],
                      "id": 101017,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7934:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7934:52:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101025,
                  "nodeType": "ExpressionStatement",
                  "src": "7934:52:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101029,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 100837,
                                "src": "8013:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101030,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8019:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "8013:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101032,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8028:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8013:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8005:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101027,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8005:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8005:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8033:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3136",
                        "id": 101035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8036:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f1dd8ad5a7d3b81f11d89ea0b81e63a11cb18d8c7a41b85171f133fdbe1a4c",
                          "typeString": "literal_string \"test_Scenario2::16\""
                        },
                        "value": "test_Scenario2::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f1dd8ad5a7d3b81f11d89ea0b81e63a11cb18d8c7a41b85171f133fdbe1a4c",
                          "typeString": "literal_string \"test_Scenario2::16\""
                        }
                      ],
                      "id": 101026,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7996:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7996:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101037,
                  "nodeType": "ExpressionStatement",
                  "src": "7996:61:105"
                }
              ]
            },
            "functionSelector": "efbc8013",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario2",
            "nameLocation": "6178:14:105",
            "parameters": {
              "id": 100798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6192:2:105"
            },
            "returnParameters": {
              "id": 100799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6207:0:105"
            },
            "scope": 101530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101287,
            "nodeType": "FunctionDefinition",
            "src": "8070:1929:105",
            "nodes": [],
            "body": {
              "id": 101286,
              "nodeType": "Block",
              "src": "8108:1891:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101046
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101046,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "8205:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101286,
                      "src": "8188:22:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8188:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101045,
                        "nodeType": "ArrayTypeName",
                        "src": "8188:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101052,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 101050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8227:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 101049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8213:13:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101047,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8217:7:105",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101048,
                        "nodeType": "ArrayTypeName",
                        "src": "8217:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 101051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8213:16:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8188:41:105"
                },
                {
                  "expression": {
                    "id": 101060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101053,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101046,
                        "src": "8239:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101055,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8245:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8239:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101058,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98483,
                          "src": "8258:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8250:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8250:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8250:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8239:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101061,
                  "nodeType": "ExpressionStatement",
                  "src": "8239:24:105"
                },
                {
                  "expression": {
                    "id": 101069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101062,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101046,
                        "src": "8273:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101064,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8279:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8273:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101067,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "8292:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8284:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101065,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8284:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8284:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8273:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101070,
                  "nodeType": "ExpressionStatement",
                  "src": "8273:24:105"
                },
                {
                  "assignments": [
                    101072
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101072,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "8342:8:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101286,
                      "src": "8334:16:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101071,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8334:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101074,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8353:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8334:23:105"
                },
                {
                  "assignments": [
                    101079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101079,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "8389:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101286,
                      "src": "8367:27:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 101078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101077,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "8367:8:105",
                            "8376:5:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56890,
                          "src": "8367:14:105"
                        },
                        "referencedDeclaration": 56890,
                        "src": "8367:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$56890_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101085,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101082,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101046,
                        "src": "8429:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 101083,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101072,
                        "src": "8436:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 101080,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "8397:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8404:24:105",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57451,
                      "src": "8397:31:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8397:48:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8367:78:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101087,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "8465:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101088,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8471:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "8465:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101090,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8479:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8465:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101091,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101072,
                        "src": "8483:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a31",
                        "id": 101092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8493:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72c8e69422bf3bceab8a1ba7d210add6beb8fbfa9145d24a23b5243256df3469",
                          "typeString": "literal_string \"test_Scenario3::1\""
                        },
                        "value": "test_Scenario3::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72c8e69422bf3bceab8a1ba7d210add6beb8fbfa9145d24a23b5243256df3469",
                          "typeString": "literal_string \"test_Scenario3::1\""
                        }
                      ],
                      "id": 101086,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8456:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8456:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101094,
                  "nodeType": "ExpressionStatement",
                  "src": "8456:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101096,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "8541:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101097,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8547:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "8541:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101099,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8555:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8541:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101100,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101072,
                          "src": "8559:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8570:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8559:12:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8573:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a32",
                        "id": 101104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8579:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07a76727e8126f1c42dddc34c16480fd5bf7dcbc2c7bb017034c26021f0399cc",
                          "typeString": "literal_string \"test_Scenario3::2\""
                        },
                        "value": "test_Scenario3::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07a76727e8126f1c42dddc34c16480fd5bf7dcbc2c7bb017034c26021f0399cc",
                          "typeString": "literal_string \"test_Scenario3::2\""
                        }
                      ],
                      "id": 101095,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "8523:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8523:76:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101106,
                  "nodeType": "ExpressionStatement",
                  "src": "8523:76:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101108,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "8618:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8624:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "8618:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101111,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8633:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8618:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8637:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a33",
                        "id": 101113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8640:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a23b7a124754bab020f00af805a2d4eb4c9f332d50ba95cf6ef2bfee333c89b",
                          "typeString": "literal_string \"test_Scenario3::3\""
                        },
                        "value": "test_Scenario3::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a23b7a124754bab020f00af805a2d4eb4c9f332d50ba95cf6ef2bfee333c89b",
                          "typeString": "literal_string \"test_Scenario3::3\""
                        }
                      ],
                      "id": 101107,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8609:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8609:51:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101115,
                  "nodeType": "ExpressionStatement",
                  "src": "8609:51:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101119,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101079,
                                "src": "8687:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101120,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8693:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "8687:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101122,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8702:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8687:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8679:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101117,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8679:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8679:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8707:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a34",
                        "id": 101125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8710:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f6691c8f1f1fe8c1af8c23cefdf48acd6dbf8d6c0d879d1f12da5a6e43ef9f6",
                          "typeString": "literal_string \"test_Scenario3::4\""
                        },
                        "value": "test_Scenario3::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f6691c8f1f1fe8c1af8c23cefdf48acd6dbf8d6c0d879d1f12da5a6e43ef9f6",
                          "typeString": "literal_string \"test_Scenario3::4\""
                        }
                      ],
                      "id": 101116,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8670:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8670:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101127,
                  "nodeType": "ExpressionStatement",
                  "src": "8670:60:105"
                },
                {
                  "expression": {
                    "id": 101130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101128,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101072,
                      "src": "8767:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8778:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "8767:17:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101131,
                  "nodeType": "ExpressionStatement",
                  "src": "8767:17:105"
                },
                {
                  "expression": {
                    "id": 101138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101132,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101079,
                      "src": "8794:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101135,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101046,
                          "src": "8834:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101136,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101072,
                          "src": "8841:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101133,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "8802:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8809:24:105",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57451,
                        "src": "8802:31:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8802:48:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "8794:56:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101139,
                  "nodeType": "ExpressionStatement",
                  "src": "8794:56:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101141,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "8870:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8876:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "8870:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101144,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8884:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8870:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101145,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101072,
                        "src": "8888:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a35",
                        "id": 101146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8898:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7ebe1c9f8ad1405224e7db8639622a0e63b69129415467d15ab2b2c05e2e5d",
                          "typeString": "literal_string \"test_Scenario3::5\""
                        },
                        "value": "test_Scenario3::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7ebe1c9f8ad1405224e7db8639622a0e63b69129415467d15ab2b2c05e2e5d",
                          "typeString": "literal_string \"test_Scenario3::5\""
                        }
                      ],
                      "id": 101140,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8861:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8861:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101148,
                  "nodeType": "ExpressionStatement",
                  "src": "8861:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101150,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "8946:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8952:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "8946:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101153,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8960:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8946:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101154,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101072,
                        "src": "8964:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8974:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a36",
                        "id": 101156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8980:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76c073c61dcb81da81cd1f18c33876811cb0e1a4fd169160648d7f2cf3957478",
                          "typeString": "literal_string \"test_Scenario3::6\""
                        },
                        "value": "test_Scenario3::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76c073c61dcb81da81cd1f18c33876811cb0e1a4fd169160648d7f2cf3957478",
                          "typeString": "literal_string \"test_Scenario3::6\""
                        }
                      ],
                      "id": 101149,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "8928:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8928:72:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101158,
                  "nodeType": "ExpressionStatement",
                  "src": "8928:72:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101160,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9019:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9025:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "9019:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101163,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9034:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9019:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101164,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "9038:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a37",
                        "id": 101165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9056:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b790adc9b5375f9515308efe0ba68bc511737ba2b77897f61310fb6d787ed239",
                          "typeString": "literal_string \"test_Scenario3::7\""
                        },
                        "value": "test_Scenario3::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b790adc9b5375f9515308efe0ba68bc511737ba2b77897f61310fb6d787ed239",
                          "typeString": "literal_string \"test_Scenario3::7\""
                        }
                      ],
                      "id": 101159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9010:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9010:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101167,
                  "nodeType": "ExpressionStatement",
                  "src": "9010:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101171,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101079,
                                "src": "9103:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101172,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9109:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "9103:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101174,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9118:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9103:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9095:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101169,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9095:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9095:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9123:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a38",
                        "id": 101177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9126:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_764a5564197f80b27bac61382e16b82d90dd1210c8323a3ee622163c11860f15",
                          "typeString": "literal_string \"test_Scenario3::8\""
                        },
                        "value": "test_Scenario3::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_764a5564197f80b27bac61382e16b82d90dd1210c8323a3ee622163c11860f15",
                          "typeString": "literal_string \"test_Scenario3::8\""
                        }
                      ],
                      "id": 101168,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9086:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9086:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101179,
                  "nodeType": "ExpressionStatement",
                  "src": "9086:60:105"
                },
                {
                  "assignments": [
                    101181
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101181,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "9192:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101286,
                      "src": "9184:17:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101180,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9184:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101183,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9204:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9184:24:105"
                },
                {
                  "expression": {
                    "id": 101190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101184,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101079,
                      "src": "9218:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101187,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101046,
                          "src": "9259:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101188,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101181,
                          "src": "9266:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101185,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "9226:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9233:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "9226:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9226:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "9218:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101191,
                  "nodeType": "ExpressionStatement",
                  "src": "9218:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101193,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9305:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9311:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "9305:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101196,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9319:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9305:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101197,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101181,
                          "src": "9323:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9335:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9323:13:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9338:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a39",
                        "id": 101201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9344:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f5477906e03c08d3a3947384b574f99dee567be49f7d53b94755ce9237b89e6",
                          "typeString": "literal_string \"test_Scenario3::9\""
                        },
                        "value": "test_Scenario3::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f5477906e03c08d3a3947384b574f99dee567be49f7d53b94755ce9237b89e6",
                          "typeString": "literal_string \"test_Scenario3::9\""
                        }
                      ],
                      "id": 101192,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "9287:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9287:77:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101203,
                  "nodeType": "ExpressionStatement",
                  "src": "9287:77:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101205,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9383:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101206,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9389:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "9383:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101208,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9397:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9383:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101209,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101181,
                        "src": "9401:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3130",
                        "id": 101210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9412:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a996f1fd8326c8de441fa3a55910fc5083e2ca25cffbdb5f050dd5133142bb2",
                          "typeString": "literal_string \"test_Scenario3::10\""
                        },
                        "value": "test_Scenario3::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a996f1fd8326c8de441fa3a55910fc5083e2ca25cffbdb5f050dd5133142bb2",
                          "typeString": "literal_string \"test_Scenario3::10\""
                        }
                      ],
                      "id": 101204,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9374:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9374:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101212,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101214,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9452:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101215,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9458:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "9452:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101217,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9467:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9452:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9471:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3131",
                        "id": 101219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9474:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe55f1650017f866c8d568e185a220e4cff4262e8d36a99487fdd60d4680a762",
                          "typeString": "literal_string \"test_Scenario3::11\""
                        },
                        "value": "test_Scenario3::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe55f1650017f866c8d568e185a220e4cff4262e8d36a99487fdd60d4680a762",
                          "typeString": "literal_string \"test_Scenario3::11\""
                        }
                      ],
                      "id": 101213,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9443:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9443:52:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101221,
                  "nodeType": "ExpressionStatement",
                  "src": "9443:52:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101225,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101079,
                                "src": "9522:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101226,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9528:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "9522:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101228,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101227,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9537:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9522:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9514:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101223,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9514:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9514:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9542:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3132",
                        "id": 101231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9545:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80fe9842973f5519ac3e01e12e4fdcc732e6dd6f1b809147326f006c90deabbf",
                          "typeString": "literal_string \"test_Scenario3::12\""
                        },
                        "value": "test_Scenario3::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80fe9842973f5519ac3e01e12e4fdcc732e6dd6f1b809147326f006c90deabbf",
                          "typeString": "literal_string \"test_Scenario3::12\""
                        }
                      ],
                      "id": 101222,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9505:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9505:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101233,
                  "nodeType": "ExpressionStatement",
                  "src": "9505:61:105"
                },
                {
                  "expression": {
                    "id": 101236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101234,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101181,
                      "src": "9604:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9616:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "9604:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101237,
                  "nodeType": "ExpressionStatement",
                  "src": "9604:18:105"
                },
                {
                  "expression": {
                    "id": 101244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101238,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101079,
                      "src": "9632:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101241,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101046,
                          "src": "9673:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101242,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101181,
                          "src": "9680:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101239,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "9640:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9647:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "9640:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9640:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "9632:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101245,
                  "nodeType": "ExpressionStatement",
                  "src": "9632:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101247,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9719:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9725:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "9719:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101250,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9733:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9719:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101251,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101181,
                        "src": "9737:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9748:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3133",
                        "id": 101253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9754:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eb320a057eadd845ea64282ac1a686927144852b44668ece3128aeb14356121",
                          "typeString": "literal_string \"test_Scenario3::13\""
                        },
                        "value": "test_Scenario3::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eb320a057eadd845ea64282ac1a686927144852b44668ece3128aeb14356121",
                          "typeString": "literal_string \"test_Scenario3::13\""
                        }
                      ],
                      "id": 101246,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "9701:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9701:74:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101255,
                  "nodeType": "ExpressionStatement",
                  "src": "9701:74:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101257,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9794:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101258,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9800:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "9794:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101260,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9808:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9794:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101261,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101181,
                        "src": "9812:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3134",
                        "id": 101262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9823:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9dea21999cb44896be9180b2331d285b9fb4ec1c94cb5df8b6a1e909b2ad039",
                          "typeString": "literal_string \"test_Scenario3::14\""
                        },
                        "value": "test_Scenario3::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9dea21999cb44896be9180b2331d285b9fb4ec1c94cb5df8b6a1e909b2ad039",
                          "typeString": "literal_string \"test_Scenario3::14\""
                        }
                      ],
                      "id": 101256,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9785:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9785:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101264,
                  "nodeType": "ExpressionStatement",
                  "src": "9785:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101266,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101079,
                            "src": "9863:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101267,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9869:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "9863:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101269,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9878:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9863:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101270,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "9882:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3135",
                        "id": 101271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9900:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f378f309ba7218b7796ee9df5d83110df003045e14b4c5a6b97dd4532b5b0bd",
                          "typeString": "literal_string \"test_Scenario3::15\""
                        },
                        "value": "test_Scenario3::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f378f309ba7218b7796ee9df5d83110df003045e14b4c5a6b97dd4532b5b0bd",
                          "typeString": "literal_string \"test_Scenario3::15\""
                        }
                      ],
                      "id": 101265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9854:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9854:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101273,
                  "nodeType": "ExpressionStatement",
                  "src": "9854:67:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101277,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101079,
                                "src": "9948:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101278,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9954:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "9948:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101280,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101279,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9963:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9948:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9940:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101275,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9940:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9940:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9968:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3136",
                        "id": 101283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9971:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27a59b0b5a78c7d4ad1fe3b57de3c4af3d397d1a5b3b435c1d1cc852dacc733a",
                          "typeString": "literal_string \"test_Scenario3::16\""
                        },
                        "value": "test_Scenario3::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27a59b0b5a78c7d4ad1fe3b57de3c4af3d397d1a5b3b435c1d1cc852dacc733a",
                          "typeString": "literal_string \"test_Scenario3::16\""
                        }
                      ],
                      "id": 101274,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9931:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9931:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101285,
                  "nodeType": "ExpressionStatement",
                  "src": "9931:61:105"
                }
              ]
            },
            "functionSelector": "396b9c98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario3",
            "nameLocation": "8079:14:105",
            "parameters": {
              "id": 101040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8093:2:105"
            },
            "returnParameters": {
              "id": 101041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8108:0:105"
            },
            "scope": 101530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101529,
            "nodeType": "FunctionDefinition",
            "src": "10005:1895:105",
            "nodes": [],
            "body": {
              "id": 101528,
              "nodeType": "Block",
              "src": "10043:1857:105",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101294,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "10115:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101528,
                      "src": "10098:22:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10098:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101293,
                        "nodeType": "ArrayTypeName",
                        "src": "10098:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101300,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 101298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10137:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 101297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10123:13:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101295,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10127:7:105",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101296,
                        "nodeType": "ArrayTypeName",
                        "src": "10127:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 101299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10123:16:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10098:41:105"
                },
                {
                  "expression": {
                    "id": 101308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101301,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101294,
                        "src": "10149:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101303,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10155:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10149:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101306,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98480,
                          "src": "10168:3:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10160:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101304,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10160:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10160:12:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10149:23:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101309,
                  "nodeType": "ExpressionStatement",
                  "src": "10149:23:105"
                },
                {
                  "expression": {
                    "id": 101317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101310,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101294,
                        "src": "10182:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101312,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10188:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10182:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101315,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98468,
                          "src": "10201:4:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$116197",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10193:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101313,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10193:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101316,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10193:13:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10182:24:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101318,
                  "nodeType": "ExpressionStatement",
                  "src": "10182:24:105"
                },
                {
                  "assignments": [
                    101320
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101320,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "10251:8:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101528,
                      "src": "10243:16:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101319,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10243:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101322,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10262:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10243:23:105"
                },
                {
                  "assignments": [
                    101327
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101327,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "10298:5:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101528,
                      "src": "10276:27:105",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 101326,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101325,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "10276:8:105",
                            "10285:5:105"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56890,
                          "src": "10276:14:105"
                        },
                        "referencedDeclaration": 56890,
                        "src": "10276:14:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$56890_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101333,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101330,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101294,
                        "src": "10338:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 101331,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101320,
                        "src": "10345:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 101328,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98501,
                        "src": "10306:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$58109",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10313:24:105",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57451,
                      "src": "10306:31:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10306:48:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10276:78:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101335,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10374:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10380:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "10374:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101338,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10388:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10374:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101339,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101320,
                        "src": "10392:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a31",
                        "id": 101340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10402:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85babeeff134d71d49277b4f6156361be83cf1eb2ec50f709c0ed4256a158c50",
                          "typeString": "literal_string \"test_Scenario4::1\""
                        },
                        "value": "test_Scenario4::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85babeeff134d71d49277b4f6156361be83cf1eb2ec50f709c0ed4256a158c50",
                          "typeString": "literal_string \"test_Scenario4::1\""
                        }
                      ],
                      "id": 101334,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10365:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10365:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101342,
                  "nodeType": "ExpressionStatement",
                  "src": "10365:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101344,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10441:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101345,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10447:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "10441:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101347,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10455:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10441:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101348,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101320,
                        "src": "10459:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a32",
                        "id": 101349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10469:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e492dfa7c01157b52f985d31f3a2ad9614ae0aa93c22532ab742beb448ffd1b4",
                          "typeString": "literal_string \"test_Scenario4::2\""
                        },
                        "value": "test_Scenario4::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e492dfa7c01157b52f985d31f3a2ad9614ae0aa93c22532ab742beb448ffd1b4",
                          "typeString": "literal_string \"test_Scenario4::2\""
                        }
                      ],
                      "id": 101343,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "10432:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10432:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101351,
                  "nodeType": "ExpressionStatement",
                  "src": "10432:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101353,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10508:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10514:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "10508:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101356,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10523:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10508:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101357,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "10527:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a33",
                        "id": 101358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10545:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be69c4b03aff30d8c3a2c868ced3588db6c8bfaa8052a5ed304d3761bb3192cc",
                          "typeString": "literal_string \"test_Scenario4::3\""
                        },
                        "value": "test_Scenario4::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be69c4b03aff30d8c3a2c868ced3588db6c8bfaa8052a5ed304d3761bb3192cc",
                          "typeString": "literal_string \"test_Scenario4::3\""
                        }
                      ],
                      "id": 101352,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10499:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10499:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101360,
                  "nodeType": "ExpressionStatement",
                  "src": "10499:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101364,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101327,
                                "src": "10592:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101365,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10598:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "10592:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101367,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10607:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10592:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10584:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101362,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10584:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10584:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10612:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a34",
                        "id": 101370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10615:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36da5e557daa7a4327f8fc4ca0a6a342a7b97888bc101c8123190ffa26b6c5c4",
                          "typeString": "literal_string \"test_Scenario4::4\""
                        },
                        "value": "test_Scenario4::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36da5e557daa7a4327f8fc4ca0a6a342a7b97888bc101c8123190ffa26b6c5c4",
                          "typeString": "literal_string \"test_Scenario4::4\""
                        }
                      ],
                      "id": 101361,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10575:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10575:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101372,
                  "nodeType": "ExpressionStatement",
                  "src": "10575:60:105"
                },
                {
                  "expression": {
                    "id": 101375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101373,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101320,
                      "src": "10672:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10683:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "10672:17:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101376,
                  "nodeType": "ExpressionStatement",
                  "src": "10672:17:105"
                },
                {
                  "expression": {
                    "id": 101383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101377,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101327,
                      "src": "10699:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101380,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101294,
                          "src": "10739:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101381,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101320,
                          "src": "10746:8:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101378,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "10707:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10714:24:105",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 57451,
                        "src": "10707:31:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10707:48:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "10699:56:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101384,
                  "nodeType": "ExpressionStatement",
                  "src": "10699:56:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101386,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10775:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101387,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10781:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "10775:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101389,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10789:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10775:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101390,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101320,
                        "src": "10793:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a35",
                        "id": 101391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10803:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43d3ca443659a8b9aeb283fd51e9b94c1480923a2e4fd8657046ecf58da49600",
                          "typeString": "literal_string \"test_Scenario4::5\""
                        },
                        "value": "test_Scenario4::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43d3ca443659a8b9aeb283fd51e9b94c1480923a2e4fd8657046ecf58da49600",
                          "typeString": "literal_string \"test_Scenario4::5\""
                        }
                      ],
                      "id": 101385,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10766:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10766:57:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101393,
                  "nodeType": "ExpressionStatement",
                  "src": "10766:57:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101395,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10851:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101396,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10857:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "10851:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101398,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10865:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10851:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101399,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101320,
                        "src": "10869:8:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "36653136",
                        "id": 101400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10879:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60000000000000000_by_1",
                          "typeString": "int_const 60000000000000000"
                        },
                        "value": "6e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a36",
                        "id": 101401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10885:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42a640bffacb3bafb7850344a87d6dd05a91a5a2f40b6e763c237198b6df119d",
                          "typeString": "literal_string \"test_Scenario4::6\""
                        },
                        "value": "test_Scenario4::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_60000000000000000_by_1",
                          "typeString": "int_const 60000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42a640bffacb3bafb7850344a87d6dd05a91a5a2f40b6e763c237198b6df119d",
                          "typeString": "literal_string \"test_Scenario4::6\""
                        }
                      ],
                      "id": 101394,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "10833:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10833:72:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101403,
                  "nodeType": "ExpressionStatement",
                  "src": "10833:72:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101405,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "10924:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10930:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "10924:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101408,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10939:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10924:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101409,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "10943:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a37",
                        "id": 101410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10961:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c057694230529927a30f61aa8b05e3b187aaba6778bfd254c45587960bafec7",
                          "typeString": "literal_string \"test_Scenario4::7\""
                        },
                        "value": "test_Scenario4::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c057694230529927a30f61aa8b05e3b187aaba6778bfd254c45587960bafec7",
                          "typeString": "literal_string \"test_Scenario4::7\""
                        }
                      ],
                      "id": 101404,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10915:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10915:66:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101412,
                  "nodeType": "ExpressionStatement",
                  "src": "10915:66:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101416,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101327,
                                "src": "11008:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101417,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11014:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "11008:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101419,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11023:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11008:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11000:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101414,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11000:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11000:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11028:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a38",
                        "id": 101422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11031:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64449a25f23130156f00fa5a116c36633c2316f67f89ea9d1a43e9d51978a54e",
                          "typeString": "literal_string \"test_Scenario4::8\""
                        },
                        "value": "test_Scenario4::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64449a25f23130156f00fa5a116c36633c2316f67f89ea9d1a43e9d51978a54e",
                          "typeString": "literal_string \"test_Scenario4::8\""
                        }
                      ],
                      "id": 101413,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10991:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10991:60:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101424,
                  "nodeType": "ExpressionStatement",
                  "src": "10991:60:105"
                },
                {
                  "assignments": [
                    101426
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101426,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "11097:9:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 101528,
                      "src": "11089:17:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101425,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11089:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101428,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11109:4:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11089:24:105"
                },
                {
                  "expression": {
                    "id": 101435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101429,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101327,
                      "src": "11123:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101432,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101294,
                          "src": "11164:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101433,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101426,
                          "src": "11171:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101430,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "11131:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11138:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "11131:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11131:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "11123:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101436,
                  "nodeType": "ExpressionStatement",
                  "src": "11123:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101438,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11201:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101439,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11207:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "11201:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101441,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11215:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11201:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101442,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101426,
                        "src": "11219:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a39",
                        "id": 101443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11230:19:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_552d5d5ffc5c42a02c458a759444a42092361d21401d8d4ff0ccab5f78b0d311",
                          "typeString": "literal_string \"test_Scenario4::9\""
                        },
                        "value": "test_Scenario4::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_552d5d5ffc5c42a02c458a759444a42092361d21401d8d4ff0ccab5f78b0d311",
                          "typeString": "literal_string \"test_Scenario4::9\""
                        }
                      ],
                      "id": 101437,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1590,
                        1608,
                        1662,
                        1680
                      ],
                      "referencedDeclaration": 1608,
                      "src": "11192:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11192:58:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101445,
                  "nodeType": "ExpressionStatement",
                  "src": "11192:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101447,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11269:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101448,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11275:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "11269:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101450,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11283:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11269:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101451,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101426,
                        "src": "11287:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3130",
                        "id": 101452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11298:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fc6fac3d1767ef37f01aa4ee6f84ef1ae5674ade1f10a4b496c3116910826c4",
                          "typeString": "literal_string \"test_Scenario4::10\""
                        },
                        "value": "test_Scenario4::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fc6fac3d1767ef37f01aa4ee6f84ef1ae5674ade1f10a4b496c3116910826c4",
                          "typeString": "literal_string \"test_Scenario4::10\""
                        }
                      ],
                      "id": 101446,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11260:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11260:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101454,
                  "nodeType": "ExpressionStatement",
                  "src": "11260:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101456,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11338:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101457,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11344:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "11338:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101459,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11353:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11338:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101460,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "11357:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3131",
                        "id": 101461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11375:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a071e8de3502dac114261a8502182267da5dbb9996a36c0218b96bd84cbf3fb3",
                          "typeString": "literal_string \"test_Scenario4::11\""
                        },
                        "value": "test_Scenario4::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a071e8de3502dac114261a8502182267da5dbb9996a36c0218b96bd84cbf3fb3",
                          "typeString": "literal_string \"test_Scenario4::11\""
                        }
                      ],
                      "id": 101455,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11329:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11329:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101463,
                  "nodeType": "ExpressionStatement",
                  "src": "11329:67:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101467,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101327,
                                "src": "11423:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101468,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11429:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "11423:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101470,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11438:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11423:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11415:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101465,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11415:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11415:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11443:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3132",
                        "id": 101473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11446:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce32fe06a9fa66a9f3b0508dd09e21bc6643d47d389964c17b9af3ab161a7b8e",
                          "typeString": "literal_string \"test_Scenario4::12\""
                        },
                        "value": "test_Scenario4::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce32fe06a9fa66a9f3b0508dd09e21bc6643d47d389964c17b9af3ab161a7b8e",
                          "typeString": "literal_string \"test_Scenario4::12\""
                        }
                      ],
                      "id": 101464,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11406:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11406:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101475,
                  "nodeType": "ExpressionStatement",
                  "src": "11406:61:105"
                },
                {
                  "expression": {
                    "id": 101478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101476,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101426,
                      "src": "11505:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11517:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "11505:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101479,
                  "nodeType": "ExpressionStatement",
                  "src": "11505:18:105"
                },
                {
                  "expression": {
                    "id": 101486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101480,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101327,
                      "src": "11533:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101483,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101294,
                          "src": "11574:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101484,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101426,
                          "src": "11581:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101481,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98501,
                          "src": "11541:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$58109",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11548:25:105",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 58005,
                        "src": "11541:32:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$56890_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101485,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11541:50:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "11533:58:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101487,
                  "nodeType": "ExpressionStatement",
                  "src": "11533:58:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101489,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11620:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101490,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11626:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "11620:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101492,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11634:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11620:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101493,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101426,
                        "src": "11638:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11649:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3133",
                        "id": 101495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11655:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b1a9378d90f2d410cdf80812aab0c38044df8632d54c524094d6d6fc61158b5",
                          "typeString": "literal_string \"test_Scenario4::13\""
                        },
                        "value": "test_Scenario4::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b1a9378d90f2d410cdf80812aab0c38044df8632d54c524094d6d6fc61158b5",
                          "typeString": "literal_string \"test_Scenario4::13\""
                        }
                      ],
                      "id": 101488,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "11602:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11602:74:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101497,
                  "nodeType": "ExpressionStatement",
                  "src": "11602:74:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101499,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11695:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101500,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11701:7:105",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56883,
                          "src": "11695:13:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101502,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11709:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11695:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101503,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101426,
                        "src": "11713:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3134",
                        "id": 101504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11724:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51523fe5edc482c9e784925408d1c4ff3338e5b2e6fc73bcc325ceb8a03d7bb6",
                          "typeString": "literal_string \"test_Scenario4::14\""
                        },
                        "value": "test_Scenario4::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51523fe5edc482c9e784925408d1c4ff3338e5b2e6fc73bcc325ceb8a03d7bb6",
                          "typeString": "literal_string \"test_Scenario4::14\""
                        }
                      ],
                      "id": 101498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11686:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11686:59:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101506,
                  "nodeType": "ExpressionStatement",
                  "src": "11686:59:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101508,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101327,
                            "src": "11764:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101509,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11770:8:105",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 56876,
                          "src": "11764:14:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101511,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11779:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11764:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101512,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98410,
                        "src": "11783:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3135",
                        "id": 101513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11801:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9483aa72295c71c1ca6da49f4694dd4774a6c4cd7f5ee9e80b2290771fdf1b4b",
                          "typeString": "literal_string \"test_Scenario4::15\""
                        },
                        "value": "test_Scenario4::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9483aa72295c71c1ca6da49f4694dd4774a6c4cd7f5ee9e80b2290771fdf1b4b",
                          "typeString": "literal_string \"test_Scenario4::15\""
                        }
                      ],
                      "id": 101507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11755:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11755:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101515,
                  "nodeType": "ExpressionStatement",
                  "src": "11755:67:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101519,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101327,
                                "src": "11849:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$56890_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101520,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11855:8:105",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 56880,
                              "src": "11849:14:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$65137_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101522,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11864:1:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11849:17:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$65137",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11841:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101517,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11841:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11841:26:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11869:1:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3136",
                        "id": 101525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11872:20:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_081105b7523c0f8e2b80cf52450f00d1500129aa1342dc6de69e0c26975d0a26",
                          "typeString": "literal_string \"test_Scenario4::16\""
                        },
                        "value": "test_Scenario4::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_081105b7523c0f8e2b80cf52450f00d1500129aa1342dc6de69e0c26975d0a26",
                          "typeString": "literal_string \"test_Scenario4::16\""
                        }
                      ],
                      "id": 101516,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11832:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11832:61:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101527,
                  "nodeType": "ExpressionStatement",
                  "src": "11832:61:105"
                }
              ]
            },
            "functionSelector": "5322e371",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario4",
            "nameLocation": "10014:14:105",
            "parameters": {
              "id": 101288,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10028:2:105"
            },
            "returnParameters": {
              "id": 101289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10043:0:105"
            },
            "scope": 101530,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 100128,
              "name": "TestHelper",
              "nameLocations": [
                "626:10:105"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 99922,
              "src": "626:10:105"
            },
            "id": 100129,
            "nodeType": "InheritanceSpecifier",
            "src": "626:10:105"
          }
        ],
        "canonicalName": "LiquidityBinQuoterTest",
        "contractDependencies": [
          54016,
          56821,
          58109,
          61346,
          116197,
          116251,
          117290
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 100127,
          "nodeType": "StructuredDocumentation",
          "src": "103:487:105",
          "text": " Market deployed:\n - USDT/USDC, V1 with low liquidity, V2 with high liquidity\n - WNATIVE/USDC, V1 with high liquidity, V2 with low liquidity\n - WETH/USDC, V1 with low liquidity, V2.2 with high liquidity\n - BNB/USDC, V2 with high liquidity, V2.2 with low liquidity\n Every market with low liquidity has a slighly higher price.\n It should be picked with small amounts but not with large amounts.\n All tokens are considered 18 decimals for simplification purposes."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          101530,
          99922,
          11134,
          11087,
          6685,
          6360,
          5567,
          3507,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinQuoterTest",
        "nameLocation": "600:22:105",
        "scope": 101531,
        "usedErrors": [
          70922,
          70932,
          72994,
          73211
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7461,
          7467
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 105
}