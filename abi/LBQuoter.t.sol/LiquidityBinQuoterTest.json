{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "y",
          "type": "int256"
        }
      ],
      "name": "Uint128x128Math__PowUnderflow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Constructor",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_InvalidLength",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario1",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario2",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario3",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Scenario4",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:135;1903:54;;2005:17;591:11316:138;2005:17:135;;591:11316:138;2005:17:135;;;-1:-1:-1;;;3126:44:3;2005:17:135;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:135;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:135;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:135;;;728:47:138;1395:5:135;1340:2;728:47:138;:::i;:::-;:54;;778:4;728:54;:::i;:::-;695:87;;789:58;;;-1:-1:-1;;;;;;789:58:138;805:42;789:58;;;591:11316;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;979:25:147;;;20293:33:4;-1:-1:-1;20344:7:4;;;;952:18:147;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:265:147:-;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:250::-;369:1;379:113;393:6;390:1;387:13;379:113;;;469:11;;;463:18;450:11;;;443:39;415:2;408:10;379:113;;;-1:-1:-1;;526:1:147;508:16;;501:27;284:250::o;539:289::-;670:3;708:6;702:13;724:66;783:6;778:3;771:4;763:6;759:17;724:66;:::i;:::-;806:16;;;;;539:289;-1:-1:-1;;539:289:147:o;1015:290::-;1085:6;1138:2;1126:9;1117:7;1113:23;1109:32;1106:52;;;1154:1;1151;1144:12;1106:52;1180:16;;-1:-1:-1;;;;;1225:31:147;;1215:42;;1205:70;;1271:1;1268;1261:12;1205:70;1294:5;1015:290;-1:-1:-1;;;1015:290:147:o;1310:493::-;1516:1;1512;1507:3;1503:11;1499:19;1491:6;1487:32;1476:9;1469:51;1556:2;1551;1540:9;1536:18;1529:30;1450:4;1588:6;1582:13;1631:6;1626:2;1615:9;1611:18;1604:34;1647:79;1719:6;1714:2;1703:9;1699:18;1694:2;1686:6;1682:15;1647:79;:::i;:::-;1787:2;1766:15;-1:-1:-1;;1762:29:147;1747:45;;;;1794:2;1743:54;;1310:493;-1:-1:-1;;;1310:493:147:o;:::-;591:11316:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001c55760003560e01c806385226c811162000101578063b5508aa911620000a3578063e20c9f71116200007a578063e20c9f711462000373578063efbc8013146200037d578063fa7626d41462000387578063fecaa223146200039557600080fd5b8063b5508aa91462000348578063b89e02331462000352578063ba414fa6146200036957600080fd5b8063916a17c611620000d8578063916a17c6146200030e578063a7aa85e91462000327578063b0464fdc146200033e57600080fd5b806385226c8114620002bf5780638872168114620002d8578063889be5b714620002e257600080fd5b80633e5e3c23116200016b57806351f44d95116200014257806351f44d9514620002925780635322e371146200029c57806366d9a9a014620002a657600080fd5b80633e5e3c2314620002585780633f7286f4146200026257806349789ef9146200026c57600080fd5b80632ade388011620001a05780632ade3880146200022b578063396b9c9814620002445780633c322dd3146200024e57600080fd5b806301ffc9a714620001ca5780630a9254e414620002065780631ed7831c1462000212575b600080fd5b620001f1620001db36600462008ba1565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b62000210620003ac565b005b6200021c62000e3a565b604051620001fd919062008c13565b6200023562000e9e565b604051620001fd919062008c7c565b6200021062000fec565b62000210620019f3565b6200021c62001c31565b6200021c62001c93565b620002836200027d36600462008d54565b62001cf5565b604051908152602001620001fd565b6200021062001d4a565b620002106200274b565b620002b062003128565b604051620001fd919062008dc8565b620002c9620032a1565b604051620001fd919062008e53565b620002106200337b565b620002f9620002f336600462008ecd565b62003576565b60405162ffffff9091168152602001620001fd565b62000318620035d1565b604051620001fd919062008f0e565b620002106200033836600462008f97565b620036bb565b6200031862003b5c565b620002c962003c46565b620001f16200036336600462009033565b62003d20565b620001f162003da2565b6200021c62003e5c565b6200021062003ebe565b601f54620001f19060ff1681565b62000210620003a636600462009059565b6200489c565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e636865000000000000000000000000000000000000000000000060448201526000805160206201f926833981519152906371ee464d90829063975a6ce990606401600060405180830381865afa1580156200042d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000457919081019062009161565b6302be17786040518363ffffffff1660e01b81526004016200047b92919062009200565b6020604051808303816000875af11580156200049b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004c1919062009224565b50620004cc62004ba1565b602054670de0b6b3a76400009069d3c21bcecceda10000009062000507906001600160a01b0316306200050184600a62009254565b620063ef565b60215462000526906001600160a01b0316306200050184600a62009254565b601f546200054a9061010090046001600160a01b0316306200050184600a62009254565b60255462000569906001600160a01b0316306200050184600a62009254565b60245462000588906001600160a01b0316306200050184600a62009254565b602e546021546020546001600160a01b039283169263e8e337009281169116620005b460028762009284565b8660008030620005c64260016200929b565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af115801562000643573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006699190620092b1565b5050602e54601f546020546001600160a01b03928316935063e8e337009261010090920482169116848060008030620006a44260016200929b565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af115801562000721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007479190620092b1565b5050602e546025546020546001600160a01b03928316935063e8e337009291821691166200077760028762009284565b8660008030620007894260016200929b565b60405160e08a901b6001600160e01b03191681526001600160a01b039889166004820152968816602488015260448701959095526064860193909352608485019190915260a484015290921660c482015260e4810191909152610104016060604051808303816000875af115801562000806573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200082c9190620092b1565b505060275460215460205460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a60648201529116915063659ac74b906084016020604051808303816000875af115801562000899573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008bf9190620092e0565b50602754601f546020546001600160a01b039283169263659ac74b92610100900481169116620008f462800000603262009300565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af115801562000955573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200097b9190620092e0565b5060275460255460205460405163659ac74b60e01b81526001600160a01b0392831660048201529082166024820152628000006044820152600a606482015291169063659ac74b906084016020604051808303816000875af1158015620009e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a0c9190620092e0565b506027546024546020546001600160a01b039283169263659ac74b928116911662000a3c62800000603262009300565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015262ffffff166044820152600a60648201526084016020604051808303816000875af115801562000a9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ac39190620092e0565b5060215460205460009162000aed916001600160a01b039182169116846280000060078662006403565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000b2090849060040162009351565b6000604051808303816000875af115801562000b40573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b6a919081019062009528565b5050601f5460205462000baa95506001600160a01b036101009092048216945016915086905062000ba062800000603262009300565b6007600062006403565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000bdd90849060040162009351565b6000604051808303816000875af115801562000bfd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000c27919081019062009528565b505060255460205462000c5695506001600160a01b039182169450169150859050628000006007600062006403565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000c8990849060040162009351565b6000604051808303816000875af115801562000ca9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cd3919081019062009528565b505060245460205462000d0495506001600160a01b03918216945016915085905062000ba062800000603262009300565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000d3790849060040162009351565b6000604051808303816000875af115801562000d57573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000d81919081019062009528565b505060245460205462000db295506001600160a01b03918216945016915086905062000ba062800000603262009300565b6028546040516351e3938d60e11b81529192506001600160a01b03169063a3c7271a9062000de590849060040162009351565b6000604051808303816000875af115801562000e05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000e2f919081019062009528565b505050505050505050565b6060601680548060200260200160405190810160405280929190818152602001828054801562000e9457602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000e75575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b8282101562000fe357600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000fcb57838290600052602060002001805462000f3790620095b8565b80601f016020809104026020016040519081016040528092919081815260200182805462000f6590620095b8565b801562000fb65780601f1062000f8a5761010080835404028352916020019162000fb6565b820191906000526020600020905b81548152906001019060200180831162000f9857829003601f168201915b50505050508152602001906001019062000f15565b50505050815250508152602001906001019062000ec2565b50505050905090565b604080516002808252606082018352600092602083019080368337505060255482519293506001600160a01b031691839150600090620010305762001030620095f4565b6001600160a01b0392831660209182029290920181019190915254825191169082906001908110620010665762001066620095f4565b6001600160a01b039283166020918202929092010152602b54604051623e40a960e61b8152662386f26fc10000926000921690630f902a4090620010b190869086906004016200960a565b600060405180830381865afa158015620010cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620010f991908101906200978e565b9050620011708160800151600081518110620011195762001119620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a310000000000000000000000000000008152506200659b565b620011fb81608001516001815181106200118e576200118e620095f4565b60200260200101516001600160801b0316836002620011ae9190620098ed565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a320000000000000000000000000000008152506200660a565b6200125f8160400151600081518110620012195762001219620095f4565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a330000000000000000000000000000008152506200659b565b620012d781606001516000815181106200127d576200127d620095f4565b602002602001015160018111156200129957620012996200991b565b60006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a340000000000000000000000000000008152506200659b565b602b54604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a40906200131690869086906004016200960a565b600060405180830381865afa15801562001334573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200135e91908101906200978e565b9050620013d581608001516000815181106200137e576200137e620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a350000000000000000000000000000008152506200659b565b620014528160800151600181518110620013f357620013f3620095f4565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a360000000000000000000000000000008152506200660a565b620014ba8160400151600081518110620014705762001470620095f4565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f333a3a370000000000000000000000000000008152506200659b565b620015328160600151600081518110620014d857620014d8620095f4565b60200260200101516001811115620014f457620014f46200991b565b60016040518060400160405280601181526020017f746573745f5363656e6172696f333a3a380000000000000000000000000000008152506200659b565b602b54604051632c90a11360e11b8152662386f26fc10000916001600160a01b0316906359214226906200156d90879085906004016200960a565b600060405180830381865afa1580156200158b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620015b591908101906200978e565b9150620016428260800151600081518110620015d557620015d5620095f4565b60200260200101516001600160801b0316600283620015f5919062009931565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f333a3a390000000000000000000000000000008152506200660a565b620016b78260800151600181518110620016605762001660620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313000000000000000000000000000008152506200659b565b6200171b8260400151600081518110620016d557620016d5620095f4565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313100000000000000000000000000008152506200659b565b620017938260600151600081518110620017395762001739620095f4565b602002602001015160018111156200175557620017556200991b565b60006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313200000000000000000000000000008152506200659b565b50602b54604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b031690635921422690620017d190879085906004016200960a565b600060405180830381865afa158015620017ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200181991908101906200978e565b9150620018988260800151600081518110620018395762001839620095f4565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313300000000000000000000000000008152506200660a565b6200190d8260800151600181518110620018b657620018b6620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313400000000000000000000000000008152506200659b565b6200197582604001516000815181106200192b576200192b620095f4565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313500000000000000000000000000008152506200659b565b620019ed8260600151600081518110620019935762001993620095f4565b60200260200101516001811115620019af57620019af6200991b565b60016040518060400160405280601281526020017f746573745f5363656e6172696f333a3a313600000000000000000000000000008152506200659b565b50505050565b602b546040805163198a0e9f60e11b8152905162001aaf926001600160a01b0316916333141d3e9160048083019260209291908290030181865afa15801562001a40573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a669190620092e0565b60285460408051808201909152601381527f746573745f436f6e7374727563746f723a3a310000000000000000000000000060208201526001600160a01b03909116906200667c565b602b54604080516307da8f5760e01b8152905162001b73926001600160a01b0316916307da8f579160048083019260209291908290030181865afa15801562001afc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b229190620092e0565b739ad6c38be94206ca50bb0d90783181662f0cfa106040518060400160405280601381526020017f746573745f436f6e7374727563746f723a3a33000000000000000000000000008152506200667c565b602b546040805163652b7e3960e11b8152905162001c2f926001600160a01b03169163ca56fc729160048083019260209291908290030181865afa15801562001bc0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001be69190620092e0565b60275460408051808201909152601381527f746573745f436f6e7374727563746f723a3a350000000000000000000000000060208201526001600160a01b03909116906200667c565b565b6060601880548060200260200160405190810160405280929190818152602001828054801562000e94576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e75575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562000e94576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e75575050505050905090565b6000808360ff1611801562001d0d575060008260ff16115b62001d245762001d1e82846200995a565b62001d3e565b600162001d3283856200995a565b62001d3e919062009976565b60ff1690505b92915050565b604080516002808252606082018352600092602083019080368337505060215482519293506001600160a01b03169183915060009062001d8e5762001d8e620095f4565b6001600160a01b039283166020918202929092018101919091525482519116908290600190811062001dc45762001dc4620095f4565b6001600160a01b039283166020918202929092010152602b54604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062001e0f90869086906004016200960a565b600060405180830381865afa15801562001e2d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e5791908101906200978e565b905062001ece816080015160008151811062001e775762001e77620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a310000000000000000000000000000008152506200659b565b62001f59816080015160018151811062001eec5762001eec620095f4565b60200260200101516001600160801b031683600262001f0c9190620098ed565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a320000000000000000000000000000008152506200660a565b62001fbd816040015160008151811062001f775762001f77620095f4565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a330000000000000000000000000000008152506200659b565b62002035816060015160008151811062001fdb5762001fdb620095f4565b6020026020010151600181111562001ff75762001ff76200991b565b60006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a340000000000000000000000000000008152506200659b565b602b54604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a40906200207490869086906004016200960a565b600060405180830381865afa15801562002092573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620020bc91908101906200978e565b9050620021338160800151600081518110620020dc57620020dc620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a350000000000000000000000000000008152506200659b565b620021b08160800151600181518110620021515762002151620095f4565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a360000000000000000000000000000008152506200660a565b620022188160400151600081518110620021ce57620021ce620095f4565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f313a3a370000000000000000000000000000008152506200659b565b620022908160600151600081518110620022365762002236620095f4565b602002602001015160018111156200225257620022526200991b565b60016040518060400160405280601181526020017f746573745f5363656e6172696f313a3a380000000000000000000000000000008152506200659b565b602b54604051632c90a11360e11b8152662386f26fc10000916001600160a01b031690635921422690620022cb90879085906004016200960a565b600060405180830381865afa158015620022e9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200231391908101906200978e565b9150620023a08260800151600081518110620023335762002333620095f4565b60200260200101516001600160801b031660028362002353919062009931565b6001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f313a3a390000000000000000000000000000008152506200660a565b620024158260800151600181518110620023be57620023be620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313000000000000000000000000000008152506200659b565b620024798260400151600081518110620024335762002433620095f4565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313100000000000000000000000000008152506200659b565b620024f18260600151600081518110620024975762002497620095f4565b60200260200101516001811115620024b357620024b36200991b565b60006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313200000000000000000000000000008152506200659b565b50602b54604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b0316906359214226906200252f90879085906004016200960a565b600060405180830381865afa1580156200254d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200257791908101906200978e565b9150620025f68260800151600081518110620025975762002597620095f4565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313300000000000000000000000000008152506200660a565b6200266b8260800151600181518110620026145762002614620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313400000000000000000000000000008152506200659b565b620026d38260400151600081518110620026895762002689620095f4565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313500000000000000000000000000008152506200659b565b620019ed8260600151600081518110620026f157620026f1620095f4565b602002602001015160018111156200270d576200270d6200991b565b60016040518060400160405280601281526020017f746573745f5363656e6172696f313a3a313600000000000000000000000000008152506200659b565b604080516002808252606082018352600092602083019080368337505060245482519293506001600160a01b0316918391506000906200278f576200278f620095f4565b6001600160a01b0392831660209182029290920181019190915254825191169082906001908110620027c557620027c5620095f4565b6001600160a01b039283166020918202929092010152602b54604051623e40a960e61b8152662386f26fc10000926000921690630f902a40906200281090869086906004016200960a565b600060405180830381865afa1580156200282e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200285891908101906200978e565b9050620028cf8160800151600081518110620028785762002878620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a310000000000000000000000000000008152506200659b565b620029448160800151600181518110620028ed57620028ed620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a32000000000000000000000000000000815250620066b4565b620029ac8160400151600081518110620029625762002962620095f4565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a330000000000000000000000000000008152506200659b565b62002a248160600151600081518110620029ca57620029ca620095f4565b60200260200101516001811115620029e657620029e66200991b565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a340000000000000000000000000000008152506200659b565b602b54604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a409062002a6390869086906004016200960a565b600060405180830381865afa15801562002a81573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002aab91908101906200978e565b905062002b22816080015160008151811062002acb5762002acb620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a350000000000000000000000000000008152506200659b565b62002b9f816080015160018151811062002b405762002b40620095f4565b60200260200101516001600160801b0316836001600160801b031666d529ae9e8600006040518060400160405280601181526020017f746573745f5363656e6172696f343a3a360000000000000000000000000000008152506200660a565b62002c07816040015160008151811062002bbd5762002bbd620095f4565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a370000000000000000000000000000008152506200659b565b62002c7f816060015160008151811062002c255762002c25620095f4565b6020026020010151600181111562002c415762002c416200991b565b60016040518060400160405280601181526020017f746573745f5363656e6172696f343a3a380000000000000000000000000000008152506200659b565b602b54604051632c90a11360e11b8152662386f26fc10000916001600160a01b03169063592142269062002cba90879085906004016200960a565b600060405180830381865afa15801562002cd8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002d0291908101906200978e565b915062002d79826080015160008151811062002d225762002d22620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f343a3a39000000000000000000000000000000815250620066ec565b62002dee826080015160018151811062002d975762002d97620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313000000000000000000000000000008152506200659b565b62002e56826040015160008151811062002e0c5762002e0c620095f4565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313100000000000000000000000000008152506200659b565b62002ece826060015160008151811062002e745762002e74620095f4565b6020026020010151600181111562002e905762002e906200991b565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313200000000000000000000000000008152506200659b565b50602b54604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b03169063592142269062002f0c90879085906004016200960a565b600060405180830381865afa15801562002f2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002f5491908101906200978e565b915062002fd3826080015160008151811062002f745762002f74620095f4565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313300000000000000000000000000008152506200660a565b62003048826080015160018151811062002ff15762002ff1620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313400000000000000000000000000008152506200659b565b620030b08260400151600081518110620030665762003066620095f4565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313500000000000000000000000000008152506200659b565b620019ed8260600151600081518110620030ce57620030ce620095f4565b60200260200101516001811115620030ea57620030ea6200991b565b60016040518060400160405280601281526020017f746573745f5363656e6172696f343a3a313600000000000000000000000000008152506200659b565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562000fe357838290600052602060002090600202016040518060400160405290816000820180546200318290620095b8565b80601f0160208091040260200160405190810160405280929190818152602001828054620031b090620095b8565b8015620032015780601f10620031d55761010080835404028352916020019162003201565b820191906000526020600020905b815481529060010190602001808311620031e357829003601f168201915b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156200328857602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620032495790505b505050505081525050815260200190600101906200314c565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562000fe3578382906000526020600020018054620032e790620095b8565b80601f01602080910402602001604051908101604052809291908181526020018280546200331590620095b8565b8015620033665780601f106200333a5761010080835404028352916020019162003366565b820191906000526020600020905b8154815290600101906020018083116200334857829003601f168201915b505050505081526020019060010190620032c5565b6040805160018082528183019092526060916020808301908036833701905050604051630618f58760e51b8152632973c80b60e01b60048201529091506000805160206201f9268339815191529063c31eb0e090602401600060405180830381600087803b158015620033ed57600080fd5b505af115801562003402573d6000803e3d6000fd5b5050602b54604051623e40a960e61b81526001600160a01b039091169250630f902a40915062003441908490670de0b6b3a7640000906004016200960a565b600060405180830381865afa1580156200345f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200348991908101906200978e565b50604051630618f58760e51b8152632973c80b60e01b60048201526000805160206201f9268339815191529063c31eb0e090602401600060405180830381600087803b158015620034d957600080fd5b505af1158015620034ee573d6000803e3d6000fd5b5050602b54604051632c90a11360e11b81526001600160a01b039091169250635921422691506200352a9084906301312d00906004016200960a565b600060405180830381865afa15801562003548573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200357291908101906200978e565b5050565b6000806200358a8462ffffff87166200929b565b905060008360ff16116200359f5780620035bb565b620035ae60ff84168262009992565b620035bb9060016200929b565b9050620035c88162006724565b95945050505050565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562000fe35760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620036a257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620036635790505b50505050508152505081526020019060010190620035f5565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620036fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620037229190620092e0565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003765573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200378b9190620092e0565b90506200379a828b88620063ef565b620037a7818b87620063ef565b6000620037b5858562001cf5565b905060008167ffffffffffffffff811115620037d557620037d5620090eb565b604051908082528060200260200182016040528015620037ff578160200160208202803683370190505b50905060005b82811015620038fe5760006200381d8b838962003576565b905060008b62ffffff168262ffffff16101580156200383f575060008960ff16115b6200384c5760006200386d565b6200386d6200386760ff8b16670de0b6b3a764000062009284565b62006750565b905060008c62ffffff168362ffffff16111580156200388f575060008960ff16115b6200389c576000620038b7565b620038b76200386760ff8b16670de0b6b3a764000062009284565b9050620038c68282856200677c565b858581518110620038db57620038db620095f4565b60200260200101818152505050505080620038f690620099a8565b905062003805565b506040516303223eab60e11b81526001600160a01b038d1660048201526000805160206201f926833981519152906306447d5690602401600060405180830381600087803b1580156200395057600080fd5b505af115801562003965573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af1158015620039b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620039df9190620099d5565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af115801562003a30573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003a569190620099d5565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562003ab657600080fd5b505af115801562003acb573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b815260040162003b0193929190620099f3565b6000604051808303816000875af115801562003b21573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003b4b919081019062009a59565b505050505050505050505050505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101562000fe35760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562003c2d57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162003bee5790505b5050505050815250508152602001906001019062003b80565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562000fe357838290600052602060002001805462003c8c90620095b8565b80601f016020809104026020016040519081016040528092919081815260200182805462003cba90620095b8565b801562003d0b5780601f1062003cdf5761010080835404028352916020019162003d0b565b820191906000526020600020905b81548152906001019060200180831162003ced57829003601f168201915b50505050508152602001906001019062003c6a565b602754604051632aaf12cf60e21b815261ffff831660048201526000916001600160a01b03169063aabc4b3c9060240161010060405180830381865afa15801562003d6f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d95919062009aad565b9998505050505050505050565b60085460009060ff161562003dbb575060085460ff1690565b604051630667f9d760e41b81526000805160206201f926833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562003e2f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e55919062009224565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000e94576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000e75575050505050905090565b604080516002808252606082018352600092602083019080368337019050509050601f60019054906101000a90046001600160a01b03168160008151811062003f0b5762003f0b620095f4565b6001600160a01b039283166020918202929092018101919091525482519116908290600190811062003f415762003f41620095f4565b6001600160a01b039283166020918202929092010152602b54604051623e40a960e61b8152662386f26fc10000926000921690630f902a409062003f8c90869086906004016200960a565b600060405180830381865afa15801562003faa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003fd491908101906200978e565b90506200404b816080015160008151811062003ff45762003ff4620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a310000000000000000000000000000008152506200659b565b620040c08160800151600181518110620040695762004069620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a32000000000000000000000000000000815250620066b4565b620041288160400151600081518110620040de57620040de620095f4565b6020026020010151600a61ffff166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a330000000000000000000000000000008152506200659b565b620041a08160600151600081518110620041465762004146620095f4565b602002602001015160018111156200416257620041626200991b565b60016040518060400160405280601181526020017f746573745f5363656e6172696f323a3a340000000000000000000000000000008152506200659b565b602b54604051623e40a960e61b815268056bc75e2d6310000093506001600160a01b0390911690630f902a4090620041df90869086906004016200960a565b600060405180830381865afa158015620041fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200422791908101906200978e565b90506200429e8160800151600081518110620042475762004247620095f4565b60200260200101516001600160801b0316836001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a350000000000000000000000000000008152506200659b565b6200431b8160800151600181518110620042bc57620042bc620095f4565b60200260200101516001600160801b0316836001600160801b031666b1a2bc2ec500006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a360000000000000000000000000000008152506200660a565b6200437f8160400151600081518110620043395762004339620095f4565b602002602001015160006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a370000000000000000000000000000008152506200659b565b620043f781606001516000815181106200439d576200439d620095f4565b60200260200101516001811115620043b957620043b96200991b565b60006040518060400160405280601181526020017f746573745f5363656e6172696f323a3a380000000000000000000000000000008152506200659b565b602b54604051632c90a11360e11b8152662386f26fc10000916001600160a01b0316906359214226906200443290879085906004016200960a565b600060405180830381865afa15801562004450573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200447a91908101906200978e565b9150620044f182608001516000815181106200449a576200449a620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601181526020017f746573745f5363656e6172696f323a3a39000000000000000000000000000000815250620066ec565b6200456682608001516001815181106200450f576200450f620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313000000000000000000000000000008152506200659b565b620045ce8260400151600081518110620045845762004584620095f4565b6020026020010151600a61ffff166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313100000000000000000000000000008152506200659b565b620046468260600151600081518110620045ec57620045ec620095f4565b602002602001015160018111156200460857620046086200991b565b60016040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313200000000000000000000000000008152506200659b565b50602b54604051632c90a11360e11b815268056bc75e2d63100000916001600160a01b0316906359214226906200468490879085906004016200960a565b600060405180830381865afa158015620046a2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620046cc91908101906200978e565b91506200474b8260800151600081518110620046ec57620046ec620095f4565b60200260200101516001600160801b0316826001600160801b031666b1a2bc2ec500006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313300000000000000000000000000008152506200660a565b620047c08260800151600181518110620047695762004769620095f4565b60200260200101516001600160801b0316826001600160801b03166040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313400000000000000000000000000008152506200659b565b620048248260400151600081518110620047de57620047de620095f4565b602002602001015160006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313500000000000000000000000000008152506200659b565b620019ed8260600151600081518110620048425762004842620095f4565b602002602001015160018111156200485e576200485e6200991b565b60006040518060400160405280601281526020017f746573745f5363656e6172696f323a3a313600000000000000000000000000008152506200659b565b670de0b6b3a7640000831115620048fa5760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f2068696768000000000000000060448201526064015b60405180910390fd5b600062004908838362001cf5565b905060008167ffffffffffffffff811115620049285762004928620090eb565b60405190808252806020026020018201604052801562004952578160200160208202803683370190505b50905060008267ffffffffffffffff811115620049735762004973620090eb565b6040519080825280602002602001820160405280156200499d578160200160208202803683370190505b50905060005b8381101562004aab576000620049bb89838862003576565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa15801562004a11573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004a37919062009224565b90508162ffffff1685848151811062004a545762004a54620095f4565b602090810291909101015262004a74818a670de0b6b3a7640000620067ba565b84848151811062004a895762004a89620095f4565b60200260200101818152505050508062004aa390620099a8565b9050620049a3565b5060405163ca669fa760e01b81526001600160a01b038b1660048201526000805160206201f9268339815191529063ca669fa790602401600060405180830381600087803b15801562004afd57600080fd5b505af115801562004b12573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e915062004b4a908d908d908790879060040162009b07565b6000604051808303816000875af115801562004b6a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262004b94919081019062009b54565b5050505050505050505050565b601f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1674b31f66aa3c1e785363f0875a1b74e27b85fd66c70017908190556001600160a01b03610100909104163b60000362004cc957601f546040516000805160206201f9268339815191529163b4d6c782916101009091046001600160a01b03169062004c329062008aae565b604051809103906000f08015801562004c4f573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b815260040162004c9492919062009b8d565b600060405180830381600087803b15801562004caf57600080fd5b505af115801562004cc4573d6000803e3d6000fd5b505050505b600660405162004cd99062008abc565b60ff9091168152602001604051809103906000f08015801562004d00573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b039290921691909117905560405160069062004d329062008abc565b60ff9091168152602001604051809103906000f08015801562004d59573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b039290921691909117905560405160089062004d8b9062008abc565b60ff9091168152602001604051809103906000f08015801562004db2573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b039290921691909117905560405160129062004de49062008abc565b60ff9091168152602001604051809103906000f08015801562004e0b573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b039290921691909117905560405160129062004e3d9062008abc565b60ff9091168152602001604051809103906000f08015801562004e64573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b039290921691909117905560405160129062004e969062008abc565b60ff9091168152602001604051809103906000f08015801562004ebd573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b039290921691909117905560405162004eec9062008aca565b604051809103906000f08015801562004f09573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03928316179055601f54604080516318caf8e360e31b815261010090920490921660048201526024810191909152600760448201527f776e61746976650000000000000000000000000000000000000000000000000060648201526000805160206201f9268339815191529063c657c71890608401600060405180830381600087803b15801562004faf57600080fd5b505af115801562004fc4573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b1580156200503c57600080fd5b505af115801562005051573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b158015620050c957600080fd5b505af1158015620050de573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b1580156200515657600080fd5b505af11580156200516b573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b158015620051e357600080fd5b505af1158015620051f8573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b1580156200527057600080fd5b505af115801562005285573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600360448201526231373160e91b60648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b158015620052fa57600080fd5b505af11580156200530f573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e00000000000000000000000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b1580156200539b57600080fd5b505af1158015620053b0573d6000803e3d6000fd5b5050602e80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602f8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040516000906200540d9062008ad8565b604051809103906000f0801580156200542a573d6000803e3d6000fd5b509050807f00000000000000000000000000000000000000000000000000000000000000006040516200545d9062008ae6565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f080158015620054a0573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b0392909216918217905560405160009190620054d29062008af4565b6001600160a01b039091168152602001604051809103906000f080158015620054ff573d6000803e3d6000fd5b5060275460405191925082917f0000000000000000000000000000000000000000000000000000000000000000916001600160a01b031690620055429062008b02565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200557f573d6000803e3d6000fd5b50602d80546001600160a01b0319166001600160a01b03928316908117909155602754604051632f880c2560e21b81527f000000000000000000000000000000000000000000000000000000000000000084166004820181905260248201526602d79883d20000604482015260648101929092529091169063be20309490608401600060405180830381600087803b1580156200561b57600080fd5b505af115801562005630573d6000803e3d6000fd5b50506027546040516001600160a01b03909116925062005651915062008af4565b6001600160a01b039091168152602001604051809103906000f0801580156200567e573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b0392909216919091179055620056a9620067e8565b620056b5600a62006b9c565b602754602f54601f546040516000936001600160a01b039081169381169261010090041690620056e59062008b10565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562005722573d6000803e3d6000fd5b5060408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905191925082917f00000000000000000000000000000000000000000000000000000000000000009190620057809062008ae6565b6200578e9392919062009bb1565b604051809103906000f080158015620057ab573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316908117909155602f5460275460405191841693169190620057e69062008b1e565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562005823573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b03928316179055602854604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f75746572000000000000000000000000000000000000000000000000000060648201526000805160206201f9268339815191529063c657c71890608401600060405180830381600087803b158015620058c457600080fd5b505af1158015620058d9573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f746572000000000000000000000000000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b1580156200596557600080fd5b505af11580156200597a573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201527f666163746f72790000000000000000000000000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b15801562005a0657600080fd5b505af115801562005a1b573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b15801562005aa757600080fd5b505af115801562005abc573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f75746572563100000000000000000000000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b15801562005b4857600080fd5b505af115801562005b5d573d6000803e3d6000fd5b5050602f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f72795631000000000000000000000000000000000000000000000060648201526000805160206201f926833981519152925063c657c7189150608401600060405180830381600087803b15801562005be957600080fd5b505af115801562005bfe573d6000803e3d6000fd5b5050601f54602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015261010090920416925063095ea7b391506044016020604051808303816000875af115801562005c5e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005c849190620099d5565b50602054602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005cdc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d029190620099d5565b50602154602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005d5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d809190620099d5565b50602254602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005dd8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005dfe9190620099d5565b50602554602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005e56573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e7c9190620099d5565b50602354602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005ed4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005efa9190620099d5565b5060248054602e5460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af115801562005f54573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f7a9190620099d5565b50602654602e5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562005fd2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ff89190620099d5565b50601f5460285460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152610100909204169063095ea7b3906044016020604051808303816000875af115801562006055573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200607b9190620099d5565b5060205460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620060d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620060f99190620099d5565b5060215460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801562006151573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061779190620099d5565b5060225460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620061cf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620061f59190620099d5565b5060255460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200624d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062739190620099d5565b5060235460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620062cb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620062f19190620099d5565b506024805460285460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200634b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620063719190620099d5565b5060265460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af1158015620063c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019ed9190620099d5565b620063fe838383600062006c42565b505050565b620064a1604051806101e0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160006001600160a01b0316815260200160006001600160a01b03168152602001600081525090565b600080600080620064b58989898962006e45565b9350935093509350604051806101e001604052808c6001600160a01b031681526020018b6001600160a01b03168152602001600a61ffff1681526020018281526020018a815260200160008152602001600081526020018962ffffff16815260200160008152602001620065338a876200715490919063ffffffff16565b815260208101859052604081018490526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660608201819052608082015260a0016200658a426103e86200929b565b90529b9a5050505050505050505050565b6040516388b44c8560e01b81526000805160206201f926833981519152906388b44c8590620065d39086908690869060040162009bdf565b60006040518083038186803b158015620065ec57600080fd5b505afa15801562006601573d6000803e3d6000fd5b50505050505050565b604051631ecb7d3360e01b81526000805160206201f92683398151915290631ecb7d33906200664490879087908790879060040162009c00565b60006040518083038186803b1580156200665d57600080fd5b505afa15801562006672573d6000803e3d6000fd5b5050505050505050565b604051632f2769d160e01b81526000805160206201f92683398151915290632f2769d190620065d39086908690869060040162009bb1565b604051636cd1e26960e11b81526000805160206201f9268339815191529063d9a3c4d290620065d39086908690869060040162009bdf565b6040516365d5c13560e01b81526000805160206201f926833981519152906365d5c13590620065d39086908690869060040162009bdf565b8062ffffff811681146200674b57604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff811681146200674b5760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b6000806000620067cb868662007218565b91509150620067de868686858562007237565b9695505050505050565b601f5461010090046001600160a01b0316156200686857602754601f54604051635a44092360e01b81526001600160a01b0361010090920482166004820152911690635a44092390602401600060405180830381600087803b1580156200684e57600080fd5b505af115801562006863573d6000803e3d6000fd5b505050505b6020546001600160a01b031615620068de57602754602054604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b158015620068c457600080fd5b505af1158015620068d9573d6000803e3d6000fd5b505050505b6021546001600160a01b0316156200695457602754602154604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200693a57600080fd5b505af11580156200694f573d6000803e3d6000fd5b505050505b6022546001600160a01b031615620069ca57602754602254604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b158015620069b057600080fd5b505af1158015620069c5573d6000803e3d6000fd5b505050505b6025546001600160a01b03161562006a4057602754602554604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562006a2657600080fd5b505af115801562006a3b573d6000803e3d6000fd5b505050505b6023546001600160a01b03161562006ab657602754602354604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562006a9c57600080fd5b505af115801562006ab1573d6000803e3d6000fd5b505050505b6024546001600160a01b03161562006b2b5760275460248054604051635a44092360e01b81526001600160a01b039182166004820152921691635a4409239101600060405180830381600087803b15801562006b1157600080fd5b505af115801562006b26573d6000803e3d6000fd5b505050505b6026546001600160a01b03161562001c2f57602754602654604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b15801562006b8757600080fd5b505af1158015620019ed573d6000803e3d6000fd5b60275460405163379ee80360e01b815261ffff8316600482015261138860248201819052601e604483015261025860648301526084820152619c4060a48201526103e860c48201526205573060e482015260006101048201526001600160a01b039091169063379ee8039061012401600060405180830381600087803b15801562006c2657600080fd5b505af115801562006c3b573d6000803e3d6000fd5b5050505050565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162006c989162009c27565b600060405180830381855afa9150503d806000811462006cd5576040519150601f19603f3d011682016040523d82523d6000602084013e62006cda565b606091505b5091505060008180602001905181019062006cf6919062009224565b905062006d308462006d298762006d226370a0823160e01b62006d1b600d8d620072e9565b9062007311565b906200732f565b906200735b565b821562006e3d5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162006d7b919062009c27565b600060405180830381855afa9150503d806000811462006db8576040519150601f19603f3d011682016040523d82523d6000602084013e62006dbd565b606091505b5091505060008180602001905181019062006dd9919062009224565b90508286101562006e045762006df0868462009992565b62006dfc908262009992565b905062006e1f565b62006e10838762009992565b62006e1c90826200929b565b90505b620066728162006d296318160ddd60e01b62006d1b600d8d620072e9565b505050505050565b60608080600062006e5860028762009c45565b62ffffff1660000362006eae5760405162461bcd60e51b815260206004820181905260248201527f506c732070757420616e20756e6576656e206e756d626572206f662062696e736044820152606401620048f1565b600062006ebd60028862009c6a565b90508662ffffff1667ffffffffffffffff81111562006ee05762006ee0620090eb565b60405190808252806020026020018201604052801562006f0a578160200160208202803683370190505b5094508662ffffff1667ffffffffffffffff81111562006f2e5762006f2e620090eb565b60405190808252806020026020018201604052801562006f58578160200160208202803683370190505b5093508662ffffff1667ffffffffffffffff81111562006f7c5762006f7c620090eb565b60405190808252806020026020018201604052801562006fa6578160200160208202803683370190505b509250600062006fb882600162009300565b62006fd19062ffffff16670de0b6b3a764000062009284565b9050600062006fe283600162009300565b62006ff39062ffffff168c62009284565b905060005b8962ffffff1681101562007145576200701389600162009300565b620070249062ffffff168262009254565b620070318a600162009300565b6200703d908662009c83565b62007049908d62009ca5565b62ffffff166200705a91906200929b565b8882815181106200706f576200706f620095f4565b6020026020010181815250508362ffffff168111620070ab57828682815181106200709e576200709e620095f4565b6020026020010181815250505b8362ffffff168110620071305782878281518110620070ce57620070ce620095f4565b60200260200101818152505060008211620070eb57600062007121565b620071216080620071188a84815181106200710a576200710a620095f4565b602002602001015162007367565b84919062007376565b6200712d90866200929b565b94505b806200713c81620099a8565b91505062006ff8565b50505050945094509450949050565b6060825167ffffffffffffffff811115620071735762007173620090eb565b6040519080825280602002602001820160405280156200719d578160200160208202803683370190505b50905060005b835181101562007211578262ffffff16848281518110620071c857620071c8620095f4565b6020026020010151620071dc919062009cc4565b828281518110620071f157620071f1620095f4565b6020908102919091010152806200720881620099a8565b915050620071a3565b5092915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036200725d578383816200725457620072546200926e565b049050620035c8565b8382106200727e576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6004820180546001600160a01b0319166001600160a01b0383161790556000825b9392505050565b60028201805463ffffffff191660e083901c1790556000826200730a565b6001808301805491820181556000908152602081206001600160a01b038416920191909155826200730a565b620035728282620073a2565b600062001d4482600a62007819565b600060ff831684811b9061ffff6101008290031686901c90620067de9087906001901b86858562007237565b6004820154600283015460038401546001600160a01b039092169160e09190911b906000620073d18662007856565b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051939450926200741291859187910162009ce7565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200745257620074508660006200796e565b505b6001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909183916200749391869188910162009ce7565b6040516020818303038152906040528051906020012081526020019081526020016000209050600081600201548260010154620074d191906200929b565b1115620075cd57600081600201548260010154620074f091906200929b565b620074fe9061010062009992565b6200750b90600262009e08565b60405163348051d760e11b815260048101829052909150818810906000805160206201f92683398151915290636900a3ae90602401600060405180830381865afa1580156200755e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007588919081019062009161565b6040516020016200759a919062009e16565b60405160208183030381529060405290620075ca5760405162461bcd60e51b8152600401620048f1919062009ea9565b50505b8054604051630667f9d760e41b81526001600160a01b038716600482015260248101919091526000906000805160206201f9268339815191529063667f9d7090604401602060405180830381865afa1580156200762e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007654919062009224565b6001838101546002850154929350600092908101610100039190911b60001901811b1983169089901b1783546040516370ca10bb60e01b81526001600160a01b038a1660048201526024810191909152604481018290529091506000805160206201f926833981519152906370ca10bb90606401600060405180830381600087803b158015620076e357600080fd5b505af1158015620076f8573d6000803e3d6000fd5b505050506000806200770a8b62007984565b915091508115806200771c5750898114155b156200780e5784546040516370ca10bb60e01b81526001600160a01b038b1660048201526024810191909152604481018590526000805160206201f926833981519152906370ca10bb90606401600060405180830381600087803b1580156200778457600080fd5b505af115801562007799573d6000803e3d6000fd5b505060405162461bcd60e51b815260206004820152603360248201527f73746453746f726167652066696e642853746453746f72616765293a2046616960448201527f6c656420746f2077726974652076616c75652e0000000000000000000000000060648201526084019150620048f19050565b62004b948b62007a5b565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620035c8828262007a69565b60608160070180546200786990620095b8565b9050600003620078d25762001d4482600101805480602002602001604051908101604052809291908181526020018280548015620078c757602002820191906000526020600020905b815481526020019060010190808311620078b2575b505050505062007ce8565b816007018054620078e390620095b8565b80601f01602080910402602001604051908101604052809291908181526020018280546200791190620095b8565b8015620079625780601f10620079365761010080835404028352916020019162007962565b820191906000526020600020905b8154815290600101906020018083116200794457829003601f168201915b50505050509050919050565b60006200797c838362007d95565b549392505050565b60028101546000908190819060e01b6200799e8562007856565b604051602001620079b192919062009ebe565b60408051601f1981840301815290829052600486015490925060009182916001600160a01b031690620079e690859062009c27565b600060405180830381855afa9150503d806000811462007a23576040519150601f19603f3d011682016040523d82523d6000602084013e62007a28565b606091505b5091509150600062007a4d828860030154602062007a47919062009254565b62008558565b929792965091945050505050565b62007a6681620085fa565b50565b60008060008360000362007a875750600160801b915062001d449050565b5082600081121562007a9a579015906000035b6210000081101562007ca057600160801b9250846001600160801b0381111562007ac657911591600019045b600182161562007ad85792830260801c925b800260801c600282161562007aef5792830260801c925b800260801c600482161562007b065792830260801c925b800260801c600882161562007b1d5792830260801c925b800260801c601082161562007b345792830260801c925b800260801c602082161562007b4b5792830260801c925b800260801c604082161562007b625792830260801c925b8002608090811c9082161562007b7a5792830260801c925b800260801c61010082161562007b925792830260801c925b800260801c61020082161562007baa5792830260801c925b800260801c61040082161562007bc25792830260801c925b800260801c61080082161562007bda5792830260801c925b800260801c61100082161562007bf25792830260801c925b800260801c61200082161562007c0a5792830260801c925b800260801c61400082161562007c225792830260801c925b800260801c61800082161562007c3a5792830260801c925b800260801c6201000082161562007c535792830260801c925b800260801c6202000082161562007c6c5792830260801c925b800260801c6204000082161562007c855792830260801c925b800260801c6208000082161562007c9e5792830260801c925b505b8260000362007ccd57604051631dba598d60e11b81526004810186905260248101859052604401620048f1565b8162007cda5782620035c8565b620035c88360001962009284565b606060008251602062007cfc919062009254565b67ffffffffffffffff81111562007d175762007d17620090eb565b6040519080825280601f01601f19166020018201604052801562007d42576020820181803683370190505b50905060005b83518110156200721157600084828151811062007d695762007d69620095f4565b60200260200101519050808260200260200184015250808062007d8c90620099a8565b91505062007d48565b6004820154600283015460038401546000926001600160a01b03169160e01b908362007dc18762007856565b6001600160a01b0385166000908152602089815260408083206001600160e01b031988168452825280832090519394509262007e0291859187910162009ce7565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff161562007eb657851562007e465762007e4687620085fa565b6001600160a01b0384166000908152602088815260408083206001600160e01b0319871684528252808320905190929162007e8691859187910162009ce7565b60405160208183030381529060405280519060200120815260200190815260200160002094505050505062001d44565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007f1557600080fd5b505af115801562007f2a573d6000803e3d6000fd5b50505050600062007f3b8862007984565b6040516365bc948160e01b81526001600160a01b0388166004820152909250600091506000805160206201f926833981519152906365bc9481906024016000604051808303816000875af115801562007f98573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007fc2919081019062009ef1565b509050805160000362008040576040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e6064820152608401620048f1565b60005b8151811015620083f35760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d7089858581518110620080975762008097620095f4565b60200260200101516040518363ffffffff1660e01b8152600401620080d19291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa158015620080ef573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008115919062009224565b9050806200817f577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a588848481518110620081545762008154620095f4565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b620081a78b848481518110620081995762008199620095f4565b602002602001015162008650565b620081b35750620083de565b60068b0154600090819060ff161562008209576000620081f08e878781518110620081e257620081e2620095f4565b602002602001015162008839565b9094509250905080620082075750505050620083de565b505b6001828201610100031b60001901811b8316811c8681146200822f5750505050620083de565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200826792919062009ce7565b60405160208183030381529060405280519060200120898981518110620082925762008292620095f4565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a16040518060800160405280878781518110620082f657620082f6620095f4565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200837c92919062009ce7565b60408051808303601f190181529181528151602092830120835282820193909352908201600020835181559083015160018201559082015160028201556060909101516003909101805460ff191691151591909117905550620083f392505050565b80620083ea81620099a8565b91505062008043565b506001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200843491879189910162009ce7565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff16620084d45760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e00000000000000000000000000000000006064820152608401620048f1565b8715620084e657620084e689620085fa565b6001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200852691879189910162009ce7565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b600080600060208551116200856f57845162008572565b60205b905060005b81811015620085f0576200858d81600862009254565b866200859a83886200929b565b81518110620085ad57620085ad620095f4565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c929092179180620085e781620099a8565b91505062008577565b5090949350505050565b6004810180546001600160a01b031916905560028101805463ffffffff191690556200862b60018201600062008b2c565b60006003820181905560068201805460ff1916905562007a6690600783019062008b4c565b600482810154604051630667f9d760e41b81526001600160a01b03909116918101919091526024810182905260009081906000805160206201f9268339815191529063667f9d7090604401602060405180830381865afa158015620086b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620086df919062009224565b9050600080620086ef8662007984565b9092509050600081156200870557600062008709565b6000195b6004888101546040516370ca10bb60e01b81526001600160a01b039091169181019190915260248101889052604481018290529091506000805160206201f926833981519152906370ca10bb90606401600060405180830381600087803b1580156200877457600080fd5b505af115801562008789573d6000803e3d6000fd5b5050505060006200879a8862007984565b60048a8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018a9052604481018890529092506000805160206201f92683398151915291506370ca10bb90606401600060405180830381600087803b1580156200880657600080fd5b505af11580156200881b573d6000803e3d6000fd5b505050508380156200882d5750808314155b98975050505050505050565b600482810154604051630667f9d760e41b81526001600160a01b0390911691810191909152602481018290526000908190819081906000805160206201f9268339815191529063667f9d7090604401602060405180830381865afa158015620088a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620088cc919062009224565b9050600080620088df8888600162008995565b91509150600080620088f48a8a600062008995565b60048c8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018c90526044810188905291935091506000805160206201f926833981519152906370ca10bb90606401600060405180830381600087803b1580156200896157600080fd5b505af115801562008976573d6000803e3d6000fd5b50505050838015620089855750815b9a92995097509095505050505050565b60008060005b61010081101562008a9d57600084620089b8576001821b620089ca565b620089c58260ff62009992565b6001901b5b6004888101546040516370ca10bb60e01b81526001600160a01b039091169181019190915260248101889052604481018290529091506000805160206201f926833981519152906370ca10bb90606401600060405180830381600087803b15801562008a3557600080fd5b505af115801562008a4a573d6000803e3d6000fd5b5050505060008062008a5c8962007984565b9150915081801562008a6d57508015155b1562008a8457600184955095505050505062008aa6565b505050808062008a9490620099a8565b9150506200899b565b50600080915091505b935093915050565b610b088062009f5d83390190565b610bfd806200aa6583390190565b610c18806200b66283390190565b613c2a806200c27a83390190565b610f1f806200fea483390190565b6167e68062010dc383390190565b6108ff80620175a983390190565b614e6b8062017ea883390190565b612c13806201cd1383390190565b508054600082559060005260206000209081019062007a66919062008b86565b50805462008b5a90620095b8565b6000825580601f1062008b6b575050565b601f01602090049060005260206000209081019062007a6691905b5b8082111562008b9d576000815560010162008b87565b5090565b60006020828403121562008bb457600080fd5b81356001600160e01b0319811681146200730a57600080fd5b600081518084526020808501945080840160005b8381101562008c085781516001600160a01b03168752958201959082019060010162008be1565b509495945050505050565b6020815260006200730a602083018462008bcd565b60005b8381101562008c4557818101518382015260200162008c2b565b50506000910152565b6000815180845262008c6881602086016020860162008c28565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562008d3257603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562008d1b57605f1989850301835262008d0884865162008c4e565b948e01949350918d019160010162008ce9565b505050978a01979450509188019160010162008ca3565b50919a9950505050505050505050565b803560ff811681146200674b57600080fd5b6000806040838503121562008d6857600080fd5b62008d738362008d42565b915062008d836020840162008d42565b90509250929050565b600081518084526020808501945080840160005b8381101562008c085781516001600160e01b0319168752958201959082019060010162008da0565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562008e4557888303603f190185528151805187855262008e168886018262008c4e565b91890151858303868b015291905062008e30818362008d8c565b96890196945050509086019060010162008def565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562008eac57603f1988860301845262008e9985835162008c4e565b9450928501929085019060010162008e7a565b5092979650505050505050565b803562ffffff811681146200674b57600080fd5b60008060006060848603121562008ee357600080fd5b62008eee8462008eb9565b92506020840135915062008f056040850162008d42565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562008e4557888303603f19018552815180516001600160a01b0316845287015187840187905262008f6d8785018262008d8c565b958801959350509086019060010162008f35565b6001600160a01b038116811462007a6657600080fd5b600080600080600080600080610100898b03121562008fb557600080fd5b883562008fc28162008f81565b9750602089013562008fd48162008f81565b9650604089013562008fe68162008f81565b955062008ff660608a0162008eb9565b94506080890135935060a089013592506200901460c08a0162008d42565b91506200902460e08a0162008d42565b90509295985092959890939650565b6000602082840312156200904657600080fd5b813561ffff811681146200730a57600080fd5b600080600080600080600060e0888a0312156200907557600080fd5b8735620090828162008f81565b96506020880135620090948162008f81565b95506040880135620090a68162008f81565b9450620090b66060890162008eb9565b935060808801359250620090cd60a0890162008d42565b9150620090dd60c0890162008d42565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715620091275762009127620090eb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620091595762009159620090eb565b604052919050565b6000602082840312156200917457600080fd5b815167ffffffffffffffff808211156200918d57600080fd5b818401915084601f830112620091a257600080fd5b815181811115620091b757620091b7620090eb565b620091cc601f8201601f19166020016200912d565b9150808252856020828501011115620091e457600080fd5b620091f781602084016020860162008c28565b50949350505050565b60408152600062009215604083018562008c4e565b90508260208301529392505050565b6000602082840312156200923757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762001d445762001d446200923e565b634e487b7160e01b600052601260045260246000fd5b6000826200929657620092966200926e565b500490565b8082018082111562001d445762001d446200923e565b600080600060608486031215620092c757600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215620092f357600080fd5b81516200730a8162008f81565b62ffffff8181168382160190808211156200721157620072116200923e565b600081518084526020808501945080840160005b8381101562008c085781518752958201959082019060010162009333565b602081526200936c6020820183516001600160a01b03169052565b600060208301516200938960408401826001600160a01b03169052565b506040830151606083015260608301516080830152608083015160a083015260a083015160c083015260c083015160e083015260e08301516101008181850152808501519150506101208181850152808501519150506101e06101408181860152620093fa6102008601846200931f565b9250808601519050601f196101608187860301818801526200941d85846200931f565b9450808801519250506101808187860301818801526200943e85846200931f565b945080880151925050506101a062009460818701836001600160a01b03169052565b86015190506101c06200947d868201836001600160a01b03169052565b959095015193019290925250919050565b600067ffffffffffffffff821115620094ab57620094ab620090eb565b5060051b60200190565b600082601f830112620094c757600080fd5b81516020620094e0620094da836200948e565b6200912d565b82815260059290921b840181019181810190868411156200950057600080fd5b8286015b848110156200951d578051835291830191830162009504565b509695505050505050565b60008060008060008060c087890312156200954257600080fd5b86519550602087015194506040870151935060608701519250608087015167ffffffffffffffff808211156200957757600080fd5b620095858a838b01620094b5565b935060a08901519150808211156200959c57600080fd5b50620095ab89828a01620094b5565b9150509295509295509295565b600181811c90821680620095cd57607f821691505b602082108103620095ee57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6040815260006200961f604083018562008bcd565b90506001600160801b03831660208301529392505050565b600082601f8301126200964957600080fd5b815160206200965c620094da836200948e565b82815260059290921b840181019181810190868411156200967c57600080fd5b8286015b848110156200951d578051620096968162008f81565b835291830191830162009680565b600082601f830112620096b657600080fd5b81516020620096c9620094da836200948e565b82815260059290921b84018101918181019086841115620096e957600080fd5b8286015b848110156200951d57805160028110620097075760008081fd5b8352918301918301620096ed565b600082601f8301126200972757600080fd5b815160206200973a620094da836200948e565b82815260059290921b840181019181810190868411156200975a57600080fd5b8286015b848110156200951d5780516001600160801b0381168114620097805760008081fd5b83529183019183016200975e565b600060208284031215620097a157600080fd5b815167ffffffffffffffff80821115620097ba57600080fd5b9083019060e08286031215620097cf57600080fd5b620097d962009101565b825182811115620097e957600080fd5b620097f78782860162009637565b8252506020830151828111156200980d57600080fd5b6200981b8782860162009637565b6020830152506040830151828111156200983457600080fd5b6200984287828601620094b5565b6040830152506060830151828111156200985b57600080fd5b6200986987828601620096a4565b6060830152506080830151828111156200988257600080fd5b620098908782860162009715565b60808301525060a083015182811115620098a957600080fd5b620098b78782860162009715565b60a08301525060c083015182811115620098d057600080fd5b620098de8782860162009715565b60c08301525095945050505050565b6001600160801b038181168382160280821691908281146200991357620099136200923e565b505092915050565b634e487b7160e01b600052602160045260246000fd5b60006001600160801b03808416806200994e576200994e6200926e565b92169190910492915050565b60ff818116838216019081111562001d445762001d446200923e565b60ff828116828216039081111562001d445762001d446200923e565b8181038181111562001d445762001d446200923e565b600060018201620099bd57620099bd6200923e565b5060010190565b805180151581146200674b57600080fd5b600060208284031215620099e857600080fd5b6200730a82620099c4565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b8181101562009a405785518352948301949183019160010162009a22565b5050809450505080851660408501525050949350505050565b60008060006060848603121562009a6f57600080fd5b8351925060208401519150604084015167ffffffffffffffff81111562009a9557600080fd5b62009aa386828701620094b5565b9150509250925092565b600080600080600080600080610100898b03121562009acb57600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200902460e08a01620099c4565b60006001600160a01b0380871683528086166020840152506080604083015262009b3560808301856200931f565b828103606084015262009b4981856200931f565b979650505050505050565b60006020828403121562009b6757600080fd5b815167ffffffffffffffff81111562009b7f57600080fd5b620067b284828501620094b5565b6001600160a01b0383168152604060208201526000620067b2604083018462008c4e565b60006001600160a01b03808616835280851660208401525060606040830152620035c8606083018462008c4e565b838152826020820152606060408201526000620035c8606083018462008c4e565b848152836020820152826040820152608060608201526000620067de608083018462008c4e565b6000825162009c3b81846020870162008c28565b9190910192915050565b600062ffffff8084168062009c5e5762009c5e6200926e565b92169190910692915050565b600062ffffff808416806200994e576200994e6200926e565b62ffffff8181168382160280821691908281146200991357620099136200923e565b62ffffff8281168282160390808211156200721157620072116200923e565b81810360008312801583831316838312821617156200721157620072116200923e565b6000835162009cfb81846020880162008c28565b9190910191825250602001919050565b600181815b8085111562009d4c57816000190482111562009d305762009d306200923e565b8085161562009d3e57918102915b93841c939080029062009d10565b509250929050565b60008262009d655750600162001d44565b8162009d745750600062001d44565b816001811462009d8d576002811462009d985762009db8565b600191505062001d44565b60ff84111562009dac5762009dac6200923e565b50506001821b62001d44565b5060208310610133831016604e8410600b841016171562009ddd575081810a62001d44565b62009de9838362009d0b565b806000190482111562009e005762009e006200923e565b029392505050565b60006200730a838362009d54565b7f73746453746f726167652066696e642853746453746f72616765293a2050616381527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e200000000000000000000000000000000000000000000060408201526000825162009e9c81604a85016020870162008c28565b91909101604a0192915050565b6020815260006200730a602083018462008c4e565b6001600160e01b031983168152815160009062009ee381600485016020870162008c28565b919091016004019392505050565b6000806040838503121562009f0557600080fd5b825167ffffffffffffffff8082111562009f1e57600080fd5b62009f2c86838701620094b5565b9350602085015191508082111562009f4357600080fd5b5062009f5285828601620094b5565b915050925092905056fe608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212203676dca41fe70116d022466cee8163b666c31da9d26a6ab943091f2051f816da64736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea26469706673582212204baa56b0bfc1782b9bcd82e8fcd1181086fcb98288a997d94423795fd41ef93f64736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea2646970667358221220f015b691ba74ea839179623d05ecb3712ba206b9d59193c1f36abb0a7dab1ec264736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613b4480620000e66000396000f3fe60806040523480156200001157600080fd5b5060043610620003315760003560e01c8063701ab8c111620001b1578063aabc4b3c11620000f5578063e203a31f11620000a3578063e92d0d5d116200007a578063e92d0d5d1462000757578063f2fde38b146200076e578063fd90c2be146200078557600080fd5b8063e203a31f146200071f578063e30c39781462000736578063e74b981b146200074057600080fd5b8063c1b931be11620000d8578063c1b931be14620006ca578063d547741f14620006f1578063ddbfd941146200070857600080fd5b8063aabc4b3c146200065e578063be20309414620006b357600080fd5b806380c5061e116200015f57806391d14854116200013657806391d14854146200062c578063a0a0ea391462000643578063a217fddf146200065557600080fd5b806380c5061e14620006095780638ce9aa1c14620006135780638da5cb5b146200062257600080fd5b8063715018a61162000194578063715018a614620005de57806379ba509714620005e85780637daf5d6614620005f257600080fd5b8063701ab8c114620005b0578063704037bd14620005b857600080fd5b80633a2f1a9111620002795780635a4409231162000227578063661d7ffb11620001fe578063661d7ffb146200054b5780636622e0d7146200057357806369d56ea3146200059957600080fd5b80635a44092314620005135780635b35875c146200052a578063659ac74b146200053457600080fd5b80634ccb20c0116200025c5780634ccb20c014620004e15780634cd161d314620004f35780634e937c3a146200050a57600080fd5b80633a2f1a9114620004b35780633c78a94114620004ca57600080fd5b8063248a9ca311620002e35780632f2ff15d11620002ba5780632f2ff15d146200046e57806336568abe1462000485578063379ee803146200049c57600080fd5b8063248a9ca314620003fb5780632772184214620004405780632cc06b8c146200045757600080fd5b80630752092b11620003185780630752092b146200037b578063093ff76914620003ab5780631af5bacc14620003c457600080fd5b806301ffc9a714620003365780630282c9c11462000362575b600080fd5b6200034d6200034736600462002c0f565b6200078e565b60405190151581526020015b60405180910390f35b6200036c620007c6565b60405162000359919062002c3b565b620003926200038c36600462002c81565b620008b6565b6040516001600160a01b03909116815260200162000359565b620003c2620003bc36600462002cd8565b620008c5565b005b620003ec7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000359565b620003ec6200040c36600462002c81565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b6200034d6200045136600462002dab565b620009d2565b620003c26200046836600462002dcb565b620009e1565b620003c26200047f36600462002e19565b62000a34565b620003c26200049636600462002e19565b62000a7c565b620003c2620004ad36600462002e5d565b62000ab7565b620003c2620004c436600462002f18565b62000bde565b620003c2620004db36600462002dab565b62000c96565b6000546001600160a01b031662000392565b620003c26200050436600462002fd4565b62000cf8565b600354620003ec565b620003c26200052436600462002dab565b62000dd0565b6200036c62000e48565b62000392620005453660046200300c565b62000e5b565b620003ec7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d81565b6200058a620005843660046200306d565b62001334565b604051620003599190620030a0565b620003c2620005aa36600462003117565b620014df565b6001620003ec565b620005cf620005c93660046200316d565b62001671565b604051620003599190620031b3565b620003c2620016aa565b620003c2620016c2565b620003926200060336600462002c81565b62001710565b620003ec62001743565b67016345785d8a0000620003ec565b6200039262001751565b6200034d6200063d36600462002e19565b62001786565b6002546001600160a01b031662000392565b620003ec600081565b620006756200066f36600462002c81565b62001801565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000359565b620003c2620006c4366004620031f0565b620018d6565b7f9daad794d31bffea33c7c571b462185cbd402366f4696e49c91be26e9222bb9d620003ec565b620003c26200070236600462002e19565b62001aa6565b620003c26200071936600462002dab565b62001aee565b620003c2620007303660046200324a565b62001b66565b6200039262001bd8565b620003c26200075136600462002dab565b62001c02565b620003c26200076836600462002c81565b62001c17565b620003c26200077f36600462002dab565b62001cc8565b600154620003ec565b60006001600160e01b03198216637965db0b60e01b1480620007c057506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007d6600562001d51565b90508015620008b2578067ffffffffffffffff811115620007fb57620007fb62003268565b60405190808252806020026020018201604052801562000825578160200160208202803683370190505b5091506000805b82811015620008a2576000806200084560058462001d5e565b9092509050620008558162001d7c565b156200088c57818685815181106200087157620008716200327e565b6020908102919091010152836200088881620032aa565b9450505b5050806200089a90620032aa565b90506200082c565b5081811015620008b0578083525b505b5090565b6000620007c060088362001d89565b620008cf62001d97565b6000620008e28b8b8b61ffff1662001dcd565b6020015190506001600160a01b038116620009325760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009ac57600080fd5b505af1158015620009c1573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007c060088362001e79565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a0d8162001e9c565b6040805160008082526020820190925262000a2e9186918691869162001ea8565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a708162001e9c565b62000a2e838362001ffc565b6001600160a01b038116331462000aa65760405163334bd91960e11b815260040160405180910390fd5b62000ab2828262002029565b505050565b62000ac162001d97565b60018961ffff16101562000aef57604051634f958e7160e01b815261ffff8a16600482015260240162000929565b600062000b03818a8a8a8a8a8a8a620020c6565b9050811562000b1e5762000b1b81600160ff620021cb565b90505b62000b30600561ffff8c1683620021f5565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c0a8162001e9c565b6001600160a01b038416158062000c295750836001600160a01b031916155b1562000c485760405163d43a15d160e01b815260040160405180910390fd5b62000c8d8787878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525062001ea892505050565b50505050505050565b62000ca062001d97565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cdc57600080fd5b505af115801562000cf1573d6000803e3d6000fd5b5050505050565b62000d0262001d97565b62000d13600561ffff841662002204565b62000d3857604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000d4b600561ffff851662002212565b905081151560ff82901c15150362000d76576040516311be38db60e11b815260040160405180910390fd5b62000d9761ffff841662000d8d838560ff620021cb565b60059190620021f5565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dda62001d97565b62000de760088262002220565b62000e11576040516303ce0ad960e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e56600562002237565b905090565b600062000e6e600561ffff841662002204565b62000e9357604051637d9160bf60e11b815261ffff8316600482015260240162000929565b600062000ea6600561ffff851662002212565b9050600062000eb462001751565b6001600160a01b0316336001600160a01b031614905062000ed58262001d7c565b15801562000ee1575080155b1562000f0d576040516304fc2fe760e11b815233600482015261ffff8516602482015260440162000929565b62000f1a60088762001e79565b62000f4457604051638e888ef360e01b81526001600160a01b038716600482015260240162000929565b856001600160a01b0316876001600160a01b03160362000f8357604051632f9b185360e01b81526001600160a01b038816600482015260240162000929565b62000f8f858562002246565b5060008062000f9f89896200228c565b90925090506001600160a01b03821662000fcc57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010435760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff8716604482015260640162000929565b60006200105085620022b6565b6200105b86620022c3565b6200106687620022d4565b6200107188620022e5565b6200107c89620022f6565b620010878a62002308565b620010928b62002319565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e48201529089166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b17905260025490519192506001600160a01b0316908b908b908a908590620011439062002c01565b620011539594939291906200330e565b604051809103906000f08015801562001170573d6000803e3d6000fd5b506040805160808101825261ffff808b168083526001600160a01b0380861660208086018281528c15158789019081526000606089018181528e8716808352600486528b83208f89168085529087528c84208a855287528c84209b518c549651955193511515600160b81b0260ff60b81b19941515600160b01b02949094167fffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffffffff96909a1662010000027fffffffffffffffffffff000000000000000000000000000000000000000000009097169b169a909a179490941792909216959095171790965560038054600181019091557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b031916909217909155938152600a84528481209281529190925291909120919750620012b692506200232b565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff88600160038054905062001306919062003359565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200134585856200228c565b6001600160a01b038083166000908152600a6020908152604080832093851683529290529081209294509092506200137d8262002339565b90508015620014d5578067ffffffffffffffff811115620013a257620013a262003268565b604051908082528060200260200182016040528015620013f657816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181620013c15790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620014d2576000620014436200143d868462001d89565b62002344565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620014bd57620014bd6200327e565b60209081029190910101525060010162001422565b50505b5050505092915050565b620014e962001d97565b600080620014f886866200228c565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b9092049091161515606083015292945090925090620015b45760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff8616604482015260640162000929565b8315158160600151151503620015dc57604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b0260ff60b81b1990911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200166090871515815260200190565b60405180910390a250505050505050565b604080516080810182526000808252602082018190529181018290526060810191909152620016a284848462001dcd565b949350505050565b620016b462001d97565b620016c060006200236f565b565b3380620016ce62001bd8565b6001600160a01b031614620017025760405163118cdaa760e01b81526001600160a01b038216600482015260240162000929565b6200170d816200236f565b50565b6000600382815481106200172857620017286200327e565b6000918252602090912001546001600160a01b031692915050565b600062000e56600862002339565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620017b4576200179862001751565b6001600160a01b0316826001600160a01b0316149050620007c0565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200181760058a62002204565b6200183957604051637d9160bf60e11b8152600481018a905260240162000929565b60006200184860058b62002212565b90506200185581620022b6565b61ffff1698506200186681620022c3565b61ffff1697506200187781620022d4565b61ffff1696506200188881620022e5565b61ffff1695506200189981620022f6565b62ffffff169450620018ab8162002308565b61ffff169350620018bc8162002319565b62ffffff16925060ff81901c915050919395975091939597565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015620019225750825b905060008267ffffffffffffffff166001148015620019405750303b155b9050811580156200194f575080155b156200196e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315620019a357845468ff00000000000000001916680100000000000000001785555b620019ae88620023ad565b67016345785d8a0000871115620019ea57604051635e8988c160e01b81526004810188905267016345785d8a0000602482015260440162000929565b620019f589620023c2565b6001879055600280546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001a9b57845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001ae28162001e9c565b62000a2e838362002029565b62001af862001d97565b62001b0560088262002484565b62001b2f57604051638e888ef360e01b81526001600160a01b038216600482015260240162000929565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001b7062001d97565b62001b81600561ffff83166200249b565b62001ba657604051637d9160bf60e11b815261ffff8216600482015260240162000929565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0062001776565b62001c0c62001d97565b6200170d81620023c2565b62001c2162001d97565b60015481810362001c4957604051631baa31e960e21b81526004810183905260240162000929565b67016345785d8a000082111562001c8557604051635e8988c160e01b81526004810183905267016345785d8a0000602482015260440162000929565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e5091015b60405180910390a15050565b62001cd262001d97565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001d1862001751565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007c082620024a9565b600080808062001d6f8686620024b6565b9097909650945050505050565b600060ff82901c620007c0565b6000620017fa8383620024e3565b3362001da262001751565b6001600160a01b031614620016c05760405163118cdaa760e01b815233600482015260240162000929565b60408051608081018252600080825260208201819052918101829052606081019190915262001dfd84846200228c565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620017fa565b6200170d813362002510565b600062001ebb86868661ffff1662001dcd565b6020015190506001600160a01b03811662001f075760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff8516604482015260640162000929565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001f47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f6d91906200336f565b0362001f905760405163b70cd0db60e01b81526004810184905260240162000929565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d9062001fc0908690869060040162003389565b600060405180830381600087803b15801562001fdb57600080fd5b505af115801562001ff0573d6000803e3d6000fd5b50505050505050505050565b6000826200201d57604051633e3253cf60e11b815260040160405180910390fd5b620017fa83836200254d565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b62680062002058848462001786565b15620020bb576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007c0565b6000915050620007c0565b60008561ffff168761ffff161180620020e45750610fff8661ffff16115b80620020f557506127108561ffff16115b806200210657506109c48361ffff16115b80620021195750620fffff8262ffffff16115b156200213857604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620016a28484620021e0576000620021e3565b60015b600180861b19929092169116841b1790565b6000620016a2848484620025ff565b6000620017fa83836200261e565b6000620017fa83836200262c565b6000620017fa836001600160a01b03841662002678565b60606000620017fa83620026ca565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620022838282620026d7565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620022ae579192915b509192909150565b600061ffff8216620007c0565b6000620007c08260101c610fff1690565b6000620007c082601c1c610fff1690565b6000620007c08260281c613fff1690565b6000620007c08260361c62ffffff1690565b6000620007c082604e1c613fff1690565b6000620007c082605c1c620fffff1690565b6000620017fa838362002678565b6000620007c0825490565b8061ffff811681146200236a576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620023a9826200295f565b5050565b620023b7620029d0565b6200170d8162002a1f565b6001600160a01b038116620023ea57604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200242b57600054604051634fcea97160e01b81526001600160a01b03909116600482015260240162000929565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001cbc565b6000620017fa836001600160a01b03841662002a55565b6000620017fa838362002b4e565b6000620007c08262002339565b60008080620024c6858562001d89565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620024fd57620024fd6200327e565b9060005260206000200154905092915050565b6200251c828262001786565b620023a95760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440162000929565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200257c848462001786565b620020bb576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620025b43390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007c0565b60008281526002840160205260408120829055620016a284846200232b565b6000620017fa838362002b6d565b6000818152600283016020526040812054801580156200265557506200265384846200261e565b155b15620017fa5760405163015ab34360e11b81526004810184905260240162000929565b6000818152600183016020526040812054620026c157508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007c0565b506000620007c0565b6060620007c08262002b86565b600080600083600003620026f55750600160801b9150620007c09050565b5082600081121562002708579015906000035b621000008110156200291757600160801b9250846fffffffffffffffffffffffffffffffff8111156200273d57911591600019045b60018216156200274f5792830260801c925b800260801c6002821615620027665792830260801c925b800260801c60048216156200277d5792830260801c925b800260801c6008821615620027945792830260801c925b800260801c6010821615620027ab5792830260801c925b800260801c6020821615620027c25792830260801c925b800260801c6040821615620027d95792830260801c925b8002608090811c90821615620027f15792830260801c925b800260801c610100821615620028095792830260801c925b800260801c610200821615620028215792830260801c925b800260801c610400821615620028395792830260801c925b800260801c610800821615620028515792830260801c925b800260801c611000821615620028695792830260801c925b800260801c612000821615620028815792830260801c925b800260801c614000821615620028995792830260801c925b800260801c618000821615620028b15792830260801c925b800260801c62010000821615620028ca5792830260801c925b800260801c62020000821615620028e35792830260801c925b800260801c62040000821615620028fc5792830260801c925b800260801c62080000821615620029155792830260801c925b505b826000036200294457604051631dba598d60e11b8152600481018690526024810185905260440162000929565b8162002951578262002283565b6200228383600019620033a4565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620016c057604051631afcd79f60e31b815260040160405180910390fd5b62002a29620029d0565b6001600160a01b0381166200170257604051631e4fbdf760e01b81526000600482015260240162000929565b60008181526001830160205260408120548015620020bb57600062002a7c60018362003359565b855490915060009062002a929060019062003359565b905080821462002afe57600086600001828154811062002ab65762002ab66200327e565b906000526020600020015490508087600001848154811062002adc5762002adc6200327e565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002b125762002b12620033c7565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007c0565b60008181526002830160205260408120819055620017fa838362002b95565b60008181526001830160205260408120541515620017fa565b60606000620017fa8362002ba3565b6000620017fa838362002a55565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002bf557602002820191906000526020600020905b81548152602001906001019080831162002be0575b50505050509050919050565b61073180620033de83390190565b60006020828403121562002c2257600080fd5b81356001600160e01b031981168114620017fa57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002c755783518352928401929184019160010162002c57565b50909695505050505050565b60006020828403121562002c9457600080fd5b5035919050565b6001600160a01b03811681146200170d57600080fd5b803561ffff811681146200236a57600080fd5b803562ffffff811681146200236a57600080fd5b6000806000806000806000806000806101408b8d03121562002cf957600080fd5b8a3562002d068162002c9b565b995060208b013562002d188162002c9b565b985062002d2860408c0162002cb1565b975062002d3860608c0162002cb1565b965062002d4860808c0162002cb1565b955062002d5860a08c0162002cb1565b945062002d6860c08c0162002cb1565b935062002d7860e08c0162002cc4565b925062002d896101008c0162002cb1565b915062002d9a6101208c0162002cc4565b90509295989b9194979a5092959850565b60006020828403121562002dbe57600080fd5b8135620017fa8162002c9b565b60008060006060848603121562002de157600080fd5b833562002dee8162002c9b565b9250602084013562002e008162002c9b565b915062002e106040850162002cb1565b90509250925092565b6000806040838503121562002e2d57600080fd5b82359150602083013562002e418162002c9b565b809150509250929050565b803580151581146200236a57600080fd5b60008060008060008060008060006101208a8c03121562002e7d57600080fd5b62002e888a62002cb1565b985062002e9860208b0162002cb1565b975062002ea860408b0162002cb1565b965062002eb860608b0162002cb1565b955062002ec860808b0162002cb1565b945062002ed860a08b0162002cc4565b935062002ee860c08b0162002cb1565b925062002ef860e08b0162002cc4565b915062002f096101008b0162002e4c565b90509295985092959850929598565b60008060008060008060a0878903121562002f3257600080fd5b863562002f3f8162002c9b565b9550602087013562002f518162002c9b565b945062002f616040880162002cb1565b935060608701359250608087013567ffffffffffffffff8082111562002f8657600080fd5b818901915089601f83011262002f9b57600080fd5b81358181111562002fab57600080fd5b8a602082850101111562002fbe57600080fd5b6020830194508093505050509295509295509295565b6000806040838503121562002fe857600080fd5b62002ff38362002cb1565b9150620030036020840162002e4c565b90509250929050565b600080600080608085870312156200302357600080fd5b8435620030308162002c9b565b93506020850135620030428162002c9b565b9250620030526040860162002cc4565b9150620030626060860162002cb1565b905092959194509250565b600080604083850312156200308157600080fd5b82356200308e8162002c9b565b9150602083013562002e418162002c9b565b6020808252825182820181905260009190848201906040850190845b8181101562002c75576200310383855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620030bc565b600080600080608085870312156200312e57600080fd5b84356200313b8162002c9b565b935060208501356200314d8162002c9b565b92506200315d6040860162002cb1565b9150620030626060860162002e4c565b6000806000606084860312156200318357600080fd5b8335620031908162002c9b565b92506020840135620031a28162002c9b565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007c0565b600080600080608085870312156200320757600080fd5b8435620032148162002c9b565b93506020850135620032268162002c9b565b92506040850135915060608501356200323f8162002c9b565b939692955090935050565b6000602082840312156200325d57600080fd5b620017fa8262002cb1565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620032bf57620032bf62003294565b5060010190565b6000815180845260005b81811015620032ee57602081850181015186830182015201620032d0565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200334e60a0830184620032c6565b979650505050505050565b81810381811115620007c057620007c062003294565b6000602082840312156200338257600080fd5b5051919050565b828152604060208201526000620016a26040830184620032c6565b600082620033c257634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a060405260405161073138038061073183398101604081905261002291610416565b604080516020810190915260008152859061003d82826100cd565b506001600160a01b03166080527f3441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec318481557f7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582648481557fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427828481556100c088856100cd565b5050505050505050610548565b6100d68261018d565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a28051156101815761017c826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101769190610511565b826102a0565b505050565b610189610317565b5050565b806001600160a01b03163b6000036101c857604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610511565b9050806001600160a01b03163b60000361018957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016101bf565b6060600080846001600160a01b0316846040516102bd919061052c565b600060405180830381855af49150503d80600081146102f8576040519150601f19603f3d011682016040523d82523d6000602084013e6102fd565b606091505b50909250905061030e858383610338565b95945050505050565b34156103365760405163b398979f60e01b815260040160405180910390fd5b565b60608261034d5761034882610397565b610390565b815115801561036457506001600160a01b0384163b155b1561038d57604051639996b31560e01b81526001600160a01b03851660048201526024016101bf565b50805b9392505050565b8051156103a75780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146103d757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561040d5781810151838201526020016103f5565b50506000910152565b600080600080600060a0868803121561042e57600080fd5b610437866103c0565b9450610445602087016103c0565b9350610453604087016103c0565b9250606086015161ffff8116811461046a57600080fd5b60808701519092506001600160401b038082111561048757600080fd5b818801915088601f83011261049b57600080fd5b8151818111156104ad576104ad6103dc565b604051601f8201601f19908116603f011681019083821181831017156104d5576104d56103dc565b816040528281528b60208487010111156104ee57600080fd5b6104ff8360208301602088016103f2565b80955050505050509295509295909350565b60006020828403121561052357600080fd5b610390826103c0565b6000825161053e8184602087016103f2565b9190910192915050565b6080516101c9610568600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea2646970667358221220f0f37eb07b5c3cfec8f93a3926d8b9cc57e4663663fe0feb3212c78557ad130a64736f6c63430008140033a2646970667358221220440217821150de802aac920e0a7d0d0d30082ae791bf0e91dbdaac5d78def83164736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220007cf27b93d4d99a0e50a460fd5dd9899916fcdfcfaa03803d2c821c78b19ad564736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea264697066735822122009c44af5988384f46804759913ec6c7012105d278f0ccba385192cd92bf1dd6e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360a06040523480156200001157600080fd5b50604051620067e6380380620067e6833981016040819052620000349162000106565b6001600160a01b0381166080526200004b62000052565b5062000138565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011957600080fd5b81516001600160a01b03811681146200013157600080fd5b9392505050565b60805161667d620001696000396000818161048d0152818161158c015281816123d101526139b7015261667d6000f3fe608060405234801561001057600080fd5b506004361061025b5760003560e01c80638940a16a11610145578063d3b9fbe4116100bd578063e584b6541161008c578063e985e9c511610071578063e985e9c51461062a578063ea3446bf1461064d578063f5e293291461066057600080fd5b8063e584b65414610604578063e77366f81461061757600080fd5b8063d3b9fbe4146105e4578063d8dfcea0146105ec578063da10610c146105f4578063dbe65edc146105fc57600080fd5b8063a41a01fb11610114578063bd85b039116100f9578063bd85b0391461059e578063c7bd6586146105be578063c9939f5e146105d157600080fd5b8063a41a01fb1461053a578063abcd78301461056157600080fd5b80638940a16a146104b15780638d7024e5146104ef57806395d89b411461052a578063a1af5b9a1461053257600080fd5b806347973bff116101d857806355182894116101a7578063781a89151161018c578063781a89151461042f5780637ca0de301461043957806388cc58e41461048b57600080fd5b806355182894146103d75780636653851a1461041c57600080fd5b806347973bff1461037e5780634c7cffbd146103915780634e1273f4146103a457806353c059a0146103c457600080fd5b80630abe96881161022f57806317fad7fc1161021457806317fad7fc146103345780631b057f6d14610349578063383d15c51461035c57600080fd5b80630abe9688146102e357806317f11ecc1461031957600080fd5b8062fdd58e1461026057806305e8746d1461028657806306fdde03146102a65780630902f1ac146102bb575b600080fd5b61027361026e36600461587e565b610673565b6040519081526020015b60405180910390f35b61028e61069c565b6040516001600160a01b03909116815260200161027d565b6102ae6106b9565b60405161027d91906158ce565b6102c361074d565b604080516001600160801b0393841681529290911660208301520161027d565b6102c36102f1366004615914565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610321610787565b60405161ffff909116815260200161027d565b610347610342366004615974565b61079f565b005b610347610357366004615a4b565b6107fa565b61036f61036a366004615a97565b610919565b60405161027d93929190615b3a565b61034761038c366004615b6b565b610bbb565b61027361039f366004615914565b610ea6565b6103b76103b2366004615c02565b610ecd565b60405161027d9190615c6e565b6102736103d2366004615c91565b610fa3565b6103df6112e5565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a00161027d565b61034761042a366004615cc8565b61138f565b6201000954610273565b6104416113c8565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e00161027d565b7f000000000000000000000000000000000000000000000000000000000000000061028e565b6104c46104bf366004615d4e565b611430565b6040805167ffffffffffffffff9485168152928416602084015292169181019190915260600161027d565b6104f761152f565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff909116606082015260800161027d565b6102ae61156f565b610273611580565b61054d610548366004615d75565b611746565b60405162ffffff909116815260200161027d565b61057461056f366004615d9f565b611759565b604080516001600160801b039485168152928416602084015292169181019190915260600161027d565b6102736105ac366004615dd7565b60009081526001602052604090205490565b6103476105cc366004615df0565b6118f5565b6103b76105df366004615974565b61198b565b610347611cc3565b6102c3611d57565b61028e611d72565b61054d611d8a565b610347610612366004615e0b565b611d97565b610574610625366004615d9f565b611da6565b61063d610638366004615e29565b611ee3565b604051901515815260200161027d565b61034761065b366004615e47565b611eef565b61054d61066e366004615dd7565b6121ed565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006106b46000805160206166088339815191525490565b905090565b60606201000a80546106ca90615e97565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690615e97565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061077e61076a60055460045461220f90919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b60006106b46000805160206165e88339815191525490565b6107a7612249565b62010009546107bc8133898989898989612281565b6107ca878787878787612321565b6107e1600160008051602061662883398151915255565b6107f1813389898989898961237f565b50505050505050565b610802612249565b61080a6123c6565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108d35750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c79190615ecb565b6001600160a01b031614155b156108f157604051631b5de6eb60e01b815260040160405180910390fd5b6108fc84848461240f565b50610914600160008051602061662883398151915255565b505050565b60008060608661092881612436565b610930612249565b60008690036109525760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561097f5761097f615ee8565b6040519080825280602002602001820160405280156109a8578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109c7576109c7615ee8565b6040519080825280602002602001820160405280156109f0578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a0f57610a0f615ee8565b604051908082528060200260200182016040528015610a38578160200160208202803683370190505b509052600454909150610a72610a5a6000805160206166088339815191525490565b6000805160206165c883398151915254839190612472565b9650610a8283338d8d8d8c6124b2565b610a8f8a8a898e866124fc565b9550610aa5610a9e888861220f565b8290612628565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610af391908b90615efe565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b3f929190615efe565b60405180910390a38515610b7f57610b7f610b666000805160206166088339815191525490565b6000805160206165c8833981519152548891908b612662565b610b96600160008051602061662883398151915255565b610bad83338d8d8d610ba88d8d61220f565b6126c0565b505050509450945094915050565b610bc36123c6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c0e5750825b905060008267ffffffffffffffff166001148015610c2b5750303b155b905081158015610c39575080155b15610c575760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c8b57845468ff00000000000000001916680100000000000000001785555b610c93612702565b610cbf610cb3610cae8860035461271290919063ffffffff16565b612761565b8e8e8e8e8e8e8e6127b5565b6000610cd76000805160206166088339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d14573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d3c9190810190615f23565b90506000610d566000805160206165c88339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d93573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dbb9190810190615f23565b90506000610ddd610dd86000805160206165e88339815191525490565b612933565b9050828282604051602001610df493929190615fc5565b6040516020818303038152906040526201000a9081610e13919061608e565b50828282604051602001610e299392919061614e565b6040516020818303038152906040526201000b9081610e48919061608e565b505050508315610e9757845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610696610ec16000805160206165e88339815191525490565b62ffffff841690612a60565b60608382610edb8282612a97565b8567ffffffffffffffff811115610ef457610ef4615ee8565b604051908082528060200260200182016040528015610f1d578160200160208202803683370190505b50925060005b86811015610f9857610f73888883818110610f4057610f406161b8565b9050602002016020810190610f5591906161ce565b878784818110610f6757610f676161b8565b90506020020135610673565b848281518110610f8557610f856161b8565b6020908102919091010152600101610f23565b505050949350505050565b6000610fad612249565b6201000954600454600554600086610fe457610fdf610fd86000805160206165c88339815191525490565b8490612ab7565b611004565b611004610ffd6000805160206166088339815191525490565b8490612aec565b9050600081900361102857604051637df801c760e01b815260040160405180910390fd5b866110368533898486612b1b565b6110408483612628565b600354909450600061105e6000805160206165e88339815191525490565b9050600061106b83612b7f565b90506110778342612b8b565b92505b62ffffff811660009081526006602052604090205461109a818615612c01565b6111be576110a88483612c30565b9350600080806110bc8488888b898e612cb8565b9194509250905082156111ba576110d3898461220f565b98506110df8d83612628565b9c5060006110fa6110ef89612ede565b839061ffff16612eee565b9050801561111b5761110c8b82612628565b9a50611118848261220f565b93505b61112f836111298787612628565b9061220f565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca7088878761117c8e612f64565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036111cd5750611217565b60006111d98684612f75565b905062ffffff811615806111f1575062ffffff818116145b1561120f57604051631a6d7fb160e31b815260040160405180910390fd5b91505061107a565b60008990036112395760405163439df85d60e11b815260040160405180910390fd5b611243878a61220f565b6004556005869055611257600a8483612f97565b92506112638382612712565b60035583156112925761128d6112856000805160206165c88339815191525490565b8a908c6130b2565b6112b3565b6112b36112ab6000805160206166088339815191525490565b8a908c6130f2565b6112ca600160008051602061662883398151915255565b6112d788338c878d613103565b505050505050505092915050565b600354607890600090819081908190816112fe82613160565b905061ffff811615611386576000611317600a83613170565b96509050611324816131ce565b965061132f816131da565b94508464ffffffffff1660000361134557600095505b61ffff861615611384576113768661ffff168361ffff1681611369576113696161eb565b600a9160019106016131fb565b9050611381816131da565b93505b505b50509091929394565b611397612249565b61139f6123c6565b6113b1600354888888888888886127b5565b6107f1600160008051602061662883398151915255565b60008060008060008060008060035490506113e2816131ce565b97506113ed8161322b565b96506113f88161323b565b95506114038161324b565b945061140e8161325b565b935061141981612ede565b92506114248161326c565b91505090919293949596565b6000806000806003549050600061144682613160565b905061ffff8116158061145f5750428664ffffffffff16115b156114765760008060009450945094505050611528565b6000611484600a838961327d565b91985096509450905064ffffffffff8088169082161015611524576114ba6114ab84612b7f565b849064ffffffffff8a166133a0565b925060006114c88289616217565b90508064ffffffffff166114db85612b7f565b62ffffff166114ea9190616235565b6114f49088616261565b96508064ffffffffff1661150785612f64565b62ffffff166115169190616235565b6115209087616261565b9550505b5050505b9193909250565b6000806000806000600354905061154581612f64565b9450611550816133b8565b935061155b816133c9565b9250611566816133da565b91505090919293565b60606201000b80546106ca90615e97565b600061158a612249565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160c9190615ecb565b6001600160a01b0316336001600160a01b03161461163d57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c600061169882611660576000611663565b60015b60ff166000856001600160801b03161161167e576000611681565b60015b60ff169060801b6001600160801b03919091161790565b90506116a4848261220f565b945084156117285760058190556004546116be908661220f565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261172861170f6000805160206166088339815191525490565b6000805160206165c88339815191525487919033612662565b50505050611743600160008051602061662883398151915255565b90565b60006117528383612f75565b9392505050565b600354600090839082908161177a6000805160206165e88339815191525490565b9050600061178783612b7f565b90506117938342612b8b565b92505b62ffffff81166000908152600660205260408120546117b69089156133ed565b90506001600160801b0381161561189c5760006117d862ffffff841685612a60565b90506000876001600160801b0316836001600160801b0316116117fb57826117fd565b875b90506118098685612c30565b955060008a61182c576118276001600160801b03831684608061340d565b611841565b6118416001600160801b038316608085613443565b9050600061184f8888613479565b905060006118666001600160801b03841683613498565b90506118728184616282565b61187c908d616282565b9b50611888848c6162a2565b9a50611894818b616282565b995050505050505b856001600160801b03166000036118b357506118eb565b60006118bf8984612f75565b905062ffffff811615806118d7575062ffffff818116145b156118e35750506118eb565b915050611796565b5050509250925092565b6118fd612249565b600354600061190b82613160565b90508061ffff1660000361192a5750600161192682826134e1565b6003555b611936600a8285613530565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a25050611988600160008051602061662883398151915255565b50565b606086336119998282613619565b6119ce5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b6119d6612249565b8515806119e35750858414155b15611a0157604051633ab7870760e01b815260040160405180910390fd5b6201000954611a1681338c8c8c8c8c8c613665565b898767ffffffffffffffff811115611a3057611a30615ee8565b604051908082528060200260200182016040528015611a59578160200160208202803683370190505b5094506000805b89811015611bad576000611a8b8c8c84818110611a7f57611a7f6161b8565b905060200201356136ab565b905060008a8a84818110611aa157611aa16161b8565b90506020020135905080600003611ad257604051636996a92560e01b815262ffffff831660048201526024016119c5565b62ffffff82166000818152600660209081526040808320546001909252909120549091611b01908890856136d6565b6000611b0e838584613757565b90506000819003611b395760405163fd44792960e01b815262ffffff861660048201526024016119c5565b611b43838261220f565b9250838203611b5957611b576007866137cf565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611b8657611b866161b8565b6020908102919091010152611b9b8782612628565b96508560010195505050505050611a60565b50600454611bbb908261220f565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611c04908f908f908f908f9061630d565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611c5393929190616334565b60405180910390a3611c8d611c746000805160206166088339815191525490565b6000805160206165c8833981519152548391908e612662565b611ca4600160008051602061662883398151915255565b611cb48333848e8e8e8e8e613871565b50505050509695505050505050565b611ccb612249565b611cd36123c6565b600354611ce7611ce282612761565b6138b7565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611d15836133c9565b611d1e846133b8565b6040805162ffffff93841681529290911660208301520160405180910390a250611d55600160008051602061662883398151915255565b565b60055460009081906001600160801b0381169060801c61077e565b60006106b46000805160206165c88339815191525490565b60006106b4600354612b7f565b611da23383836138ec565b5050565b6000808080611dbe6001600160801b038716866139a1565b6003549091506000611ddc6000805160206165e88339815191525490565b90506000611de983612b7f565b9050611df58342612b8b565b92505b62ffffff8116600090815260066020526040902054611e18818a15612c01565b611e8557611e268483612c30565b935060008080611e3a8488888f898d612cb8565b919450925090508215611e8157611e51888461220f565b9750611e5e828d156133ed565b611e68908b616282565b9950611e74818d6133ed565b611e7e908a616282565b98505b5050505b6000859003611e945750611ecc565b6000611ea08a84612f75565b905062ffffff81161580611eb8575062ffffff818116145b15611ec4575050611ecc565b915050611df8565b611ed684896133ed565b9650505050509250925092565b60006117528383613619565b611ef7612249565b6000839003611f195760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611f2c866139b2565b9050611f3a83338989613aba565b611f6c611f536000805160206166088339815191525490565b6000805160206165c8833981519152548891908a612662565b6000806001600160a01b038916631faa6b8760e01b33611f986000805160206166088339815191525490565b6000805160206165c8833981519152548c888d8d604051602401611fc29796959493929190616383565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161201891906163c4565b6000604051808303816000865af19150503d8060008114612055576040519150601f19603f3d011682016040523d82523d6000602084013e61205a565b606091505b509150915081158061206e57508051602014155b806120ac57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2818060200190518101906120a991906163e0565b14155b156120ca57604051634a57011360e01b815260040160405180910390fd5b60006120fe6120e56000805160206166088339815191525490565b6000805160206165c88339815191525460009190612472565b905061211461210d8686612628565b8290613b0f565b1561213257604051630e3c717160e11b815260040160405180910390fd5b600061213e828761220f565b60048390556005549091506121539082612628565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d9061219190612b7f565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a36121d3600160008051602061662883398151915255565b6121e087338d8885613b53565b5050505050505050505050565b60006106966122086000805160206165e88339815191525490565b8390613baf565b8082038281118061222b57506001600160801b03808416908216115b156106965760405163e599af5560e01b815260040160405180910390fd5b60008051602061662883398151915280546001190161227b57604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561231757612317886379c8ccf760e01b898989898989896040516024016122c897969594939291906163f9565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613bf4565b5050505050505050565b853361232d8282613619565b61235d5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044016119c5565b612317888888888888613c58565b600160008051602061662883398151915255565b750200000000000000000000000000000000000000000088161561231757612317886367ddb27860e01b898989898989896040516024016122c897969594939291906163f9565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d5557604051632486085360e01b815260040160405180910390fd5b82156109145761091483634e430b5a60e01b8585856040516024016122c89392919061644f565b6001600160a01b038116158061245457506001600160a01b03811630145b15611988576040516345c210e760e11b815260040160405180910390fd5b60006124aa8461112961248485613dbb565b61248d87613dbb565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156124f4576124f486630d4abdb360e01b87878787876040516024016122c8959493929190616469565b505050505050565b6000806125156000805160206165e88339815191525490565b600354909150600061252682612b7f565b905086935060005b8881101561261b576000806125648a8d8d8681811061254f5761254f6161b8565b90506020020135613e2a90919063ffffffff16565b91509150600080600061257a898886888c613e73565b9194509250905061258b8a8361220f565b99508362ffffff168b6000015187815181106125a9576125a96161b8565b602002602001018181525050808b6020015187815181106125cc576125cc6161b8565b602002602001018181525050828b6040015187815181106125ef576125ef6161b8565b60200260200101818152505061260b8c8562ffffff1685614081565b856001019550505050505061252e565b5050505095945050505050565b8181018281108061264457506001600160801b03808416908216105b15610696576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c8115612694576126946001600160a01b038616846001600160801b0385166140ce565b6001600160801b038116156124f4576124f46001600160a01b038516846001600160801b0384166140ce565b742000000000000000000000000000000000000000008616156124f4576124f486637a51a4c660e01b87878787876040516024016122c8959493929190616469565b61270a61411f565b611d5561416d565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611752565b60008061276d83612b7f565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611752565b61ffff87161580156127c9575061ffff8616155b80156127d7575061ffff8516155b80156127e5575061ffff8416155b80156127f4575062ffffff8316155b8015612802575061ffff8216155b8015612811575062ffffff8116155b1561282f576040516331375e0360e11b815260040160405180910390fd5b61283f8888888888888888614175565b975060006128596000805160206165e88339815191525490565b905060006128678a8461428e565b9050600061287582846142ec565b61287f838561432c565b61288991906164a8565b905067016345785d8a00008111156128b4576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b60608161ffff1660000361295e5750506040805180820190915260018152600360fc1b602082015290565b8160005b61ffff82161561298c5780612976816164bb565b91506129859050600a836164dc565b9150612962565b60008161ffff1667ffffffffffffffff8111156129ab576129ab615ee8565b6040519080825280601f01601f1916602001820160405280156129d5576020820181803683370190505b5090505b61ffff8516156124aa576129ee6001836164fd565b91506129fb600a86616518565b612a06906030616539565b60f81b818361ffff1681518110612a1f57612a1f6161b8565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350612a59600a866164dc565b94506129d9565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff1901612a8e8282614350565b95945050505050565b808214611da2576040516340311ffd60e11b815260040160405180910390fd5b600080612ac48460801c90565b90506124aa81612ad385613dbb565b612add91906162a2565b6001600160801b031660801b90565b60006001600160801b0383166124aa81612b0585613dbb565b612b0f91906162a2565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b7890869063feee373560e01b9060a4016122c8565b5050505050565b600060e882901c610696565b600080612b97846133da565b612ba89064ffffffffff1684616554565b9050612bb38461322b565b61ffff168110612bf757612bc684612761565b9350612bd18461323b565b61ffff168110612beb57612be68460006145b0565b612bf4565b612bf4846138b7565b93505b6124aa848461461e565b600081612c2157612c128360801c90565b6001600160801b031615611752565b50506001600160801b03161590565b600080612c3c846133c9565b62ffffff169050600080828562ffffff1611612c5f578462ffffff168303612c68565b828562ffffff16035b91506127108202612c78876133b8565b62ffffff160190506000612c8b8761326c565b62ffffff169050808211612c9f5781612ca1565b805b9150612cad878361428e565b979650505050505050565b6000808080612ccc62ffffff871689612a60565b90506000612cdb8b89156133ed565b9050600088612d0657612d01612cfc6001600160801b03841685608061340d565b614677565b612d1e565b612d1e612cfc6001600160801b038416608086613443565b90506000612d2c8c8c613479565b90506000612d436001600160801b03841683613498565b9050612d4f8184616282565b92506000612d5d8a8d6133ed565b9050600080856001600160801b0316836001600160801b031610612d88575084915082905085612dfe565b612d9b6001600160801b038416866146a1565b91506000612da983856162a2565b6001600160801b031690508e612dcd57612dc8612cfc8260808c6146d8565b612ddc565b612ddc612cfc828b6080614702565b9150876001600160801b0316826001600160801b03161115612dfc578791505b505b8d612e3857612e16836001600160801b031660801b90565b6001600160801b038216612e33846001600160801b031660801b90565b612e60565b6001600160801b038316612e55826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612eb2612eac85611129888f61262890919063ffffffff16565b83614770565b1115612ed15760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061069682604e1c613fff1690565b6000816001600160801b0316600003612f0957506000610696565b6127106001600160801b038316811015612f3657604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006106968260701c620fffff1690565b600082612f8c57612f8760078361478c565b611752565b6117526007836148d8565b600080612fa384613160565b90508061ffff16600003612fba5783915050611752565b6000612fc686836131fb565b90506000612fd382614a08565b90506000612fe083614a14565b612fed9060ff1683616567565b90508064ffffffffff1661300042614a23565b64ffffffffff1611156130a65760008060006130458464ffffffffff1642036130288c612b7f565b6130318d612f64565b61303b8e8e614a4b565b8a93929190614a7b565b9250925092506000613056876131ce565b905064ffffffffff8616420360788111156130865750968790066001019642955060006130838c8a6134e1565b9b505b61309482868686858c614ae0565b975050505050506130a6888585614b84565b50949695505050505050565b60006130be8460801c90565b90506001600160801b038116156130ec576130ec6001600160a01b038416836001600160801b0384166140ce565b50505050565b60006001600160801b0384166130be565b74020000000000000000000000000000000000000000851615612b78576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612b789086906353e8079b60e01b9060a4016122c8565b60006106968260d81c61ffff1690565b60008061317d84846131fb565b9150613188826131ce565b90508061ffff168361ffff16146131c7576131ab6131a685836131fb565b6131ce565b90508061ffff168361ffff16116131c257806131c4565b825b90505b9250929050565b600061ffff8216610696565b60006131e582614a14565b60ff166131f183614a08565b6106969190616567565b60008161320781614bb1565b8361ffff60001985018116908110613221576132216161b8565b0154949350505050565b60006106968260101c610fff1690565b600061069682601c1c610fff1690565b60006106968260281c613fff1690565b60006106968260361c62ffffff1690565b600061069682605c1c620fffff1690565b6000806000806000806132908989613170565b909250905064ffffffffff87166132c78a6132ab848c616518565b61ffff1661ffff81106132c0576132c06161b8565b01546131da565b64ffffffffff1611156132ed57604051631c4e7f9560e21b815260040160405180910390fd5b6132f6826131da565b95508664ffffffffff168664ffffffffff1611613338578561331783614bd6565b61332084614bec565b61332985614c02565b95509550955095505050613397565b86955060008061334a8b8b8b86614c18565b9150915060008961335a836131da565b6133649190616217565b90506000613371846131da565b61337b908c616217565b905061338984848484614d6a565b919a50985096505050505050505b93509350935093565b60006133ac8483612b8b565b93506124aa8484612c30565b60006106968260841c620fffff1690565b60006106968260981c62ffffff1690565b60006106968260b01c64ffffffffff1690565b6000816133fe57612f878360801c90565b6001600160801b038316611752565b600061341a848484614702565b9050600160ff83161b80613430576134306161eb565b83850915611752576124aa6001826164a8565b60006134508484846146d8565b90508180613460576134606161eb565b600160ff85161b850915611752576124aa6001826164a8565b600061175261348884846142ec565b613492858561432c565b01614677565b6000816134a481614ece565b6001600160801b03808416670de0b6b3a764000081900391829160001991881602820101816134d5576134d56161eb565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611752565b600061353c84846131fb565b90506000613549826131ce565b90508261ffff168161ffff161061357357604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146135a45761ffff82161561359d5761359886836131fb565b6135a6565b60006135a6565b825b905060006135b3826131ce565b61ffff169050808661ffff16116135ca57806135d0565b8561ffff165b905061ffff83165b8561ffff168110156136025781888261ffff81106135f8576135f86161b8565b01556001016135d8565b506107f1878761ffff868116881890891617614b84565b6000816001600160a01b0316836001600160a01b031614806117525750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b74400000000000000000000000000000000000000000881615612317576123178863ea9db9d360e01b898989898989896040516024016122c897969594939291906163f9565b8062ffffff811681146136d157604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561373357604051625b387760e31b81526001600160a01b038616600482015260248101859052604481018490526064016119c5565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c8280831561378a57613787612cfc886001600160801b03871689614f00565b91505b6001600160801b038316156137b3576137b0612cfc886001600160801b03861689614f00565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b19811680821461386557600083815260028701602052604081208290558190036138595750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613857578654600160ff83161b191687555b505b60019350505050610696565b50600095945050505050565b74800000000000000000000000000000000000000000881615612317576123178863fdc2725760e01b898989898989896040516024016122c897969594939291906163f9565b6000806138c383612f64565b62ffffff16905060006138d58461324b565b61ffff16905061271082820204612a8e85826145b0565b826138f681612436565b826001600160a01b0316846001600160a01b0316036139335760405163782ee70760e01b81526001600160a01b03851660048201526024016119c5565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6000816133fe57612f878360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a3791906163e0565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff90613a7090670de0b6b3a7640000908616850283015b04614677565b9250613aa2670de0b6b3a764000082866001600160801b0316856001600160801b0316020181613a6a57613a6a6161eb565b915050608081901b6001600160801b03831617612a8e565b740400000000000000000000000000000000000000008416156130ec576040516001600160a01b03808516602483015283166044820152606481018290526130ec90859063505d903360e01b906084016122c8565b60006001600160801b0383811690608085811c9185169085901c81841080612cad5750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612b78576040516001600160a01b038086166024830152841660448201526064810183905260848101829052612b789086906360bed5f360e01b9060a4016122c8565b600061271061ffff60801b608084901b1604600160801b0181613bd182614f20565b613bda86614f20565b613be49190616585565b9050612a8e8162800000016136ab565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613c28573d6000803e3d6000fd5b8060005160e01c14601f3d11168316925050816130ec57604051636c93cb9b60e01b815260040160405180910390fd5b8281613c648282612a97565b86613c6e81612436565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613d525760008a8a83818110613cad57613cad6161b8565b9050602002013590506000898984818110613cca57613cca6161b8565b600085815260208981526040909120549102929092013592505081811015613d27578e83836040516358b4690f60e01b81526004016119c5939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613c91565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613da6949392919061630d565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610696906001600160a01b038416906370a0823190602401602060405180830381865afa158015613e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612cfc91906163e0565b6000806000806000613e3b8761502d565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613e9a908b612a60565b90506000613eb98962ffffff1660009081526001602052604090205490565b9050613ec7838984846150d0565b909650945084935062ffffff808b16908a1603613fff57613ee9878a426133a0565b96506000613efb84898e89868c615256565b90508015613ff9576000613f1984613f13898561220f565b90614770565b90506000613f34613f298b612ede565b849061ffff16612eee565b90508015613f5a57613f46878261220f565b600554909750613f569082612628565b6005555b6000613f7486613f13613f6d878661220f565b8a90612628565b9050613f81838683614f00565b9950613f8f600a8c8f612f97565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613fed9392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b5061400a565b61400a858b8b61534b565b851580614015575083155b1561403a57604051634c98d35760e11b815262ffffff8a1660048201526024016119c5565b8060000361404f5761404d60078a6153b1565b505b6140598385612628565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b6000828152600160205260408120805483929061409f9084906164a8565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526130ec848261543e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611d5557604051631afcd79f60e31b815260040160405180910390fd5b61236b61411f565b60008561ffff168761ffff1611806141925750610fff8661ffff16115b806141a257506127108561ffff16115b806141b257506109c48361ffff16115b806141c45750620fffff8262ffffff16115b156141e257604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff1611156142b957604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611752565b6000806142f88461325b565b62ffffff16905080156134da5760008361ffff1661431586612f64565b62ffffff16029050606460638280028402016134d5565b60008161ffff1661433c846131ce565b61ffff16026402540be40002905092915050565b60008060008360000361436c5750600160801b91506106969050565b5082600081121561437e579015906000035b6210000081101561456e57600160801b9250846001600160801b038111156143a857911591600019045b60018216156143b95792830260801c925b800260801c60028216156143cf5792830260801c925b800260801c60048216156143e55792830260801c925b800260801c60088216156143fb5792830260801c925b800260801c60108216156144115792830260801c925b800260801c60208216156144275792830260801c925b800260801c604082161561443d5792830260801c925b8002608090811c908216156144545792830260801c925b800260801c61010082161561446b5792830260801c925b800260801c6102008216156144825792830260801c925b800260801c6104008216156144995792830260801c925b800260801c6108008216156144b05792830260801c925b800260801c6110008216156144c75792830260801c925b800260801c6120008216156144de5792830260801c925b800260801c6140008216156144f55792830260801c925b800260801c61800082161561450c5792830260801c925b800260801c620100008216156145245792830260801c925b800260801c6202000082161561453c5792830260801c925b800260801c620400008216156145545792830260801c925b800260801c6208000082161561456c5792830260801c925b505b8260000361459957604051631dba598d60e11b815260048101869052602481018590526044016119c5565b816145a45782612a8e565b612a8e836000196165b3565b6000620fffff8262ffffff1611156145db57604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611752565b60008061462a83614a23565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176124aa565b806001600160801b03811681146136d157604051632f45db3d60e21b815260040160405180910390fd5b6000816146ad81614ece565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612f5a9087906001901b8685856154ae565b6000806000614711868661555a565b9150915081600014614727578360ff1682901c92505b801561476757600160ff85161b811061475357604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c612a8e828286615579565b60008061ffff600884901c1660ff8085169081146147e157600082815260028701602052604081205493506147c184836155e4565b905060001981146147df5760089290921b9091179250610696915050565b505b5060ff80821690600883901c90821461485b576000818152600188016020526040812054945061481185846155e4565b9050600019811461485957600882901b8117600081815260028a01602052604090205495509350614841856155f3565b60ff1660088560001c901b1795505050505050610696565b505b60ff818116925082146148cb5786549350600061487885846155e4565b905060001981146148c957600081815260018901602052604090205494509050806148a2856155f3565b60ff16600883901b17600081815260028a01602052604090205495509350614841856155f3565b505b5060009695505050505050565b60008061ffff600884901c1660ff8416801561492b576000828152600287016020526040812054935061490b848361568f565b905060001981146149295760089290921b9091179250610696915050565b505b5060ff8116600882901c811561498a5760008181526001880160205260408120549450614958858461568f565b9050600019811461498857600882901b8117600081815260028a016020526040902054955093506148418561569f565b505b60ff8116915081156149f9578654935060006149a6858461568f565b905060001981146149f757600081815260018901602052604090205494509050806149d08561569f565b60ff16600883901b17600081815260028a016020526040902054955093506148418561569f565b505b5062ffffff9695505050505050565b600060d882901c610696565b60006106968260d01c60ff1690565b8064ffffffffff811681146136d1576040516350dbfc8760e11b815260040160405180910390fd5b600080614a5784612b7f565b90508062ffffff168362ffffff1611614a72578281036124aa565b90910392915050565b64ffffffffff841662ffffff848116820291848216810291841602614a9f88614bd6565b614aa99084616261565b9250614ab488614bec565b614abe9083616261565b9150614ac988614c02565b614ad39082616261565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612cad565b81614b8e81614bb1565b818461ffff60001986018116908110614ba957614ba96161b8565b015550505050565b8061ffff166000036119885760405163944e113960e01b815260040160405180910390fd5b60006106968260101c67ffffffffffffffff1690565b60006106968260501c67ffffffffffffffff1690565b60006106968260901c67ffffffffffffffff1690565b6000808080614c286001866164fd565b61ffff16905060008060008961ffff1690505b838511614ce65760006001614c5086886164a8565b901c9050888183089a508b61ffff808d16908110614c7057614c706161b8565b01549350614c7d846131da565b92508964ffffffffff168364ffffffffff161115614ca757614ca0600182616554565b9450614ce0565b8964ffffffffff168364ffffffffff161015614ccf57614cc88160016164a8565b9550614ce0565b838497509750505050505050614d61565b50614c3b565b8164ffffffffff168964ffffffffff161015614d37578961ffff16600003614d0c578799505b8a61ffff6000198c018116908110614d2657614d266161b8565b015483965096505050505050614d61565b8760018b089950828b61ffff808d16908110614d5557614d556161b8565b01549650965050505050505b94509492505050565b600080600080614d7988614bd6565b67ffffffffffffffff1690506000614d9089614bec565b67ffffffffffffffff1690506000614da78a614c02565b67ffffffffffffffff1690508664ffffffffff16600003614dce5791945092509050614ec4565b6000614dd98a614bd6565b67ffffffffffffffff1690506000614df08b614bec565b67ffffffffffffffff1690506000614e078c614c02565b67ffffffffffffffff1690508a64ffffffffff16600003614e325791975095509350614ec492505050565b6000614e4864ffffffffff808d16908e166164a8565b9050808b64ffffffffff1685028d64ffffffffff1689020181614e6d57614e6d6161eb565b049950808b64ffffffffff1684028d64ffffffffff1688020181614e9357614e936161eb565b049850808b64ffffffffff1683028d64ffffffffff1687020181614eb957614eb96161eb565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b0316111561198857604051638630bc6b60e01b815260040160405180910390fd5b6000806000614f0f868661555a565b91509150612f5a86868685856154ae565b600081600103614f335750607f19919050565b81600003614f545760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614f7c57506001614f97565b5060001982600160fe1b81614f9357614f936161eb565b0492505b6000614fa6607f85901c61569f565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114615022576f400000000000000000000000000000005b600081131561502057908002607f1c90600160801b8210615018579384019360019190911c905b60011d614ff1565b505b50500260011b919050565b600080806150458460581c67ffffffffffffffff1690565b925061505b8460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff8411806150965750670de0b6b3a76400008367ffffffffffffffff16115b806150b25750670de0b6b3a76400008267ffffffffffffffff16115b1561152857604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c826150ee838389615579565b905080600003615108575060009350839250614d61915050565b60006151148a89614770565b9050801580615121575086155b1561513d5761512f8261573a565b899550955050505050614d61565b615148828883614f00565b9550600061515787838a6157ac565b9050808311156151f657600061516d8285616554565b9050600160801b81106151ae57608081901c85811161518c578061518e565b855b905061519a8187616554565b95506151aa608082901b83616554565b9150505b8981106151e25760006151c18b836165b3565b90508681116151d057806151d2565b865b90506151de8188616554565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b6116152286152228d8d612628565b8b614770565b11156152475760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b60008160000361526857506000612f5a565b6001600160801b038416608085901c60008061529a61076a61528a8d8b612628565b88615295818c6164a8565b613757565b91509150836001600160801b0316826001600160801b031611156152fd5760006152e06152c78c8c613479565b6152d184876162a2565b6001600160801b0316906157c9565b90506152f5816001600160801b031660801b90565b95505061533d565b826001600160801b0316816001600160801b0316111561533d5760006153306153268c8c613479565b6152d185886162a2565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156153675750608083901b15155b8061538c57508162ffffff168162ffffff1611801561538c57506001600160801b0383115b156109145760405163227bd87160e21b815262ffffff821660048201526024016119c5565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b8117808214613865576000838152600287016020526040812082905582900361385957600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613857578654600160ff83161b1787555060019350505050610696565b600080600052602060008351602085016000875af1905080801561547f573d80156154725760016000511483169250615479565b843b151592505b5061548f565b3d1561548f573d6000803e3d6000fd5b50806109145760405163197138bd60e11b815260040160405180910390fd5b6000816000036154cf578383816154c7576154c76161eb565b049050612a8e565b8382106154ef576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156155b4575080830281848281615595576155956161eb565b04146155b4576040516363f1e01f60e01b815260040160405180910390fd5b82156117525760809290921b91820182811015611752576040516363f1e01f60e01b815260040160405180910390fd5b6000611752836001840161580a565b60008160801b801561560757608091508092505b8260401b9050801561561a579150604001815b8260201b9050801561562d579150602001815b8260101b90508015615640579150601001815b8260081b90508015615653579150600801815b8260041b90508015615666579150600401815b8260021b90508015615679579150600201815b508160011b15615687576001015b60ff03919050565b6000611752836000198401615838565b60006001600160801b038211156156b85750608090811c905b67ffffffffffffffff8211156156d057604091821c91015b63ffffffff8211156156e457602091821c91015b61ffff8211156156f657601091821c91015b60ff82111561570757600891821c91015b600f82111561571857600491821c91015b600382111561572957600291821c91015b60018211156136d157600101919050565b60008160000361574c57506000919050565b60006157578361569f565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106157a65782611752565b50919050565b60006157b9848484614f00565b90508180613430576134306161eb565b6000816157d581614ece565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a764000091909101026134d5565b60ff81169190911c906000821561582e5781615825846155f3565b0160ff16611752565b5060001992915050565b60ff8181031691821b91600090831561585e57806158558561569f565b60ff16036124aa565b506000199392505050565b6001600160a01b038116811461198857600080fd5b6000806040838503121561589157600080fd5b823561589c81615869565b946020939093013593505050565b60005b838110156158c55781810151838201526020016158ad565b50506000910152565b60208152600082518060208401526158ed8160408501602087016158aa565b601f01601f19169190910160400192915050565b803562ffffff811681146136d157600080fd5b60006020828403121561592657600080fd5b61175282615901565b60008083601f84011261594157600080fd5b50813567ffffffffffffffff81111561595957600080fd5b6020830191508360208260051b85010111156131c757600080fd5b6000806000806000806080878903121561598d57600080fd5b863561599881615869565b955060208701356159a881615869565b9450604087013567ffffffffffffffff808211156159c557600080fd5b6159d18a838b0161592f565b909650945060608901359150808211156159ea57600080fd5b506159f789828a0161592f565b979a9699509497509295939492505050565b60008083601f840112615a1b57600080fd5b50813567ffffffffffffffff811115615a3357600080fd5b6020830191508360208285010111156131c757600080fd5b600080600060408486031215615a6057600080fd5b83359250602084013567ffffffffffffffff811115615a7e57600080fd5b615a8a86828701615a09565b9497909650939450505050565b60008060008060608587031215615aad57600080fd5b8435615ab881615869565b9350602085013567ffffffffffffffff811115615ad457600080fd5b615ae08782880161592f565b9094509250506040850135615af481615869565b939692955090935050565b600081518084526020808501945080840160005b83811015615b2f57815187529582019590820190600101615b13565b509495945050505050565b838152826020820152606060408201526000612a8e6060830184615aff565b803561ffff811681146136d157600080fd5b600080600080600080600080610100898b031215615b8857600080fd5b615b9189615b59565b9750615b9f60208a01615b59565b9650615bad60408a01615b59565b9550615bbb60608a01615b59565b9450615bc960808a01615901565b9350615bd760a08a01615b59565b9250615be560c08a01615901565b9150615bf360e08a01615901565b90509295985092959890939650565b60008060008060408587031215615c1857600080fd5b843567ffffffffffffffff80821115615c3057600080fd5b615c3c8883890161592f565b90965094506020870135915080821115615c5557600080fd5b50615c628782880161592f565b95989497509550505050565b6020815260006117526020830184615aff565b803580151581146136d157600080fd5b60008060408385031215615ca457600080fd5b615cad83615c81565b91506020830135615cbd81615869565b809150509250929050565b600080600080600080600060e0888a031215615ce357600080fd5b615cec88615b59565b9650615cfa60208901615b59565b9550615d0860408901615b59565b9450615d1660608901615b59565b9350615d2460808901615901565b9250615d3260a08901615b59565b9150615d4060c08901615901565b905092959891949750929550565b600060208284031215615d6057600080fd5b813564ffffffffff8116811461175257600080fd5b60008060408385031215615d8857600080fd5b615d9183615c81565b91506131c460208401615901565b60008060408385031215615db257600080fd5b82356001600160801b0381168114615dc957600080fd5b91506131c460208401615c81565b600060208284031215615de957600080fd5b5035919050565b600060208284031215615e0257600080fd5b61175282615b59565b60008060408385031215615e1e57600080fd5b8235615dc981615869565b60008060408385031215615e3c57600080fd5b8235615cad81615869565b60008060008060608587031215615e5d57600080fd5b8435615e6881615869565b935060208501359250604085013567ffffffffffffffff811115615e8b57600080fd5b615c6287828801615a09565b600181811c90821680615eab57607f821691505b6020821081036157a657634e487b7160e01b600052602260045260246000fd5b600060208284031215615edd57600080fd5b815161175281615869565b634e487b7160e01b600052604160045260246000fd5b604081526000615f116040830185615aff565b8281036020840152612a8e8185615aff565b600060208284031215615f3557600080fd5b815167ffffffffffffffff80821115615f4d57600080fd5b818401915084601f830112615f6157600080fd5b815181811115615f7357615f73615ee8565b604051601f8201601f19908116603f01168101908382118183101715615f9b57615f9b615ee8565b81604052828152876020848701011115615fb457600080fd5b612cad8360208301602088016158aa565b7f4c697175696469747920426f6f6b20546f6b656e200000000000000000000000815260008451615ffd8160158501602089016158aa565b8083019050602f60f81b8060158301528551616020816016850160208a016158aa565b6016920191820152835161603b8160178401602088016158aa565b0160170195945050505050565b601f82111561091457600081815260208120601f850160051c8101602086101561606f5750805b601f850160051c820191505b818110156124f45782815560010161607b565b815167ffffffffffffffff8111156160a8576160a8615ee8565b6160bc816160b68454615e97565b84616048565b602080601f8311600181146160f157600084156160d95750858301515b600019600386901b1c1916600185901b1785556124f4565b600085815260208120601f198616915b8281101561612057888601518255948401946001909101908401616101565b508582101561613e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b81526000845161616d8160048501602089016158aa565b8083019050602f60f81b8060048301528551616190816005850160208a016158aa565b600592019182015283516161ab8160068401602088016158aa565b0160060195945050505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156161e057600080fd5b813561175281615869565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff8281168282160390808211156134da576134da616201565b67ffffffffffffffff81811683821602808216919082811461625957616259616201565b505092915050565b67ffffffffffffffff8181168382160190808211156134da576134da616201565b6001600160801b038181168382160190808211156134da576134da616201565b6001600160801b038281168282160390808211156134da576134da616201565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156162f457600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006163216040830186886162c2565b8281036020840152612cad8185876162c2565b6040815260006163486040830185876162c2565b8281036020840152612f5a8185615aff565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a083015261428160c08301848661635a565b600082516163d68184602087016158aa565b9190910192915050565b6000602082840312156163f257600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a0606083015261642e60a0830186886162c2565b82810360808401526164418185876162c2565b9a9950505050505050505050565b838152604060208201526000612a8e60408301848661635a565b60006001600160a01b038088168352808716602084015250608060408301526164966080830185876162c2565b90508260608301529695505050505050565b8082018082111561069657610696616201565b600061ffff8083168181036164d2576164d2616201565b6001019392505050565b600061ffff808416806164f1576164f16161eb565b92169190910492915050565b61ffff8281168282160390808211156134da576134da616201565b600061ffff8084168061652d5761652d6161eb565b92169190910692915050565b61ffff8181168382160190808211156134da576134da616201565b8181038181111561069657610696616201565b64ffffffffff8181168382160190808211156134da576134da616201565b600082616594576165946161eb565b600160ff1b8214600019841416156165ae576165ae616201565b500590565b6000826165c2576165c26161eb565b50049056fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa58264ff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427823441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a26469706673582212206076aa4d749410b596734f37ddf2e17219a4599a496e020148220c1b6532b2a064736f6c63430008140033608060405234801561001057600080fd5b506040516108ff3803806108ff83398101604081905261002f9161018a565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a8161009e565b50610074826100ee565b5050600380546001600160a01b0319166001600160a01b0392909216919091179055506101cd9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b6000036101245760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461018557600080fd5b919050565b60008060006060848603121561019f57600080fd5b6101a88461016e565b92506101b66020850161016e565b91506101c46040850161016e565b90509250925092565b610723806101dc6000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73e919920ae49d3027566025548f12cdab4e52b59581565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73e919920ae49d3027566025548f12cdab4e52b5956105b2565b600073e919920ae49d3027566025548f12cdab4e52b5956105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea264697066735822122017084a6a294c7c04d0d46769a1a24663539b83ae7dcec7f168ac0c3156b7598b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162004e6b38038062004e6b83398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614c2a620002416000396000818161019f015281816102fe01528181610602015281816106e0015281816107bc015281816108ff01528181610c8c015281816113c20152818161145c015281816115c1015281816116440152818161198701528181611c1c01528181611f030152818161285c01528181612bfb0152612c790152600081816104b00152613b7a01526000818161037b0152818161104d015281816111fa015281816120fd01526134570152614c2a6000f3fe60806040526004361061018f5760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc14610514578063e9361c0814610527578063f96fe9251461054757600080fd5b8063bb558a9f146104a1578063c22159b6146104d4578063d0e380f2146104f457600080fd5b8063a0d376cf116100b0578063a0d376cf1461044e578063a3c7271a1461046e578063b066ea7c1461048e57600080fd5b806392fe8e70146103c4578063964f987c146103e45780639ab6156b1461042e57600080fd5b8063659ac74b1161013857806381c2fdfb1161011257806381c2fdfb1461033757806388cc58e41461036c5780638efc2b2c1461039f57600080fd5b8063659ac74b146102b75780636c9c0078146102ef5780638129fc1c1461032257600080fd5b80633dc8f8ec116101695780633dc8f8ec146102575780634b8018701461027757806362c067671461029757600080fd5b80631a24f9a9146101e45780632075ad22146102175780632a443fae1461023757600080fd5b366101df57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd57604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101f057600080fd5b506102046101ff36600461414d565b61057b565b6040519081526020015b60405180910390f35b61022a6102253660046141b8565b61087d565b60405161020e9190614254565b34801561024357600080fd5b5061020461025236600461414d565b610add565b34801561026357600080fd5b5061022a61027236600461414d565b610c0a565b34801561028357600080fd5b5061020461029236600461414d565b610e10565b3480156102a357600080fd5b506101dd6102b2366004614267565b61104b565b3480156102c357600080fd5b506102d76102d23660046142d4565b6111bb565b6040516001600160a01b03909116815260200161020e565b3480156102fb57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561032e57600080fd5b506101dd611272565b34801561034357600080fd5b50610357610352366004614330565b61138c565b6040805192835260208301919091520161020e565b34801561037857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b6103b26103ad3660046143eb565b6114e3565b60405161020e96959493929190614427565b3480156103d057600080fd5b5061022a6103df36600461414d565b611730565b3480156103f057600080fd5b506104046103ff366004614494565b611875565b604080516001600160801b039485168152928416602084015292169181019190915260600161020e565b34801561043a57600080fd5b5061020461044936600461414d565b611905565b34801561045a57600080fd5b50610404610469366004614494565b611a79565b34801561047a57600080fd5b506103b26104893660046143eb565b611abd565b61020461049c3660046141b8565b611b9a565b3480156104ad57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156104e057600080fd5b506103576104ef3660046144df565b611d14565b34801561050057600080fd5b5061020461050f3660046145a7565b611e08565b6102046105223660046141b8565b611e81565b34801561053357600080fd5b506101dd61054236600461462c565b6120fb565b34801561055357600080fd5b506105676105623660046146c1565b61221e565b60405162ffffff909116815260200161020e565b600081804211156105ad5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105c5575080515160208201515114155b806105e257506040810151518151516105df906001614703565b14155b156106005760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031686604001518760000151518151811061064557610645614716565b60200260200101516001600160a01b0316146106a45760408601518651518151811061067357610673614716565b602002602001015160405163cfec0e0160e01b81526004016105a491906001600160a01b0391909116815260200190565b60006106bd87600001518860200151896040015161228a565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b919061472c565b9050610791886040015160008151811061076757610767614716565b6020026020010151338460008151811061078357610783614716565b60200260200101518d61239a565b6107a58289602001518a60400151306123bb565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f919061472c565b6108399190614745565b945084891115610866576040516313fab00360e21b8152600481018a9052602481018690526044016105a4565b610870878661283a565b5050505095945050505050565b606081804211156108aa5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b845151859015806108c2575080515160208201515114155b806108df57506040810151518151516108dc906001614703565b14155b156108fd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061093e5761093e614716565b60200260200101516001600160a01b03161461096b57856040015160008151811061067357610673614716565b600061098487600001518860200151896040015161228a565b905061099a87602001518289604001518b6128ce565b935034846000815181106109b0576109b0614716565b602002602001015111156109fe5734846000815181106109d2576109d2614716565b602002602001015160405163194ee21960e31b81526004016105a4929190918252602082015260400190565b610a3c81600081518110610a1457610a14614716565b602002602001015185600081518110610a2f57610a2f614716565b6020026020010151612bed565b6000610a538289602001518a60400151888b612ca4565b905088811015610a80576040516313fab00360e21b8152600481018a9052602481018290526044016105a4565b84600081518110610a9357610a93614716565b6020026020010151341115610ad157610ad13386600081518110610ab957610ab9614716565b602002602001015134610acc9190614745565b612fc1565b50505050949350505050565b60008180421115610b0a5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610b22575080515160208201515114155b80610b3f5750604081015151815151610b3c906001614703565b14155b15610b5d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b7687600001518860200151896040015161228a565b9050610bbc8760400151600081518110610b9257610b92614716565b60200260200101513383600081518110610bae57610bae614716565b60200260200101518c61239a565b610bd1898289602001518a604001518a613053565b935083881115610bfe576040516313fab00360e21b815260048101899052602481018590526044016105a4565b50505095945050505050565b60608180421115610c375760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610c4f575080515160208201515114155b80610c6c5750604081015151815151610c69906001614703565b14155b15610c8a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610ccf57610ccf614716565b60200260200101516001600160a01b031614610cfd5760408601518651518151811061067357610673614716565b6000610d1687600001518860200151896040015161228a565b9050610d2c87602001518289604001518c6128ce565b93508784600081518110610d4257610d42614716565b60200260200101511115610d645787846000815181106109d2576109d2614716565b610dc28760400151600081518110610d7e57610d7e614716565b60200260200101513383600081518110610d9a57610d9a614716565b602002602001015187600081518110610db557610db5614716565b602002602001015161239a565b6000610dd98289602001518a604001518830612ca4565b905089811015610e06576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b610870878261283a565b60008180421115610e3d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610e55575080515160208201515114155b80610e725750604081015151815151610e6f906001614703565b14155b15610e905760405163b91b4d4d60e01b815260040160405180910390fd5b6000610ea987600001518860200151896040015161228a565b905060008760400151825181518110610ec457610ec4614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f919061472c565b9050610f858960400151600081518110610f5b57610f5b614716565b60200260200101513385600081518110610f7757610f77614716565b60200260200101518e61239a565b610f99838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061472c565b6110109190614745565b9550858a111561103d576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd9190614758565b6001600160a01b0316336001600160a01b0316146110fe57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661112e57600019811461111b578061111d565b475b90506111298282612fc1565b505050565b600019811461113d57806111a5565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a5919061472c565b90506111296001600160a01b03841683836133c0565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112699190614758565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156112bd5750825b905060008267ffffffffffffffff1660011480156112da5750303b155b9050811580156112e8575080155b156113065760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561133a57845468ff00000000000000001916680100000000000000001785555b831561138557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60008082804211156113ba5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b60006113eb8c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff16613426565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190614758565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611490579899985b6000806114a1848e8e8e8e30613512565b91509150826114b15780826114b4565b81815b80975081985050505050506114ca8c8786613674565b6114d4868461283a565b50509850989650505050505050565b6000808080606080826115166114fc60208a018a614775565b61150c60408b0160208c01614775565b8a60400135613426565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611556573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157a9190614758565b6001600160a01b031661159060208a018a614775565b6001600160a01b0316146115b75760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115ee60208a018a614775565b6001600160a01b03161480156116075750348860600135145b1561163a5761162b61161f60408a0160208b01614775565b33838b6080013561239a565b6116358134612bed565b611711565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661167460408a0160208b01614775565b6001600160a01b031614801561168d5750348860800135145b156116ae5761162b6116a260208a018a614775565b33838b6060013561239a565b6116bb6020890189614775565b6116cb60408a0160208b01614775565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a4016105a4565b61171b8882613695565b949d939c50919a509850965090945092505050565b6060818042111561175d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611775575080515160208201515114155b80611792575060408101515181515161178f906001614703565b14155b156117b05760405163b91b4d4d60e01b815260040160405180910390fd5b60006117c987600001518860200151896040015161228a565b90506117df87602001518289604001518c6128ce565b935087846000815181106117f5576117f5614716565b602002602001015111156118175787846000815181106109d2576109d2614716565b6118318760400151600081518110610d7e57610d7e614716565b60006118488289602001518a60400151888b612ca4565b905089811015610870576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa1580156118d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118f69190614792565b91989097509095509350505050565b600081804211156119325760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b8451518590158061194a575080515160208201515114155b806119675750604081015151815151611964906001614703565b14155b156119855760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106119ca576119ca614716565b60200260200101516001600160a01b0316146119f85760408601518651518151811061067357610673614716565b6000611a1187600001518860200151896040015161228a565b9050611a2d8760400151600081518110610b9257610b92614716565b611a42898289602001518a6040015130613053565b935083881115611a6f576040516313fab00360e21b815260048101899052602481018590526044016105a4565b610bfe868561283a565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f8906044016118b5565b600080808060608082611ad66114fc60208a018a614775565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3a9190614758565b6001600160a01b0316611b5060208a018a614775565b6001600160a01b031614611b775760405163b33f8ab960e01b815260040160405180910390fd5b611b876116a260208a018a614775565b61171161161f60408a0160208b01614775565b60008180421115611bc75760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611bdf575080515160208201515114155b80611bfc5750604081015151815151611bf9906001614703565b14155b15611c1a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611c5b57611c5b614716565b60200260200101516001600160a01b031614611c8857856040015160008151811061067357610673614716565b6000611ca187600001518860200151896040015161228a565b9050611cc781600081518110611cb957611cb9614716565b602002602001015134612bed565b611cdc348289602001518a604001518a613053565b935083881115611d09576040516313fab00360e21b815260048101899052602481018590526044016105a4565b505050949350505050565b6000808280421115611d425760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6000611d538d8d8d61ffff16613426565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db99190614758565b6001600160a01b03168e6001600160a01b0316141590508015611dda579899985b611de8828c8c8c8c8c613512565b90955093508015611df7579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061472c565b90505b92915050565b60008180421115611eae5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611ec6575080515160208201515114155b80611ee35750604081015151815151611ee0906001614703565b14155b15611f015760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611f4257611f42614716565b60200260200101516001600160a01b031614611f6f57856040015160008151811061067357610673614716565b6000611f8887600001518860200151896040015161228a565b905060008760400151825181518110611fa357611fa3614716565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015611ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061201e919061472c565b905061203683600081518110611cb957611cb9614716565b61204a838a602001518b604001518b6123bb565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015612093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b7919061472c565b6120c19190614745565b9550858a11156120ee576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612159573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061217d9190614758565b6001600160a01b0316336001600160a01b0316146121ae57604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906121e49030908990899089908990899060040161481f565b600060405180830381600087803b1580156121fe57600080fd5b505af1158015612212573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa158015612266573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e78919061485f565b6060835167ffffffffffffffff8111156122a6576122a6613ecb565b6040519080825280602002602001820160405280156122cf578160200160208202803683370190505b509050600080836000815181106122e8576122e8614716565b6020026020010151905060005b83518110156123905781925084816001018151811061231657612316614716565b6020026020010151915061235e838389848151811061233757612337614716565b602002602001015189858151811061235157612351614716565b6020026020010151613b39565b84828151811061237057612370614716565b6001600160a01b03909216602092830291909101909101526001016122f5565b5050509392505050565b80156123b5576123b56001600160a01b038516848484613c40565b50505050565b6000806000806000866000815181106123d6576123d6614716565b6020026020010151905060005b8951811015612212578981815181106123fe576123fe614716565b6020026020010151925088818151811061241a5761241a614716565b6020026020010151945081955087816001018151811061243c5761243c614716565b60200260200101519150895181600101146124735789816001018151811061246657612466614716565b6020026020010151612475565b865b9350600085600181111561248b5761248b61487c565b0361273157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156124d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124f591906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b0316101561262a576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa158015612571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612595919061472c565b03905060006125a5828585613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561260b57600080fd5b505af115801561261f573d6000803e3d6000fd5b50505050505061272a565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa158015612675573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612699919061472c565b03905060006126a9828486613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561270f57600080fd5b505af1158015612723573d6000803e3d6000fd5b5050505050505b5050612832565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561277e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a29190614758565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af115801561280c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612830919061472c565b505b6001016123e3565b80600003612846575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156128a857600080fd5b505af11580156128bc573d6000803e3d6000fd5b505050506128ca8282612fc1565b5050565b6060825167ffffffffffffffff8111156128ea576128ea613ecb565b604051908082528060200260200182016040528015612913578160200160208202803683370190505b509050818185518151811061292a5761292a614716565b602090810291909101015283515b8015612be45760008461294c600184614745565b8151811061295c5761295c614716565b602002602001015190506000876001846129769190614745565b8151811061298657612986614716565b602002602001015190506000876001856129a09190614745565b815181106129b0576129b0614716565b60200260200101519050600060018111156129cd576129cd61487c565b8260018111156129df576129df61487c565b03612b0157600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612a25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4991906148a9565b506001600160701b031691506001600160701b03169150888681518110612a7257612a72614716565b60200260200101516001600160a01b0316856001600160a01b03161115612a9557905b6000878781518110612aa957612aa9614716565b60200260200101519050612ac8838383613d489092919063ffffffff16565b6001600160801b031688612add60018a614745565b81518110612aed57612aed614716565b602002602001018181525050505050612bce565b612b9a81868681518110612b1757612b17614716565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b8b9190614758565b6001600160a01b031614611875565b50506001600160801b031685612bb1600187614745565b81518110612bc157612bc1614716565b6020026020010181815250505b5050508080612bdc906148ee565b915050612938565b50949350505050565b80600003612bf9575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c5457600080fd5b505af1158015612c68573d6000803e3d6000fd5b506128ca9350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150849050836133c0565b60008060008060008088600081518110612cc057612cc0614716565b6020026020010151905060005b8b51811015612fb2578b8181518110612ce857612ce8614716565b602002602001015193508a8181518110612d0457612d04614716565b60200260200101519250819550898160010181518110612d2657612d26614716565b602002602001015191508b518160010114612d5d578b8160010181518110612d5057612d50614716565b6020026020010151612d5f565b875b94506000836001811115612d7557612d7561487c565b03612e8057888160010181518110612d8f57612d8f614716565b60200260200101519650816001600160a01b0316866001600160a01b03161015612e335760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612e1657600080fd5b505af1158015612e2a573d6000803e3d6000fd5b50505050612faa565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612dfc565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ec0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ee49190614758565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612f7e918916906353c059a0906044015b6020604051808303816000875af1158015612f46573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f6a919061472c565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612fa257809950612fa6565b8199505b5050505b600101612ccd565b50505050505095945050505050565b80600003612fcd575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461301a576040519150601f19603f3d011682016040523d82523d6000602084013e61301f565b606091505b50509050806111295760405163047b96f760e41b81526001600160a01b0384166004820152602481018390526044016105a4565b6000806000806000808760008151811061306f5761306f614716565b602002602001015190508a955060005b8a51811015612fb2578a818151811061309a5761309a614716565b602002602001015192508981815181106130b6576130b6614716565b602002602001015194508195508881600101815181106130d8576130d8614716565b602002602001015191508a51816001011461310f578a816001018151811061310257613102614716565b6020026020010151613111565b875b935060008560018111156131275761312761487c565b036132e157600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801561316d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319191906148a9565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015613250576131cd898383613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561323357600080fd5b505af1158015613247573d6000803e3d6000fd5b505050506132da565b61325b898284613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156132c157600080fd5b505af11580156132d5573d6000803e3d6000fd5b505050505b50506133b8565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613321573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133459190614758565b60405163029e02cd60e51b81526001600160a01b03918216858316146004820181905287831660248301529250600091829161338c918816906353c059a090604401612f27565b6001600160801b031691506001600160801b0316915082156133b0578099506133b4565b8199505b5050505b60010161307f565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123b58482613de7565b60405163704037bd60e01b81526001600160a01b0384811660048301528381166024830152604482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa1580156134a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134c49190614905565b6020015190506001600160a01b03811661350b57604051636b2471d160e11b81526001600160a01b03808616600483015284166024820152604481018390526064016105a4565b9392505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b8152600401613549949392919061498a565b6000604051808303816000875af1158015613568573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261359091908101906149c8565b905060005b8151811015613624576135c78282815181106135b3576135b3614716565b60200260200101516001600160801b031690565b6135da906001600160801b031685614703565b93506135ff8282815181106135f1576135f1614716565b602002602001015160801c90565b613612906001600160801b031684614703565b925061361d81614a4e565b9050613595565b508783108061363257508682105b15613668576040516318ccfb7760e11b8152600481018990526024810184905260448101889052606481018390526084016105a4565b50965096945050505050565b8060000361368157505050565b6111296001600160a01b03841683836133c0565b600080600080606080876101c00135804211156136ce5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6136dc6101408a018a614a67565b90506136ec6101208b018b614a67565b905014158061371957506137046101608a018a614a67565b90506137146101208b018b614a67565b905014155b156137375760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a01351180613753575062ffffff6101008a0135115b156137825760405163197a55c760e11b815260e08a013560048201526101008a013560248201526044016105a4565b60006137926101208b018b614a67565b905067ffffffffffffffff8111156137ac576137ac613ecb565b6040519080825280602002602001820160405280156137d5578160200160208202803683370190505b5090506137e66101208b018b614a67565b905067ffffffffffffffff81111561380057613800613ecb565b604051908082528060200260200182016040528015613829578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561386c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613890919061485f565b62ffffff169050808b61010001358c60e001350110806138ba57508a60e001358b61010001358201105b156138f057604051637d50edab60e11b815260e08c013560048201526101008c01356024820152604481018290526064016105a4565b60005b82518110156139f357600061390c6101208e018e614a67565b8381811061391c5761391c614716565b90506020020135830190506000811280613938575062ffffff81115b15613959576040516370a82e6160e11b8152600481018290526024016105a4565b8087838151811061396c5761396c614716565b60209081029190910101526139cd6139886101408f018f614a67565b8481811061399857613998614716565b905060200201358e8061016001906139b09190614a67565b858181106139c0576139c0614716565b9050602002013583613e57565b8483815181106139df576139df614716565b6020908102919091010152506001016138f3565b50506000808a6001600160a01b031663383d15c58d610180016020810190613a1b9190614775565b858f6101a0016020810190613a309190614775565b6040518463ffffffff1660e01b8152600401613a4e93929190614ab1565b6000604051808303816000875af1158015613a6d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a959190810190614b15565b965090925090506000613aa88383613e91565b6001600160801b0381169b50608081901c9a50905060a08d01358b1080613ad257508c60c001358a105b15613b0e576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b90526084016105a4565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613b4e57613b4e61487c565b03613c2d5760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613be59190614758565b90506001600160a01b038116613c2857604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b613c38565b611269858585613426565b949350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526113858582613de7565b600083600003613cd15760405163b937356b60e01b815260040160405180910390fd5b821580613cdc575081155b15613cfa57604051637b03555560e01b815260040160405180910390fd5b6000613d08856103e5614bbb565b90506000613d168483614bbb565b9050600082613d27876103e8614bbb565b613d319190614703565b9050613d3d8183614bd2565b979650505050505050565b600083600003613d6b5760405163b937356b60e01b815260040160405180910390fd5b821580613d76575081155b15613d9457604051637b03555560e01b815260040160405180910390fd5b6000613da08585614bbb565b613dac906103e8614bbb565b90506000613dba8685614745565b613dc6906103e5614bbb565b9050613dd28183614bd2565b613ddd906001614703565b9695505050505050565b600080600052602060008351602085016000875af19050808015613e28573d8015613e1b5760016000511483169250613e22565b843b151592505b50613e38565b3d15613e38573d6000803e3d6000fd5b50806111295760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff82168117613c38565b80820382811180613ead57506001600160801b03808416908216115b15611e7b5760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613f0457613f04613ecb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613f3357613f33613ecb565b604052919050565b600067ffffffffffffffff821115613f5557613f55613ecb565b5060051b60200190565b600082601f830112613f7057600080fd5b81356020613f85613f8083613f3b565b613f0a565b82815260059290921b84018101918181019086841115613fa457600080fd5b8286015b84811015613fbf5780358352918301918301613fa8565b509695505050505050565b6001600160a01b0381168114613fdf57600080fd5b50565b8035613fed81613fca565b919050565b600082601f83011261400357600080fd5b81356020614013613f8083613f3b565b82815260059290921b8401810191818101908684111561403257600080fd5b8286015b84811015613fbf57803561404981613fca565b8352918301918301614036565b60006060828403121561406857600080fd5b614070613ee1565b9050813567ffffffffffffffff8082111561408a57600080fd5b61409685838601613f5f565b83526020915081840135818111156140ad57600080fd5b8401601f810186136140be57600080fd5b80356140cc613f8082613f3b565b81815260059190911b820184019084810190888311156140eb57600080fd5b928501925b82841015614117578335600281106141085760008081fd5b825292850192908501906140f0565b808688015250505050604084013591508082111561413457600080fd5b5061414184828501613ff2565b60408301525092915050565b600080600080600060a0868803121561416557600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561418a57600080fd5b61419688828901614056565b93505060608601356141a781613fca565b949793965091946080013592915050565b600080600080608085870312156141ce57600080fd5b84359350602085013567ffffffffffffffff8111156141ec57600080fd5b6141f887828801614056565b935050604085013561420981613fca565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156142495781518752958201959082019060010161422d565b509495945050505050565b602081526000611e786020830184614219565b60008060006060848603121561427c57600080fd5b833561428781613fca565b9250602084013561429781613fca565b929592945050506040919091013590565b62ffffff81168114613fdf57600080fd5b61ffff81168114613fdf57600080fd5b8035613fed816142b9565b600080600080608085870312156142ea57600080fd5b84356142f581613fca565b9350602085013561430581613fca565b92506040850135614315816142a8565b91506060850135614325816142b9565b939692955090935050565b600080600080600080600080610100898b03121561434d57600080fd5b883561435881613fca565b97506020890135614368816142b9565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561439357600080fd5b61439f8c838d01613f5f565b955060a08b01359150808211156143b557600080fd5b506143c28b828c01613f5f565b93505060c08901356143d381613fca565b8092505060e089013590509295985092959890939650565b6000602082840312156143fd57600080fd5b813567ffffffffffffffff81111561441457600080fd5b82016101e0818503121561350b57600080fd5b86815285602082015284604082015283606082015260c06080820152600061445260c0830185614219565b82810360a08401526144648185614219565b9998505050505050505050565b6001600160801b0381168114613fdf57600080fd5b8015158114613fdf57600080fd5b6000806000606084860312156144a957600080fd5b83356144b481613fca565b925060208401356144c481614471565b915060408401356144d481614486565b809150509250925092565b60008060008060008060008060006101208a8c0312156144fe57600080fd5b893561450981613fca565b985060208a013561451981613fca565b975061452760408b016142c9565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561455257600080fd5b61455e8d838e01613f5f565b955060c08c013591508082111561457457600080fd5b506145818c828d01613f5f565b93505061459060e08b01613fe2565b91506101008a013590509295985092959850929598565b600080604083850312156145ba57600080fd5b82356145c581613fca565b915060208301356145d5816142a8565b809150509250929050565b60008083601f8401126145f257600080fd5b50813567ffffffffffffffff81111561460a57600080fd5b6020830191508360208260051b850101111561462557600080fd5b9250929050565b6000806000806000806080878903121561464557600080fd5b863561465081613fca565b9550602087013561466081613fca565b9450604087013567ffffffffffffffff8082111561467d57600080fd5b6146898a838b016145e0565b909650945060608901359150808211156146a257600080fd5b506146af89828a016145e0565b979a9699509497509295939492505050565b600080604083850312156146d457600080fd5b82356146df81613fca565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e7b57611e7b6146ed565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561473e57600080fd5b5051919050565b81810381811115611e7b57611e7b6146ed565b60006020828403121561476a57600080fd5b815161350b81613fca565b60006020828403121561478757600080fd5b813561350b81613fca565b6000806000606084860312156147a757600080fd5b83516147b281614471565b60208501519093506147c381614471565b60408501519092506144d481614471565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561480657600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b0380891683528088166020840152506080604083015261484c6080830186886147d4565b82810360608401526144648185876147d4565b60006020828403121561487157600080fd5b815161350b816142a8565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613fed57600080fd5b6000806000606084860312156148be57600080fd5b6148c784614892565b92506148d560208501614892565b9150604084015163ffffffff811681146144d457600080fd5b6000816148fd576148fd6146ed565b506000190190565b60006080828403121561491757600080fd5b6040516080810181811067ffffffffffffffff8211171561493a5761493a613ecb565b6040528251614948816142b9565b8152602083015161495881613fca565b6020820152604083015161496b81614486565b6040820152606083015161497e81614486565b60608201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526149b66080830185614219565b8281036060840152613d3d8185614219565b600060208083850312156149db57600080fd5b825167ffffffffffffffff8111156149f257600080fd5b8301601f81018513614a0357600080fd5b8051614a11613f8082613f3b565b81815260059190911b82018301908381019087831115614a3057600080fd5b928401925b82841015613d3d57835182529284019290840190614a35565b600060018201614a6057614a606146ed565b5060010190565b6000808335601e19843603018112614a7e57600080fd5b83018035915067ffffffffffffffff821115614a9957600080fd5b6020019150600581901b360382131561462557600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015614afc57855183529483019491830191600101614ae0565b5050809450505080851660408501525050949350505050565b600080600060608486031215614b2a57600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614b5057600080fd5b8501601f81018713614b6157600080fd5b8051614b6f613f8082613f3b565b81815260059190911b82018301908381019089831115614b8e57600080fd5b928401925b82841015614bac57835182529284019290840190614b93565b80955050505050509250925092565b8082028115828204841417611e7b57611e7b6146ed565b600082614bef57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122031703d9b6019352fa237e87e1e6afd16841f62dde4538978d077f39402a1965b64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220d4aa32d18c702b63dca8c26128a14e379148c534dea1c274c97ba208a69289c564736f6c634300081400330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212200bcd7c50aa6b3c3e81b3e33b0981fee05c15bee719889d0bdec8be712e5f9fab64736f6c63430008140033",
    "sourceMap": "591:11316:138:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6334:149:135;;;;;;:::i;:::-;-1:-1:-1;;;;;;6435:41:135;-1:-1:-1;;;6435:41:135;;6334:149;;;;470:14:147;;463:22;445:41;;433:2;418:18;6334:149:135;;;;;;;;854:2676:138;;;:::i;:::-;;2907:134:6;;;:::i;:::-;;;;;;;:::i;3823:151::-;;;:::i;:::-;;;;;;;:::i;8075:1929:138:-;;;:::i;3536:340::-;;;:::i;3684:133:6:-;;;:::i;3385:141::-;;;:::i;12754:168:135:-;;;;;;:::i;:::-;;:::i;:::-;;;4249:25:147;;;4237:2;4222:18;12754:168:135;4103:177:147;4241:1927:138;;;:::i;10010:1895::-;;;:::i;3193:186:6:-;;;:::i;:::-;;;;;;;:::i;3047:140::-;;;:::i;:::-;;;;;;;:::i;3882:353:138:-;;;:::i;12928:205:135:-;;;;;;:::i;:::-;;:::i;:::-;;;7416:8:147;7404:21;;;7386:40;;7374:2;7359:18;12928:205:135;7242:190:147;3532:146:6;;;:::i;:::-;;;;;;;:::i;10779:1171:135:-;;;;;;:::i;:::-;;:::i;2754:147:6:-;;;:::i;2459:141::-;;;:::i;13139:134:135:-;;;;;;:::i;:::-;;:::i;1243:204:2:-;;;:::i;2606:142:6:-;;;:::i;6174:1895:138:-;;;:::i;1016:26:13:-;;;;;;;;;11956:792:135;;;;;;:::i;:::-;;:::i;854:2676:138:-;917:22;;-1:-1:-1;;;917:22:138;;10913:2:147;917:22:138;;;10895:21:147;10952:1;10932:18;;;10925:29;10990:11;10970:18;;;10963:39;-1:-1:-1;;;;;;;;;;;897:19:138;;;;;917:9;;11019:18:147;;917:22:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;917:22:138;;;;;;;;;;;;:::i;:::-;941:8;897:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;960:13;:11;:13::i;:::-;1124:4;;1013;;1057;;1111:60;;-1:-1:-1;;;;;1124:4:138;1139;1146:24;1057:4;1146:2;:24;:::i;:::-;1111:4;:60::i;:::-;1194:4;;1181:60;;-1:-1:-1;;;;;1194:4:138;1209;1216:24;1221:19;1216:2;:24;:::i;1181:60::-;1264:7;;1251:63;;1264:7;;;-1:-1:-1;;;;;1264:7:138;1282:4;1289:24;1294:19;1289:2;:24;:::i;1251:63::-;1337:4;;1324:60;;-1:-1:-1;;;;;1337:4:138;1352;1359:24;1364:19;1359:2;:24;:::i;1324:60::-;1407:3;;1394:59;;-1:-1:-1;;;;;1407:3:138;1421:4;1428:24;1433:19;1428:2;:24;:::i;1394:59::-;1495:8;;1538:4;;1565;;-1:-1:-1;;;;;1495:8:138;;;;:21;;1538:4;;;1565;1584:22;1605:1;1584:18;:22;:::i;:::-;1639:18;1671:1;;1709:4;1728:19;:15;1746:1;1728:19;:::i;:::-;1495:262;;;;;;-1:-1:-1;;;;;;1495:262:138;;;-1:-1:-1;;;;;14072:15:147;;;1495:262:138;;;14054:34:147;14124:15;;;14104:18;;;14097:43;14156:18;;;14149:34;;;;14199:18;;;14192:34;;;;14242:19;;;14235:35;;;;14286:19;;;14279:35;14351:15;;;14330:19;;;14323:44;14383:19;;;14376:35;;;;13965:19;;1495:262:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1768:8:138;;1811:7;;1841:4;;-1:-1:-1;;;;;1768:8:138;;;;-1:-1:-1;1768:21:138;;:8;1811:7;;;;;;1841:4;1860:19;;1768:8;;1985:4;2004:19;:15;1768:8;2004:19;:::i;:::-;1768:265;;;;;;-1:-1:-1;;;;;;1768:265:138;;;-1:-1:-1;;;;;14072:15:147;;;1768:265:138;;;14054:34:147;14124:15;;;14104:18;;;14097:43;14156:18;;;14149:34;;;;14199:18;;;14192:34;;;;14242:19;;;14235:35;;;;14286:19;;;14279:35;14351:15;;;14330:19;;;14323:44;14383:19;;;14376:35;;;;13965:19;;1768:265:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2044:8:138;;2087:4;;2114;;-1:-1:-1;;;;;2044:8:138;;;;-1:-1:-1;2044:21:138;;2087:4;;;;2114;2133:22;2154:1;2133:18;:22;:::i;:::-;2188:18;2220:1;;2258:4;2277:19;:15;2295:1;2277:19;:::i;:::-;2044:262;;;;;;-1:-1:-1;;;;;;2044:262:138;;;-1:-1:-1;;;;;14072:15:147;;;2044:262:138;;;14054:34:147;14124:15;;;14104:18;;;14097:43;14156:18;;;14149:34;;;;14199:18;;;14192:34;;;;14242:19;;;14235:35;;;;14286:19;;;14279:35;14351:15;;;14330:19;;;14323:44;14383:19;;;14376:35;;;;13965:19;;2044:262:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2317:7:138;;2338:4;;2344;;2317:58;;-1:-1:-1;;;2317:58:138;;-1:-1:-1;;;;;2338:4:138;;;2317:58;;;15061:34:147;2344:4:138;;;15111:18:147;;;15104:43;1185:7:135;15163:18:147;;;15156:49;1340:2:135;15221:18:147;;;15214:47;2317:7:138;;;-1:-1:-1;2317:20:138;;14972:19:147;;2317:58:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2404:7:138;;2425;;2434:4;;-1:-1:-1;;;;;2404:7:138;;;;:20;;:7;2425;;;;;2434:4;2440:11;1185:7:135;2449:2:138;2440:11;:::i;:::-;2404:66;;-1:-1:-1;;;;;;2404:66:138;;;;;;;-1:-1:-1;;;;;15079:15:147;;;2404:66:138;;;15061:34:147;15131:15;;;;15111:18;;;15104:43;15195:8;15183:21;15163:18;;;15156:49;1340:2:135;15221:18:147;;;15214:47;14972:19;;2404:66:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2502:7:138;;2523:4;;2529;;2502:58;;-1:-1:-1;;;2502:58:138;;-1:-1:-1;;;;;2523:4:138;;;2502:58;;;15061:34:147;2529:4:138;;;15111:18:147;;;15104:43;1185:7:135;15163:18:147;;;15156:49;1340:2:135;15221:18:147;;;15214:47;2502:7:138;;;:20;;14972:19:147;;2502:58:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2589:7:138;;2610:3;;2615:4;;-1:-1:-1;;;;;2589:7:138;;;;:20;;2610:3;;;2615:4;2621:11;1185:7:135;2630:2:138;2621:11;:::i;:::-;2589:62;;-1:-1:-1;;;;;;2589:62:138;;;;;;;-1:-1:-1;;;;;15079:15:147;;;2589:62:138;;;15061:34:147;15131:15;;;;15111:18;;;15104:43;15195:8;15183:21;15163:18;;;15156:49;1340:2:135;15221:18:147;;;15214:47;14972:19;;2589:62:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2805:4:138;;2811;;2711:56;;2782:69;;-1:-1:-1;;;;;2805:4:138;;;;2811;2817:19;1185:7:135;2846:1:138;2711:56;2782:22;:69::i;:::-;2861:6;;:40;;-1:-1:-1;;;2861:40:138;;2711:140;;-1:-1:-1;;;;;;2861:6:138;;:19;;:40;;2711:140;;2861:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2861:40:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2957:7:138;;2966:4;;2934:76;;-1:-1:-1;;;;;;2957:7:138;;;;;;;-1:-1:-1;2966:4:138;;-1:-1:-1;2972:18:138;;-1:-1:-1;2992:11:138;1185:7:135;3001:2:138;2992:11;:::i;:::-;3005:1;3008;2934:22;:76::i;:::-;3020:6;;:40;;-1:-1:-1;;;3020:40:138;;2912:98;;-1:-1:-1;;;;;;3020:6:138;;:19;;:40;;2912:98;;3020:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3020:40:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3116:4:138;;3122;;3093:69;;-1:-1:-1;;;;;;3116:4:138;;;;-1:-1:-1;3122:4:138;;-1:-1:-1;3128:19:138;;-1:-1:-1;1185:7:135;3157:1:138;3116:4;3093:22;:69::i;:::-;3172:6;;:40;;-1:-1:-1;;;3172:40:138;;3071:91;;-1:-1:-1;;;;;;3172:6:138;;:19;;:40;;3071:91;;3172:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3172:40:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3268:3:138;;3273:4;;3245:73;;-1:-1:-1;;;;;;3268:3:138;;;;-1:-1:-1;3273:4:138;;-1:-1:-1;3279:19:138;;-1:-1:-1;3300:11:138;1185:7:135;3309:2:138;3300:11;:::i;3245:73::-;3328:6;;:40;;-1:-1:-1;;;3328:40:138;;3223:95;;-1:-1:-1;;;;;;3328:6:138;;:19;;:40;;3223:95;;3328:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3328:40:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;3424:3:138;;3429:4;;3401:72;;-1:-1:-1;;;;;;3424:3:138;;;;-1:-1:-1;3429:4:138;;-1:-1:-1;3435:18:138;;-1:-1:-1;3455:11:138;1185:7:135;3464:2:138;3455:11;:::i;3401:72::-;3483:6;;:40;;-1:-1:-1;;;3483:40:138;;3379:94;;-1:-1:-1;;;;;;3483:6:138;;:19;;:40;;3379:94;;3483:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3483:40:138;;;;;;;;;;;;:::i;:::-;;;;;;;887:2643;;;854:2676::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;8075:1929:138:-;8218:16;;;8232:1;8218:16;;;;;;;;8193:22;;8218:16;;;;;;;;-1:-1:-1;;8263:4:138;;8244:8;;;;-1:-1:-1;;;;;;8263:4:138;;8244:8;;-1:-1:-1;8263:4:138;;8244:8;;;;:::i;:::-;-1:-1:-1;;;;;8244:24:138;;;:8;;;;;;;;;;:24;;;;8297:4;8278:8;;8297:4;;;8278:5;;8297:4;;8278:8;;;;;;:::i;:::-;-1:-1:-1;;;;;8278:24:138;;;:8;;;;;;;;;:24;8402:6;;:48;;-1:-1:-1;;;8402:48:138;;8358:4;;8339:16;;8402:6;;:31;;:48;;8434:5;;8358:4;;8402:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8402:48:138;;;;;;;;;;;;:::i;:::-;8372:78;;8461:57;8470:5;:13;;;8484:1;8470:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8461:57:138;8488:8;-1:-1:-1;;;;;8461:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;8528:76;8546:5;:13;;;8560:1;8546:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8528:76:138;8564:8;8575:1;8564:12;;;;:::i;:::-;-1:-1:-1;;;;;8528:76:138;8578:4;8528:76;;;;;;;;;;;;;;;;;:17;:76::i;:::-;8614:51;8623:5;:14;;;8638:1;8623:17;;;;;;;;:::i;:::-;;;;;;;8642:1;8614:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;8675:60;8692:5;:14;;;8707:1;8692:17;;;;;;;;:::i;:::-;;;;;;;8684:26;;;;;;;;:::i;:::-;8712:1;8675:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;8807:6;;:48;;-1:-1:-1;;;8807:48:138;;8783:6;;-1:-1:-1;;;;;;8807:6:138;;;;:31;;:48;;8839:5;;8783:6;;8807:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8807:48:138;;;;;;;;;;;;:::i;:::-;8799:56;;8866:57;8875:5;:13;;;8889:1;8875:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8866:57:138;8893:8;-1:-1:-1;;;;;8866:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;8933:72;8951:5;:13;;;8965:1;8951:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;8933:72:138;8969:8;-1:-1:-1;;;;;8933:72:138;8979:4;8933:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;9015:66;9024:5;:14;;;9039:1;9024:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;9015:66:138;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;9091:60;9108:5;:14;;;9123:1;9108:17;;;;;;;;:::i;:::-;;;;;;;9100:26;;;;;;;;:::i;:::-;9128:1;9091:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;9231:6;;:50;;-1:-1:-1;;;9231:50:138;;9209:4;;-1:-1:-1;;;;;9231:6:138;;:32;;:50;;9264:5;;9209:4;;9231:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9231:50:138;;;;;;;;;;;;:::i;:::-;9223:58;;9292:77;9310:5;:13;;;9324:1;9310:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9292:77:138;9340:1;9328:9;:13;;;;:::i;:::-;-1:-1:-1;;;;;9292:77:138;9343:4;9292:77;;;;;;;;;;;;;;;;;:17;:77::i;:::-;9379:59;9388:5;:13;;;9402:1;9388:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9379:59:138;9406:9;-1:-1:-1;;;;;9379:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;9448:52;9457:5;:14;;;9472:1;9457:17;;;;;;;;:::i;:::-;;;;;;;9476:1;9448:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;9510:61;9527:5;:14;;;9542:1;9527:17;;;;;;;;:::i;:::-;;;;;;;9519:26;;;;;;;;:::i;:::-;9547:1;9510:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;9645:6:138;;:50;;-1:-1:-1;;;9645:50:138;;9621:6;;-1:-1:-1;;;;;9645:6:138;;:32;;:50;;9678:5;;9621:6;;9645:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9645:50:138;;;;;;;;;;;;:::i;:::-;9637:58;;9706:74;9724:5;:13;;;9738:1;9724:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9706:74:138;9742:9;-1:-1:-1;;;;;9706:74:138;9753:4;9706:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;9790:59;9799:5;:13;;;9813:1;9799:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;9790:59:138;9817:9;-1:-1:-1;;;;;9790:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;9859:67;9868:5;:14;;;9883:1;9868:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;9859:67:138;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;9936:61;9953:5;:14;;;9968:1;9953:17;;;;;;;;:::i;:::-;;;;;;;9945:26;;;;;;;;:::i;:::-;9973:1;9936:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;8113:1891;;;;8075:1929::o;3536:340::-;3603:6;;:20;;;-1:-1:-1;;;3603:20:138;;;;3586:79;;-1:-1:-1;;;;;3603:6:138;;:18;;:20;;;;;;;;;;;;;;:6;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3634:6;;3586:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3634:6:138;;;;3586:8;:79::i;:::-;3692:6;;:21;;;-1:-1:-1;;;3692:21:138;;;;3675:103;;-1:-1:-1;;;;;3692:6:138;;:19;;:21;;;;;;;;;;;;;;:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;240:42:137;3675:103:138;;;;;;;;;;;;;;;;;:8;:103::i;:::-;3805:6;;:21;;;-1:-1:-1;;;3805:21:138;;;;3788:81;;-1:-1:-1;;;;;3805:6:138;;:19;;:21;;;;;;;;;;;;;;:6;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3837:7;;3788:81;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3837:7:138;;;;3788:8;:81::i;:::-;3536:340::o;3684:133:6:-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;12754:168:135:-;12825:7;12860:1;12851:6;:10;;;:24;;;;;12874:1;12865:6;:10;;;12851:24;:64;;12900:15;12909:6;12900;:15;:::i;:::-;12851:64;;;12896:1;12878:15;12887:6;12878;:15;:::i;:::-;:19;;;;:::i;:::-;12844:71;;;;12754:168;;;;;:::o;4241:1927:138:-;4382:16;;;4396:1;4382:16;;;;;;;;4357:22;;4382:16;;;;;;;;-1:-1:-1;;4427:4:138;;4408:8;;;;-1:-1:-1;;;;;;4427:4:138;;4408:8;;-1:-1:-1;4427:4:138;;4408:8;;;;:::i;:::-;-1:-1:-1;;;;;4408:24:138;;;:8;;;;;;;;;;:24;;;;4461:4;4442:8;;4461:4;;;4442:5;;4461:4;;4442:8;;;;;;:::i;:::-;-1:-1:-1;;;;;4442:24:138;;;:8;;;;;;;;;:24;4566:6;;:48;;-1:-1:-1;;;4566:48:138;;4522:4;;4503:16;;4566:6;;:31;;:48;;4598:5;;4522:4;;4566:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4566:48:138;;;;;;;;;;;;:::i;:::-;4536:78;;4625:57;4634:5;:13;;;4648:1;4634:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4625:57:138;4652:8;-1:-1:-1;;;;;4625:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;4692:76;4710:5;:13;;;4724:1;4710:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4692:76:138;4728:8;4739:1;4728:12;;;;:::i;:::-;-1:-1:-1;;;;;4692:76:138;4742:4;4692:76;;;;;;;;;;;;;;;;;:17;:76::i;:::-;4778:51;4787:5;:14;;;4802:1;4787:17;;;;;;;;:::i;:::-;;;;;;;4806:1;4778:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;4839:60;4856:5;:14;;;4871:1;4856:17;;;;;;;;:::i;:::-;;;;;;;4848:26;;;;;;;;:::i;:::-;4876:1;4839:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;4971:6;;:48;;-1:-1:-1;;;4971:48:138;;4947:6;;-1:-1:-1;;;;;;4971:6:138;;;;:31;;:48;;5003:5;;4947:6;;4971:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4971:48:138;;;;;;;;;;;;:::i;:::-;4963:56;;5030:57;5039:5;:13;;;5053:1;5039:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5030:57:138;5057:8;-1:-1:-1;;;;;5030:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;5097:72;5115:5;:13;;;5129:1;5115:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5097:72:138;5133:8;-1:-1:-1;;;;;5097:72:138;5143:4;5097:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;5179:66;5188:5;:14;;;5203:1;5188:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;5179:66:138;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;5255:60;5272:5;:14;;;5287:1;5272:17;;;;;;;;:::i;:::-;;;;;;;5264:26;;;;;;;;:::i;:::-;5292:1;5255:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;5395:6;;:50;;-1:-1:-1;;;5395:50:138;;5373:4;;-1:-1:-1;;;;;5395:6:138;;:32;;:50;;5428:5;;5373:4;;5395:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5395:50:138;;;;;;;;;;;;:::i;:::-;5387:58;;5456:77;5474:5;:13;;;5488:1;5474:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5456:77:138;5504:1;5492:9;:13;;;;:::i;:::-;-1:-1:-1;;;;;5456:77:138;5507:4;5456:77;;;;;;;;;;;;;;;;;:17;:77::i;:::-;5543:59;5552:5;:13;;;5566:1;5552:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5543:59:138;5570:9;-1:-1:-1;;;;;5543:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;5612:52;5621:5;:14;;;5636:1;5621:17;;;;;;;;:::i;:::-;;;;;;;5640:1;5612:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;5674:61;5691:5;:14;;;5706:1;5691:17;;;;;;;;:::i;:::-;;;;;;;5683:26;;;;;;;;:::i;:::-;5711:1;5674:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;5809:6:138;;:50;;-1:-1:-1;;;5809:50:138;;5785:6;;-1:-1:-1;;;;;5809:6:138;;:32;;:50;;5842:5;;5785:6;;5809:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5809:50:138;;;;;;;;;;;;:::i;:::-;5801:58;;5870:74;5888:5;:13;;;5902:1;5888:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5870:74:138;5906:9;-1:-1:-1;;;;;5870:74:138;5917:4;5870:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;5954:59;5963:5;:13;;;5977:1;5963:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5954:59:138;5981:9;-1:-1:-1;;;;;5954:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;6023:67;6032:5;:14;;;6047:1;6032:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;6023:67:138;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;6100:61;6117:5;:14;;;6132:1;6117:17;;;;;;;;:::i;:::-;;;;;;;6109:26;;;;;;;;:::i;:::-;6137:1;6100:61;;;;;;;;;;;;;;;;;:8;:61::i;10010:1895::-;10128:16;;;10142:1;10128:16;;;;;;;;10103:22;;10128:16;;;;;;;;-1:-1:-1;;10173:3:138;;10154:8;;;;-1:-1:-1;;;;;;10173:3:138;;10154:8;;-1:-1:-1;10173:3:138;;10154:8;;;;:::i;:::-;-1:-1:-1;;;;;10154:23:138;;;:8;;;;;;;;;;:23;;;;10206:4;10187:8;;10206:4;;;10187:5;;10206:4;;10187:8;;;;;;:::i;:::-;-1:-1:-1;;;;;10187:24:138;;;:8;;;;;;;;;:24;10311:6;;:48;;-1:-1:-1;;;10311:48:138;;10267:4;;10248:16;;10311:6;;:31;;:48;;10343:5;;10267:4;;10311:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10311:48:138;;;;;;;;;;;;:::i;:::-;10281:78;;10370:57;10379:5;:13;;;10393:1;10379:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10370:57:138;10397:8;-1:-1:-1;;;;;10370:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10437;10446:5;:13;;;10460:1;10446:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10437:57:138;10464:8;-1:-1:-1;;;;;10437:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10504:66;10513:5;:14;;;10528:1;10513:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;10504:66:138;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;10580:60;10597:5;:14;;;10612:1;10597:17;;;;;;;;:::i;:::-;;;;;;;10589:26;;;;;;;;:::i;:::-;10617:1;10580:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;10712:6;;:48;;-1:-1:-1;;;10712:48:138;;10688:6;;-1:-1:-1;;;;;;10712:6:138;;;;:31;;:48;;10744:5;;10688:6;;10712:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10712:48:138;;;;;;;;;;;;:::i;:::-;10704:56;;10771:57;10780:5;:13;;;10794:1;10780:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10771:57:138;10798:8;-1:-1:-1;;;;;10771:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;10838:72;10856:5;:13;;;10870:1;10856:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;10838:72:138;10874:8;-1:-1:-1;;;;;10838:72:138;10884:4;10838:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;10920:66;10929:5;:14;;;10944:1;10929:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;10920:66:138;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;10996:60;11013:5;:14;;;11028:1;11013:17;;;;;;;;:::i;:::-;;;;;;;11005:26;;;;;;;;:::i;:::-;11033:1;10996:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;11136:6;;:50;;-1:-1:-1;;;11136:50:138;;11114:4;;-1:-1:-1;;;;;11136:6:138;;:32;;:50;;11169:5;;11114:4;;11136:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11136:50:138;;;;;;;;;;;;:::i;:::-;11128:58;;11197;11206:5;:13;;;11220:1;11206:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11197:58:138;11224:9;-1:-1:-1;;;;;11197:58:138;;;;;;;;;;;;;;;;;;:8;:58::i;:::-;11265:59;11274:5;:13;;;11288:1;11274:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11265:59:138;11292:9;-1:-1:-1;;;;;11265:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;11334:67;11343:5;:14;;;11358:1;11343:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;11334:67:138;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;11411:61;11428:5;:14;;;11443:1;11428:17;;;;;;;;:::i;:::-;;;;;;;11420:26;;;;;;;;:::i;:::-;11448:1;11411:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;11546:6:138;;:50;;-1:-1:-1;;;11546:50:138;;11522:6;;-1:-1:-1;;;;;11546:6:138;;:32;;:50;;11579:5;;11522:6;;11546:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11546:50:138;;;;;;;;;;;;:::i;:::-;11538:58;;11607:74;11625:5;:13;;;11639:1;11625:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11607:74:138;11643:9;-1:-1:-1;;;;;11607:74:138;11654:4;11607:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;11691:59;11700:5;:13;;;11714:1;11700:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;11691:59:138;11718:9;-1:-1:-1;;;;;11691:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;11760:67;11769:5;:14;;;11784:1;11769:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;11760:67:138;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;11837:61;11854:5;:14;;;11869:1;11854:17;;;;;;;;:::i;:::-;;;;;;;11846:26;;;;;;;;:::i;:::-;11874:1;11837:61;;;;;;;;;;;;;;;;;:8;:61::i;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3882:353:138;3969:16;;;3983:1;3969:16;;;;;;;;;3929:22;;3969:16;;;;;;;;;;;-1:-1:-1;;3995:57:138;;-1:-1:-1;;;3995:57:138;;-1:-1:-1;;;3995:57:138;;;26796:52:147;3961:24:138;;-1:-1:-1;;;;;;;;;;;;3995:15:138;;;26769:18:147;;3995:57:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4062:6:138;;:44;;-1:-1:-1;;;4062:44:138;;-1:-1:-1;;;;;4062:6:138;;;;-1:-1:-1;4062:31:138;;-1:-1:-1;4062:44:138;;4094:5;;4101:4;;4062:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4062:44:138;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4116:57:138;;-1:-1:-1;;;4116:57:138;;-1:-1:-1;;;4116:57:138;;;26796:52:147;-1:-1:-1;;;;;;;;;;;4116:15:138;;;26769:18:147;;4116:57:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4183:6:138;;:45;;-1:-1:-1;;;4183:45:138;;-1:-1:-1;;;;;4183:6:138;;;;-1:-1:-1;4183:32:138;;-1:-1:-1;4183:45:138;;4216:5;;4223:4;;4183:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4183:45:138;;;;;;;;;;;;:::i;:::-;;3919:316;3882:353::o;12928:205:135:-;13006:6;;13037:12;13048:1;13037:12;;;;:::i;:::-;13024:25;;13073:1;13064:6;:10;;;:33;;13095:2;13064:33;;;13077:11;;;;:2;:11;:::i;:::-;:15;;13091:1;13077:15;:::i;:::-;13059:38;;13115:11;:2;:9;:11::i;:::-;13108:18;12928:205;-1:-1:-1;;;;;12928:205:135:o;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10779:1171:135;11008:13;11024:6;-1:-1:-1;;;;;11024:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11008:34;;11052:13;11068:6;-1:-1:-1;;;;;11068:16:135;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11052:34;;11097:36;11110:6;11119:4;11125:7;11097:4;:36::i;:::-;11143;11156:6;11165:4;11171:7;11143:4;:36::i;:::-;11190:13;11206:28;11219:6;11227;11206:12;:28::i;:::-;11190:44;;11245:40;11302:5;11288:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11288:20:135;;11245:63;;11324:9;11319:412;11339:5;11335:1;:9;11319:412;;;11365:9;11377:26;11383:8;11393:1;11396:6;11377:5;:26::i;:::-;11365:38;;11418:15;11442:8;11436:14;;:2;:14;;;;:28;;;;;11463:1;11454:6;:10;;;11436:28;:74;;11509:1;11436:74;;;11467:39;11468:28;;;;335:4:102;11468:28:135;:::i;:::-;11467:37;:39::i;:::-;11418:92;;11524:15;11548:8;11542:14;;:2;:14;;;;:28;;;;;11569:1;11560:6;:10;;;11542:28;:74;;11615:1;11542:74;;;11573:39;11574:28;;;;335:4:102;11574:28:135;:::i;11573:39::-;11524:92;;11660:60;11697:8;11707;11717:2;11660:36;:60::i;:::-;11631:23;11655:1;11631:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11351:380;;;11346:3;;;;:::i;:::-;;;11319:412;;;-1:-1:-1;11741:19:135;;-1:-1:-1;;;11741:19:135;;-1:-1:-1;;;;;28365:55:147;;11741:19:135;;;28347:74:147;-1:-1:-1;;;;;;;;;;;11741:13:135;;;28320:18:147;;11741:19:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11770:41:135;;-1:-1:-1;;;11770:41:135;;-1:-1:-1;;;;;28624:55:147;;;11770:41:135;;;28606:74:147;28696:18;;;28689:34;;;11770:15:135;;;-1:-1:-1;11770:15:135;;-1:-1:-1;28579:18:147;;11770:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11821:41:135;;-1:-1:-1;;;11821:41:135;;-1:-1:-1;;;;;28624:55:147;;;11821:41:135;;;28606:74:147;28696:18;;;28689:34;;;11821:15:135;;;;;28579:18:147;;11821:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11872:12:135;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11897:6;-1:-1:-1;;;;;11897:11:135;;11909:2;11913:23;11938:4;11897:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11897:46:135;;;;;;;;;;;;:::i;:::-;;;;10998:952;;;;10779:1171;;;;;;;;:::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13139:134:135;13240:7;;:26;;-1:-1:-1;;;13240:26:135;;30634:6:147;30622:19;;13240:26:135;;;30604:38:147;13198:11:135;;-1:-1:-1;;;;;13240:7:135;;:17;;30577:18:147;;13240:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13221:45;13139:134;-1:-1:-1;;;;;;;;;13139:134:135:o;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;28606:74:147;;;1398:17:2;28696:18:147;;;28689:34;1428:1:2;;1377:7;;28579:18:147;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;6174:1895:138:-;6318:16;;;6332:1;6318:16;;;;;;;;6293:22;;6318:16;;;;;;;;;;-1:-1:-1;6318:16:138;6293:41;;6363:7;;;;;;;;;-1:-1:-1;;;;;6363:7:138;6344:5;6350:1;6344:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;6344:27:138;;;:8;;;;;;;;;;:27;;;;6400:4;6381:8;;6400:4;;;6381:5;;6400:4;;6381:8;;;;;;:::i;:::-;-1:-1:-1;;;;;6381:24:138;;;:8;;;;;;;;;:24;6505:6;;:48;;-1:-1:-1;;;6505:48:138;;6461:4;;6442:16;;6505:6;;:31;;:48;;6537:5;;6461:4;;6505:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6505:48:138;;;;;;;;;;;;:::i;:::-;6475:78;;6564:57;6573:5;:13;;;6587:1;6573:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6564:57:138;6591:8;-1:-1:-1;;;;;6564:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;6631;6640:5;:13;;;6654:1;6640:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6631:57:138;6658:8;-1:-1:-1;;;;;6631:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;6698:66;6707:5;:14;;;6722:1;6707:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;6698:66:138;;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;6774:60;6791:5;:14;;;6806:1;6791:17;;;;;;;;:::i;:::-;;;;;;;6783:26;;;;;;;;:::i;:::-;6811:1;6774:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;6906:6;;:48;;-1:-1:-1;;;6906:48:138;;6882:6;;-1:-1:-1;;;;;;6906:6:138;;;;:31;;:48;;6938:5;;6882:6;;6906:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6906:48:138;;;;;;;;;;;;:::i;:::-;6898:56;;6965:57;6974:5;:13;;;6988:1;6974:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6965:57:138;6992:8;-1:-1:-1;;;;;6965:57:138;;;;;;;;;;;;;;;;;;:8;:57::i;:::-;7032:72;7050:5;:13;;;7064:1;7050:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7032:72:138;7068:8;-1:-1:-1;;;;;7032:72:138;7078:4;7032:72;;;;;;;;;;;;;;;;;:17;:72::i;:::-;7114:51;7123:5;:14;;;7138:1;7123:17;;;;;;;;:::i;:::-;;;;;;;7142:1;7114:51;;;;;;;;;;;;;;;;;:8;:51::i;:::-;7175:60;7192:5;:14;;;7207:1;7192:17;;;;;;;;:::i;:::-;;;;;;;7184:26;;;;;;;;:::i;:::-;7212:1;7175:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;7315:6;;:50;;-1:-1:-1;;;7315:50:138;;7293:4;;-1:-1:-1;;;;;7315:6:138;;:32;;:50;;7348:5;;7293:4;;7315:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7315:50:138;;;;;;;;;;;;:::i;:::-;7307:58;;7376;7385:5;:13;;;7399:1;7385:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7376:58:138;7403:9;-1:-1:-1;;;;;7376:58:138;;;;;;;;;;;;;;;;;;:8;:58::i;:::-;7444:59;7453:5;:13;;;7467:1;7453:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7444:59:138;7471:9;-1:-1:-1;;;;;7444:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;7513:67;7522:5;:14;;;7537:1;7522:17;;;;;;;;:::i;:::-;;;;;;;1340:2:135;7513:67:138;;;;;;;;;;;;;;;;;;;:8;:67::i;:::-;7590:61;7607:5;:14;;;7622:1;7607:17;;;;;;;;:::i;:::-;;;;;;;7599:26;;;;;;;;:::i;:::-;7627:1;7590:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;-1:-1:-1;7725:6:138;;:50;;-1:-1:-1;;;7725:50:138;;7701:6;;-1:-1:-1;;;;;7725:6:138;;:32;;:50;;7758:5;;7701:6;;7725:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7725:50:138;;;;;;;;;;;;:::i;:::-;7717:58;;7786:74;7804:5;:13;;;7818:1;7804:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7786:74:138;7822:9;-1:-1:-1;;;;;7786:74:138;7833:4;7786:74;;;;;;;;;;;;;;;;;:17;:74::i;:::-;7870:59;7879:5;:13;;;7893:1;7879:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7870:59:138;7897:9;-1:-1:-1;;;;;7870:59:138;;;;;;;;;;;;;;;;;;:8;:59::i;:::-;7939:52;7948:5;:14;;;7963:1;7948:17;;;;;;;;:::i;:::-;;;;;;;7967:1;7939:52;;;;;;;;;;;;;;;;;:8;:52::i;:::-;8001:61;8018:5;:14;;;8033:1;8018:17;;;;;;;;:::i;:::-;;;;;;;8010:26;;;;;;;;:::i;:::-;8038:1;8001:61;;;;;;;;;;;;;;;;;:8;:61::i;11956:792:135:-;335:4:102;12177:13:135;:36;;12169:73;;;;-1:-1:-1;;;12169:73:135;;31985:2:147;12169:73:135;;;31967:21:147;32024:2;32004:18;;;31997:30;32063:26;32043:18;;;32036:54;32107:18;;12169:73:135;;;;;;;;;12253:13;12269:28;12282:6;12290;12269:12;:28::i;:::-;12253:44;;12308:20;12345:5;12331:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12331:20:135;;12308:43;;12361:24;12402:5;12388:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12388:20:135;;12361:47;;12424:9;12419:253;12439:5;12435:1;:9;12419:253;;;12465:9;12477:26;12483:8;12493:1;12496:6;12477:5;:26::i;:::-;12529;;-1:-1:-1;;;12529:26:135;;-1:-1:-1;;;;;32327:55:147;;;12529:26:135;;;32309:74:147;32431:8;32419:21;;32399:18;;;32392:49;12465:38:135;;-1:-1:-1;12517:9:135;;12529:16;;;;;32282:18:147;;12529:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12517:38;;12579:2;12570:11;;:3;12574:1;12570:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12608:53;:1;12626:13;335:4:102;12608:17:135;:53::i;:::-;12595:7;12603:1;12595:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12451:221;;12446:3;;;;:::i;:::-;;;12419:253;;;-1:-1:-1;12682:14:135;;-1:-1:-1;;;12682:14:135;;-1:-1:-1;;;;;28365:55:147;;12682:14:135;;;28347:74:147;-1:-1:-1;;;;;;;;;;;12682:8:135;;;28320:18:147;;12682:14:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;-1:-1:-1;;;12706:35:135;;-1:-1:-1;;;;;12706:11:135;;;-1:-1:-1;12706:11:135;;-1:-1:-1;12706:35:135;;12718:4;;12724:2;;12728:3;;12733:7;;12706:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12706:35:135;;;;;;;;;;;;:::i;:::-;;12159:589;;;11956:792;;;;;;;:::o;2821:3507::-;2863:7;:45;;;;;;;;;;-1:-1:-1;;;;;2863:45:135;2969:7;;;;2961:28;-1:-1:-1;2961:33:135;2957:118;;3026:7;;3044:13;;-1:-1:-1;;;;;;;;;;;3010:7:135;;;3026;;;;-1:-1:-1;;;;;3026:7:135;;3044:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3036:27:135;;;;;;;;;;;;;;;;;;;;;;;;3010:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2957:118;3130:1;3116:16;;;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3116:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3109:4:135;:23;;-1:-1:-1;;;;;;3109:23:135;-1:-1:-1;;;;;3109:23:135;;;;;;;;;;3149:16;;3163:1;;3149:16;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3149:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3142:4:135;:23;;-1:-1:-1;;;;;;3142:23:135;-1:-1:-1;;;;;3142:23:135;;;;;;;;;;3182:16;;3196:1;;3182:16;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3182:16:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3175:4:135;:23;;-1:-1:-1;;;;;;3175:23:135;-1:-1:-1;;;;;3175:23:135;;;;;;;;;;3215:17;;3229:2;;3215:17;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3215:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3208:4:135;:24;;-1:-1:-1;;;;;;3208:24:135;-1:-1:-1;;;;;3208:24:135;;;;;;;;;;3249:17;;3263:2;;3249:17;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3249:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3242:4:135;:24;;-1:-1:-1;;;;;;3242:24:135;-1:-1:-1;;;;;3242:24:135;;;;;;;;;;3282:17;;3296:2;;3282:17;;;:::i;:::-;34036:4:147;34024:17;;;34006:36;;33994:2;33979:18;3282:17:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3276:3:135;:23;;-1:-1:-1;;;;;;3276:23:135;-1:-1:-1;;;;;3276:23:135;;;;;;;;;;3320:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3309:8:135;:37;;-1:-1:-1;;;;;;3309:37:135;-1:-1:-1;;;;;3309:37:135;;;;;;3397:7;;3380:37;;;-1:-1:-1;;;3380:37:135;;3309;3397:7;;;;;;3380:37;;;34664:74:147;34754:18;;;34747:30;;;;34813:1;34793:18;;;34786:29;34851:9;34831:18;;;34824:37;-1:-1:-1;;;;;;;;;;;3380:8:135;;;34878:19:147;;3380:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3444:4:135;;3427:31;;;-1:-1:-1;;;3427:31:135;;-1:-1:-1;;;;;3444:4:135;;;3427:31;;;;35120:74:147;;;;35210:18;;;35203:30;;;;35249:18;;;35242:29;-1:-1:-1;;;35287:18:147;;;35280:34;-1:-1:-1;;;;;;;;;;;3427:8:135;-1:-1:-1;3427:8:135;;-1:-1:-1;35331:19:147;;3427:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3485:4:135;;3468:31;;;-1:-1:-1;;;3468:31:135;;-1:-1:-1;;;;;3485:4:135;;;3468:31;;;;35573:74:147;;;;35663:18;;;35656:30;;;;35702:18;;;35695:29;-1:-1:-1;;;35740:18:147;;;35733:34;-1:-1:-1;;;;;;;;;;;3468:8:135;-1:-1:-1;3468:8:135;;-1:-1:-1;35784:19:147;;3468:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3526:4:135;;3509:31;;;-1:-1:-1;;;3509:31:135;;-1:-1:-1;;;;;3526:4:135;;;3509:31;;;;36026:74:147;;;;36116:18;;;36109:30;;;;36155:18;;;36148:29;-1:-1:-1;;;36193:18:147;;;36186:34;-1:-1:-1;;;;;;;;;;;3509:8:135;-1:-1:-1;3509:8:135;;-1:-1:-1;36237:19:147;;3509:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3567:4:135;;3550:31;;;-1:-1:-1;;;3550:31:135;;-1:-1:-1;;;;;3567:4:135;;;3550:31;;;;36479:74:147;;;;36569:18;;;36562:30;;;;36608:18;;;36601:29;-1:-1:-1;;;36646:18:147;;;36639:34;-1:-1:-1;;;;;;;;;;;3550:8:135;-1:-1:-1;3550:8:135;;-1:-1:-1;36690:19:147;;3550:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3608:4:135;;3591:31;;;-1:-1:-1;;;3591:31:135;;-1:-1:-1;;;;;3608:4:135;;;3591:31;;;;36932:74:147;;;;37022:18;;;37015:30;;;;37061:18;;;37054:29;-1:-1:-1;;;37099:18:147;;;37092:34;-1:-1:-1;;;;;;;;;;;3591:8:135;-1:-1:-1;3591:8:135;;-1:-1:-1;37143:19:147;;3591:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3649:3:135;;;3632:29;;;-1:-1:-1;;;3632:29:135;;-1:-1:-1;;;;;3649:3:135;;;3632:29;;;37385:74:147;37475:18;;;37468:30;;;;37534:1;37514:18;;;37507:29;-1:-1:-1;;;37552:18:147;;;37545:33;-1:-1:-1;;;;;;;;;;;3632:8:135;-1:-1:-1;3632:8:135;;-1:-1:-1;37595:19:147;;3632:29:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3688:8:135;;3671:39;;;-1:-1:-1;;;3671:39:135;;-1:-1:-1;;;;;3688:8:135;;;3671:39;;;37837:74:147;37927:18;;;37920:30;37986:1;37966:18;;;37959:29;38024:10;38004:18;;;37997:38;-1:-1:-1;;;;;;;;;;;3671:8:135;-1:-1:-1;3671:8:135;;-1:-1:-1;38052:19:147;;3671:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3753:8:135;:67;;-1:-1:-1;;;;;;3753:67:135;;;335:42:137;3753:67:135;;;;3830:9;:70;;;;;240:42:137;3830:70:135;;;-1:-1:-1;;3961:15:135;;3753:8;;3961:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3937:39;;4054:11;4068:3;4014:62;;;;;:::i;:::-;-1:-1:-1;;;;;38408:15:147;;;38390:34;;38460:15;;38455:2;38440:18;;38433:43;38512:2;38507;38492:18;;38485:30;;;-1:-1:-1;38531:18:147;;;38524:29;38585:3;38570:19;4014:62:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3986:7:135;:92;;-1:-1:-1;;;;;;3986:92:135;-1:-1:-1;;;;;3986:92:135;;;;;;;;;4118:40;;-1:-1:-1;;3986:92:135;4118:40;;;:::i;:::-;-1:-1:-1;;;;;28365:55:147;;;28347:74;;28335:2;28320:18;4118:40:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4266:7:135;;4194:81;;4088:70;;-1:-1:-1;4088:70:135;;4253:3;;-1:-1:-1;;;;;4266:7:135;;4194:81;;;:::i;:::-;-1:-1:-1;;;;;39140:15:147;;;39122:34;;39192:15;;;39187:2;39172:18;;39165:43;39244:15;;;39239:2;39224:18;;39217:43;39049:2;39034:18;4194:81:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4168:23:135;:107;;-1:-1:-1;;;;;;4168:107:135;-1:-1:-1;;;;;4168:107:135;;;;;;;;;4285:7;;:85;;-1:-1:-1;;;4285:85:135;;4304:3;39597:15:147;;4285:85:135;;;39579:34:147;;;39629:18;;;39622:43;1892:4:135;39681:18:147;;;39674:34;39724:18;;;39717:43;;;;4285:7:135;;;;:18;;39490:19:147;;4285:85:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4412:7:135;;4401:19;;-1:-1:-1;;;;;4412:7:135;;;;-1:-1:-1;4401:19:135;;-1:-1:-1;4401:19:135;:::i;:::-;-1:-1:-1;;;;;28365:55:147;;;28347:74;;28335:2;28320:18;4401:19:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4380:18:135;:40;;-1:-1:-1;;;;;;4380:40:135;-1:-1:-1;;;;;4380:40:135;;;;;;;;;;4456:30;:28;:30::i;:::-;4496:42;1340:2;4496:24;:42::i;:::-;4609:7;;4618:9;;4646:7;;4596:60;;4574:19;;-1:-1:-1;;;;;4609:7:135;;;;4618:9;;;4609:7;4646;;;;4596:60;;;:::i;:::-;-1:-1:-1;;;;;39140:15:147;;;39122:34;;39192:15;;;39187:2;39172:18;;39165:43;39244:15;;;39239:2;39224:18;;39217:43;39049:2;39034:18;4596:60:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4758:39:135;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4758:39:135;-1:-1:-1;;;4758:39:135;;;4700:98;;4574:82;;-1:-1:-1;4574:82:135;;4753:3;;4758:39;4700:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4666:6:135;:135;;-1:-1:-1;;;;;;4666:135:135;-1:-1:-1;;;;;4666:135:135;;;;;;;;;4880:9;;4912:7;;4846:113;;4880:9;;;;4912:7;;4666:135;4846:113;;;:::i;:::-;-1:-1:-1;;;;;39140:15:147;;;39122:34;;39192:15;;;39187:2;39172:18;;39165:43;39244:15;;;39239:2;39224:18;;39217:43;39049:2;39034:18;4846:113:135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4837:6:135;:122;;-1:-1:-1;;;;;;4837:122:135;-1:-1:-1;;;;;4837:122:135;;;;;;5023:6;;5006:35;;;-1:-1:-1;;;5006:35:135;;5023:6;;;;5006:35;;;41574:74:147;41664:18;;;41657:30;;;;41723:1;41703:18;;;41696:29;41761:8;41741:18;;;41734:36;-1:-1:-1;;;;;;;;;;;5006:8:135;;;41787:19:147;;5006:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5068:6:135;;5051:35;;;-1:-1:-1;;;5051:35:135;;-1:-1:-1;;;;;5068:6:135;;;5051:35;;;42029:74:147;42119:18;;;42112:30;42178:1;42158:18;;;42151:29;42216:8;42196:18;;;42189:36;-1:-1:-1;;;;;;;;;;;5051:8:135;-1:-1:-1;5051:8:135;;-1:-1:-1;42242:19:147;;5051:35:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5113:7:135;;5096:37;;;-1:-1:-1;;;5096:37:135;;-1:-1:-1;;;;;5113:7:135;;;5096:37;;;42484:74:147;42574:18;;;42567:30;42633:1;42613:18;;;42606:29;42671:9;42651:18;;;42644:37;-1:-1:-1;;;;;;;;;;;5096:8:135;-1:-1:-1;5096:8:135;;-1:-1:-1;42698:19:147;;5096:37:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5160:18:135;;5143:59;;;-1:-1:-1;;;5143:59:135;;-1:-1:-1;;;;;5160:18:135;;;5143:59;;;42940:74:147;43030:18;;;43023:30;43089:2;43069:18;;;43062:30;43128:20;43108:18;;;43101:48;-1:-1:-1;;;;;;;;;;;5143:8:135;-1:-1:-1;5143:8:135;;-1:-1:-1;43166:19:147;;5143:59:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5253:8:135;;5236:39;;;-1:-1:-1;;;5236:39:135;;-1:-1:-1;;;;;5253:8:135;;;5236:39;;;43408:74:147;43498:18;;;43491:30;43557:1;43537:18;;;43530:29;43595:10;43575:18;;;43568:38;-1:-1:-1;;;;;;;;;;;5236:8:135;-1:-1:-1;5236:8:135;;-1:-1:-1;43623:19:147;;5236:39:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5302:9:135;;5285:41;;;-1:-1:-1;;;5285:41:135;;-1:-1:-1;;;;;5302:9:135;;;5285:41;;;43865:74:147;43955:18;;;43948:30;44014:1;43994:18;;;43987:29;44052:11;44032:18;;;44025:39;-1:-1:-1;;;;;;;;;;;5285:8:135;-1:-1:-1;5285:8:135;;-1:-1:-1;44081:19:147;;5285:41:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5374:7:135;;5398:8;;5374:53;;-1:-1:-1;;;5374:53:135;;-1:-1:-1;;;;;5398:8:135;;;5374:53;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5374:7:135;;;;;;-1:-1:-1;5374:15:135;;-1:-1:-1;28579:18:147;;5374:53:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5437:4:135;;5458:8;;5437:50;;-1:-1:-1;;;5437:50:135;;-1:-1:-1;;;;;5458:8:135;;;5437:50;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5437:4:135;;;:12;;28579:18:147;;5437:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5497:4:135;;5518:8;;5497:50;;-1:-1:-1;;;5497:50:135;;-1:-1:-1;;;;;5518:8:135;;;5497:50;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5497:4:135;;;:12;;28579:18:147;;5497:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5557:4:135;;5578:8;;5557:50;;-1:-1:-1;;;5557:50:135;;-1:-1:-1;;;;;5578:8:135;;;5557:50;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5557:4:135;;;:12;;28579:18:147;;5557:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5617:4:135;;5638:8;;5617:50;;-1:-1:-1;;;5617:50:135;;-1:-1:-1;;;;;5638:8:135;;;5617:50;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5617:4:135;;;:12;;28579:18:147;;5617:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5677:4:135;;5698:8;;5677:50;;-1:-1:-1;;;5677:50:135;;-1:-1:-1;;;;;5698:8:135;;;5677:50;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5677:4:135;;;:12;;28579:18:147;;5677:50:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5737:3:135;;;5757:8;;5737:49;;-1:-1:-1;;;5737:49:135;;-1:-1:-1;;;;;5757:8:135;;;5737:49;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;;;;5737:3:135;;:11;;28579:18:147;;5737:49:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5796:8:135;;5821;;5796:54;;-1:-1:-1;;;5796:54:135;;-1:-1:-1;;;;;5821:8:135;;;5796:54;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5796:8:135;;;:16;;28579:18:147;;5796:54:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5861:7:135;;5885:6;;5861:51;;-1:-1:-1;;;5861:51:135;;-1:-1:-1;;;;;5885:6:135;;;5861:51;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5861:7:135;;;;;;:15;;28579:18:147;;5861:51:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5922:4:135;;5943:6;;5922:48;;-1:-1:-1;;;5922:48:135;;-1:-1:-1;;;;;5943:6:135;;;5922:48;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5922:4:135;;;:12;;28579:18:147;;5922:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5980:4:135;;6001:6;;5980:48;;-1:-1:-1;;;5980:48:135;;-1:-1:-1;;;;;6001:6:135;;;5980:48;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;5980:4:135;;;:12;;28579:18:147;;5980:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6038:4:135;;6059:6;;6038:48;;-1:-1:-1;;;6038:48:135;;-1:-1:-1;;;;;6059:6:135;;;6038:48;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;6038:4:135;;;:12;;28579:18:147;;6038:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6096:4:135;;6117:6;;6096:48;;-1:-1:-1;;;6096:48:135;;-1:-1:-1;;;;;6117:6:135;;;6096:48;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;6096:4:135;;;:12;;28579:18:147;;6096:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6154:4:135;;6175:6;;6154:48;;-1:-1:-1;;;6154:48:135;;-1:-1:-1;;;;;6175:6:135;;;6154:48;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;6154:4:135;;;:12;;28579:18:147;;6154:48:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6212:3:135;;;6232:6;;6212:47;;-1:-1:-1;;;6212:47:135;;-1:-1:-1;;;;;6232:6:135;;;6212:47;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;;;;6212:3:135;;:11;;28579:18:147;;6212:47:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6269:8:135;;6294:6;;6269:52;;-1:-1:-1;;;6269:52:135;;-1:-1:-1;;;;;6294:6:135;;;6269:52;;;28606:74:147;-1:-1:-1;;28696:18:147;;;28689:34;6269:8:135;;;:16;;28579:18:147;;6269:52:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;8506:1036:135:-;8711:56;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8711:56:135;8780:20;8802:30;8834;8866:17;8899:52;8915:9;8926:7;8935:10;8947:3;8899:15;:52::i;:::-;8779:172;;;;;;;;8984:551;;;;;;;;9036:6;-1:-1:-1;;;;;8984:551:135;;;;;9064:6;-1:-1:-1;;;;;8984:551:135;;;;;1340:2;8984:551;;;;;;9132:9;8984:551;;;;9164:9;8984:551;;;;9199:1;8984:551;;;;9226:1;8984:551;;;;9258:7;8984:551;;;;;;9291:1;8984:551;;;;9316:30;9338:7;9316:3;:21;;:30;;;;:::i;:::-;8984:551;;;;;;;;;;;;;;-1:-1:-1;;;;;9448:3:135;8984:551;;;;;;;;;;;;;9502:22;:15;9520:4;9502:22;:::i;:::-;8984:551;;8962:573;8506:1036;-1:-1:-1;;;;;;;;;;;8506:1036:135:o;2386:134:2:-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2386:134;;;:::o;18636:288::-;18862:55;;-1:-1:-1;;;18862:55:2;;-1:-1:-1;;;;;;;;;;;18862:20:2;;;:55;;18883:4;;18889:5;;18896:15;;18913:3;;18862:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18636:288;;;;:::o;3570:134::-;3668:29;;-1:-1:-1;;;3668:29:2;;-1:-1:-1;;;;;;;;;;;3668:11:2;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;13228:134::-;13326:29;;-1:-1:-1;;;13326:29:2;;-1:-1:-1;;;;;;;;;;;13326:11:2;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;12044:134::-;12142:29;;-1:-1:-1;;;12142:29:2;;-1:-1:-1;;;;;;;;;;;12142:11:2;;;:29;;12154:4;;12160:5;;12167:3;;12142:29;;;:::i;10208:135:117:-;10301:1;10282:20;;;;;10278:58;;10311:25;;-1:-1:-1;;;10311:25:117;;;;;;;;;;;10278:58;10208:135;;;:::o;8683:::-;8776:1;8757:20;;;;;8753:58;;8786:25;;-1:-1:-1;;;8786:25:117;;;;;;;;;;;1186:392:115;646:2;1370:29:114;;;;;703:2:115;1370:29:114;;;;;1355:45;1525:46:115;;;1355:45:114;;1525:46:115;1516:55;1186:392;-1:-1:-1;;;;1186:392:115:o;928:247:121:-;1019:14;1046:13;1061;1078:18;1091:1;1094;1078:12;:18::i;:::-;1045:51;;;;1114:54;1136:1;1139;1142:11;1155:5;1162;1114:21;:54::i;:::-;1107:61;928:247;-1:-1:-1;;;;;;928:247:121:o;6793:628:135:-;6864:7;;;;;-1:-1:-1;;;;;6864:7:135;6856:30;6852:66;;6888:7;;6910;;6888:30;;-1:-1:-1;;;6888:30:135;;-1:-1:-1;;;;;6888:7:135;6910;;;;;6888:30;;;28347:74:147;6888:7:135;;;:21;;28320:18:147;;6888:30:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6852:66;6940:4;;-1:-1:-1;;;;;6940:4:135;6932:27;6928:60;;6961:7;;6983:4;;6961:27;;-1:-1:-1;;;6961:27:135;;-1:-1:-1;;;;;6983:4:135;;;6961:27;;;28347:74:147;6961:7:135;;;:21;;28320:18:147;;6961:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6928:60;7010:4;;-1:-1:-1;;;;;7010:4:135;7002:27;6998:60;;7031:7;;7053:4;;7031:27;;-1:-1:-1;;;7031:27:135;;-1:-1:-1;;;;;7053:4:135;;;7031:27;;;28347:74:147;7031:7:135;;;:21;;28320:18:147;;7031:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6998:60;7080:4;;-1:-1:-1;;;;;7080:4:135;7072:27;7068:60;;7101:7;;7123:4;;7101:27;;-1:-1:-1;;;7101:27:135;;-1:-1:-1;;;;;7123:4:135;;;7101:27;;;28347:74:147;7101:7:135;;;:21;;28320:18:147;;7101:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7068:60;7150:4;;-1:-1:-1;;;;;7150:4:135;7142:27;7138:60;;7171:7;;7193:4;;7171:27;;-1:-1:-1;;;7171:27:135;;-1:-1:-1;;;;;7193:4:135;;;7171:27;;;28347:74:147;7171:7:135;;;:21;;28320:18:147;;7171:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7138:60;7220:4;;-1:-1:-1;;;;;7220:4:135;7212:27;7208:60;;7241:7;;7263:4;;7241:27;;-1:-1:-1;;;7241:27:135;;-1:-1:-1;;;;;7263:4:135;;;7241:27;;;28347:74:147;7241:7:135;;;:21;;28320:18:147;;7241:27:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7208:60;7290:3;;-1:-1:-1;;;;;7290:3:135;7282:26;7278:58;;7310:7;;7332:3;;;7310:26;;-1:-1:-1;;;7310:26:135;;-1:-1:-1;;;;;7332:3:135;;;7310:26;;;28347:74:147;7310:7:135;;;:21;;28320:18:147;7310:26:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7278:58;7358:8;;-1:-1:-1;;;;;7358:8:135;7350:31;7346:68;;7383:7;;7405:8;;7383:31;;-1:-1:-1;;;7383:31:135;;-1:-1:-1;;;;;7405:8:135;;;7383:31;;;28347:74:147;7383:7:135;;;:21;;28320:18:147;;7383:31:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:422;7496:7;;:346;;-1:-1:-1;;;7496:346:135;;46485:6:147;46518:15;;7496:346:135;;;46500:34:147;1395:5:135;46550:18:147;;;46543:43;;;1455:2:135;46602:18:147;;;46595:43;1511:3:135;46654:18:147;;;46647:43;46706:19;;;46699:44;1639:6:135;46786:19:147;;;46779:44;1701:5:135;46839:19:147;;;46832:44;1774:7:135;46892:19:147;;;46885:44;7496:7:135;46945:19:147;;;46938:51;-1:-1:-1;;;;;7496:7:135;;;;:17;;46447:19:147;;7496:346:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:422;:::o;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;28365:55:147;;;27501:38:4;;;;28347:74:147;;;;27501:38:4;;;;;;;;;;28320:18:147;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;27748:414::-;27416:752;;27331:837;;;;:::o;9548:1225:135:-;9699:20;;;9821:17;9867:14;9880:1;9867:10;:14;:::i;:::-;:19;;9885:1;9867:19;9863:92;;9902:42;;-1:-1:-1;;;9902:42:135;;47680:2:147;9902:42:135;;;47662:21:147;;;47699:18;;;47692:30;47758:34;47738:18;;;47731:62;47810:18;;9902:42:135;47478:356:147;9863:92:135;9965:13;9981:14;9994:1;9981:10;:14;:::i;:::-;9965:30;;10025:10;10011:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10011:25:135;;10005:31;;10077:10;10063:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10063:25:135;;10047:41;;10128:10;10114:25;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10114:25:135;-1:-1:-1;10098:41:135;-1:-1:-1;10149:23:135;10198:10;:6;10207:1;10198:10;:::i;:::-;10175:34;;;;335:4:102;10175:34:135;:::i;:::-;10149:60;-1:-1:-1;10219:20:135;10255:10;:6;10264:1;10255:10;:::i;:::-;10242:24;;;;:9;:24;:::i;:::-;10219:47;;10282:9;10277:490;10297:10;10293:14;;:1;:14;10277:490;;;10373:7;10377:3;10373:1;:7;:::i;:::-;10368:13;;;;:1;:13;:::i;:::-;10357:7;10361:3;10357:1;:7;:::i;:::-;10347:18;;:6;:18;:::i;:::-;10337:28;;:7;:28;:::i;:::-;:44;;;;;;:::i;:::-;10328:3;10332:1;10328:6;;;;;;;;:::i;:::-;;;;;;:53;;;;;10405:6;10400:11;;:1;:11;10396:84;;10450:15;10431:13;10445:1;10431:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10396:84;10502:6;10497:11;;:1;:11;10493:264;;10547:15;10528:13;10542:1;10528:16;;;;;;;;:::i;:::-;;;;;;:34;;;;;10608:1;10593:12;:16;:149;;10741:1;10593:149;;;10632:86;230:3:102;10687:30:135;10709:3;10713:1;10709:6;;;;;;;;:::i;:::-;;;;;;;10687:14;:30::i;:::-;10632:12;;:86;:30;:86::i;:::-;10580:162;;;;:::i;:::-;;;10493:264;10309:3;;;;:::i;:::-;;;;10277:490;;;;9853:920;;;9548:1225;;;;;;;;;:::o;685:365:136:-;805:27;875:11;:18;862:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;862:32:136;;848:46;;909:9;904:140;928:11;:18;924:1;:22;904:140;;;1024:7;1016:16;;991:11;1003:1;991:14;;;;;;;;:::i;:::-;;;;;;;984:49;;;;:::i;:::-;967:11;979:1;967:14;;;;;;;;:::i;:::-;;;;;;;;;;:66;948:3;;;;:::i;:::-;;;;904:140;;;;685:365;;;;:::o;6192:547:121:-;6258:13;;-1:-1:-1;;6626:1:121;6623;6616:20;6665:1;6662;6658:9;6649:18;;6716:5;6712:2;6709:13;6701:5;6697:2;6693:14;6689:34;6680:43;;;6192:547;;;;;:::o;7180:3395::-;7330:14;7422:5;7431:1;7422:10;7418:3151;;7493:11;7485:5;:19;;;;;:::i;:::-;;7476:28;;7418:3151;;;7649:11;7640:5;:20;7636:66;;7669:33;;-1:-1:-1;;;7669:33:121;;;;;;;;;;;7636:66;7801:17;7936:11;7933:1;7930;7923:25;8515:1;8500:12;;:16;;8485:32;;8467:15;8916;;;8912:29;;;8908:37;;;8050:20;;;8039:32;;;9045:15;;;;8097:21;;8747:19;;;9036:24;;;;9431:1;8635:25;;;;9412:1;:15;;9411:21;;9675;;;9671:25;;9660:36;9748:21;;;9744:25;;9733:36;9822:21;;;9818:25;;9807:36;9896:21;;;9892:25;;9881:36;9970:21;;;9966:25;;9955:36;10045:21;;;10041:25;;;10030:36;;;10529:15;;;;;;-1:-1:-1;;;;7180:3395:121:o;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;13365:43;13259:156;-1:-1:-1;;;13259:156:9:o;13421:143::-;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;6489:146:135:-;6547:13;6580:48;6607:2;1340;6580:26;:48::i;4566:437:121:-;4662:14;4743:11;;;;;;;4841:19;4847:3;:12;;;4841:19;;;;;4932:64;;4743:1;;4957;:11;;4970;4743;4841:19;4932:21;:64::i;15439:1484:9:-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;4249:25:147;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;4222:18:147;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;28624:55:147;;16424:32:9;;;28606:74:147;28696:18;;;28689:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;28579:18:147;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;51450:55:147;;16587:43:9;;;51432:74:147;51522:18;;;51515:34;;;;51565:18;;;51558:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;51405:18:147;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;51450:55:147;;16769:41:9;;;51432:74:147;51522:18;;;51515:34;;;;51565:18;;;51558:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;51405:18:147;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;51805:2:147;16824:61:9;;;51787:21:147;51844:2;51824:18;;;51817:30;51883:34;51863:18;;;51856:62;51954:21;51934:18;;;51927:49;51993:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;51603:415:147;16720:176:9;16905:11;16911:4;16905:5;:11::i;784:217:108:-;858:13;595:6:102;1796:42:108;230:3:102;1796:42:108;;;;1795:72;-1:-1:-1;;;1777:90:108;2157:11;;;-1:-1:-1;;2150:35:108;976:18;1777:90;2150:35;976:8;:18::i;953:236:9:-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;4085:3600:120:-;4142:14;4168:11;4189:12;4216:1;4221;4216:6;4212:34;;-1:-1:-1;;;;273:17:102;-1:-1:-1;4224:22:120;;-1:-1:-1;4224:22:120;4212:34;-1:-1:-1;4288:1:120;4315;4305:12;;4302:109;;;4383:14;;;4348:1;4344:12;4302:109;4442:8;4435:4;:15;4431:3060;;;-1:-1:-1;;;273:17:102;-1:-1:-1;4546:1:120;-1:-1:-1;;;;;4567:41:120;;4564:161;;;4693:14;;;-1:-1:-1;;4642:20:120;4564:161;4756:3;4750:4;4746:14;4743:62;;;4782:20;;;4777:3;4773:30;;4743:62;4842:21;;4837:3;4833:31;4894:3;4884:14;;4881:62;;;4920:20;;;4915:3;4911:30;;4881:62;4980:21;;4975:3;4971:31;5032:3;5022:14;;5019:62;;;5058:20;;;5053:3;5049:30;;5019:62;5118:21;;5113:3;5109:31;5170:3;5160:14;;5157:62;;;5196:20;;;5191:3;5187:30;;5157:62;5256:21;;5251:3;5247:31;5308:4;5298:15;;5295:63;;;5335:20;;;5330:3;5326:30;;5295:63;5395:21;;5390:3;5386:31;5447:4;5437:15;;5434:63;;;5474:20;;;5469:3;5465:30;;5434:63;5534:21;;5529:3;5525:31;5586:4;5576:15;;5573:63;;;5613:20;;;5608:3;5604:30;;5573:63;5673:21;;5668:3;5664:31;;;;5715:15;;5712:63;;;5752:20;;;5747:3;5743:30;;5712:63;5812:21;;5807:3;5803:31;5864:5;5854:16;;5851:64;;;5892:20;;;5887:3;5883:30;;5851:64;5952:21;;5947:3;5943:31;6004:5;5994:16;;5991:64;;;6032:20;;;6027:3;6023:30;;5991:64;6092:21;;6087:3;6083:31;6144:5;6134:16;;6131:64;;;6172:20;;;6167:3;6163:30;;6131:64;6232:21;;6227:3;6223:31;6284:5;6274:16;;6271:64;;;6312:20;;;6307:3;6303:30;;6271:64;6372:21;;6367:3;6363:31;6424:6;6414:17;;6411:65;;;6453:20;;;6448:3;6444:30;;6411:65;6513:21;;6508:3;6504:31;6565:6;6555:17;;6552:65;;;6594:20;;;6589:3;6585:30;;6552:65;6654:21;;6649:3;6645:31;6706:6;6696:17;;6693:65;;;6735:20;;;6730:3;6726:30;;6693:65;6795:21;;6790:3;6786:31;6847:6;6837:17;;6834:65;;;6876:20;;;6871:3;6867:30;;6834:65;6936:21;;6931:3;6927:31;6988:7;6978:18;;6975:66;;;7018:20;;;7013:3;7009:30;;6975:66;7078:21;;7073:3;7069:31;7130:7;7120:18;;7117:66;;;7160:20;;;7155:3;7151:30;;7117:66;7220:21;;7215:3;7211:31;7272:7;7262:18;;7259:66;;;7302:20;;;7297:3;7293:30;;7259:66;7362:21;;7357:3;7353:31;7414:7;7404:18;;7401:66;;;7444:20;;;7439:3;7435:30;;7401:66;;4431:3060;7561:6;7571:1;7561:11;7557:59;;7581:35;;-1:-1:-1;;;7581:35:120;;;;;52584:25:147;;;52625:18;;;52618:34;;;52557:18;;7581:35:120;52412:246:147;7557:59:120;7634:6;:44;;7672:6;7634:44;;;7643:26;7663:6;-1:-1:-1;;7643:26:120;:::i;11187:393:9:-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;4249:2493;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;28365:55:147;;4911:25:9;;;28347:74:147;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;28320:18:147;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;53484:2:147;4984:74:9;;;53466:21:147;53503:18;;;53496:30;;;;53562:34;53542:18;;;53535:62;53633:34;53613:18;;;53606:62;53685:19;;4984:74:9;53282:428:147;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;28624:55:147;;;;28606:74;;28711:2;28696:18;;28689:34;28594:2;28579:18;;28432:297;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;28624:55:147;;;28606:74;;28696:18;;;28689:34;28579:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;53962:55:147;;;53944:74;;-1:-1:-1;;;;;;54054:33:147;;;54034:18;;;54027:61;;;;54104:18;;;54097:34;54162:2;54147:18;;54140:34;53931:3;53916:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;54387:2:147;6418:171:9;;;54369:21:147;54426:2;54406:18;;;54399:30;54465:34;54445:18;;;54438:62;54536:17;54516:18;;;54509:45;54571:19;;6418:171:9;54185:411:147;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;28606:74:147;;;;28696:18;;;28689:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;28579:18:147;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;51432:74:147;;;;51522:18;;;51515:34;;;51565:18;;;51558:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;51405:18:147;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;51432:74:147;;;;51522:18;;;51515:34;;;51565:18;;;51558:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;51405:18:147;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;28606:74:147;;;;28696:18;;;28689:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;28579:18:147;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;51432:74:147;;;;51522:18;;;51515:34;;;51565:18;;;51558:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;51405:18:147;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;51432:74:147;;;;51522:18;;;51515:34;;;51565:18;;;51558:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;51405:18:147;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:147:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:147;;209:43;;199:71;;266:1;263;256:12;629:484;682:3;720:5;714:12;747:6;742:3;735:19;773:4;802:2;797:3;793:12;786:19;;839:2;832:5;828:14;860:1;870:218;884:6;881:1;878:13;870:218;;;949:13;;-1:-1:-1;;;;;945:62:147;933:75;;1028:12;;;;1063:15;;;;906:1;899:9;870:218;;;-1:-1:-1;1104:3:147;;629:484;-1:-1:-1;;;;;629:484:147:o;1118:261::-;1297:2;1286:9;1279:21;1260:4;1317:56;1369:2;1358:9;1354:18;1346:6;1317:56;:::i;1384:250::-;1469:1;1479:113;1493:6;1490:1;1487:13;1479:113;;;1569:11;;;1563:18;1550:11;;;1543:39;1515:2;1508:10;1479:113;;;-1:-1:-1;;1626:1:147;1608:16;;1601:27;1384:250::o;1639:271::-;1681:3;1719:5;1713:12;1746:6;1741:3;1734:19;1762:76;1831:6;1824:4;1819:3;1815:14;1808:4;1801:5;1797:16;1762:76;:::i;:::-;1892:2;1871:15;-1:-1:-1;;1867:29:147;1858:39;;;;1899:4;1854:50;;1639:271;-1:-1:-1;;1639:271:147:o;1915:1765::-;2148:2;2200:21;;;2270:13;;2173:18;;;2292:22;;;2119:4;;2148:2;2333;;2351:18;;;;2388:1;2431:15;;;2416:31;;2412:40;;2475:15;;;2119:4;;2539:1112;2555:6;2550:3;2547:15;2539:1112;;;-1:-1:-1;;2624:22:147;;;2620:36;2608:49;;2680:13;;2767:9;;-1:-1:-1;;;;;2763:58:147;2748:74;;2861:11;;2855:18;2893:15;;;2886:27;;;2974:19;;2720:15;;;3006:24;;;3187:21;;;;3053:2;3135:17;;;3123:30;;3119:39;;;3077:15;;;;3232:1;3246:296;3262:8;3257:3;3254:17;3246:296;;;3368:2;3364:7;3355:6;3347;3343:19;3339:33;3332:5;3325:48;3400:42;3435:6;3424:8;3418:15;3400:42;:::i;:::-;3471:17;;;;3390:52;-1:-1:-1;3514:14:147;;;;3290:1;3281:11;3246:296;;;-1:-1:-1;;;3629:12:147;;;;3565:6;-1:-1:-1;;3594:15:147;;;;2581:1;2572:11;2539:1112;;;-1:-1:-1;3668:6:147;;1915:1765;-1:-1:-1;;;;;;;;;;1915:1765:147:o;3685:156::-;3751:20;;3811:4;3800:16;;3790:27;;3780:55;;3831:1;3828;3821:12;3846:252;3910:6;3918;3971:2;3959:9;3950:7;3946:23;3942:32;3939:52;;;3987:1;3984;3977:12;3939:52;4010:27;4027:9;4010:27;:::i;:::-;4000:37;;4056:36;4088:2;4077:9;4073:18;4056:36;:::i;:::-;4046:46;;3846:252;;;;;:::o;4285:461::-;4337:3;4375:5;4369:12;4402:6;4397:3;4390:19;4428:4;4457:2;4452:3;4448:12;4441:19;;4494:2;4487:5;4483:14;4515:1;4525:196;4539:6;4536:1;4533:13;4525:196;;;4604:13;;-1:-1:-1;;;;;;4600:40:147;4588:53;;4661:12;;;;4696:15;;;;4561:1;4554:9;4525:196;;4751:1185;4969:4;4998:2;5038;5027:9;5023:18;5068:2;5057:9;5050:21;5091:6;5126;5120:13;5157:6;5149;5142:22;5183:2;5173:12;;5216:2;5205:9;5201:18;5194:25;;5278:2;5268:6;5265:1;5261:14;5250:9;5246:30;5242:39;5316:2;5308:6;5304:15;5337:1;5347:560;5361:6;5358:1;5355:13;5347:560;;;5426:22;;;-1:-1:-1;;5422:36:147;5410:49;;5482:13;;5528:9;;5550:18;;;5595:48;5627:15;;;5528:9;5595:48;:::i;:::-;5684:11;;;5678:18;5733:19;;;5716:15;;;5709:44;5678:18;5581:62;-1:-1:-1;5776:51:147;5581:62;5678:18;5776:51;:::i;:::-;5885:12;;;;5766:61;-1:-1:-1;;;5850:15:147;;;;5383:1;5376:9;5347:560;;;-1:-1:-1;5924:6:147;;4751:1185;-1:-1:-1;;;;;;;;4751:1185:147:o;5941:803::-;6103:4;6132:2;6172;6161:9;6157:18;6202:2;6191:9;6184:21;6225:6;6260;6254:13;6291:6;6283;6276:22;6329:2;6318:9;6314:18;6307:25;;6391:2;6381:6;6378:1;6374:14;6363:9;6359:30;6355:39;6341:53;;6429:2;6421:6;6417:15;6450:1;6460:255;6474:6;6471:1;6468:13;6460:255;;;6567:2;6563:7;6551:9;6543:6;6539:22;6535:36;6530:3;6523:49;6595:40;6628:6;6619;6613:13;6595:40;:::i;:::-;6585:50;-1:-1:-1;6693:12:147;;;;6658:15;;;;6496:1;6489:9;6460:255;;;-1:-1:-1;6732:6:147;;5941:803;-1:-1:-1;;;;;;;5941:803:147:o;6749:161::-;6816:20;;6876:8;6865:20;;6855:31;;6845:59;;6900:1;6897;6890:12;6915:322;6989:6;6997;7005;7058:2;7046:9;7037:7;7033:23;7029:32;7026:52;;;7074:1;7071;7064:12;7026:52;7097:28;7115:9;7097:28;:::i;:::-;7087:38;;7172:2;7161:9;7157:18;7144:32;7134:42;;7195:36;7227:2;7216:9;7212:18;7195:36;:::i;:::-;7185:46;;6915:322;;;;;:::o;7437:1096::-;7639:4;7668:2;7708;7697:9;7693:18;7738:2;7727:9;7720:21;7761:6;7796;7790:13;7827:6;7819;7812:22;7853:2;7843:12;;7886:2;7875:9;7871:18;7864:25;;7948:2;7938:6;7935:1;7931:14;7920:9;7916:30;7912:39;7986:2;7978:6;7974:15;8007:1;8017:487;8031:6;8028:1;8025:13;8017:487;;;8096:22;;;-1:-1:-1;;8092:36:147;8080:49;;8152:13;;8197:9;;-1:-1:-1;;;;;8193:58:147;8178:74;;8291:11;;8285:18;8323:15;;;8316:27;;;8366:58;8408:15;;;8285:18;8366:58;:::i;:::-;8482:12;;;;8356:68;-1:-1:-1;;8447:15:147;;;;8053:1;8046:9;8017:487;;8538:154;-1:-1:-1;;;;;8617:5:147;8613:54;8606:5;8603:65;8593:93;;8682:1;8679;8672:12;8697:898;8830:6;8838;8846;8854;8862;8870;8878;8886;8939:3;8927:9;8918:7;8914:23;8910:33;8907:53;;;8956:1;8953;8946:12;8907:53;8995:9;8982:23;9014:31;9039:5;9014:31;:::i;:::-;9064:5;-1:-1:-1;9121:2:147;9106:18;;9093:32;9134:33;9093:32;9134:33;:::i;:::-;9186:7;-1:-1:-1;9245:2:147;9230:18;;9217:32;9258:33;9217:32;9258:33;:::i;:::-;9310:7;-1:-1:-1;9336:37:147;9369:2;9354:18;;9336:37;:::i;:::-;9326:47;;9420:3;9409:9;9405:19;9392:33;9382:43;;9472:3;9461:9;9457:19;9444:33;9434:43;;9496:37;9528:3;9517:9;9513:19;9496:37;:::i;:::-;9486:47;;9552:37;9584:3;9573:9;9569:19;9552:37;:::i;:::-;9542:47;;8697:898;;;;;;;;;;;:::o;9600:272::-;9658:6;9711:2;9699:9;9690:7;9686:23;9682:32;9679:52;;;9727:1;9724;9717:12;9679:52;9766:9;9753:23;9816:6;9809:5;9805:18;9798:5;9795:29;9785:57;;9838:1;9835;9828:12;9877:829;10001:6;10009;10017;10025;10033;10041;10049;10102:3;10090:9;10081:7;10077:23;10073:33;10070:53;;;10119:1;10116;10109:12;10070:53;10158:9;10145:23;10177:31;10202:5;10177:31;:::i;:::-;10227:5;-1:-1:-1;10284:2:147;10269:18;;10256:32;10297:33;10256:32;10297:33;:::i;:::-;10349:7;-1:-1:-1;10408:2:147;10393:18;;10380:32;10421:33;10380:32;10421:33;:::i;:::-;10473:7;-1:-1:-1;10499:37:147;10532:2;10517:18;;10499:37;:::i;:::-;10489:47;;10583:3;10572:9;10568:19;10555:33;10545:43;;10607:37;10639:3;10628:9;10624:19;10607:37;:::i;:::-;10597:47;;10663:37;10695:3;10684:9;10680:19;10663:37;:::i;:::-;10653:47;;9877:829;;;;;;;;;;:::o;11048:127::-;11109:10;11104:3;11100:20;11097:1;11090:31;11140:4;11137:1;11130:15;11164:4;11161:1;11154:15;11180:253;11252:2;11246:9;11294:4;11282:17;;11329:18;11314:34;;11350:22;;;11311:62;11308:88;;;11376:18;;:::i;:::-;11412:2;11405:22;11180:253;:::o;11438:275::-;11509:2;11503:9;11574:2;11555:13;;-1:-1:-1;;11551:27:147;11539:40;;11609:18;11594:34;;11630:22;;;11591:62;11588:88;;;11656:18;;:::i;:::-;11692:2;11685:22;11438:275;;-1:-1:-1;11438:275:147:o;11718:719::-;11798:6;11851:2;11839:9;11830:7;11826:23;11822:32;11819:52;;;11867:1;11864;11857:12;11819:52;11900:9;11894:16;11929:18;11970:2;11962:6;11959:14;11956:34;;;11986:1;11983;11976:12;11956:34;12024:6;12013:9;12009:22;11999:32;;12069:7;12062:4;12058:2;12054:13;12050:27;12040:55;;12091:1;12088;12081:12;12040:55;12120:2;12114:9;12142:2;12138;12135:10;12132:36;;;12148:18;;:::i;:::-;12190:53;12233:2;12214:13;;-1:-1:-1;;12210:27:147;12239:2;12206:36;12190:53;:::i;:::-;12177:66;;12266:2;12259:5;12252:17;12306:7;12301:2;12296;12292;12288:11;12284:20;12281:33;12278:53;;;12327:1;12324;12317:12;12278:53;12340:67;12404:2;12399;12392:5;12388:14;12383:2;12379;12375:11;12340:67;:::i;:::-;-1:-1:-1;12426:5:147;11718:719;-1:-1:-1;;;;11718:719:147:o;12442:306::-;12634:2;12623:9;12616:21;12597:4;12654:45;12695:2;12684:9;12680:18;12672:6;12654:45;:::i;:::-;12646:53;;12735:6;12730:2;12719:9;12715:18;12708:34;12442:306;;;;;:::o;12753:184::-;12823:6;12876:2;12864:9;12855:7;12851:23;12847:32;12844:52;;;12892:1;12889;12882:12;12844:52;-1:-1:-1;12915:16:147;;12753:184;-1:-1:-1;12753:184:147:o;12942:127::-;13003:10;12998:3;12994:20;12991:1;12984:31;13034:4;13031:1;13024:15;13058:4;13055:1;13048:15;13074:168;13147:9;;;13178;;13195:15;;;13189:22;;13175:37;13165:71;;13216:18;;:::i;13247:127::-;13308:10;13303:3;13299:20;13296:1;13289:31;13339:4;13336:1;13329:15;13363:4;13360:1;13353:15;13379:120;13419:1;13445;13435:35;;13450:18;;:::i;:::-;-1:-1:-1;13484:9:147;;13379:120::o;13504:125::-;13569:9;;;13590:10;;;13587:36;;;13603:18;;:::i;14422:306::-;14510:6;14518;14526;14579:2;14567:9;14558:7;14554:23;14550:32;14547:52;;;14595:1;14592;14585:12;14547:52;14624:9;14618:16;14608:26;;14674:2;14663:9;14659:18;14653:25;14643:35;;14718:2;14707:9;14703:18;14697:25;14687:35;;14422:306;;;;;:::o;15272:268::-;15359:6;15412:2;15400:9;15391:7;15387:23;15383:32;15380:52;;;15428:1;15425;15418:12;15380:52;15460:9;15454:16;15479:31;15504:5;15479:31;:::i;15545:170::-;15612:8;15640:10;;;15652;;;15636:27;;15675:11;;;15672:37;;;15689:18;;:::i;16257:434::-;16309:3;16347:5;16341:12;16374:6;16369:3;16362:19;16400:4;16429:2;16424:3;16420:12;16413:19;;16466:2;16459:5;16455:14;16487:1;16497:169;16511:6;16508:1;16505:13;16497:169;;;16572:13;;16560:26;;16606:12;;;;16641:15;;;;16533:1;16526:9;16497:169;;16696:1945;16901:2;16890:9;16883:21;16913:53;16962:2;16951:9;16947:18;16938:6;16932:13;-1:-1:-1;;;;;563:54:147;551:67;;497:127;16913:53;16864:4;17013:2;17005:6;17001:15;16995:22;17026:52;17074:2;17063:9;17059:18;17045:12;-1:-1:-1;;;;;563:54:147;551:67;;497:127;17026:52;;17132:2;17124:6;17120:15;17114:22;17109:2;17098:9;17094:18;17087:50;17192:2;17184:6;17180:15;17174:22;17168:3;17157:9;17153:19;17146:51;17252:3;17244:6;17240:16;17234:23;17228:3;17217:9;17213:19;17206:52;17313:3;17305:6;17301:16;17295:23;17289:3;17278:9;17274:19;17267:52;17374:3;17366:6;17362:16;17356:23;17350:3;17339:9;17335:19;17328:52;17417:3;17409:6;17405:16;17399:23;17441:3;17480:2;17475;17464:9;17460:18;17453:30;17520:2;17512:6;17508:15;17502:22;17492:32;;;17543:3;17582:2;17577;17566:9;17562:18;17555:30;17634:2;17626:6;17622:15;17616:22;17594:44;;;17657:6;17682:3;17721:2;17716;17705:9;17701:18;17694:30;17747:64;17806:3;17795:9;17791:19;17775:14;17747:64;:::i;:::-;17733:78;;17860:2;17852:6;17848:15;17842:22;17820:44;;17887:2;17883:7;17909:3;17976:2;17964:9;17956:6;17952:22;17948:31;17943:2;17932:9;17928:18;17921:59;18003:51;18047:6;18031:14;18003:51;:::i;:::-;17989:65;;18103:2;18095:6;18091:15;18085:22;18063:44;;;18126:3;18193:2;18181:9;18173:6;18169:22;18165:31;18160:2;18149:9;18145:18;18138:59;18220:51;18264:6;18248:14;18220:51;:::i;:::-;18206:65;;18320:2;18312:6;18308:15;18302:22;18280:44;;;;18344:3;18356:55;18406:3;18395:9;18391:19;18375:14;-1:-1:-1;;;;;563:54:147;551:67;;497:127;18356:55;18448:16;;18442:23;;-1:-1:-1;18485:3:147;18497:55;18532:19;;;18442:23;-1:-1:-1;;;;;563:54:147;551:67;;497:127;18497:55;18594:16;;;;18588:23;18568:18;;18561:51;;;;-1:-1:-1;18629:6:147;16696:1945;-1:-1:-1;16696:1945:147:o;18646:183::-;18706:4;18739:18;18731:6;18728:30;18725:56;;;18761:18;;:::i;:::-;-1:-1:-1;18806:1:147;18802:14;18818:4;18798:25;;18646:183::o;18834:659::-;18899:5;18952:3;18945:4;18937:6;18933:17;18929:27;18919:55;;18970:1;18967;18960:12;18919:55;18999:6;18993:13;19025:4;19049:60;19065:43;19105:2;19065:43;:::i;:::-;19049:60;:::i;:::-;19143:15;;;19229:1;19225:10;;;;19213:23;;19209:32;;;19174:12;;;;19253:15;;;19250:35;;;19281:1;19278;19271:12;19250:35;19317:2;19309:6;19305:15;19329:135;19345:6;19340:3;19337:15;19329:135;;;19411:10;;19399:23;;19442:12;;;;19362;;19329:135;;;-1:-1:-1;19482:5:147;18834:659;-1:-1:-1;;;;;;18834:659:147:o;19498:861::-;19663:6;19671;19679;19687;19695;19703;19756:3;19744:9;19735:7;19731:23;19727:33;19724:53;;;19773:1;19770;19763:12;19724:53;19802:9;19796:16;19786:26;;19852:2;19841:9;19837:18;19831:25;19821:35;;19896:2;19885:9;19881:18;19875:25;19865:35;;19940:2;19929:9;19925:18;19919:25;19909:35;;19988:3;19977:9;19973:19;19967:26;20012:18;20053:2;20045:6;20042:14;20039:34;;;20069:1;20066;20059:12;20039:34;20092:72;20156:7;20147:6;20136:9;20132:22;20092:72;:::i;:::-;20082:82;;20210:3;20199:9;20195:19;20189:26;20173:42;;20240:2;20230:8;20227:16;20224:36;;;20256:1;20253;20246:12;20224:36;;20279:74;20345:7;20334:8;20323:9;20319:24;20279:74;:::i;:::-;20269:84;;;19498:861;;;;;;;;:::o;20364:380::-;20443:1;20439:12;;;;20486;;;20507:61;;20561:4;20553:6;20549:17;20539:27;;20507:61;20614:2;20606:6;20603:14;20583:18;20580:38;20577:161;;20660:10;20655:3;20651:20;20648:1;20641:31;20695:4;20692:1;20685:15;20723:4;20720:1;20713:15;20577:161;;20364:380;;;:::o;20749:127::-;20810:10;20805:3;20801:20;20798:1;20791:31;20841:4;20838:1;20831:15;20865:4;20862:1;20855:15;20881:373;21088:2;21077:9;21070:21;21051:4;21108:56;21160:2;21149:9;21145:18;21137:6;21108:56;:::i;:::-;21100:64;;-1:-1:-1;;;;;21204:6:147;21200:47;21195:2;21184:9;21180:18;21173:75;20881:373;;;;;:::o;21259:734::-;21324:5;21377:3;21370:4;21362:6;21358:17;21354:27;21344:55;;21395:1;21392;21385:12;21344:55;21424:6;21418:13;21450:4;21474:60;21490:43;21530:2;21490:43;:::i;21474:60::-;21568:15;;;21654:1;21650:10;;;;21638:23;;21634:32;;;21599:12;;;;21678:15;;;21675:35;;;21706:1;21703;21696:12;21675:35;21742:2;21734:6;21730:15;21754:210;21770:6;21765:3;21762:15;21754:210;;;21843:3;21837:10;21860:31;21885:5;21860:31;:::i;:::-;21904:18;;21942:12;;;;21787;;21754:210;;21998:818;22068:5;22121:3;22114:4;22106:6;22102:17;22098:27;22088:55;;22139:1;22136;22129:12;22088:55;22168:6;22162:13;22194:4;22218:60;22234:43;22274:2;22234:43;:::i;22218:60::-;22312:15;;;22398:1;22394:10;;;;22382:23;;22378:32;;;22343:12;;;;22422:15;;;22419:35;;;22450:1;22447;22440:12;22419:35;22486:2;22478:6;22474:15;22498:289;22514:6;22509:3;22506:15;22498:289;;;22587:3;22581:10;22624:1;22617:5;22614:12;22604:110;;22668:1;22697:2;22693;22686:14;22604:110;22727:18;;22765:12;;;;22531;;22498:289;;22821:858;22886:5;22939:3;22932:4;22924:6;22920:17;22916:27;22906:55;;22957:1;22954;22947:12;22906:55;22986:6;22980:13;23012:4;23036:60;23052:43;23092:2;23052:43;:::i;23036:60::-;23130:15;;;23216:1;23212:10;;;;23200:23;;23196:32;;;23161:12;;;;23240:15;;;23237:35;;;23268:1;23265;23258:12;23237:35;23304:2;23296:6;23292:15;23316:334;23332:6;23327:3;23324:15;23316:334;;;23405:3;23399:10;-1:-1:-1;;;;;23446:5:147;23442:46;23435:5;23432:57;23422:155;;23531:1;23560:2;23556;23549:14;23422:155;23590:18;;23628:12;;;;23349;;23316:334;;23684:1766;23778:6;23831:2;23819:9;23810:7;23806:23;23802:32;23799:52;;;23847:1;23844;23837:12;23799:52;23880:9;23874:16;23909:18;23950:2;23942:6;23939:14;23936:34;;;23966:1;23963;23956:12;23936:34;23989:22;;;;24045:4;24027:16;;;24023:27;24020:47;;;24063:1;24060;24053:12;24020:47;24089:22;;:::i;:::-;24142:2;24136:9;24170:2;24160:8;24157:16;24154:36;;;24186:1;24183;24176:12;24154:36;24213:67;24272:7;24261:8;24257:2;24253:17;24213:67;:::i;:::-;24206:5;24199:82;;24320:2;24316;24312:11;24306:18;24349:2;24339:8;24336:16;24333:36;;;24365:1;24362;24355:12;24333:36;24401:67;24460:7;24449:8;24445:2;24441:17;24401:67;:::i;:::-;24396:2;24389:5;24385:14;24378:91;;24508:2;24504;24500:11;24494:18;24537:2;24527:8;24524:16;24521:36;;;24553:1;24550;24543:12;24521:36;24589:67;24648:7;24637:8;24633:2;24629:17;24589:67;:::i;:::-;24584:2;24577:5;24573:14;24566:91;;24696:2;24692;24688:11;24682:18;24725:2;24715:8;24712:16;24709:36;;;24741:1;24738;24731:12;24709:36;24777:72;24841:7;24830:8;24826:2;24822:17;24777:72;:::i;:::-;24772:2;24765:5;24761:14;24754:96;;24889:3;24885:2;24881:12;24875:19;24919:2;24909:8;24906:16;24903:36;;;24935:1;24932;24925:12;24903:36;24972:67;25031:7;25020:8;25016:2;25012:17;24972:67;:::i;:::-;24966:3;24959:5;24955:15;24948:92;;25079:3;25075:2;25071:12;25065:19;25109:2;25099:8;25096:16;25093:36;;;25125:1;25122;25115:12;25093:36;25162:67;25221:7;25210:8;25206:2;25202:17;25162:67;:::i;:::-;25156:3;25149:5;25145:15;25138:92;;25269:3;25265:2;25261:12;25255:19;25299:2;25289:8;25286:16;25283:36;;;25315:1;25312;25305:12;25283:36;25352:67;25411:7;25400:8;25396:2;25392:17;25352:67;:::i;:::-;25346:3;25335:15;;25328:92;-1:-1:-1;25339:5:147;23684:1766;-1:-1:-1;;;;;23684:1766:147:o;25455:274::-;-1:-1:-1;;;;;25593:10:147;;;25605;;;25589:27;25636:20;;;;25527:34;25675:24;;;25665:58;;25703:18;;:::i;:::-;25665:58;;25455:274;;;;:::o;25734:127::-;25795:10;25790:3;25786:20;25783:1;25776:31;25826:4;25823:1;25816:15;25850:4;25847:1;25840:15;25866:216;25906:1;-1:-1:-1;;;;;25993:2:147;25990:1;25986:10;26015:3;26005:37;;26022:18;;:::i;:::-;26060:10;;26056:20;;;;;25866:216;-1:-1:-1;;25866:216:147:o;26343:148::-;26431:4;26410:12;;;26424;;;26406:31;;26449:13;;26446:39;;;26465:18;;:::i;26496:151::-;26586:4;26579:12;;;26565;;;26561:31;;26604:14;;26601:40;;;26621:18;;:::i;27656:128::-;27723:9;;;27744:11;;;27741:37;;;27758:18;;:::i;28061:135::-;28100:3;28121:17;;;28118:43;;28141:18;;:::i;:::-;-1:-1:-1;28188:1:147;28177:13;;28061:135::o;28734:164::-;28810:13;;28859;;28852:21;28842:32;;28832:60;;28888:1;28885;28878:12;28903:202;28970:6;29023:2;29011:9;29002:7;28998:23;28994:32;28991:52;;;29039:1;29036;29029:12;28991:52;29062:37;29089:9;29062:37;:::i;29110:854::-;29308:4;29356:2;29345:9;29341:18;-1:-1:-1;;;;;29459:2:147;29451:6;29447:15;29436:9;29429:34;29482:2;29520;29515;29504:9;29500:18;29493:30;29543:6;29578;29572:13;29609:6;29601;29594:22;29647:3;29636:9;29632:19;29625:26;;29686:2;29678:6;29674:15;29660:29;;29707:1;29717:169;29731:6;29728:1;29725:13;29717:169;;;29792:13;;29780:26;;29861:15;;;;29826:12;;;;29753:1;29746:9;29717:169;;;29721:3;;29903;29895:11;;;;29954:2;29946:6;29942:15;29937:2;29926:9;29922:18;29915:43;;;29110:854;;;;;;:::o;29969:485::-;30082:6;30090;30098;30151:2;30139:9;30130:7;30126:23;30122:32;30119:52;;;30167:1;30164;30157:12;30119:52;30196:9;30190:16;30180:26;;30246:2;30235:9;30231:18;30225:25;30215:35;;30294:2;30283:9;30279:18;30273:25;30321:18;30313:6;30310:30;30307:50;;;30353:1;30350;30343:12;30307:50;30376:72;30440:7;30431:6;30420:9;30416:22;30376:72;:::i;:::-;30366:82;;;29969:485;;;;;:::o;30653:634::-;30783:6;30791;30799;30807;30815;30823;30831;30839;30892:3;30880:9;30871:7;30867:23;30863:33;30860:53;;;30909:1;30906;30899:12;30860:53;30938:9;30932:16;30922:26;;30988:2;30977:9;30973:18;30967:25;30957:35;;31032:2;31021:9;31017:18;31011:25;31001:35;;31076:2;31065:9;31061:18;31055:25;31045:35;;31120:3;31109:9;31105:19;31099:26;31089:36;;31165:3;31154:9;31150:19;31144:26;31134:36;;31210:3;31199:9;31195:19;31189:26;31179:36;;31234:47;31276:3;31265:9;31261:19;31234:47;:::i;32452:686::-;32728:4;-1:-1:-1;;;;;32838:2:147;32830:6;32826:15;32815:9;32808:34;32890:2;32882:6;32878:15;32873:2;32862:9;32858:18;32851:43;;32930:3;32925:2;32914:9;32910:18;32903:31;32957:56;33008:3;32997:9;32993:19;32985:6;32957:56;:::i;:::-;33061:9;33053:6;33049:22;33044:2;33033:9;33029:18;33022:50;33089:43;33125:6;33117;33089:43;:::i;:::-;33081:51;32452:686;-1:-1:-1;;;;;;;32452:686:147:o;33143:363::-;33238:6;33291:2;33279:9;33270:7;33266:23;33262:32;33259:52;;;33307:1;33304;33297:12;33259:52;33340:9;33334:16;33373:18;33365:6;33362:30;33359:50;;;33405:1;33402;33395:12;33359:50;33428:72;33492:7;33483:6;33472:9;33468:22;33428:72;:::i;33511:338::-;-1:-1:-1;;;;;33690:6:147;33686:55;33675:9;33668:74;33778:2;33773;33762:9;33758:18;33751:30;33649:4;33798:45;33839:2;33828:9;33824:18;33816:6;33798:45;:::i;40498:447::-;40672:4;-1:-1:-1;;;;;40782:2:147;40774:6;40770:15;40759:9;40752:34;40834:2;40826:6;40822:15;40817:2;40806:9;40802:18;40795:43;;40874:2;40869;40858:9;40854:18;40847:30;40894:45;40935:2;40924:9;40920:18;40912:6;40894:45;:::i;44111:362::-;44316:6;44305:9;44298:25;44359:6;44354:2;44343:9;44339:18;44332:34;44402:2;44397;44386:9;44382:18;44375:30;44279:4;44422:45;44463:2;44452:9;44448:18;44440:6;44422:45;:::i;44478:435::-;44711:6;44700:9;44693:25;44754:6;44749:2;44738:9;44734:18;44727:34;44797:6;44792:2;44781:9;44777:18;44770:34;44840:3;44835:2;44824:9;44820:18;44813:31;44674:4;44861:46;44902:3;44891:9;44887:19;44879:6;44861:46;:::i;47000:287::-;47129:3;47167:6;47161:13;47183:66;47242:6;47237:3;47230:4;47222:6;47218:17;47183:66;:::i;:::-;47265:16;;;;;47000:287;-1:-1:-1;;47000:287:147:o;47292:181::-;47323:1;47349:8;47384:2;47381:1;47377:10;47406:3;47396:37;;47413:18;;:::i;:::-;47451:10;;47447:20;;;;;47292:181;-1:-1:-1;;47292:181:147:o;47839:189::-;47878:1;47904:8;47939:2;47936:1;47932:10;47961:3;47951:37;;47968:18;;:::i;48033:247::-;48104:8;48144:10;;;48156;;;48140:27;48187:20;;;;48104:8;48226:24;;;48216:58;;48254:18;;:::i;48285:173::-;48353:8;48394:10;;;48382;;;48378:27;;48417:12;;;48414:38;;;48432:18;;:::i;48463:200::-;48529:9;;;48502:4;48557:9;;48585:10;;48597:12;;;48581:29;48620:12;;;48612:21;;48578:56;48575:82;;;48637:18;;:::i;48668:383::-;48825:3;48863:6;48857:13;48879:66;48938:6;48933:3;48926:4;48918:6;48914:17;48879:66;:::i;:::-;48967:16;;;;48992:21;;;-1:-1:-1;49040:4:147;49029:16;;48668:383;-1:-1:-1;48668:383:147:o;49056:422::-;49145:1;49188:5;49145:1;49202:270;49223:7;49213:8;49210:21;49202:270;;;49282:4;49278:1;49274:6;49270:17;49264:4;49261:27;49258:53;;;49291:18;;:::i;:::-;49341:7;49331:8;49327:22;49324:55;;;49361:16;;;;49324:55;49440:22;;;;49400:15;;;;49202:270;;;49206:3;49056:422;;;;;:::o;49483:806::-;49532:5;49562:8;49552:80;;-1:-1:-1;49603:1:147;49617:5;;49552:80;49651:4;49641:76;;-1:-1:-1;49688:1:147;49702:5;;49641:76;49733:4;49751:1;49746:59;;;;49819:1;49814:130;;;;49726:218;;49746:59;49776:1;49767:10;;49790:5;;;49814:130;49851:3;49841:8;49838:17;49835:43;;;49858:18;;:::i;:::-;-1:-1:-1;;49914:1:147;49900:16;;49929:5;;49726:218;;50028:2;50018:8;50015:16;50009:3;50003:4;50000:13;49996:36;49990:2;49980:8;49977:16;49972:2;49966:4;49963:12;49959:35;49956:77;49953:159;;;-1:-1:-1;50065:19:147;;;50097:5;;49953:159;50144:34;50169:8;50163:4;50144:34;:::i;:::-;50214:6;50210:1;50206:6;50202:19;50193:7;50190:32;50187:58;;;50225:18;;:::i;:::-;50263:20;;49483:806;-1:-1:-1;;;49483:806:147:o;50294:131::-;50354:5;50383:36;50410:8;50404:4;50383:36;:::i;50430:570::-;50692:34;50687:3;50680:47;50757:34;50752:2;50747:3;50743:12;50736:56;50822:12;50817:2;50812:3;50808:12;50801:34;50662:3;50864:6;50858:13;50880:73;50946:6;50941:2;50936:3;50932:12;50927:2;50919:6;50915:15;50880:73;:::i;:::-;50973:16;;;;50991:2;50969:25;;50430:570;-1:-1:-1;;50430:570:147:o;51005:220::-;51154:2;51143:9;51136:21;51117:4;51174:45;51215:2;51204:9;51200:18;51192:6;51174:45;:::i;52023:384::-;-1:-1:-1;;;;;;52208:33:147;;52196:46;;52265:13;;52178:3;;52287:74;52265:13;52350:1;52341:11;;52334:4;52322:17;;52287:74;:::i;:::-;52381:16;;;;52399:1;52377:24;;52023:384;-1:-1:-1;;;52023:384:147:o;52663:614::-;52792:6;52800;52853:2;52841:9;52832:7;52828:23;52824:32;52821:52;;;52869:1;52866;52859:12;52821:52;52902:9;52896:16;52931:18;52972:2;52964:6;52961:14;52958:34;;;52988:1;52985;52978:12;52958:34;53011:72;53075:7;53066:6;53055:9;53051:22;53011:72;:::i;:::-;53001:82;;53129:2;53118:9;53114:18;53108:25;53092:41;;53158:2;53148:8;53145:16;53142:36;;;53174:1;53171;53164:12;53142:36;;53197:74;53263:7;53252:8;53241:9;53237:24;53197:74;:::i;:::-;53187:84;;;52663:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "99509": [
        {
          "start": 21552,
          "length": 32
        },
        {
          "start": 21773,
          "length": 32
        },
        {
          "start": 21937,
          "length": 32
        },
        {
          "start": 22356,
          "length": 32
        },
        {
          "start": 25933,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Constructor()": "3c322dd3",
    "test_InvalidLength()": "88721681",
    "test_Scenario1()": "51f44d95",
    "test_Scenario2()": "efbc8013",
    "test_Scenario3()": "396b9c98",
    "test_Scenario4()": "5322e371"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"y\",\"type\":\"int256\"}],\"name\":\"Uint128x128Math__PowUnderflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Constructor\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_InvalidLength\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario1\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario2\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario3\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Scenario4\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Market deployed: - USDT/USDC, V1 with low liquidity, V2 with high liquidity - WNATIVE/USDC, V1 with high liquidity, V2 with low liquidity - WETH/USDC, V1 with low liquidity, V2.2 with high liquidity - BNB/USDC, V2 with high liquidity, V2.2 with low liquidity Every market with low liquidity has a slighly higher price. It should be picked with small amounts but not with large amounts. All tokens are considered 18 decimals for simplification purposes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/integration/LBQuoter.t.sol\":\"LiquidityBinQuoterTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4\",\"dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415\",\"dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97\",\"dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044\",\"dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a\",\"dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e\",\"dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4\",\"dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2\",\"dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof\"]},\"src/LBToken.sol\":{\"keccak256\":\"0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8\",\"dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e\",\"dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a\",\"dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490\",\"dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262\",\"dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0\",\"dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f\",\"dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3\",\"dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6\",\"dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12\",\"dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65\",\"dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a\",\"dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a\",\"dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8\",\"dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b\",\"dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f\",\"dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea\",\"dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ\"]},\"src/libraries/StringUtils.sol\":{\"keccak256\":\"0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f\",\"dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a\",\"dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d\",\"dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1\",\"dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f\",\"dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0\",\"dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e\",\"dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97\",\"dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126\",\"dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94\",\"dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea\",\"dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a\",\"dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/integration/LBQuoter.t.sol\":{\"keccak256\":\"0xee53bc43a4ecac1f7b27c39e0c361a979c4880762491a4a5c284fd7bb482fd8b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ed626a129c3843f56923da9874c1996eeb6d3a5ad5b4603e8bc04ded9b04012\",\"dweb:/ipfs/QmTLoc8E8X3BMksbFevdhvsUPNGb62BRZNdeZBgpDAqKrc\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12\",\"dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211\",\"dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "x",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "y",
              "type": "int256"
            }
          ],
          "type": "error",
          "name": "Uint128x128Math__PowUnderflow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Constructor"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_InvalidLength"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario1"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario2"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario3"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_Scenario4"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/integration/LBQuoter.t.sol": "LiquidityBinQuoterTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2",
        "urls": [
          "bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4",
          "dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd",
        "urls": [
          "bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415",
          "dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520",
        "urls": [
          "bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97",
          "dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f",
        "urls": [
          "bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044",
          "dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310",
        "urls": [
          "bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a",
          "dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22",
        "urls": [
          "bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e",
          "dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94",
        "urls": [
          "bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4",
          "dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae",
        "urls": [
          "bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2",
          "dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434",
        "urls": [
          "bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8",
          "dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53",
        "urls": [
          "bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e",
          "dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b",
        "urls": [
          "bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a",
          "dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388",
        "urls": [
          "bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490",
          "dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4",
        "urls": [
          "bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262",
          "dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e",
        "urls": [
          "bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0",
          "dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f",
        "urls": [
          "bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f",
          "dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da",
        "urls": [
          "bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3",
          "dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7",
        "urls": [
          "bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6",
          "dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1",
        "urls": [
          "bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12",
          "dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401",
        "urls": [
          "bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65",
          "dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365",
        "urls": [
          "bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a",
          "dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd",
        "urls": [
          "bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a",
          "dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42",
        "urls": [
          "bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8",
          "dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71",
        "urls": [
          "bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b",
          "dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6",
        "urls": [
          "bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f",
          "dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0",
        "urls": [
          "bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea",
          "dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/StringUtils.sol": {
        "keccak256": "0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4",
        "urls": [
          "bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f",
          "dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89",
        "urls": [
          "bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a",
          "dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546",
        "urls": [
          "bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d",
          "dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee",
        "urls": [
          "bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1",
          "dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f",
        "urls": [
          "bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f",
          "dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a",
        "urls": [
          "bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0",
          "dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257",
        "urls": [
          "bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e",
          "dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9",
        "urls": [
          "bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97",
          "dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a",
        "urls": [
          "bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126",
          "dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a",
        "urls": [
          "bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94",
          "dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f",
        "urls": [
          "bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea",
          "dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72",
        "urls": [
          "bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a",
          "dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/integration/LBQuoter.t.sol": {
        "keccak256": "0xee53bc43a4ecac1f7b27c39e0c361a979c4880762491a4a5c284fd7bb482fd8b",
        "urls": [
          "bzz-raw://9ed626a129c3843f56923da9874c1996eeb6d3a5ad5b4603e8bc04ded9b04012",
          "dweb:/ipfs/QmTLoc8E8X3BMksbFevdhvsUPNGb62BRZNdeZBgpDAqKrc"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8",
        "urls": [
          "bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12",
          "dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894",
        "urls": [
          "bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211",
          "dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/integration/LBQuoter.t.sol",
    "id": 102673,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39201
      ],
      "AvalancheAddresses": [
        101265
      ],
      "BinHelper": [
        71915
      ],
      "BitMath": [
        75382
      ],
      "Constants": [
        71953
      ],
      "ERC20": [
        42133
      ],
      "ERC20Mock": [
        106636
      ],
      "ERC20TransferTaxMock": [
        106690
      ],
      "Encoded": [
        75589
      ],
      "EnumerableMap": [
        48749
      ],
      "EnumerableSet": [
        49362
      ],
      "FeeHelper": [
        72146
      ],
      "FlashBorrower": [
        106857
      ],
      "Hooks": [
        73020
      ],
      "IERC20": [
        42211
      ],
      "IERC20Metadata": [
        42237
      ],
      "ILBFactory": [
        67618
      ],
      "ILBFlashLoanCallback": [
        67643
      ],
      "ILBHooks": [
        67816
      ],
      "ILBLegacyFactory": [
        68182
      ],
      "ILBLegacyPair": [
        68598
      ],
      "ILBLegacyRouter": [
        69007
      ],
      "ILBPair": [
        69569
      ],
      "ILBRouter": [
        70101
      ],
      "ILBToken": [
        70224
      ],
      "ISovrynLBFactoryV1": [
        70298
      ],
      "ISovrynLBPairV1": [
        70541
      ],
      "ISovrynLBRouter01": [
        70850
      ],
      "ISovrynLBRouter02": [
        70940
      ],
      "IWNATIVE": [
        70956
      ],
      "ImmutableClone": [
        73098
      ],
      "Initializable": [
        41618
      ],
      "LBFactory": [
        58932
      ],
      "LBPair": [
        61826
      ],
      "LBPairBeaconProxy": [
        61890
      ],
      "LBPairUpgradeableBeacon": [
        62082
      ],
      "LBQuoter": [
        63370
      ],
      "LBRouter": [
        66608
      ],
      "LBToken": [
        67127
      ],
      "LiquidityBinQuoterTest": [
        102672
      ],
      "LiquidityConfigurations": [
        75759
      ],
      "OracleHelper": [
        73755
      ],
      "Ownable": [
        40400
      ],
      "Ownable2StepUpgradeable": [
        39338
      ],
      "OwnableUpgradeable": [
        39533
      ],
      "PackedUint128Math": [
        76113
      ],
      "PairParameterHelper": [
        74612
      ],
      "PriceHelper": [
        74786
      ],
      "ReentrancyGuardUpgradeable": [
        74915
      ],
      "SafeCast": [
        76861
      ],
      "SafeERC20": [
        42660
      ],
      "SampleMath": [
        77286
      ],
      "SovrynLBLibrary": [
        75121
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3570
      ],
      "StdCheats": [
        6423
      ],
      "StdInvariant": [
        6783
      ],
      "StdStorage": [
        7555
      ],
      "StdStyle": [
        10725
      ],
      "StdUtils": [
        12103
      ],
      "StringUtils": [
        75202
      ],
      "Test": [
        12155
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        101064
      ],
      "TokenHelper": [
        75288
      ],
      "TransparentUpgradeableProxy": [
        41364
      ],
      "TreeMath": [
        78218
      ],
      "Uint256x256Math": [
        78854
      ],
      "UpgradeableBeacon": [
        41181
      ],
      "Utils": [
        101232
      ],
      "Vm": [
        15998
      ],
      "WNATIVE": [
        107167
      ],
      "console": [
        24122
      ],
      "console2": [
        24122
      ],
      "safeconsole": [
        38838
      ],
      "stdError": [
        6489
      ],
      "stdJson": [
        7375
      ],
      "stdMath": [
        7517
      ],
      "stdStorage": [
        9514
      ],
      "stdToml": [
        11317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:11868:138",
    "nodes": [
      {
        "id": 101267,
        "nodeType": "PragmaDirective",
        "src": "40:24:138",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 101268,
        "nodeType": "ImportDirective",
        "src": "66:35:138",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "../helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 102673,
        "sourceUnit": 101065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 102672,
        "nodeType": "ContractDefinition",
        "src": "591:11316:138",
        "nodes": [
          {
            "id": 101275,
            "nodeType": "UsingForDirective",
            "src": "643:46:138",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 101272,
              "name": "Utils",
              "nameLocations": [
                "649:5:138"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 101232,
              "src": "649:5:138"
            },
            "typeName": {
              "id": 101274,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 101273,
                "name": "ILBRouter.LiquidityParameters",
                "nameLocations": [
                  "659:9:138",
                  "669:19:138"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 69741,
                "src": "659:29:138"
              },
              "referencedDeclaration": 69741,
              "src": "659:29:138",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LiquidityParameters_$69741_storage_ptr",
                "typeString": "struct ILBRouter.LiquidityParameters"
              }
            }
          },
          {
            "id": 101285,
            "nodeType": "VariableDeclaration",
            "src": "695:87:138",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "defaultBaseFee",
            "nameLocation": "711:14:138",
            "scope": 102672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 101276,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "695:7:138",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 101284,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "commonType": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "id": 101282,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "id": 101277,
                  "name": "DEFAULT_BIN_STEP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 99473,
                  "src": "728:16:138",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "*",
                "rightExpression": {
                  "arguments": [
                    {
                      "id": 101280,
                      "name": "DEFAULT_BASE_FACTOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 99476,
                      "src": "755:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    ],
                    "id": 101279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "747:7:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_uint256_$",
                      "typeString": "type(uint256)"
                    },
                    "typeName": {
                      "id": 101278,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "747:7:138",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 101281,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "747:28:138",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "src": "728:47:138",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "hexValue": "31653130",
                "id": 101283,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "778:4:138",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_10000000000_by_1",
                  "typeString": "int_const 10000000000"
                },
                "value": "1e10"
              },
              "src": "728:54:138",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 101288,
            "nodeType": "VariableDeclaration",
            "src": "789:58:138",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "wethe",
            "nameLocation": "797:5:138",
            "scope": 102672,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 101286,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:138",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834394435633242644666616336434532424664423636343046344638306632323662633130624142",
              "id": 101287,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "805:42:138",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB"
            },
            "visibility": "internal"
          },
          {
            "id": 101599,
            "nodeType": "FunctionDefinition",
            "src": "854:2676:138",
            "nodes": [],
            "body": {
              "id": 101598,
              "nodeType": "Block",
              "src": "887:2643:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6176616c616e636865",
                            "id": 101297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "927:11:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            },
                            "value": "avalanche"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            }
                          ],
                          "expression": {
                            "id": 101295,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "917:2:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$15998",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 101296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "920:6:138",
                          "memberName": "rpcUrl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14950,
                          "src": "917:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) view external returns (string memory)"
                          }
                        },
                        "id": 101298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "917:22:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3436303132323830",
                        "id": 101299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "941:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_46012280_by_1",
                          "typeString": "int_const 46012280"
                        },
                        "value": "46012280"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_46012280_by_1",
                          "typeString": "int_const 46012280"
                        }
                      ],
                      "expression": {
                        "id": 101292,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "897:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "900:16:138",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15487,
                      "src": "897:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 101300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "897:53:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 101301,
                  "nodeType": "ExpressionStatement",
                  "src": "897:53:138"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 101302,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "960:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LiquidityBinQuoterTest_$102672_$",
                          "typeString": "type(contract super LiquidityBinQuoterTest)"
                        }
                      },
                      "id": 101304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "966:5:138",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 100191,
                      "src": "960:11:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 101305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "960:13:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101306,
                  "nodeType": "ExpressionStatement",
                  "src": "960:13:138"
                },
                {
                  "assignments": [
                    101308
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101308,
                      "mutability": "mutable",
                      "name": "lowLiquidityAmount",
                      "nameLocation": "992:18:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101598,
                      "src": "984:26:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101307,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "984:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101310,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 101309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1013:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "984:33:138"
                },
                {
                  "assignments": [
                    101312
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101312,
                      "mutability": "mutable",
                      "name": "highLiquidityAmount",
                      "nameLocation": "1035:19:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101598,
                      "src": "1027:27:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101311,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101314,
                  "initialValue": {
                    "hexValue": "31653234",
                    "id": 101313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1057:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "value": "1e24"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1027:34:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101318,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "1124:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1116:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101316,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1116:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1116:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101322,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1139:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1131:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101320,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1131:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1131:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 101324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1146:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 101325,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "1151:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1146:24:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101315,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1111:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101328,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:60:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101332,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99534,
                            "src": "1194:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1186:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1186:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1186:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101336,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1209:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1201:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101334,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1201:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1201:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 101338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1216:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 101339,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "1221:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1216:24:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101329,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1181:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1181:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101342,
                  "nodeType": "ExpressionStatement",
                  "src": "1181:60:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101346,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "1264:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 101345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1256:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1256:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1256:16:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101350,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1282:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1274:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101348,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1274:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1274:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 101352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1289:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 101353,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "1294:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1289:24:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101343,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1251:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1251:63:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101356,
                  "nodeType": "ExpressionStatement",
                  "src": "1251:63:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101360,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99546,
                            "src": "1337:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1329:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101358,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1329:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1329:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101364,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1352:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1344:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101362,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1344:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 101366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1359:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 101367,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "1364:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1359:24:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101357,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1324:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1324:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101370,
                  "nodeType": "ExpressionStatement",
                  "src": "1324:60:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101374,
                            "name": "bnb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99543,
                            "src": "1407:3:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1399:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101372,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1399:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1399:12:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101378,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1421:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1413:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1413:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1413:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 101380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1428:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 101381,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "1433:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1428:24:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 101371,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5925,
                        5942,
                        6065
                      ],
                      "referencedDeclaration": 5942,
                      "src": "1394:4:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 101383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1394:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101384,
                  "nodeType": "ExpressionStatement",
                  "src": "1394:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101390,
                            "name": "usdt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99534,
                            "src": "1538:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1530:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1530:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1530:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101394,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "1565:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1557:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101392,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1557:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1557:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101396,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101308,
                          "src": "1584:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1605:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "1584:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101399,
                        "name": "lowLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101308,
                        "src": "1639:18:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1671:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 101401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1686:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 101404,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1709:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1701:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101402,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1701:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101406,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1728:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1734:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1728:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1746:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1728:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101385,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99573,
                        "src": "1495:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISovrynLBRouter02_$70940",
                          "typeString": "contract ISovrynLBRouter02"
                        }
                      },
                      "id": 101387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1504:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70579,
                      "src": "1495:21:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 101410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1495:262:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 101411,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:262:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101417,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99528,
                            "src": "1811:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$107167",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 101416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1803:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101415,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1803:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1803:16:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101421,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "1841:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1833:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101419,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1833:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1833:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 101423,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101312,
                        "src": "1860:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101424,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101312,
                        "src": "1914:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1947:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 101426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1962:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 101429,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1985:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1977:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101427,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1977:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1977:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101431,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2004:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2010:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2004:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2022:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2004:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101412,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99573,
                        "src": "1768:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISovrynLBRouter02_$70940",
                          "typeString": "contract ISovrynLBRouter02"
                        }
                      },
                      "id": 101414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1777:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70579,
                      "src": "1768:21:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 101435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:265:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 101436,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:265:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 101442,
                            "name": "weth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99546,
                            "src": "2087:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2079:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101440,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2079:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2079:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101446,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99531,
                            "src": "2114:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 101445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2106:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101444,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2106:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2106:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101448,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101308,
                          "src": "2133:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2154:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2133:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101451,
                        "name": "lowLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101308,
                        "src": "2188:18:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2220:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 101453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2235:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "id": 101456,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2258:4:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LiquidityBinQuoterTest_$102672",
                              "typeString": "contract LiquidityBinQuoterTest"
                            }
                          ],
                          "id": 101455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2250:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101454,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2250:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2250:13:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 101461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 101458,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2277:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 101459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2283:9:138",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2277:15:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 101460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2295:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2277:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 101437,
                        "name": "routerV1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99573,
                        "src": "2044:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISovrynLBRouter02_$70940",
                          "typeString": "contract ISovrynLBRouter02"
                        }
                      },
                      "id": 101439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2053:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 70579,
                      "src": "2044:21:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,address,uint256,uint256,uint256,uint256,address,uint256) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 101462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2044:262:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "id": 101463,
                  "nodeType": "ExpressionStatement",
                  "src": "2044:262:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101467,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "2338:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101468,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2344:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101469,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "2350:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 101470,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "2358:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 101464,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "2317:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 101466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2325:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58173,
                      "src": "2317:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 101471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2317:58:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 101472,
                  "nodeType": "ExpressionStatement",
                  "src": "2317:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101476,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99528,
                        "src": "2425:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      {
                        "id": 101477,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2434:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 101480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101478,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "2440:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 101479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2449:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "2440:11:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 101481,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "2453:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_WNATIVE_$107167",
                          "typeString": "contract WNATIVE"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 101473,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "2404:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 101475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2412:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58173,
                      "src": "2404:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 101482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 101483,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101487,
                        "name": "weth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99546,
                        "src": "2523:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101488,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2529:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101489,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "2535:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 101490,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "2543:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 101484,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "2502:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 101486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2510:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58173,
                      "src": "2502:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 101491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2502:58:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 101492,
                  "nodeType": "ExpressionStatement",
                  "src": "2502:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101496,
                        "name": "bnb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99543,
                        "src": "2610:3:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101497,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2615:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 101500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101498,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "2621:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3530",
                          "id": 101499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2630:2:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "src": "2621:11:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 101501,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "2634:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 101493,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99552,
                        "src": "2589:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$58932",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 101495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2597:12:138",
                      "memberName": "createLBPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58173,
                      "src": "2589:20:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint24_$_t_uint16_$returns$_t_contract$_ILBPair_$69569_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint24,uint16) external returns (contract ILBPair)"
                      }
                    },
                    "id": 101502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2589:62:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILBPair_$69569",
                      "typeString": "contract ILBPair"
                    }
                  },
                  "id": 101503,
                  "nodeType": "ExpressionStatement",
                  "src": "2589:62:138"
                },
                {
                  "assignments": [
                    101508
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101508,
                      "mutability": "mutable",
                      "name": "liquidityParameters",
                      "nameLocation": "2748:19:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101598,
                      "src": "2711:56:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters"
                      },
                      "typeName": {
                        "id": 101507,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101506,
                          "name": "ILBRouter.LiquidityParameters",
                          "nameLocations": [
                            "2711:9:138",
                            "2721:19:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 69741,
                          "src": "2711:29:138"
                        },
                        "referencedDeclaration": 69741,
                        "src": "2711:29:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_storage_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101517,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101510,
                        "name": "usdt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99534,
                        "src": "2805:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101511,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99531,
                        "src": "2811:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      {
                        "id": 101512,
                        "name": "highLiquidityAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101312,
                        "src": "2817:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101513,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99467,
                        "src": "2838:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "37",
                        "id": 101514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2846:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      {
                        "hexValue": "30",
                        "id": 101515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2849:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                          "typeString": "contract ERC20Mock"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 101509,
                      "name": "getLiquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 100535,
                      "src": "2782:22:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                      }
                    },
                    "id": 101516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:69:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2711:140:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101521,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "2881:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 101518,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "2861:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2868:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "2861:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 101522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2861:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 101523,
                  "nodeType": "ExpressionStatement",
                  "src": "2861:40:138"
                },
                {
                  "expression": {
                    "id": 101535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101524,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101508,
                      "src": "2912:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101526,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "2957:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 101527,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "2966:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101528,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101308,
                          "src": "2972:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 101531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101529,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99467,
                            "src": "2992:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 101530,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3001:2:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "2992:11:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 101532,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3005:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 101533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3008:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101525,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "2934:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 101534,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2934:76:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "2912:98:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 101536,
                  "nodeType": "ExpressionStatement",
                  "src": "2912:98:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101540,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "3040:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 101537,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3020:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101539,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3027:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "3020:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 101541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3020:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 101542,
                  "nodeType": "ExpressionStatement",
                  "src": "3020:40:138"
                },
                {
                  "expression": {
                    "id": 101552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101543,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101508,
                      "src": "3071:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101545,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99546,
                          "src": "3116:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101546,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "3122:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101547,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "3128:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 101548,
                          "name": "ID_ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99467,
                          "src": "3149:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 101549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3157:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 101550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3160:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101544,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "3093:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 101551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3093:69:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3071:91:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 101553,
                  "nodeType": "ExpressionStatement",
                  "src": "3071:91:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101557,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "3192:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 101554,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3172:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3179:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "3172:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 101558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3172:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 101559,
                  "nodeType": "ExpressionStatement",
                  "src": "3172:40:138"
                },
                {
                  "expression": {
                    "id": 101571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101560,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101508,
                      "src": "3223:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101562,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99543,
                          "src": "3268:3:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101563,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "3273:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101564,
                          "name": "highLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101312,
                          "src": "3279:19:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 101567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101565,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99467,
                            "src": "3300:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 101566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3309:2:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "3300:11:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 101568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3313:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 101569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3316:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101561,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "3245:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 101570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3245:73:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3223:95:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 101572,
                  "nodeType": "ExpressionStatement",
                  "src": "3223:95:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101576,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "3348:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 101573,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3328:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3335:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "3328:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 101577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3328:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 101578,
                  "nodeType": "ExpressionStatement",
                  "src": "3328:40:138"
                },
                {
                  "expression": {
                    "id": 101590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101579,
                      "name": "liquidityParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101508,
                      "src": "3379:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101581,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99543,
                          "src": "3424:3:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101582,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "3429:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        },
                        {
                          "id": 101583,
                          "name": "lowLiquidityAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101308,
                          "src": "3435:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 101586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 101584,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99467,
                            "src": "3455:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3530",
                            "id": 101585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3464:2:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_50_by_1",
                              "typeString": "int_const 50"
                            },
                            "value": "50"
                          },
                          "src": "3455:11:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        {
                          "hexValue": "37",
                          "id": 101587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3468:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          "value": "7"
                        },
                        {
                          "hexValue": "30",
                          "id": 101588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3471:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          {
                            "typeIdentifier": "t_rational_7_by_1",
                            "typeString": "int_const 7"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 101580,
                        "name": "getLiquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100535,
                        "src": "3401:22:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$42211_$_t_contract$_IERC20_$42211_$_t_uint256_$_t_uint24_$_t_uint24_$_t_uint24_$returns$_t_struct$_LiquidityParameters_$69741_memory_ptr_$",
                          "typeString": "function (contract IERC20,contract IERC20,uint256,uint24,uint24,uint24) view returns (struct ILBRouter.LiquidityParameters memory)"
                        }
                      },
                      "id": 101589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3401:72:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                        "typeString": "struct ILBRouter.LiquidityParameters memory"
                      }
                    },
                    "src": "3379:94:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                      "typeString": "struct ILBRouter.LiquidityParameters memory"
                    }
                  },
                  "id": 101591,
                  "nodeType": "ExpressionStatement",
                  "src": "3379:94:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101595,
                        "name": "liquidityParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101508,
                        "src": "3503:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LiquidityParameters_$69741_memory_ptr",
                          "typeString": "struct ILBRouter.LiquidityParameters memory"
                        }
                      ],
                      "expression": {
                        "id": 101592,
                        "name": "router",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99555,
                        "src": "3483:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBRouter_$66608",
                          "typeString": "contract LBRouter"
                        }
                      },
                      "id": 101594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3490:12:138",
                      "memberName": "addLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63804,
                      "src": "3483:19:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LiquidityParameters_$69741_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct ILBRouter.LiquidityParameters memory) external returns (uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 101596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3483:40:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(uint256,uint256,uint256,uint256,uint256[] memory,uint256[] memory)"
                    }
                  },
                  "id": 101597,
                  "nodeType": "ExpressionStatement",
                  "src": "3483:40:138"
                }
              ]
            },
            "baseFunctions": [
              100191
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "863:5:138",
            "overrides": {
              "id": 101290,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "878:8:138"
            },
            "parameters": {
              "id": 101289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "868:2:138"
            },
            "returnParameters": {
              "id": 101291,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "887:0:138"
            },
            "scope": 102672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101643,
            "nodeType": "FunctionDefinition",
            "src": "3536:340:138",
            "nodes": [],
            "body": {
              "id": 101642,
              "nodeType": "Block",
              "src": "3576:300:138",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 101605,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99564,
                                "src": "3603:6:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$63370",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 101606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3610:11:138",
                              "memberName": "getRouterV2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62207,
                              "src": "3603:18:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 101607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3603:20:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3595:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101603,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3595:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3595:29:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101611,
                            "name": "router",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99555,
                            "src": "3634:6:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBRouter_$66608",
                              "typeString": "contract LBRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBRouter_$66608",
                              "typeString": "contract LBRouter"
                            }
                          ],
                          "id": 101610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3626:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101609,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3626:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3626:15:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a31",
                        "id": 101613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3643:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c567442d13ee1b26fde83dca06b68e0563152a0b2d8f5496986745ffc3686fbf",
                          "typeString": "literal_string \"test_Constructor::1\""
                        },
                        "value": "test_Constructor::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c567442d13ee1b26fde83dca06b68e0563152a0b2d8f5496986745ffc3686fbf",
                          "typeString": "literal_string \"test_Constructor::1\""
                        }
                      ],
                      "id": 101602,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3586:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 101614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3586:79:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101615,
                  "nodeType": "ExpressionStatement",
                  "src": "3586:79:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 101619,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99564,
                                "src": "3692:6:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$63370",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 101620,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3699:12:138",
                              "memberName": "getFactoryV1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62185,
                              "src": "3692:19:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 101621,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3692:21:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3684:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101617,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3684:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3684:30:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 101623,
                          "name": "AvalancheAddresses",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101265,
                          "src": "3716:18:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                            "typeString": "type(library AvalancheAddresses)"
                          }
                        },
                        "id": 101624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3735:19:138",
                        "memberName": "SovrynLB_V1_FACTORY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 101240,
                        "src": "3716:38:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a33",
                        "id": 101625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3756:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cae4d8d7c6ad6deb12ffebf3dda33b29ce151df4884fbfbfde83dc7e6e994f9e",
                          "typeString": "literal_string \"test_Constructor::3\""
                        },
                        "value": "test_Constructor::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cae4d8d7c6ad6deb12ffebf3dda33b29ce151df4884fbfbfde83dc7e6e994f9e",
                          "typeString": "literal_string \"test_Constructor::3\""
                        }
                      ],
                      "id": 101616,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3675:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 101626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:103:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101627,
                  "nodeType": "ExpressionStatement",
                  "src": "3675:103:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 101631,
                                "name": "quoter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 99564,
                                "src": "3805:6:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBQuoter_$63370",
                                  "typeString": "contract LBQuoter"
                                }
                              },
                              "id": 101632,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3812:12:138",
                              "memberName": "getFactoryV2",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62196,
                              "src": "3805:19:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 101633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3805:21:138",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 101630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3797:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101629,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3797:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3797:30:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 101637,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 99552,
                            "src": "3837:7:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$58932",
                              "typeString": "contract LBFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBFactory_$58932",
                              "typeString": "contract LBFactory"
                            }
                          ],
                          "id": 101636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3829:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 101635,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3829:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3829:16:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6e7374727563746f723a3a35",
                        "id": 101639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3847:21:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_efb629698b6d58864f5cefb4cc6ff72a002a984d119785b6ef81f571f795a377",
                          "typeString": "literal_string \"test_Constructor::5\""
                        },
                        "value": "test_Constructor::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_efb629698b6d58864f5cefb4cc6ff72a002a984d119785b6ef81f571f795a377",
                          "typeString": "literal_string \"test_Constructor::5\""
                        }
                      ],
                      "id": 101628,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3788:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 101640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:81:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101641,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:81:138"
                }
              ]
            },
            "functionSelector": "3c322dd3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Constructor",
            "nameLocation": "3545:16:138",
            "parameters": {
              "id": 101600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3561:2:138"
            },
            "returnParameters": {
              "id": 101601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:138"
            },
            "scope": 102672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101691,
            "nodeType": "FunctionDefinition",
            "src": "3882:353:138",
            "nodes": [],
            "body": {
              "id": 101690,
              "nodeType": "Block",
              "src": "3919:316:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101650
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101650,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "3946:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101690,
                      "src": "3929:22:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101648,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3929:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101649,
                        "nodeType": "ArrayTypeName",
                        "src": "3929:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101651,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3929:22:138"
                },
                {
                  "expression": {
                    "id": 101658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101652,
                      "name": "route",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101650,
                      "src": "3961:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 101656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3983:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "id": 101655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "3969:13:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 101653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3973:7:138",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 101654,
                          "nodeType": "ArrayTypeName",
                          "src": "3973:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        }
                      },
                      "id": 101657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3969:16:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "3961:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "id": 101659,
                  "nodeType": "ExpressionStatement",
                  "src": "3961:24:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 101663,
                            "name": "LBQuoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63370,
                            "src": "4011:8:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LBQuoter_$63370_$",
                              "typeString": "type(contract LBQuoter)"
                            }
                          },
                          "id": 101664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4020:22:138",
                          "memberName": "LBQuoter_InvalidLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62121,
                          "src": "4011:31:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 101665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4043:8:138",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4011:40:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 101660,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3995:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3998:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "3995:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 101666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3995:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101667,
                  "nodeType": "ExpressionStatement",
                  "src": "3995:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101671,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101650,
                        "src": "4094:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 101672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4101:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 101668,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "4062:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4069:24:138",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "4062:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4062:44:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101674,
                  "nodeType": "ExpressionStatement",
                  "src": "4062:44:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 101678,
                            "name": "LBQuoter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63370,
                            "src": "4132:8:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_LBQuoter_$63370_$",
                              "typeString": "type(contract LBQuoter)"
                            }
                          },
                          "id": 101679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4141:22:138",
                          "memberName": "LBQuoter_InvalidLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62121,
                          "src": "4132:31:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 101680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4164:8:138",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "4132:40:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 101675,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4116:2:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 101677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4119:12:138",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15965,
                      "src": "4116:15:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 101681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4116:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101682,
                  "nodeType": "ExpressionStatement",
                  "src": "4116:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 101686,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101650,
                        "src": "4216:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "32306536",
                        "id": 101687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4223:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        },
                        "value": "20e6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000_by_1",
                          "typeString": "int_const 20000000"
                        }
                      ],
                      "expression": {
                        "id": 101683,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "4183:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4190:25:138",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63266,
                      "src": "4183:32:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4183:45:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101689,
                  "nodeType": "ExpressionStatement",
                  "src": "4183:45:138"
                }
              ]
            },
            "functionSelector": "88721681",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_InvalidLength",
            "nameLocation": "3891:18:138",
            "parameters": {
              "id": 101644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3909:2:138"
            },
            "returnParameters": {
              "id": 101645,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3919:0:138"
            },
            "scope": 102672,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 101939,
            "nodeType": "FunctionDefinition",
            "src": "4241:1927:138",
            "nodes": [],
            "body": {
              "id": 101938,
              "nodeType": "Block",
              "src": "4279:1889:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101698,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "4374:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101938,
                      "src": "4357:22:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101696,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4357:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101697,
                        "nodeType": "ArrayTypeName",
                        "src": "4357:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101704,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 101702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 101701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4382:13:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101699,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4386:7:138",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101700,
                        "nodeType": "ArrayTypeName",
                        "src": "4386:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 101703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:16:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4357:41:138"
                },
                {
                  "expression": {
                    "id": 101712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101705,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101698,
                        "src": "4408:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101707,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4414:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4408:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101710,
                          "name": "usdt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99534,
                          "src": "4427:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4419:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101708,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4419:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101711,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4419:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4408:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101713,
                  "nodeType": "ExpressionStatement",
                  "src": "4408:24:138"
                },
                {
                  "expression": {
                    "id": 101721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101714,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101698,
                        "src": "4442:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101716,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4448:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4442:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101719,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "4461:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4453:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4453:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4453:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4442:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101722,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:24:138"
                },
                {
                  "assignments": [
                    101724
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101724,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "4511:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101938,
                      "src": "4503:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101723,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4503:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101726,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4522:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4503:23:138"
                },
                {
                  "assignments": [
                    101731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101731,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "4558:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101938,
                      "src": "4536:27:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 101730,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101729,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4536:8:138",
                            "4545:5:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "4536:14:138"
                        },
                        "referencedDeclaration": 62151,
                        "src": "4536:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101737,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101734,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101698,
                        "src": "4598:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 101735,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101724,
                        "src": "4605:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 101732,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "4566:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101733,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4573:24:138",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "4566:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4566:48:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4536:78:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101739,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "4634:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101740,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4640:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "4634:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101742,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4648:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4634:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101743,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101724,
                        "src": "4652:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a31",
                        "id": 101744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4662:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b1295a7e162f4dfd7db4a4bdf346da4585feeefe2fa31f4812db7b12f07dfb1",
                          "typeString": "literal_string \"test_Scenario1::1\""
                        },
                        "value": "test_Scenario1::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b1295a7e162f4dfd7db4a4bdf346da4585feeefe2fa31f4812db7b12f07dfb1",
                          "typeString": "literal_string \"test_Scenario1::1\""
                        }
                      ],
                      "id": 101738,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4625:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4625:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101746,
                  "nodeType": "ExpressionStatement",
                  "src": "4625:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101748,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "4710:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101749,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4716:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "4710:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101751,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4724:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4710:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101752,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101724,
                          "src": "4728:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4739:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4728:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4742:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a32",
                        "id": 101756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4748:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb1c8fd433f803136d7d9f7582d3a30790788387d1b6fe02bca04e1c28de22da",
                          "typeString": "literal_string \"test_Scenario1::2\""
                        },
                        "value": "test_Scenario1::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb1c8fd433f803136d7d9f7582d3a30790788387d1b6fe02bca04e1c28de22da",
                          "typeString": "literal_string \"test_Scenario1::2\""
                        }
                      ],
                      "id": 101747,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "4692:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4692:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101758,
                  "nodeType": "ExpressionStatement",
                  "src": "4692:76:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101760,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "4787:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101761,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4793:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "4787:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101763,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4802:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4787:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4806:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a33",
                        "id": 101765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4809:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_551a62f30eddd0de7561dca8e928c1c785451f2e328deb9d8894d8d4bd288e8d",
                          "typeString": "literal_string \"test_Scenario1::3\""
                        },
                        "value": "test_Scenario1::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_551a62f30eddd0de7561dca8e928c1c785451f2e328deb9d8894d8d4bd288e8d",
                          "typeString": "literal_string \"test_Scenario1::3\""
                        }
                      ],
                      "id": 101759,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4778:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:51:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101767,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:51:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101771,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101731,
                                "src": "4856:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101772,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4862:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "4856:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101774,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101773,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4871:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4856:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4848:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101769,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4848:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4848:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4876:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a34",
                        "id": 101777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4879:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2220becade7cec102a7dd1846951e59f81c327e78538d22440eb281b4b23e3e",
                          "typeString": "literal_string \"test_Scenario1::4\""
                        },
                        "value": "test_Scenario1::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2220becade7cec102a7dd1846951e59f81c327e78538d22440eb281b4b23e3e",
                          "typeString": "literal_string \"test_Scenario1::4\""
                        }
                      ],
                      "id": 101768,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4839:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4839:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101779,
                  "nodeType": "ExpressionStatement",
                  "src": "4839:60:138"
                },
                {
                  "expression": {
                    "id": 101782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101780,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101724,
                      "src": "4936:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4947:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "4936:17:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101783,
                  "nodeType": "ExpressionStatement",
                  "src": "4936:17:138"
                },
                {
                  "expression": {
                    "id": 101790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101784,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101731,
                      "src": "4963:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101787,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101698,
                          "src": "5003:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101788,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101724,
                          "src": "5010:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101785,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "4971:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4978:24:138",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "4971:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4971:48:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "4963:56:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101791,
                  "nodeType": "ExpressionStatement",
                  "src": "4963:56:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101793,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5039:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101794,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5045:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5039:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101796,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5053:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5039:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101797,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101724,
                        "src": "5057:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a35",
                        "id": 101798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5067:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0849a42bcb64c156120d5345fbc169b7ffc3c5e6745a5758c220a6cc9a3bf76",
                          "typeString": "literal_string \"test_Scenario1::5\""
                        },
                        "value": "test_Scenario1::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0849a42bcb64c156120d5345fbc169b7ffc3c5e6745a5758c220a6cc9a3bf76",
                          "typeString": "literal_string \"test_Scenario1::5\""
                        }
                      ],
                      "id": 101792,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5030:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5030:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101800,
                  "nodeType": "ExpressionStatement",
                  "src": "5030:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101802,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5115:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101803,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5121:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5115:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101805,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5129:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5115:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101806,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101724,
                        "src": "5133:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5143:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a36",
                        "id": 101808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5149:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22cab05f456a9917c84d56442001fbebd8dc6ca351379b3417b585542450084c",
                          "typeString": "literal_string \"test_Scenario1::6\""
                        },
                        "value": "test_Scenario1::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22cab05f456a9917c84d56442001fbebd8dc6ca351379b3417b585542450084c",
                          "typeString": "literal_string \"test_Scenario1::6\""
                        }
                      ],
                      "id": 101801,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5097:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5097:72:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101810,
                  "nodeType": "ExpressionStatement",
                  "src": "5097:72:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101812,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5188:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101813,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5194:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "5188:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101815,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5203:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5188:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101816,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "5207:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a37",
                        "id": 101817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5225:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_26e15ad0c99c2c7dc0d06ccdc966891f7324697c27b0ae925c8362b30a445820",
                          "typeString": "literal_string \"test_Scenario1::7\""
                        },
                        "value": "test_Scenario1::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_26e15ad0c99c2c7dc0d06ccdc966891f7324697c27b0ae925c8362b30a445820",
                          "typeString": "literal_string \"test_Scenario1::7\""
                        }
                      ],
                      "id": 101811,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5179:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5179:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101819,
                  "nodeType": "ExpressionStatement",
                  "src": "5179:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101823,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101731,
                                "src": "5272:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101824,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5278:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "5272:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101826,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101825,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5287:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5272:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5264:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101821,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5264:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5264:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a38",
                        "id": 101829,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5295:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_75686eb2afc3ebb6c46a7ce72ee518739a43885698649b5d588c359510a9eeb9",
                          "typeString": "literal_string \"test_Scenario1::8\""
                        },
                        "value": "test_Scenario1::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_75686eb2afc3ebb6c46a7ce72ee518739a43885698649b5d588c359510a9eeb9",
                          "typeString": "literal_string \"test_Scenario1::8\""
                        }
                      ],
                      "id": 101820,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5255:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101830,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5255:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101831,
                  "nodeType": "ExpressionStatement",
                  "src": "5255:60:138"
                },
                {
                  "assignments": [
                    101833
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101833,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "5361:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 101938,
                      "src": "5353:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101832,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5353:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101835,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5373:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5353:24:138"
                },
                {
                  "expression": {
                    "id": 101842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101836,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101731,
                      "src": "5387:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101839,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101698,
                          "src": "5428:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101840,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101833,
                          "src": "5435:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101837,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "5395:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101838,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5402:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "5395:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5395:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "5387:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101843,
                  "nodeType": "ExpressionStatement",
                  "src": "5387:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101845,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5474:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101846,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5480:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5474:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101848,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5488:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5474:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 101851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 101849,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101833,
                          "src": "5492:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 101850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5504:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "5492:13:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5507:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a39",
                        "id": 101853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5513:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6681d6942c973e6e0cc5118e365b27ee0a6a26ba4d98865ecc407dc399f79cd4",
                          "typeString": "literal_string \"test_Scenario1::9\""
                        },
                        "value": "test_Scenario1::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6681d6942c973e6e0cc5118e365b27ee0a6a26ba4d98865ecc407dc399f79cd4",
                          "typeString": "literal_string \"test_Scenario1::9\""
                        }
                      ],
                      "id": 101844,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5456:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5456:77:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101855,
                  "nodeType": "ExpressionStatement",
                  "src": "5456:77:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101857,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5552:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101858,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5558:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5552:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101860,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5566:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5552:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101861,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101833,
                        "src": "5570:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3130",
                        "id": 101862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5581:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b4f5122edb89903638f7c065c2aa05b8dadca3bee8522efb35ca7fbccc0decd4",
                          "typeString": "literal_string \"test_Scenario1::10\""
                        },
                        "value": "test_Scenario1::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b4f5122edb89903638f7c065c2aa05b8dadca3bee8522efb35ca7fbccc0decd4",
                          "typeString": "literal_string \"test_Scenario1::10\""
                        }
                      ],
                      "id": 101856,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5543:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5543:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101864,
                  "nodeType": "ExpressionStatement",
                  "src": "5543:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101866,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5621:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101867,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5627:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "5621:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101869,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5636:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5621:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5640:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3131",
                        "id": 101871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5643:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de88294725c534db3166d6c4e1a0c4e9e55b16c87f96f982c87a400263fc82e6",
                          "typeString": "literal_string \"test_Scenario1::11\""
                        },
                        "value": "test_Scenario1::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de88294725c534db3166d6c4e1a0c4e9e55b16c87f96f982c87a400263fc82e6",
                          "typeString": "literal_string \"test_Scenario1::11\""
                        }
                      ],
                      "id": 101865,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5612:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5612:52:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101873,
                  "nodeType": "ExpressionStatement",
                  "src": "5612:52:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101877,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101731,
                                "src": "5691:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101878,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5697:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "5691:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101880,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5706:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5691:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5683:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101875,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5683:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5683:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 101882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5711:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3132",
                        "id": 101883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5714:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c5547359ff473c64c3b4ef1490f770770a54722f22850c9a8e5d9e2143eb527",
                          "typeString": "literal_string \"test_Scenario1::12\""
                        },
                        "value": "test_Scenario1::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c5547359ff473c64c3b4ef1490f770770a54722f22850c9a8e5d9e2143eb527",
                          "typeString": "literal_string \"test_Scenario1::12\""
                        }
                      ],
                      "id": 101874,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5674:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5674:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101885,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:61:138"
                },
                {
                  "expression": {
                    "id": 101888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101886,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101833,
                      "src": "5773:9:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 101887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5785:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "5773:18:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 101889,
                  "nodeType": "ExpressionStatement",
                  "src": "5773:18:138"
                },
                {
                  "expression": {
                    "id": 101896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 101890,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101731,
                      "src": "5801:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101893,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101698,
                          "src": "5842:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 101894,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101833,
                          "src": "5849:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 101891,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "5809:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 101892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5816:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "5809:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 101895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5809:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "5801:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 101897,
                  "nodeType": "ExpressionStatement",
                  "src": "5801:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101899,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5888:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101900,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5894:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5888:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101902,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5902:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5888:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101903,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101833,
                        "src": "5906:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 101904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5917:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3133",
                        "id": 101905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5923:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cdca0f759c8b6673ac4f96cdad29bb01c0fff4acd6578f0afe45165d59be6bf2",
                          "typeString": "literal_string \"test_Scenario1::13\""
                        },
                        "value": "test_Scenario1::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cdca0f759c8b6673ac4f96cdad29bb01c0fff4acd6578f0afe45165d59be6bf2",
                          "typeString": "literal_string \"test_Scenario1::13\""
                        }
                      ],
                      "id": 101898,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "5870:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5870:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101907,
                  "nodeType": "ExpressionStatement",
                  "src": "5870:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101909,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "5963:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101910,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5969:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5963:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101912,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5977:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5963:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101913,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101833,
                        "src": "5981:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3134",
                        "id": 101914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5992:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f9ced837466f5d8ee27ab6d9987aa8e1231618f335ca5dce4bb0d6e9aed6f3c",
                          "typeString": "literal_string \"test_Scenario1::14\""
                        },
                        "value": "test_Scenario1::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f9ced837466f5d8ee27ab6d9987aa8e1231618f335ca5dce4bb0d6e9aed6f3c",
                          "typeString": "literal_string \"test_Scenario1::14\""
                        }
                      ],
                      "id": 101908,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5954:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5954:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101916,
                  "nodeType": "ExpressionStatement",
                  "src": "5954:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101918,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101731,
                            "src": "6032:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101919,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6038:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "6032:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 101921,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6047:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6032:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 101922,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "6051:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3135",
                        "id": 101923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6069:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cfda752708129c521a47c5d42a7cbe3f188b33fed1906b82ef1f9bccb06c93c",
                          "typeString": "literal_string \"test_Scenario1::15\""
                        },
                        "value": "test_Scenario1::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cfda752708129c521a47c5d42a7cbe3f188b33fed1906b82ef1f9bccb06c93c",
                          "typeString": "literal_string \"test_Scenario1::15\""
                        }
                      ],
                      "id": 101917,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6023:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6023:67:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101925,
                  "nodeType": "ExpressionStatement",
                  "src": "6023:67:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 101929,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101731,
                                "src": "6117:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 101930,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6123:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "6117:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 101932,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 101931,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6132:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6117:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 101928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6109:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 101927,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6109:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 101933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6109:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 101934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6137:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f313a3a3136",
                        "id": 101935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6140:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ff741964272714ffbf2610f2e2ef00d93bc2e6e4131a0e4e66807b0f6d0bbcf",
                          "typeString": "literal_string \"test_Scenario1::16\""
                        },
                        "value": "test_Scenario1::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ff741964272714ffbf2610f2e2ef00d93bc2e6e4131a0e4e66807b0f6d0bbcf",
                          "typeString": "literal_string \"test_Scenario1::16\""
                        }
                      ],
                      "id": 101926,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6100:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6100:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101937,
                  "nodeType": "ExpressionStatement",
                  "src": "6100:61:138"
                }
              ]
            },
            "functionSelector": "51f44d95",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario1",
            "nameLocation": "4250:14:138",
            "parameters": {
              "id": 101692,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4264:2:138"
            },
            "returnParameters": {
              "id": 101693,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4279:0:138"
            },
            "scope": 102672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102181,
            "nodeType": "FunctionDefinition",
            "src": "6174:1895:138",
            "nodes": [],
            "body": {
              "id": 102180,
              "nodeType": "Block",
              "src": "6212:1857:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    101946
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101946,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "6310:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102180,
                      "src": "6293:22:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101944,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6293:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101945,
                        "nodeType": "ArrayTypeName",
                        "src": "6293:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101952,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 101950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6332:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 101949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "6318:13:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 101947,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6322:7:138",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 101948,
                        "nodeType": "ArrayTypeName",
                        "src": "6322:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 101951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6318:16:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6293:41:138"
                },
                {
                  "expression": {
                    "id": 101960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101953,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "6344:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101955,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 101954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6350:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6344:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101958,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99528,
                          "src": "6363:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$107167",
                            "typeString": "contract WNATIVE"
                          }
                        ],
                        "id": 101957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6355:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6355:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6355:16:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6344:27:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101961,
                  "nodeType": "ExpressionStatement",
                  "src": "6344:27:138"
                },
                {
                  "expression": {
                    "id": 101969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 101962,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "6381:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 101964,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 101963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6387:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6381:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 101967,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "6400:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 101966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6392:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 101965,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6392:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 101968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6392:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6381:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 101970,
                  "nodeType": "ExpressionStatement",
                  "src": "6381:24:138"
                },
                {
                  "assignments": [
                    101972
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101972,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "6450:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102180,
                      "src": "6442:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 101971,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6442:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101974,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 101973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6461:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6442:23:138"
                },
                {
                  "assignments": [
                    101979
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 101979,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "6497:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102180,
                      "src": "6475:27:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 101978,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 101977,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "6475:8:138",
                            "6484:5:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "6475:14:138"
                        },
                        "referencedDeclaration": 62151,
                        "src": "6475:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 101985,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 101982,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101946,
                        "src": "6537:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 101983,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101972,
                        "src": "6544:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 101980,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "6505:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 101981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6512:24:138",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "6505:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 101984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6505:48:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6475:78:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101987,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "6573:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101988,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6579:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6573:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101990,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 101989,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6587:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6573:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 101991,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101972,
                        "src": "6591:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a31",
                        "id": 101992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6601:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42fc75d17d21d5d2bae24c45a6c6647288721eef8af866e7ba22dd982b1dd986",
                          "typeString": "literal_string \"test_Scenario2::1\""
                        },
                        "value": "test_Scenario2::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42fc75d17d21d5d2bae24c45a6c6647288721eef8af866e7ba22dd982b1dd986",
                          "typeString": "literal_string \"test_Scenario2::1\""
                        }
                      ],
                      "id": 101986,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6564:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 101993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6564:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101994,
                  "nodeType": "ExpressionStatement",
                  "src": "6564:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 101996,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "6640:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 101997,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6646:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6640:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 101999,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 101998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6654:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6640:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102000,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101972,
                        "src": "6658:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a32",
                        "id": 102001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6668:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_513f2bb95608545082364a1aba7eb214adb118b30b3753ddecfb9a1ac8ac71c3",
                          "typeString": "literal_string \"test_Scenario2::2\""
                        },
                        "value": "test_Scenario2::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_513f2bb95608545082364a1aba7eb214adb118b30b3753ddecfb9a1ac8ac71c3",
                          "typeString": "literal_string \"test_Scenario2::2\""
                        }
                      ],
                      "id": 101995,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "6631:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6631:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102003,
                  "nodeType": "ExpressionStatement",
                  "src": "6631:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102005,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "6707:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102006,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6713:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "6707:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102008,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6722:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6707:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102009,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "6726:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a33",
                        "id": 102010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6744:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09e7746affd5ddf438c183c255912cb4d8c3c2de7f79dad7a5544decf55d4733",
                          "typeString": "literal_string \"test_Scenario2::3\""
                        },
                        "value": "test_Scenario2::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09e7746affd5ddf438c183c255912cb4d8c3c2de7f79dad7a5544decf55d4733",
                          "typeString": "literal_string \"test_Scenario2::3\""
                        }
                      ],
                      "id": 102004,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6698:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6698:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102012,
                  "nodeType": "ExpressionStatement",
                  "src": "6698:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102016,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101979,
                                "src": "6791:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102017,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6797:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "6791:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102019,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6806:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6791:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6783:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102014,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6783:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6783:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6811:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a34",
                        "id": 102022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6814:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_351364948135c9d7515e0592722e6833da5a69aac801aec08ab568b1931d3f28",
                          "typeString": "literal_string \"test_Scenario2::4\""
                        },
                        "value": "test_Scenario2::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_351364948135c9d7515e0592722e6833da5a69aac801aec08ab568b1931d3f28",
                          "typeString": "literal_string \"test_Scenario2::4\""
                        }
                      ],
                      "id": 102013,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6774:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6774:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102024,
                  "nodeType": "ExpressionStatement",
                  "src": "6774:60:138"
                },
                {
                  "expression": {
                    "id": 102027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102025,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101972,
                      "src": "6871:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6882:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "6871:17:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102028,
                  "nodeType": "ExpressionStatement",
                  "src": "6871:17:138"
                },
                {
                  "expression": {
                    "id": 102035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102029,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101979,
                      "src": "6898:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102032,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101946,
                          "src": "6938:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102033,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101972,
                          "src": "6945:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102030,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "6906:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6913:24:138",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "6906:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6906:48:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6898:56:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102036,
                  "nodeType": "ExpressionStatement",
                  "src": "6898:56:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102038,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "6974:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102039,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6980:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6974:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102041,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6988:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6974:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102042,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101972,
                        "src": "6992:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a35",
                        "id": 102043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7002:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d840498e861845e6ac86966630b4a1307645adf8b1d6f038207e99d3a75c554",
                          "typeString": "literal_string \"test_Scenario2::5\""
                        },
                        "value": "test_Scenario2::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d840498e861845e6ac86966630b4a1307645adf8b1d6f038207e99d3a75c554",
                          "typeString": "literal_string \"test_Scenario2::5\""
                        }
                      ],
                      "id": 102037,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6965:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6965:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102045,
                  "nodeType": "ExpressionStatement",
                  "src": "6965:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102047,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7050:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102048,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7056:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "7050:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102050,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102049,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7064:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7050:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102051,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101972,
                        "src": "7068:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7078:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a36",
                        "id": 102053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7084:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_104489c8a608d3bfb145e80ecb13b01a0b85cbbafc8011e8e13fef203ddd27c4",
                          "typeString": "literal_string \"test_Scenario2::6\""
                        },
                        "value": "test_Scenario2::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_104489c8a608d3bfb145e80ecb13b01a0b85cbbafc8011e8e13fef203ddd27c4",
                          "typeString": "literal_string \"test_Scenario2::6\""
                        }
                      ],
                      "id": 102046,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "7032:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7032:72:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102055,
                  "nodeType": "ExpressionStatement",
                  "src": "7032:72:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102057,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7123:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102058,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7129:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "7123:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102060,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7138:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7123:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7142:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a37",
                        "id": 102062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7145:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f9dff47b0927f906f6699ad581959350914c151cf69deb545d4929c2d3c92ada",
                          "typeString": "literal_string \"test_Scenario2::7\""
                        },
                        "value": "test_Scenario2::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f9dff47b0927f906f6699ad581959350914c151cf69deb545d4929c2d3c92ada",
                          "typeString": "literal_string \"test_Scenario2::7\""
                        }
                      ],
                      "id": 102056,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7114:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7114:51:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102064,
                  "nodeType": "ExpressionStatement",
                  "src": "7114:51:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102068,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101979,
                                "src": "7192:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102069,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7198:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "7192:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102071,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7207:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7192:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7184:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102066,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7184:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7184:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7212:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a38",
                        "id": 102074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7215:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64b7ba0ffe3b08b17a175cb16c43869e0c55054a247970bd37f9240ed60f4b2d",
                          "typeString": "literal_string \"test_Scenario2::8\""
                        },
                        "value": "test_Scenario2::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64b7ba0ffe3b08b17a175cb16c43869e0c55054a247970bd37f9240ed60f4b2d",
                          "typeString": "literal_string \"test_Scenario2::8\""
                        }
                      ],
                      "id": 102065,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7175:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7175:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102076,
                  "nodeType": "ExpressionStatement",
                  "src": "7175:60:138"
                },
                {
                  "assignments": [
                    102078
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102078,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "7281:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102180,
                      "src": "7273:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102077,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7273:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102080,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 102079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7293:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7273:24:138"
                },
                {
                  "expression": {
                    "id": 102087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102081,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101979,
                      "src": "7307:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102084,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101946,
                          "src": "7348:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102085,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102078,
                          "src": "7355:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102082,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "7315:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7322:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "7315:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7315:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "7307:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102088,
                  "nodeType": "ExpressionStatement",
                  "src": "7307:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102090,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7385:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7391:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "7385:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102093,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7399:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7385:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102094,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102078,
                        "src": "7403:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a39",
                        "id": 102095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7414:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d18f613c2ac34fc5fb283ce0c2291f2ff715b7b15e49a9d03f05a7a0c29e39a",
                          "typeString": "literal_string \"test_Scenario2::9\""
                        },
                        "value": "test_Scenario2::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d18f613c2ac34fc5fb283ce0c2291f2ff715b7b15e49a9d03f05a7a0c29e39a",
                          "typeString": "literal_string \"test_Scenario2::9\""
                        }
                      ],
                      "id": 102089,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1590,
                        1608,
                        1662,
                        1680
                      ],
                      "referencedDeclaration": 1608,
                      "src": "7376:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7376:58:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102097,
                  "nodeType": "ExpressionStatement",
                  "src": "7376:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102099,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7453:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102100,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7459:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "7453:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102102,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7467:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7453:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102103,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102078,
                        "src": "7471:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3130",
                        "id": 102104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7482:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9bcea95dc4bd5bf876b93121c4354d34fdc8afad95914b0dfc26deb7aa30003",
                          "typeString": "literal_string \"test_Scenario2::10\""
                        },
                        "value": "test_Scenario2::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9bcea95dc4bd5bf876b93121c4354d34fdc8afad95914b0dfc26deb7aa30003",
                          "typeString": "literal_string \"test_Scenario2::10\""
                        }
                      ],
                      "id": 102098,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7444:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7444:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102106,
                  "nodeType": "ExpressionStatement",
                  "src": "7444:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102108,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7522:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102109,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7528:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "7522:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102111,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7537:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7522:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102112,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "7541:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3131",
                        "id": 102113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7559:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_97c805f40b26b85e573bc7c24dcc99ada1f576b898dbf18db51a3b4de192899a",
                          "typeString": "literal_string \"test_Scenario2::11\""
                        },
                        "value": "test_Scenario2::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_97c805f40b26b85e573bc7c24dcc99ada1f576b898dbf18db51a3b4de192899a",
                          "typeString": "literal_string \"test_Scenario2::11\""
                        }
                      ],
                      "id": 102107,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7513:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7513:67:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102115,
                  "nodeType": "ExpressionStatement",
                  "src": "7513:67:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102119,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101979,
                                "src": "7607:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102120,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7613:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "7607:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102122,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7622:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7607:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7599:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102117,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "7599:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7599:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7627:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3132",
                        "id": 102125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7630:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ed14782e39f2751f389223886ed6ff7914d6bb5e3fefab5907e4ed3edbc0559",
                          "typeString": "literal_string \"test_Scenario2::12\""
                        },
                        "value": "test_Scenario2::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ed14782e39f2751f389223886ed6ff7914d6bb5e3fefab5907e4ed3edbc0559",
                          "typeString": "literal_string \"test_Scenario2::12\""
                        }
                      ],
                      "id": 102116,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7590:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7590:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102127,
                  "nodeType": "ExpressionStatement",
                  "src": "7590:61:138"
                },
                {
                  "expression": {
                    "id": 102130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102128,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102078,
                      "src": "7689:9:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7701:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "7689:18:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102131,
                  "nodeType": "ExpressionStatement",
                  "src": "7689:18:138"
                },
                {
                  "expression": {
                    "id": 102138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102132,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101979,
                      "src": "7717:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102135,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101946,
                          "src": "7758:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102136,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102078,
                          "src": "7765:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102133,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "7725:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7732:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "7725:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7725:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "7717:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102139,
                  "nodeType": "ExpressionStatement",
                  "src": "7717:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102141,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7804:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102142,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7810:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "7804:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102144,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7818:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7804:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102145,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102078,
                        "src": "7822:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7833:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3133",
                        "id": 102147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7839:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b5fcd82d7482440b3402d57dc67aef1690e690e88bfb0178d9e300a029d565b7",
                          "typeString": "literal_string \"test_Scenario2::13\""
                        },
                        "value": "test_Scenario2::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b5fcd82d7482440b3402d57dc67aef1690e690e88bfb0178d9e300a029d565b7",
                          "typeString": "literal_string \"test_Scenario2::13\""
                        }
                      ],
                      "id": 102140,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "7786:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7786:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102149,
                  "nodeType": "ExpressionStatement",
                  "src": "7786:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102151,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7879:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102152,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7885:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "7879:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102154,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7893:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7879:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102155,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102078,
                        "src": "7897:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3134",
                        "id": 102156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7908:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9ed8e91dc2fad4ce3b0b161f20de53aa0ceb13df6212c817b1da1aa9ad30fa08",
                          "typeString": "literal_string \"test_Scenario2::14\""
                        },
                        "value": "test_Scenario2::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9ed8e91dc2fad4ce3b0b161f20de53aa0ceb13df6212c817b1da1aa9ad30fa08",
                          "typeString": "literal_string \"test_Scenario2::14\""
                        }
                      ],
                      "id": 102150,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7870:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7870:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102158,
                  "nodeType": "ExpressionStatement",
                  "src": "7870:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102160,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101979,
                            "src": "7948:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102161,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7954:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "7948:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102163,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7963:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7948:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7967:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3135",
                        "id": 102165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7970:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2855eedc58c00742ff202f95ebeef7523da799a66879eb9ba39f25dec6864396",
                          "typeString": "literal_string \"test_Scenario2::15\""
                        },
                        "value": "test_Scenario2::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2855eedc58c00742ff202f95ebeef7523da799a66879eb9ba39f25dec6864396",
                          "typeString": "literal_string \"test_Scenario2::15\""
                        }
                      ],
                      "id": 102159,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7939:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7939:52:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102167,
                  "nodeType": "ExpressionStatement",
                  "src": "7939:52:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102171,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 101979,
                                "src": "8018:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102172,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8024:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "8018:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102174,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102173,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8033:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8018:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8010:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102169,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8010:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8010:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8038:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f323a3a3136",
                        "id": 102177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8041:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_62f1dd8ad5a7d3b81f11d89ea0b81e63a11cb18d8c7a41b85171f133fdbe1a4c",
                          "typeString": "literal_string \"test_Scenario2::16\""
                        },
                        "value": "test_Scenario2::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_62f1dd8ad5a7d3b81f11d89ea0b81e63a11cb18d8c7a41b85171f133fdbe1a4c",
                          "typeString": "literal_string \"test_Scenario2::16\""
                        }
                      ],
                      "id": 102168,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8001:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8001:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102179,
                  "nodeType": "ExpressionStatement",
                  "src": "8001:61:138"
                }
              ]
            },
            "functionSelector": "efbc8013",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario2",
            "nameLocation": "6183:14:138",
            "parameters": {
              "id": 101940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6197:2:138"
            },
            "returnParameters": {
              "id": 101941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6212:0:138"
            },
            "scope": 102672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102429,
            "nodeType": "FunctionDefinition",
            "src": "8075:1929:138",
            "nodes": [],
            "body": {
              "id": 102428,
              "nodeType": "Block",
              "src": "8113:1891:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102188,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "8210:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102428,
                      "src": "8193:22:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102186,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8193:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102187,
                        "nodeType": "ArrayTypeName",
                        "src": "8193:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102194,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 102192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8232:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 102191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "8218:13:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102189,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8222:7:138",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102190,
                        "nodeType": "ArrayTypeName",
                        "src": "8222:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 102193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8218:16:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8193:41:138"
                },
                {
                  "expression": {
                    "id": 102202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102195,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102188,
                        "src": "8244:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102197,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8250:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8244:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102200,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99546,
                          "src": "8263:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 102199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8255:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102198,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8255:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8255:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8244:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102203,
                  "nodeType": "ExpressionStatement",
                  "src": "8244:24:138"
                },
                {
                  "expression": {
                    "id": 102211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102204,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102188,
                        "src": "8278:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102206,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8284:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8278:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102209,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "8297:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 102208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8289:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8289:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8289:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8278:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102212,
                  "nodeType": "ExpressionStatement",
                  "src": "8278:24:138"
                },
                {
                  "assignments": [
                    102214
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102214,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "8347:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102428,
                      "src": "8339:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102213,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8339:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102216,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 102215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8358:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8339:23:138"
                },
                {
                  "assignments": [
                    102221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102221,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "8394:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102428,
                      "src": "8372:27:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 102220,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102219,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "8372:8:138",
                            "8381:5:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "8372:14:138"
                        },
                        "referencedDeclaration": 62151,
                        "src": "8372:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102227,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102224,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102188,
                        "src": "8434:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 102225,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102214,
                        "src": "8441:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 102222,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "8402:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 102223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8409:24:138",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "8402:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 102226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8402:48:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8372:78:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102229,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "8470:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8476:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "8470:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102232,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8484:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8470:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102233,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102214,
                        "src": "8488:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a31",
                        "id": 102234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8498:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_72c8e69422bf3bceab8a1ba7d210add6beb8fbfa9145d24a23b5243256df3469",
                          "typeString": "literal_string \"test_Scenario3::1\""
                        },
                        "value": "test_Scenario3::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_72c8e69422bf3bceab8a1ba7d210add6beb8fbfa9145d24a23b5243256df3469",
                          "typeString": "literal_string \"test_Scenario3::1\""
                        }
                      ],
                      "id": 102228,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8461:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8461:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102236,
                  "nodeType": "ExpressionStatement",
                  "src": "8461:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102238,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "8546:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102239,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8552:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "8546:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102241,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8560:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8546:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102242,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102214,
                          "src": "8564:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 102243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8575:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "8564:12:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8578:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a32",
                        "id": 102246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8584:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07a76727e8126f1c42dddc34c16480fd5bf7dcbc2c7bb017034c26021f0399cc",
                          "typeString": "literal_string \"test_Scenario3::2\""
                        },
                        "value": "test_Scenario3::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07a76727e8126f1c42dddc34c16480fd5bf7dcbc2c7bb017034c26021f0399cc",
                          "typeString": "literal_string \"test_Scenario3::2\""
                        }
                      ],
                      "id": 102237,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "8528:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8528:76:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102248,
                  "nodeType": "ExpressionStatement",
                  "src": "8528:76:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102250,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "8623:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8629:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "8623:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102253,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8638:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8623:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8642:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a33",
                        "id": 102255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8645:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a23b7a124754bab020f00af805a2d4eb4c9f332d50ba95cf6ef2bfee333c89b",
                          "typeString": "literal_string \"test_Scenario3::3\""
                        },
                        "value": "test_Scenario3::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a23b7a124754bab020f00af805a2d4eb4c9f332d50ba95cf6ef2bfee333c89b",
                          "typeString": "literal_string \"test_Scenario3::3\""
                        }
                      ],
                      "id": 102249,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8614:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8614:51:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102257,
                  "nodeType": "ExpressionStatement",
                  "src": "8614:51:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102261,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102221,
                                "src": "8692:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102262,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8698:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "8692:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102264,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8707:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8692:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8684:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102259,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8684:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8684:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8712:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a34",
                        "id": 102267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8715:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f6691c8f1f1fe8c1af8c23cefdf48acd6dbf8d6c0d879d1f12da5a6e43ef9f6",
                          "typeString": "literal_string \"test_Scenario3::4\""
                        },
                        "value": "test_Scenario3::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f6691c8f1f1fe8c1af8c23cefdf48acd6dbf8d6c0d879d1f12da5a6e43ef9f6",
                          "typeString": "literal_string \"test_Scenario3::4\""
                        }
                      ],
                      "id": 102258,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8675:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8675:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102269,
                  "nodeType": "ExpressionStatement",
                  "src": "8675:60:138"
                },
                {
                  "expression": {
                    "id": 102272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102270,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102214,
                      "src": "8772:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8783:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "8772:17:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102273,
                  "nodeType": "ExpressionStatement",
                  "src": "8772:17:138"
                },
                {
                  "expression": {
                    "id": 102280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102274,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102221,
                      "src": "8799:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102277,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102188,
                          "src": "8839:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102278,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102214,
                          "src": "8846:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102275,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "8807:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8814:24:138",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "8807:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8807:48:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "8799:56:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102281,
                  "nodeType": "ExpressionStatement",
                  "src": "8799:56:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102283,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "8875:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8881:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "8875:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102286,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8889:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8875:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102287,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102214,
                        "src": "8893:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a35",
                        "id": 102288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8903:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc7ebe1c9f8ad1405224e7db8639622a0e63b69129415467d15ab2b2c05e2e5d",
                          "typeString": "literal_string \"test_Scenario3::5\""
                        },
                        "value": "test_Scenario3::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc7ebe1c9f8ad1405224e7db8639622a0e63b69129415467d15ab2b2c05e2e5d",
                          "typeString": "literal_string \"test_Scenario3::5\""
                        }
                      ],
                      "id": 102282,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8866:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8866:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102290,
                  "nodeType": "ExpressionStatement",
                  "src": "8866:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102292,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "8951:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102293,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8957:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "8951:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102295,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102294,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8965:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8951:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102296,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102214,
                        "src": "8969:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8979:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a36",
                        "id": 102298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8985:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_76c073c61dcb81da81cd1f18c33876811cb0e1a4fd169160648d7f2cf3957478",
                          "typeString": "literal_string \"test_Scenario3::6\""
                        },
                        "value": "test_Scenario3::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_76c073c61dcb81da81cd1f18c33876811cb0e1a4fd169160648d7f2cf3957478",
                          "typeString": "literal_string \"test_Scenario3::6\""
                        }
                      ],
                      "id": 102291,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "8933:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8933:72:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102300,
                  "nodeType": "ExpressionStatement",
                  "src": "8933:72:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102302,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9024:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9030:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "9024:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102305,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9039:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9024:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102306,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "9043:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a37",
                        "id": 102307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9061:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b790adc9b5375f9515308efe0ba68bc511737ba2b77897f61310fb6d787ed239",
                          "typeString": "literal_string \"test_Scenario3::7\""
                        },
                        "value": "test_Scenario3::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b790adc9b5375f9515308efe0ba68bc511737ba2b77897f61310fb6d787ed239",
                          "typeString": "literal_string \"test_Scenario3::7\""
                        }
                      ],
                      "id": 102301,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9015:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9015:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102309,
                  "nodeType": "ExpressionStatement",
                  "src": "9015:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102313,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102221,
                                "src": "9108:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102314,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9114:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "9108:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102316,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9123:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9108:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9100:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102311,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9100:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9100:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9128:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a38",
                        "id": 102319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9131:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_764a5564197f80b27bac61382e16b82d90dd1210c8323a3ee622163c11860f15",
                          "typeString": "literal_string \"test_Scenario3::8\""
                        },
                        "value": "test_Scenario3::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_764a5564197f80b27bac61382e16b82d90dd1210c8323a3ee622163c11860f15",
                          "typeString": "literal_string \"test_Scenario3::8\""
                        }
                      ],
                      "id": 102310,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9091:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9091:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102321,
                  "nodeType": "ExpressionStatement",
                  "src": "9091:60:138"
                },
                {
                  "assignments": [
                    102323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102323,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "9197:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102428,
                      "src": "9189:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102322,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9189:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102325,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 102324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9209:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9189:24:138"
                },
                {
                  "expression": {
                    "id": 102332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102326,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102221,
                      "src": "9223:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102329,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102188,
                          "src": "9264:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102330,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102323,
                          "src": "9271:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102327,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "9231:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9238:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "9231:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9231:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "9223:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102333,
                  "nodeType": "ExpressionStatement",
                  "src": "9223:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102335,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9310:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102336,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9316:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "9310:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102338,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9324:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9310:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 102341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 102339,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102323,
                          "src": "9328:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 102340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9340:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9328:13:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9343:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a39",
                        "id": 102343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9349:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f5477906e03c08d3a3947384b574f99dee567be49f7d53b94755ce9237b89e6",
                          "typeString": "literal_string \"test_Scenario3::9\""
                        },
                        "value": "test_Scenario3::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f5477906e03c08d3a3947384b574f99dee567be49f7d53b94755ce9237b89e6",
                          "typeString": "literal_string \"test_Scenario3::9\""
                        }
                      ],
                      "id": 102334,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "9292:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9292:77:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102345,
                  "nodeType": "ExpressionStatement",
                  "src": "9292:77:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102347,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9388:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102348,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9394:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "9388:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102350,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9402:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9388:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102351,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102323,
                        "src": "9406:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3130",
                        "id": 102352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9417:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5a996f1fd8326c8de441fa3a55910fc5083e2ca25cffbdb5f050dd5133142bb2",
                          "typeString": "literal_string \"test_Scenario3::10\""
                        },
                        "value": "test_Scenario3::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5a996f1fd8326c8de441fa3a55910fc5083e2ca25cffbdb5f050dd5133142bb2",
                          "typeString": "literal_string \"test_Scenario3::10\""
                        }
                      ],
                      "id": 102346,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9379:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9379:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102354,
                  "nodeType": "ExpressionStatement",
                  "src": "9379:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102356,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9457:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102357,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9463:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "9457:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102359,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9472:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9457:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9476:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3131",
                        "id": 102361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9479:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe55f1650017f866c8d568e185a220e4cff4262e8d36a99487fdd60d4680a762",
                          "typeString": "literal_string \"test_Scenario3::11\""
                        },
                        "value": "test_Scenario3::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe55f1650017f866c8d568e185a220e4cff4262e8d36a99487fdd60d4680a762",
                          "typeString": "literal_string \"test_Scenario3::11\""
                        }
                      ],
                      "id": 102355,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9448:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9448:52:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102363,
                  "nodeType": "ExpressionStatement",
                  "src": "9448:52:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102367,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102221,
                                "src": "9527:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102368,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9533:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "9527:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102370,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9542:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9527:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9519:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102365,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9519:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9519:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 102372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9547:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3132",
                        "id": 102373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9550:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80fe9842973f5519ac3e01e12e4fdcc732e6dd6f1b809147326f006c90deabbf",
                          "typeString": "literal_string \"test_Scenario3::12\""
                        },
                        "value": "test_Scenario3::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80fe9842973f5519ac3e01e12e4fdcc732e6dd6f1b809147326f006c90deabbf",
                          "typeString": "literal_string \"test_Scenario3::12\""
                        }
                      ],
                      "id": 102364,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9510:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9510:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102375,
                  "nodeType": "ExpressionStatement",
                  "src": "9510:61:138"
                },
                {
                  "expression": {
                    "id": 102378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102376,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102323,
                      "src": "9609:9:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9621:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "9609:18:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102379,
                  "nodeType": "ExpressionStatement",
                  "src": "9609:18:138"
                },
                {
                  "expression": {
                    "id": 102386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102380,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102221,
                      "src": "9637:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102383,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102188,
                          "src": "9678:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102384,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102323,
                          "src": "9685:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102381,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "9645:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9652:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "9645:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9645:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "9637:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102387,
                  "nodeType": "ExpressionStatement",
                  "src": "9637:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102389,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9724:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102390,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9730:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "9724:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102392,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9738:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9724:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102393,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102323,
                        "src": "9742:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3133",
                        "id": 102395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9759:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eb320a057eadd845ea64282ac1a686927144852b44668ece3128aeb14356121",
                          "typeString": "literal_string \"test_Scenario3::13\""
                        },
                        "value": "test_Scenario3::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eb320a057eadd845ea64282ac1a686927144852b44668ece3128aeb14356121",
                          "typeString": "literal_string \"test_Scenario3::13\""
                        }
                      ],
                      "id": 102388,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "9706:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9706:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102397,
                  "nodeType": "ExpressionStatement",
                  "src": "9706:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102399,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9799:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102400,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9805:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "9799:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102402,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9813:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9799:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102403,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102323,
                        "src": "9817:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3134",
                        "id": 102404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9828:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9dea21999cb44896be9180b2331d285b9fb4ec1c94cb5df8b6a1e909b2ad039",
                          "typeString": "literal_string \"test_Scenario3::14\""
                        },
                        "value": "test_Scenario3::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9dea21999cb44896be9180b2331d285b9fb4ec1c94cb5df8b6a1e909b2ad039",
                          "typeString": "literal_string \"test_Scenario3::14\""
                        }
                      ],
                      "id": 102398,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9790:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9790:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102406,
                  "nodeType": "ExpressionStatement",
                  "src": "9790:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102408,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102221,
                            "src": "9868:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102409,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9874:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "9868:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102411,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9883:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9868:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102412,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "9887:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3135",
                        "id": 102413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9905:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f378f309ba7218b7796ee9df5d83110df003045e14b4c5a6b97dd4532b5b0bd",
                          "typeString": "literal_string \"test_Scenario3::15\""
                        },
                        "value": "test_Scenario3::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f378f309ba7218b7796ee9df5d83110df003045e14b4c5a6b97dd4532b5b0bd",
                          "typeString": "literal_string \"test_Scenario3::15\""
                        }
                      ],
                      "id": 102407,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9859:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9859:67:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102415,
                  "nodeType": "ExpressionStatement",
                  "src": "9859:67:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102419,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102221,
                                "src": "9953:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102420,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9959:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "9953:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102422,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9968:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9953:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9945:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102417,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9945:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9945:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9973:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f333a3a3136",
                        "id": 102425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9976:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27a59b0b5a78c7d4ad1fe3b57de3c4af3d397d1a5b3b435c1d1cc852dacc733a",
                          "typeString": "literal_string \"test_Scenario3::16\""
                        },
                        "value": "test_Scenario3::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27a59b0b5a78c7d4ad1fe3b57de3c4af3d397d1a5b3b435c1d1cc852dacc733a",
                          "typeString": "literal_string \"test_Scenario3::16\""
                        }
                      ],
                      "id": 102416,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9936:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9936:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102427,
                  "nodeType": "ExpressionStatement",
                  "src": "9936:61:138"
                }
              ]
            },
            "functionSelector": "396b9c98",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario3",
            "nameLocation": "8084:14:138",
            "parameters": {
              "id": 102182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8098:2:138"
            },
            "returnParameters": {
              "id": 102183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8113:0:138"
            },
            "scope": 102672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 102671,
            "nodeType": "FunctionDefinition",
            "src": "10010:1895:138",
            "nodes": [],
            "body": {
              "id": 102670,
              "nodeType": "Block",
              "src": "10048:1857:138",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102436
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102436,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "10120:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102670,
                      "src": "10103:22:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102434,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10103:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102435,
                        "nodeType": "ArrayTypeName",
                        "src": "10103:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102442,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 102440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10142:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 102439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "10128:13:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10132:7:138",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102438,
                        "nodeType": "ArrayTypeName",
                        "src": "10132:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 102441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10128:16:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10103:41:138"
                },
                {
                  "expression": {
                    "id": 102450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102443,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102436,
                        "src": "10154:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102445,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102444,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10160:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10154:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102448,
                          "name": "bnb",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99543,
                          "src": "10173:3:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 102447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10165:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102446,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10165:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10165:12:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10154:23:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102451,
                  "nodeType": "ExpressionStatement",
                  "src": "10154:23:138"
                },
                {
                  "expression": {
                    "id": 102459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102452,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102436,
                        "src": "10187:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102454,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10193:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10187:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102457,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99531,
                          "src": "10206:4:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$106636",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 102456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "10198:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10198:7:138",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10198:13:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10187:24:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102460,
                  "nodeType": "ExpressionStatement",
                  "src": "10187:24:138"
                },
                {
                  "assignments": [
                    102462
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102462,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "10256:8:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102670,
                      "src": "10248:16:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102461,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10248:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102464,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 102463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "10267:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10248:23:138"
                },
                {
                  "assignments": [
                    102469
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102469,
                      "mutability": "mutable",
                      "name": "quote",
                      "nameLocation": "10303:5:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102670,
                      "src": "10281:27:138",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 102468,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102467,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "10281:8:138",
                            "10290:5:138"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "10281:14:138"
                        },
                        "referencedDeclaration": 62151,
                        "src": "10281:14:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102475,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102472,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102436,
                        "src": "10343:5:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 102473,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102462,
                        "src": "10350:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 102470,
                        "name": "quoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99564,
                        "src": "10311:6:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 102471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10318:24:138",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "10311:31:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 102474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10311:48:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10281:78:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102477,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10379:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102478,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10385:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "10379:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102480,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10393:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10379:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102481,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102462,
                        "src": "10397:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a31",
                        "id": 102482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10407:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_85babeeff134d71d49277b4f6156361be83cf1eb2ec50f709c0ed4256a158c50",
                          "typeString": "literal_string \"test_Scenario4::1\""
                        },
                        "value": "test_Scenario4::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_85babeeff134d71d49277b4f6156361be83cf1eb2ec50f709c0ed4256a158c50",
                          "typeString": "literal_string \"test_Scenario4::1\""
                        }
                      ],
                      "id": 102476,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10370:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10370:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102484,
                  "nodeType": "ExpressionStatement",
                  "src": "10370:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102486,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10446:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10452:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "10446:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102489,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10460:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10446:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102490,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102462,
                        "src": "10464:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a32",
                        "id": 102491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10474:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e492dfa7c01157b52f985d31f3a2ad9614ae0aa93c22532ab742beb448ffd1b4",
                          "typeString": "literal_string \"test_Scenario4::2\""
                        },
                        "value": "test_Scenario4::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e492dfa7c01157b52f985d31f3a2ad9614ae0aa93c22532ab742beb448ffd1b4",
                          "typeString": "literal_string \"test_Scenario4::2\""
                        }
                      ],
                      "id": 102485,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "10437:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10437:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102493,
                  "nodeType": "ExpressionStatement",
                  "src": "10437:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102495,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10513:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102496,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10519:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "10513:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102498,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10528:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10513:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102499,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "10532:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a33",
                        "id": 102500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10550:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be69c4b03aff30d8c3a2c868ced3588db6c8bfaa8052a5ed304d3761bb3192cc",
                          "typeString": "literal_string \"test_Scenario4::3\""
                        },
                        "value": "test_Scenario4::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be69c4b03aff30d8c3a2c868ced3588db6c8bfaa8052a5ed304d3761bb3192cc",
                          "typeString": "literal_string \"test_Scenario4::3\""
                        }
                      ],
                      "id": 102494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10504:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10504:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102502,
                  "nodeType": "ExpressionStatement",
                  "src": "10504:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102506,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102469,
                                "src": "10597:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102507,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "10603:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "10597:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102509,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102508,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10612:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10597:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10589:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102504,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "10589:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10589:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10617:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a34",
                        "id": 102512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10620:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36da5e557daa7a4327f8fc4ca0a6a342a7b97888bc101c8123190ffa26b6c5c4",
                          "typeString": "literal_string \"test_Scenario4::4\""
                        },
                        "value": "test_Scenario4::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36da5e557daa7a4327f8fc4ca0a6a342a7b97888bc101c8123190ffa26b6c5c4",
                          "typeString": "literal_string \"test_Scenario4::4\""
                        }
                      ],
                      "id": 102503,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10580:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10580:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102514,
                  "nodeType": "ExpressionStatement",
                  "src": "10580:60:138"
                },
                {
                  "expression": {
                    "id": 102517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102515,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102462,
                      "src": "10677:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10688:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "10677:17:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102518,
                  "nodeType": "ExpressionStatement",
                  "src": "10677:17:138"
                },
                {
                  "expression": {
                    "id": 102525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102519,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102469,
                      "src": "10704:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102522,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102436,
                          "src": "10744:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102523,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102462,
                          "src": "10751:8:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102520,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "10712:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10719:24:138",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "10712:31:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10712:48:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "10704:56:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102526,
                  "nodeType": "ExpressionStatement",
                  "src": "10704:56:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102528,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10780:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102529,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10786:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "10780:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102531,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10794:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10780:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102532,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102462,
                        "src": "10798:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a35",
                        "id": 102533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10808:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43d3ca443659a8b9aeb283fd51e9b94c1480923a2e4fd8657046ecf58da49600",
                          "typeString": "literal_string \"test_Scenario4::5\""
                        },
                        "value": "test_Scenario4::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43d3ca443659a8b9aeb283fd51e9b94c1480923a2e4fd8657046ecf58da49600",
                          "typeString": "literal_string \"test_Scenario4::5\""
                        }
                      ],
                      "id": 102527,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10771:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10771:57:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102535,
                  "nodeType": "ExpressionStatement",
                  "src": "10771:57:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102537,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10856:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102538,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10862:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "10856:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102540,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10870:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10856:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102541,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102462,
                        "src": "10874:8:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "36653136",
                        "id": 102542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10884:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60000000000000000_by_1",
                          "typeString": "int_const 60000000000000000"
                        },
                        "value": "6e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a36",
                        "id": 102543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10890:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_42a640bffacb3bafb7850344a87d6dd05a91a5a2f40b6e763c237198b6df119d",
                          "typeString": "literal_string \"test_Scenario4::6\""
                        },
                        "value": "test_Scenario4::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_60000000000000000_by_1",
                          "typeString": "int_const 60000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_42a640bffacb3bafb7850344a87d6dd05a91a5a2f40b6e763c237198b6df119d",
                          "typeString": "literal_string \"test_Scenario4::6\""
                        }
                      ],
                      "id": 102536,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "10838:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10838:72:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102545,
                  "nodeType": "ExpressionStatement",
                  "src": "10838:72:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102547,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "10929:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102548,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10935:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "10929:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102550,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10944:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10929:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102551,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "10948:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a37",
                        "id": 102552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10966:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c057694230529927a30f61aa8b05e3b187aaba6778bfd254c45587960bafec7",
                          "typeString": "literal_string \"test_Scenario4::7\""
                        },
                        "value": "test_Scenario4::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c057694230529927a30f61aa8b05e3b187aaba6778bfd254c45587960bafec7",
                          "typeString": "literal_string \"test_Scenario4::7\""
                        }
                      ],
                      "id": 102546,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10920:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10920:66:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102554,
                  "nodeType": "ExpressionStatement",
                  "src": "10920:66:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102558,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102469,
                                "src": "11013:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102559,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11019:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "11013:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102561,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102560,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11028:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11013:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11005:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102556,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11005:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11005:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11033:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a38",
                        "id": 102564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11036:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_64449a25f23130156f00fa5a116c36633c2316f67f89ea9d1a43e9d51978a54e",
                          "typeString": "literal_string \"test_Scenario4::8\""
                        },
                        "value": "test_Scenario4::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_64449a25f23130156f00fa5a116c36633c2316f67f89ea9d1a43e9d51978a54e",
                          "typeString": "literal_string \"test_Scenario4::8\""
                        }
                      ],
                      "id": 102555,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10996:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10996:60:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102566,
                  "nodeType": "ExpressionStatement",
                  "src": "10996:60:138"
                },
                {
                  "assignments": [
                    102568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102568,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "11102:9:138",
                      "nodeType": "VariableDeclaration",
                      "scope": 102670,
                      "src": "11094:17:138",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102567,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11094:7:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102570,
                  "initialValue": {
                    "hexValue": "31653136",
                    "id": 102569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11114:4:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "1e16"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11094:24:138"
                },
                {
                  "expression": {
                    "id": 102577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102571,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102469,
                      "src": "11128:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102574,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102436,
                          "src": "11169:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102575,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102568,
                          "src": "11176:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102572,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "11136:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11143:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "11136:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102576,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11136:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "11128:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102578,
                  "nodeType": "ExpressionStatement",
                  "src": "11128:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102580,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11206:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102581,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11212:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "11206:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102583,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11220:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11206:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102584,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102568,
                        "src": "11224:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a39",
                        "id": 102585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11235:19:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_552d5d5ffc5c42a02c458a759444a42092361d21401d8d4ff0ccab5f78b0d311",
                          "typeString": "literal_string \"test_Scenario4::9\""
                        },
                        "value": "test_Scenario4::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_552d5d5ffc5c42a02c458a759444a42092361d21401d8d4ff0ccab5f78b0d311",
                          "typeString": "literal_string \"test_Scenario4::9\""
                        }
                      ],
                      "id": 102579,
                      "name": "assertLt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1590,
                        1608,
                        1662,
                        1680
                      ],
                      "referencedDeclaration": 1608,
                      "src": "11197:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11197:58:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102587,
                  "nodeType": "ExpressionStatement",
                  "src": "11197:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102589,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11274:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102590,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11280:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "11274:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102592,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11288:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11274:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102593,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102568,
                        "src": "11292:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3130",
                        "id": 102594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11303:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fc6fac3d1767ef37f01aa4ee6f84ef1ae5674ade1f10a4b496c3116910826c4",
                          "typeString": "literal_string \"test_Scenario4::10\""
                        },
                        "value": "test_Scenario4::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fc6fac3d1767ef37f01aa4ee6f84ef1ae5674ade1f10a4b496c3116910826c4",
                          "typeString": "literal_string \"test_Scenario4::10\""
                        }
                      ],
                      "id": 102588,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11265:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11265:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102596,
                  "nodeType": "ExpressionStatement",
                  "src": "11265:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102598,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11343:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102599,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11349:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "11343:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102601,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11358:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11343:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102602,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "11362:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3131",
                        "id": 102603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11380:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a071e8de3502dac114261a8502182267da5dbb9996a36c0218b96bd84cbf3fb3",
                          "typeString": "literal_string \"test_Scenario4::11\""
                        },
                        "value": "test_Scenario4::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a071e8de3502dac114261a8502182267da5dbb9996a36c0218b96bd84cbf3fb3",
                          "typeString": "literal_string \"test_Scenario4::11\""
                        }
                      ],
                      "id": 102597,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11334:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11334:67:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102605,
                  "nodeType": "ExpressionStatement",
                  "src": "11334:67:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102609,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102469,
                                "src": "11428:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102610,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11434:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "11428:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102612,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102611,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11443:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11428:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11420:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102607,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11420:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11420:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11448:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3132",
                        "id": 102615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11451:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce32fe06a9fa66a9f3b0508dd09e21bc6643d47d389964c17b9af3ab161a7b8e",
                          "typeString": "literal_string \"test_Scenario4::12\""
                        },
                        "value": "test_Scenario4::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce32fe06a9fa66a9f3b0508dd09e21bc6643d47d389964c17b9af3ab161a7b8e",
                          "typeString": "literal_string \"test_Scenario4::12\""
                        }
                      ],
                      "id": 102606,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11411:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11411:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102617,
                  "nodeType": "ExpressionStatement",
                  "src": "11411:61:138"
                },
                {
                  "expression": {
                    "id": 102620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102618,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102568,
                      "src": "11510:9:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "313030653138",
                      "id": 102619,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11522:6:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000"
                      },
                      "value": "100e18"
                    },
                    "src": "11510:18:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "id": 102621,
                  "nodeType": "ExpressionStatement",
                  "src": "11510:18:138"
                },
                {
                  "expression": {
                    "id": 102628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102622,
                      "name": "quote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102469,
                      "src": "11538:5:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102625,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102436,
                          "src": "11579:5:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102626,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102568,
                          "src": "11586:9:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102623,
                          "name": "quoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 99564,
                          "src": "11546:6:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "11553:25:138",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "11546:32:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "11546:50:138",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "11538:58:138",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102629,
                  "nodeType": "ExpressionStatement",
                  "src": "11538:58:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102631,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11625:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102632,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11631:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "11625:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102634,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11639:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11625:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102635,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102568,
                        "src": "11643:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "35653136",
                        "id": 102636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11654:4:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        "value": "5e16"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3133",
                        "id": 102637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11660:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b1a9378d90f2d410cdf80812aab0c38044df8632d54c524094d6d6fc61158b5",
                          "typeString": "literal_string \"test_Scenario4::13\""
                        },
                        "value": "test_Scenario4::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_50000000000000000_by_1",
                          "typeString": "int_const 50000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0b1a9378d90f2d410cdf80812aab0c38044df8632d54c524094d6d6fc61158b5",
                          "typeString": "literal_string \"test_Scenario4::13\""
                        }
                      ],
                      "id": 102630,
                      "name": "assertApproxEqRel",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2337,
                        2358,
                        2421,
                        2442
                      ],
                      "referencedDeclaration": 2358,
                      "src": "11607:17:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11607:74:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102639,
                  "nodeType": "ExpressionStatement",
                  "src": "11607:74:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102641,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11700:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102642,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11706:7:138",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "11700:13:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102644,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11714:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11700:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 102645,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102568,
                        "src": "11718:9:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3134",
                        "id": 102646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11729:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51523fe5edc482c9e784925408d1c4ff3338e5b2e6fc73bcc325ceb8a03d7bb6",
                          "typeString": "literal_string \"test_Scenario4::14\""
                        },
                        "value": "test_Scenario4::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51523fe5edc482c9e784925408d1c4ff3338e5b2e6fc73bcc325ceb8a03d7bb6",
                          "typeString": "literal_string \"test_Scenario4::14\""
                        }
                      ],
                      "id": 102640,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11691:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11691:59:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102648,
                  "nodeType": "ExpressionStatement",
                  "src": "11691:59:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102650,
                            "name": "quote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102469,
                            "src": "11769:5:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102651,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11775:8:138",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "11769:14:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102653,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11784:1:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11769:17:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 102654,
                        "name": "DEFAULT_BIN_STEP",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99473,
                        "src": "11788:16:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3135",
                        "id": 102655,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11806:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9483aa72295c71c1ca6da49f4694dd4774a6c4cd7f5ee9e80b2290771fdf1b4b",
                          "typeString": "literal_string \"test_Scenario4::15\""
                        },
                        "value": "test_Scenario4::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9483aa72295c71c1ca6da49f4694dd4774a6c4cd7f5ee9e80b2290771fdf1b4b",
                          "typeString": "literal_string \"test_Scenario4::15\""
                        }
                      ],
                      "id": 102649,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11760:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11760:67:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102657,
                  "nodeType": "ExpressionStatement",
                  "src": "11760:67:138"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102661,
                                "name": "quote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102469,
                                "src": "11854:5:138",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102662,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "11860:8:138",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "11854:14:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102664,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11869:1:138",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11854:17:138",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11846:7:138",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 102659,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "11846:7:138",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11846:26:138",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 102666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11874:1:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f5363656e6172696f343a3a3136",
                        "id": 102667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11877:20:138",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_081105b7523c0f8e2b80cf52450f00d1500129aa1342dc6de69e0c26975d0a26",
                          "typeString": "literal_string \"test_Scenario4::16\""
                        },
                        "value": "test_Scenario4::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_081105b7523c0f8e2b80cf52450f00d1500129aa1342dc6de69e0c26975d0a26",
                          "typeString": "literal_string \"test_Scenario4::16\""
                        }
                      ],
                      "id": 102658,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "11837:8:138",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11837:61:138",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102669,
                  "nodeType": "ExpressionStatement",
                  "src": "11837:61:138"
                }
              ]
            },
            "functionSelector": "5322e371",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Scenario4",
            "nameLocation": "10019:14:138",
            "parameters": {
              "id": 102430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10033:2:138"
            },
            "returnParameters": {
              "id": 102431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10048:0:138"
            },
            "scope": 102672,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 101270,
              "name": "TestHelper",
              "nameLocations": [
                "626:10:138"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 101064,
              "src": "626:10:138"
            },
            "id": 101271,
            "nodeType": "InheritanceSpecifier",
            "src": "626:10:138"
          }
        ],
        "canonicalName": "LiquidityBinQuoterTest",
        "contractDependencies": [
          41364,
          58932,
          61826,
          62082,
          63370,
          66608,
          106636,
          106690,
          107167
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 101269,
          "nodeType": "StructuredDocumentation",
          "src": "103:487:138",
          "text": " Market deployed:\n - USDT/USDC, V1 with low liquidity, V2 with high liquidity\n - WNATIVE/USDC, V1 with high liquidity, V2 with low liquidity\n - WETH/USDC, V1 with low liquidity, V2.2 with high liquidity\n - BNB/USDC, V2 with high liquidity, V2.2 with low liquidity\n Every market with low liquidity has a slighly higher price.\n It should be picked with small amounts but not with large amounts.\n All tokens are considered 18 decimals for simplification purposes."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          102672,
          101064,
          12155,
          12103,
          6783,
          6423,
          5630,
          3570,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinQuoterTest",
        "nameLocation": "600:22:138",
        "scope": 102673,
        "usedErrors": [
          76164,
          76174,
          78236,
          78453
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7565,
          7571
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 138
}