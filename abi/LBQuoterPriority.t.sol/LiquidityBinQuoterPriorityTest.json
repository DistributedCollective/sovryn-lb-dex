{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_QuoteFromAmounOut",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_QuoteFromAmountIn",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600b805460ff19166001179055601d80546001600160a01b0319167364b57f4249aa99a812212cee7daefedc40b203cd17905534801561004357600080fd5b50616032806100536000396000f3fe60806040523480156200001157600080fd5b5060043610620000f15760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa91462000197578063ba414fa614620001a1578063e20c9f7114620001bc578063f4af7f0814620001c657600080fd5b806385226c81146200016a578063916a17c61462000183578063a2797cec146200018d57600080fd5b80633e5e3c2311620000cc5780633e5e3c23146200013d5780633f7286f4146200014757806366d9a9a0146200015157600080fd5b80630a9254e414620000f65780631ed7831c14620001025780632ade38801462000124575b600080fd5b62000100620001d0565b005b6200010c620003b0565b6040516200011b919062002be2565b60405180910390f35b6200012e62000414565b6040516200011b919062002c52565b6200010c62000562565b6200010c620005c4565b6200015b62000626565b6040516200011b919062002d18565b6200017462000725565b6040516200011b919062002de7565b6200015b620007ff565b62000100620008fe565b62000174620018f1565b620001ab620019cb565b60405190151581526020016200011b565b6200010c62001a8a565b6200010062001aec565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa15801562000256573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000280919081019062002ec3565b6301fc52a26040518363ffffffff1660e01b8152600401620002a492919062002f62565b6020604051808303816000875af1158015620002c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ea919062002f86565b50739ad6c38be94206ca50bb0d90783181662f0cfa10738e42f2f4101563bf679975178e880fd87d3efd4e73b4315e873dbcf96ffd0acd8ea43f689d8c20fb30604051620003389062002b8e565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000375573d6000803e3d6000fd5b50601c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200040a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003eb575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200055957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000541578382906000526020600020018054620004ad9062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620004db9062002fa0565b80156200052c5780601f1062000500576101008083540402835291602001916200052c565b820191906000526020600020905b8154815290600101906020018083116200050e57829003601f168201915b5050505050815260200190600101906200048b565b50505050815250508152602001906001019062000438565b50505050905090565b606060168054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620005595760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200070c57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620006b85790505b505050505081525050815260200190600101906200064a565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620005595783829060005260206000200180546200076b9062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620007999062002fa0565b8015620007ea5780601f10620007be57610100808354040283529160200191620007ea565b820191906000526020600020905b815481529060010190602001808311620007cc57829003601f168201915b50505050508152602001906001019062000749565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620005595760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620008e557602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620008915790505b5050505050815250508152602001906001019062000823565b604080516002808252606082018352600092602083019080368337019050509050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c7816000815181106200094a576200094a62002fdc565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160018151811062000995576200099562002fdc565b6001600160a01b039283166020918202929092010152601c54604051623e40a960e61b8152620f4240926000921690630f902a4090620009dc908690869060040162002ff2565b600060405180830381865afa158015620009fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000a2491908101906200321c565b601d54604051623e40a960e61b81529192506000916001600160a01b0390911690630f902a409062000a5d908790879060040162002ff2565b600060405180830381865afa15801562000a7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000aa591908101906200321c565b905062000b2b826000015160008151811062000ac55762000ac562002fdc565b6020026020010151826000015160008151811062000ae75762000ae762002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a310000000000000081525062002add565b62000baf826000015160018151811062000b495762000b4962002fdc565b6020026020010151826000015160018151811062000b6b5762000b6b62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a320000000000000081525062002add565b62000c26826020015160008151811062000bcd5762000bcd62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a330000000000000081525062002add565b62000c9d816020015160008151811062000c445762000c4462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a340000000000000081525062002add565b62000d21826040015160008151811062000cbb5762000cbb62002fdc565b6020026020010151826040015160008151811062000cdd5762000cdd62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a350000000000000081525062002b51565b62000d9f826060015160008151811062000d3f5762000d3f62002fdc565b6020026020010151600181111562000d5b5762000d5b6200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a360000000000000081525062002b51565b62000e1d816060015160008151811062000dbd5762000dbd62002fdc565b6020026020010151600181111562000dd95762000dd96200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a370000000000000081525062002b51565b62000eb3826080015160008151811062000e3b5762000e3b62002fdc565b60200260200101516001600160801b0316826080015160008151811062000e665762000e6662002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a380000000000000081525062002b51565b62000f49826080015160018151811062000ed15762000ed162002fdc565b60200260200101516001600160801b0316826080015160018151811062000efc5762000efc62002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a390000000000000081525062002b51565b62000fdf8260a0015160008151811062000f675762000f6762002fdc565b60200260200101516001600160801b03168260a0015160008151811062000f925762000f9262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313000000000000081525062002b51565b620010758260a0015160018151811062000ffd5762000ffd62002fdc565b60200260200101516001600160801b03168260a0015160018151811062001028576200102862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313100000000000081525062002b51565b6200110b8260c0015160008151811062001093576200109362002fdc565b60200260200101516001600160801b03168260c00151600081518110620010be57620010be62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313200000000000081525062002b51565b73b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8460008151811062001136576200113662002fdc565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78460018151811062001181576200118162002fdc565b6001600160a01b039283166020918202929092010152601c54604051623e40a960e61b8152911690630f902a4090620011c1908790879060040162002ff2565b600060405180830381865afa158015620011df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200120991908101906200321c565b601d54604051623e40a960e61b81529193506001600160a01b031690630f902a40906200123d908790879060040162002ff2565b600060405180830381865afa1580156200125b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200128591908101906200321c565b90506200130b8260000151600081518110620012a557620012a562002fdc565b60200260200101518260000151600081518110620012c757620012c762002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313300000000000081525062002add565b6200138f826000015160018151811062001329576200132962002fdc565b602002602001015182600001516001815181106200134b576200134b62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313400000000000081525062002add565b620014068260200151600081518110620013ad57620013ad62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313500000000000081525062002add565b6200147d816020015160008151811062001424576200142462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313600000000000081525062002add565b6200150182604001516000815181106200149b576200149b62002fdc565b60200260200101518260400151600081518110620014bd57620014bd62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313700000000000081525062002b51565b6200157f82606001516000815181106200151f576200151f62002fdc565b602002602001015160018111156200153b576200153b6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313800000000000081525062002b51565b620015fd81606001516000815181106200159d576200159d62002fdc565b60200260200101516001811115620015b957620015b96200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313900000000000081525062002b51565b6200169382608001516000815181106200161b576200161b62002fdc565b60200260200101516001600160801b0316826080015160008151811062001646576200164662002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323000000000000081525062002b51565b620017298260800151600181518110620016b157620016b162002fdc565b60200260200101516001600160801b03168260800151600181518110620016dc57620016dc62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323100000000000081525062002b51565b620017bf8260a0015160008151811062001747576200174762002fdc565b60200260200101516001600160801b03168260a0015160008151811062001772576200177262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323200000000000081525062002b51565b620018558260a00151600181518110620017dd57620017dd62002fdc565b60200260200101516001600160801b03168260a0015160018151811062001808576200180862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323300000000000081525062002b51565b620018eb8260c0015160008151811062001873576200187362002fdc565b60200260200101516001600160801b03168260c001516000815181106200189e576200189e62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323400000000000081525062002b51565b50505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000559578382906000526020600020018054620019379062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620019659062002fa0565b8015620019b65780601f106200198a57610100808354040283529160200191620019b6565b820191906000526020600020905b8154815290600101906020018083116200199857829003601f168201915b50505050508152602001906001019062001915565b60075460009060ff1615620019e4575060075460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562001a5d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a83919062002f86565b1415905090565b606060138054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b60408051600280825260608201835260009260208301908036833701905050905073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160008151811062001b385762001b3862002fdc565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78160018151811062001b835762001b8362002fdc565b6001600160a01b039283166020918202929092010152601c54604051632c90a11360e11b8152620f424092600092169063592142269062001bcb908690869060040162002ff2565b600060405180830381865afa15801562001be9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c1391908101906200321c565b601d54604051632c90a11360e11b81529192506000916001600160a01b039091169063592142269062001c4d908790879060040162002ff2565b600060405180830381865afa15801562001c6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c9591908101906200321c565b905062001d1b826000015160008151811062001cb55762001cb562002fdc565b6020026020010151826000015160008151811062001cd75762001cd762002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a310000000000000081525062002add565b62001d9f826000015160018151811062001d395762001d3962002fdc565b6020026020010151826000015160018151811062001d5b5762001d5b62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a320000000000000081525062002add565b62001e16826020015160008151811062001dbd5762001dbd62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a330000000000000081525062002add565b62001e8d816020015160008151811062001e345762001e3462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a340000000000000081525062002add565b62001f11826040015160008151811062001eab5762001eab62002fdc565b6020026020010151826040015160008151811062001ecd5762001ecd62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a350000000000000081525062002b51565b62001f8f826060015160008151811062001f2f5762001f2f62002fdc565b6020026020010151600181111562001f4b5762001f4b6200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a360000000000000081525062002b51565b6200200d816060015160008151811062001fad5762001fad62002fdc565b6020026020010151600181111562001fc95762001fc96200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a370000000000000081525062002b51565b620020a382608001516000815181106200202b576200202b62002fdc565b60200260200101516001600160801b0316826080015160008151811062002056576200205662002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a380000000000000081525062002b51565b620021398260800151600181518110620020c157620020c162002fdc565b60200260200101516001600160801b03168260800151600181518110620020ec57620020ec62002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a390000000000000081525062002b51565b620021cf8260a0015160008151811062002157576200215762002fdc565b60200260200101516001600160801b03168260a0015160008151811062002182576200218262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313000000000000081525062002b51565b620022658260a00151600181518110620021ed57620021ed62002fdc565b60200260200101516001600160801b03168260a0015160018151811062002218576200221862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313100000000000081525062002b51565b620022fb8260c0015160008151811062002283576200228362002fdc565b60200260200101516001600160801b03168260c00151600081518110620022ae57620022ae62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313200000000000081525062002b51565b739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78460008151811062002326576200232662002fdc565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8460018151811062002371576200237162002fdc565b6001600160a01b039283166020918202929092010152601c54604051632c90a11360e11b8152911690635921422690620023b2908790879060040162002ff2565b600060405180830381865afa158015620023d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620023fa91908101906200321c565b601d54604051632c90a11360e11b81529193506001600160a01b0316906359214226906200242f908790879060040162002ff2565b600060405180830381865afa1580156200244d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200247791908101906200321c565b9050620024fd826000015160008151811062002497576200249762002fdc565b60200260200101518260000151600081518110620024b957620024b962002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313300000000000081525062002add565b6200258182600001516001815181106200251b576200251b62002fdc565b602002602001015182600001516001815181106200253d576200253d62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313400000000000081525062002add565b620025f882602001516000815181106200259f576200259f62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313500000000000081525062002add565b6200266f816020015160008151811062002616576200261662002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313600000000000081525062002add565b620026f382604001516000815181106200268d576200268d62002fdc565b60200260200101518260400151600081518110620026af57620026af62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313700000000000081525062002b51565b62002771826060015160008151811062002711576200271162002fdc565b602002602001015160018111156200272d576200272d6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313800000000000081525062002b51565b620027ef81606001516000815181106200278f576200278f62002fdc565b60200260200101516001811115620027ab57620027ab6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313900000000000081525062002b51565b6200288582608001516000815181106200280d576200280d62002fdc565b60200260200101516001600160801b0316826080015160008151811062002838576200283862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323000000000000081525062002b51565b6200291b8260800151600181518110620028a357620028a362002fdc565b60200260200101516001600160801b03168260800151600181518110620028ce57620028ce62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323100000000000081525062002b51565b620029b18260a0015160008151811062002939576200293962002fdc565b60200260200101516001600160801b03168260a0015160008151811062002964576200296462002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323200000000000081525062002b51565b62002a478260a00151600181518110620029cf57620029cf62002fdc565b60200260200101516001600160801b03168260a00151600181518110620029fa57620029fa62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323300000000000081525062002b51565b620018eb8260c0015160008151811062002a655762002a6562002fdc565b60200260200101516001600160801b03168260c0015160008151811062002a905762002a9062002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323400000000000081525062002b51565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d19062002b1a9086908690869060040162003391565b60006040518083038186803b15801562002b3357600080fd5b505afa15801562002b48573d6000803e3d6000fd5b50505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062002b1a90869086908690600401620033c8565b612c1380620033ea83390190565b600081518084526020808501945080840160005b8381101562002bd75781516001600160a01b03168752958201959082019060010162002bb0565b509495945050505050565b60208152600062002bf7602083018462002b9c565b9392505050565b60005b8381101562002c1b57818101518382015260200162002c01565b50506000910152565b6000815180845262002c3e81602086016020860162002bfe565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002d0857603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002cf157605f1989850301835262002cde84865162002c24565b948e01949350918d019160010162002cbf565b505050978a01979450509188019160010162002c79565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002dd857898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002dc25783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062002d7e565b50978a0197955050509187019160010162002d40565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002e4057603f1988860301845262002e2d85835162002c24565b9450928501929085019060010162002e0e565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171562002e895762002e8962002e4d565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002ebb5762002ebb62002e4d565b604052919050565b60006020828403121562002ed657600080fd5b815167ffffffffffffffff8082111562002eef57600080fd5b818401915084601f83011262002f0457600080fd5b81518181111562002f195762002f1962002e4d565b62002f2e601f8201601f191660200162002e8f565b915080825285602082850101111562002f4657600080fd5b62002f5981602084016020860162002bfe565b50949350505050565b60408152600062002f77604083018562002c24565b90508260208301529392505050565b60006020828403121562002f9957600080fd5b5051919050565b600181811c9082168062002fb557607f821691505b60208210810362002fd657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60408152600062003007604083018562002b9c565b90506001600160801b03831660208301529392505050565b600067ffffffffffffffff8211156200303c576200303c62002e4d565b5060051b60200190565b600082601f8301126200305857600080fd5b81516020620030716200306b836200301f565b62002e8f565b82815260059290921b840181019181810190868411156200309157600080fd5b8286015b84811015620030c55780516001600160a01b0381168114620030b75760008081fd5b835291830191830162003095565b509695505050505050565b600082601f830112620030e257600080fd5b81516020620030f56200306b836200301f565b82815260059290921b840181019181810190868411156200311557600080fd5b8286015b84811015620030c5578051835291830191830162003119565b600082601f8301126200314457600080fd5b81516020620031576200306b836200301f565b82815260059290921b840181019181810190868411156200317757600080fd5b8286015b84811015620030c557805160028110620031955760008081fd5b83529183019183016200317b565b600082601f830112620031b557600080fd5b81516020620031c86200306b836200301f565b82815260059290921b84018101918181019086841115620031e857600080fd5b8286015b84811015620030c55780516001600160801b03811681146200320e5760008081fd5b8352918301918301620031ec565b6000602082840312156200322f57600080fd5b815167ffffffffffffffff808211156200324857600080fd5b9083019060e082860312156200325d57600080fd5b6200326762002e63565b8251828111156200327757600080fd5b620032858782860162003046565b8252506020830151828111156200329b57600080fd5b620032a98782860162003046565b602083015250604083015182811115620032c257600080fd5b620032d087828601620030d0565b604083015250606083015182811115620032e957600080fd5b620032f78782860162003132565b6060830152506080830151828111156200331057600080fd5b6200331e87828601620031a3565b60808301525060a0830151828111156200333757600080fd5b6200334587828601620031a3565b60a08301525060c0830151828111156200335e57600080fd5b6200336c87828601620031a3565b60c08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808616835280851660208401525060606040830152620033bf606083018462002c24565b95945050505050565b838152826020820152606060408201526000620033bf606083018462002c2456fe60e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220ec82eaedbfb8382272723779e6d6d6fdf66ced283e611c61014f68d031dd83d764736f6c63430008140033a26469706673582212203873bf84bd9634d2ae933ff28da6e8082c4708252fec28abecde27164aa55c7564736f6c63430008140033",
    "sourceMap": "223:7249:127:-:0;;;3126:44:3;;;-1:-1:-1;;3126:44:3;3166:4;3126:44;;;666:82:127;;;-1:-1:-1;;;;;;666:82:127;705:42;666:82;;;223:7249;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000f15760003560e01c806385226c811162000097578063b5508aa9116200006e578063b5508aa91462000197578063ba414fa614620001a1578063e20c9f7114620001bc578063f4af7f0814620001c657600080fd5b806385226c81146200016a578063916a17c61462000183578063a2797cec146200018d57600080fd5b80633e5e3c2311620000cc5780633e5e3c23146200013d5780633f7286f4146200014757806366d9a9a0146200015157600080fd5b80630a9254e414620000f65780631ed7831c14620001025780632ade38801462000124575b600080fd5b62000100620001d0565b005b6200010c620003b0565b6040516200011b919062002be2565b60405180910390f35b6200012e62000414565b6040516200011b919062002c52565b6200010c62000562565b6200010c620005c4565b6200015b62000626565b6040516200011b919062002d18565b6200017462000725565b6040516200011b919062002de7565b6200015b620007ff565b62000100620008fe565b62000174620018f1565b620001ab620019cb565b60405190151581526020016200011b565b6200010c62001a8a565b6200010062001aec565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa15801562000256573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000280919081019062002ec3565b6301fc52a26040518363ffffffff1660e01b8152600401620002a492919062002f62565b6020604051808303816000875af1158015620002c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002ea919062002f86565b50739ad6c38be94206ca50bb0d90783181662f0cfa10738e42f2f4101563bf679975178e880fd87d3efd4e73b4315e873dbcf96ffd0acd8ea43f689d8c20fb30604051620003389062002b8e565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562000375573d6000803e3d6000fd5b50601c80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b606060148054806020026020016040519081016040528092919081815260200182805480156200040a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311620003eb575b5050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b828210156200055957600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562000541578382906000526020600020018054620004ad9062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620004db9062002fa0565b80156200052c5780601f1062000500576101008083540402835291602001916200052c565b820191906000526020600020905b8154815290600101906020018083116200050e57829003601f168201915b5050505050815260200190600101906200048b565b50505050815250508152602001906001019062000438565b50505050905090565b606060168054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b606060158054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b60606019805480602002602001604051908101604052809291908181526020016000905b82821015620005595760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200070c57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620006b85790505b505050505081525050815260200190600101906200064a565b60606018805480602002602001604051908101604052809291908181526020016000905b82821015620005595783829060005260206000200180546200076b9062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620007999062002fa0565b8015620007ea5780601f10620007be57610100808354040283529160200191620007ea565b820191906000526020600020905b815481529060010190602001808311620007cc57829003601f168201915b50505050508152602001906001019062000749565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620005595760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620008e557602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411620008915790505b5050505050815250508152602001906001019062000823565b604080516002808252606082018352600092602083019080368337019050509050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c7816000815181106200094a576200094a62002fdc565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160018151811062000995576200099562002fdc565b6001600160a01b039283166020918202929092010152601c54604051623e40a960e61b8152620f4240926000921690630f902a4090620009dc908690869060040162002ff2565b600060405180830381865afa158015620009fa573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000a2491908101906200321c565b601d54604051623e40a960e61b81529192506000916001600160a01b0390911690630f902a409062000a5d908790879060040162002ff2565b600060405180830381865afa15801562000a7b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000aa591908101906200321c565b905062000b2b826000015160008151811062000ac55762000ac562002fdc565b6020026020010151826000015160008151811062000ae75762000ae762002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a310000000000000081525062002add565b62000baf826000015160018151811062000b495762000b4962002fdc565b6020026020010151826000015160018151811062000b6b5762000b6b62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a320000000000000081525062002add565b62000c26826020015160008151811062000bcd5762000bcd62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a330000000000000081525062002add565b62000c9d816020015160008151811062000c445762000c4462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a340000000000000081525062002add565b62000d21826040015160008151811062000cbb5762000cbb62002fdc565b6020026020010151826040015160008151811062000cdd5762000cdd62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a350000000000000081525062002b51565b62000d9f826060015160008151811062000d3f5762000d3f62002fdc565b6020026020010151600181111562000d5b5762000d5b6200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a360000000000000081525062002b51565b62000e1d816060015160008151811062000dbd5762000dbd62002fdc565b6020026020010151600181111562000dd95762000dd96200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a370000000000000081525062002b51565b62000eb3826080015160008151811062000e3b5762000e3b62002fdc565b60200260200101516001600160801b0316826080015160008151811062000e665762000e6662002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a380000000000000081525062002b51565b62000f49826080015160018151811062000ed15762000ed162002fdc565b60200260200101516001600160801b0316826080015160018151811062000efc5762000efc62002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a390000000000000081525062002b51565b62000fdf8260a0015160008151811062000f675762000f6762002fdc565b60200260200101516001600160801b03168260a0015160008151811062000f925762000f9262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313000000000000081525062002b51565b620010758260a0015160018151811062000ffd5762000ffd62002fdc565b60200260200101516001600160801b03168260a0015160018151811062001028576200102862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313100000000000081525062002b51565b6200110b8260c0015160008151811062001093576200109362002fdc565b60200260200101516001600160801b03168260c00151600081518110620010be57620010be62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313200000000000081525062002b51565b73b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8460008151811062001136576200113662002fdc565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78460018151811062001181576200118162002fdc565b6001600160a01b039283166020918202929092010152601c54604051623e40a960e61b8152911690630f902a4090620011c1908790879060040162002ff2565b600060405180830381865afa158015620011df573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200120991908101906200321c565b601d54604051623e40a960e61b81529193506001600160a01b031690630f902a40906200123d908790879060040162002ff2565b600060405180830381865afa1580156200125b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200128591908101906200321c565b90506200130b8260000151600081518110620012a557620012a562002fdc565b60200260200101518260000151600081518110620012c757620012c762002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313300000000000081525062002add565b6200138f826000015160018151811062001329576200132962002fdc565b602002602001015182600001516001815181106200134b576200134b62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313400000000000081525062002add565b620014068260200151600081518110620013ad57620013ad62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313500000000000081525062002add565b6200147d816020015160008151811062001424576200142462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313600000000000081525062002add565b6200150182604001516000815181106200149b576200149b62002fdc565b60200260200101518260400151600081518110620014bd57620014bd62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313700000000000081525062002b51565b6200157f82606001516000815181106200151f576200151f62002fdc565b602002602001015160018111156200153b576200153b6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313800000000000081525062002b51565b620015fd81606001516000815181106200159d576200159d62002fdc565b60200260200101516001811115620015b957620015b96200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313900000000000081525062002b51565b6200169382608001516000815181106200161b576200161b62002fdc565b60200260200101516001600160801b0316826080015160008151811062001646576200164662002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323000000000000081525062002b51565b620017298260800151600181518110620016b157620016b162002fdc565b60200260200101516001600160801b03168260800151600181518110620016dc57620016dc62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323100000000000081525062002b51565b620017bf8260a0015160008151811062001747576200174762002fdc565b60200260200101516001600160801b03168260a0015160008151811062001772576200177262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323200000000000081525062002b51565b620018558260a00151600181518110620017dd57620017dd62002fdc565b60200260200101516001600160801b03168260a0015160018151811062001808576200180862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323300000000000081525062002b51565b620018eb8260c0015160008151811062001873576200187362002fdc565b60200260200101516001600160801b03168260c001516000815181106200189e576200189e62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323400000000000081525062002b51565b50505050565b60606017805480602002602001604051908101604052809291908181526020016000905b8282101562000559578382906000526020600020018054620019379062002fa0565b80601f0160208091040260200160405190810160405280929190818152602001828054620019659062002fa0565b8015620019b65780601f106200198a57610100808354040283529160200191620019b6565b820191906000526020600020905b8154815290600101906020018083116200199857829003601f168201915b50505050508152602001906001019062001915565b60075460009060ff1615620019e4575060075460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562001a5d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a83919062002f86565b1415905090565b606060138054806020026020016040519081016040528092919081815260200182805480156200040a576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311620003eb575050505050905090565b60408051600280825260608201835260009260208301908036833701905050905073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160008151811062001b385762001b3862002fdc565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78160018151811062001b835762001b8362002fdc565b6001600160a01b039283166020918202929092010152601c54604051632c90a11360e11b8152620f424092600092169063592142269062001bcb908690869060040162002ff2565b600060405180830381865afa15801562001be9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c1391908101906200321c565b601d54604051632c90a11360e11b81529192506000916001600160a01b039091169063592142269062001c4d908790879060040162002ff2565b600060405180830381865afa15801562001c6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001c9591908101906200321c565b905062001d1b826000015160008151811062001cb55762001cb562002fdc565b6020026020010151826000015160008151811062001cd75762001cd762002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a310000000000000081525062002add565b62001d9f826000015160018151811062001d395762001d3962002fdc565b6020026020010151826000015160018151811062001d5b5762001d5b62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a320000000000000081525062002add565b62001e16826020015160008151811062001dbd5762001dbd62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a330000000000000081525062002add565b62001e8d816020015160008151811062001e345762001e3462002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a340000000000000081525062002add565b62001f11826040015160008151811062001eab5762001eab62002fdc565b6020026020010151826040015160008151811062001ecd5762001ecd62002fdc565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a350000000000000081525062002b51565b62001f8f826060015160008151811062001f2f5762001f2f62002fdc565b6020026020010151600181111562001f4b5762001f4b6200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a360000000000000081525062002b51565b6200200d816060015160008151811062001fad5762001fad62002fdc565b6020026020010151600181111562001fc95762001fc96200337b565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a370000000000000081525062002b51565b620020a382608001516000815181106200202b576200202b62002fdc565b60200260200101516001600160801b0316826080015160008151811062002056576200205662002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a380000000000000081525062002b51565b620021398260800151600181518110620020c157620020c162002fdc565b60200260200101516001600160801b03168260800151600181518110620020ec57620020ec62002fdc565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a390000000000000081525062002b51565b620021cf8260a0015160008151811062002157576200215762002fdc565b60200260200101516001600160801b03168260a0015160008151811062002182576200218262002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313000000000000081525062002b51565b620022658260a00151600181518110620021ed57620021ed62002fdc565b60200260200101516001600160801b03168260a0015160018151811062002218576200221862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313100000000000081525062002b51565b620022fb8260c0015160008151811062002283576200228362002fdc565b60200260200101516001600160801b03168260c00151600081518110620022ae57620022ae62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313200000000000081525062002b51565b739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78460008151811062002326576200232662002fdc565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8460018151811062002371576200237162002fdc565b6001600160a01b039283166020918202929092010152601c54604051632c90a11360e11b8152911690635921422690620023b2908790879060040162002ff2565b600060405180830381865afa158015620023d0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620023fa91908101906200321c565b601d54604051632c90a11360e11b81529193506001600160a01b0316906359214226906200242f908790879060040162002ff2565b600060405180830381865afa1580156200244d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200247791908101906200321c565b9050620024fd826000015160008151811062002497576200249762002fdc565b60200260200101518260000151600081518110620024b957620024b962002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313300000000000081525062002add565b6200258182600001516001815181106200251b576200251b62002fdc565b602002602001015182600001516001815181106200253d576200253d62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313400000000000081525062002add565b620025f882602001516000815181106200259f576200259f62002fdc565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313500000000000081525062002add565b6200266f816020015160008151811062002616576200261662002fdc565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313600000000000081525062002add565b620026f382604001516000815181106200268d576200268d62002fdc565b60200260200101518260400151600081518110620026af57620026af62002fdc565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313700000000000081525062002b51565b62002771826060015160008151811062002711576200271162002fdc565b602002602001015160018111156200272d576200272d6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313800000000000081525062002b51565b620027ef81606001516000815181106200278f576200278f62002fdc565b60200260200101516001811115620027ab57620027ab6200337b565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313900000000000081525062002b51565b6200288582608001516000815181106200280d576200280d62002fdc565b60200260200101516001600160801b0316826080015160008151811062002838576200283862002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323000000000000081525062002b51565b6200291b8260800151600181518110620028a357620028a362002fdc565b60200260200101516001600160801b03168260800151600181518110620028ce57620028ce62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323100000000000081525062002b51565b620029b18260a0015160008151811062002939576200293962002fdc565b60200260200101516001600160801b03168260a0015160008151811062002964576200296462002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323200000000000081525062002b51565b62002a478260a00151600181518110620029cf57620029cf62002fdc565b60200260200101516001600160801b03168260a00151600181518110620029fa57620029fa62002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323300000000000081525062002b51565b620018eb8260c0015160008151811062002a655762002a6562002fdc565b60200260200101516001600160801b03168260c0015160008151811062002a905762002a9062002fdc565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323400000000000081525062002b51565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d19062002b1a9086908690869060040162003391565b60006040518083038186803b15801562002b3357600080fd5b505afa15801562002b48573d6000803e3d6000fd5b50505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062002b1a90869086908690600401620033c8565b612c1380620033ea83390190565b600081518084526020808501945080840160005b8381101562002bd75781516001600160a01b03168752958201959082019060010162002bb0565b509495945050505050565b60208152600062002bf7602083018462002b9c565b9392505050565b60005b8381101562002c1b57818101518382015260200162002c01565b50506000910152565b6000815180845262002c3e81602086016020860162002bfe565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002d0857603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002cf157605f1989850301835262002cde84865162002c24565b948e01949350918d019160010162002cbf565b505050978a01979450509188019160010162002c79565b50919a9950505050505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101562002dd857898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b8083101562002dc25783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b019062002d7e565b50978a0197955050509187019160010162002d40565b50919998505050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002e4057603f1988860301845262002e2d85835162002c24565b9450928501929085019060010162002e0e565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171562002e895762002e8962002e4d565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171562002ebb5762002ebb62002e4d565b604052919050565b60006020828403121562002ed657600080fd5b815167ffffffffffffffff8082111562002eef57600080fd5b818401915084601f83011262002f0457600080fd5b81518181111562002f195762002f1962002e4d565b62002f2e601f8201601f191660200162002e8f565b915080825285602082850101111562002f4657600080fd5b62002f5981602084016020860162002bfe565b50949350505050565b60408152600062002f77604083018562002c24565b90508260208301529392505050565b60006020828403121562002f9957600080fd5b5051919050565b600181811c9082168062002fb557607f821691505b60208210810362002fd657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60408152600062003007604083018562002b9c565b90506001600160801b03831660208301529392505050565b600067ffffffffffffffff8211156200303c576200303c62002e4d565b5060051b60200190565b600082601f8301126200305857600080fd5b81516020620030716200306b836200301f565b62002e8f565b82815260059290921b840181019181810190868411156200309157600080fd5b8286015b84811015620030c55780516001600160a01b0381168114620030b75760008081fd5b835291830191830162003095565b509695505050505050565b600082601f830112620030e257600080fd5b81516020620030f56200306b836200301f565b82815260059290921b840181019181810190868411156200311557600080fd5b8286015b84811015620030c5578051835291830191830162003119565b600082601f8301126200314457600080fd5b81516020620031576200306b836200301f565b82815260059290921b840181019181810190868411156200317757600080fd5b8286015b84811015620030c557805160028110620031955760008081fd5b83529183019183016200317b565b600082601f830112620031b557600080fd5b81516020620031c86200306b836200301f565b82815260059290921b84018101918181019086841115620031e857600080fd5b8286015b84811015620030c55780516001600160801b03811681146200320e5760008081fd5b8352918301918301620031ec565b6000602082840312156200322f57600080fd5b815167ffffffffffffffff808211156200324857600080fd5b9083019060e082860312156200325d57600080fd5b6200326762002e63565b8251828111156200327757600080fd5b620032858782860162003046565b8252506020830151828111156200329b57600080fd5b620032a98782860162003046565b602083015250604083015182811115620032c257600080fd5b620032d087828601620030d0565b604083015250606083015182811115620032e957600080fd5b620032f78782860162003132565b6060830152506080830151828111156200331057600080fd5b6200331e87828601620031a3565b60808301525060a0830151828111156200333757600080fd5b6200334587828601620031a3565b60a08301525060c0830151828111156200335e57600080fd5b6200336c87828601620031a3565b60c08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808616835280851660208401525060606040830152620033bf606083018462002c24565b95945050505050565b838152826020820152606060408201526000620033bf606083018462002c2456fe60e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220ec82eaedbfb8382272723779e6d6d6fdf66ced283e611c61014f68d031dd83d764736f6c63430008140033a26469706673582212203873bf84bd9634d2ae933ff28da6e8082c4708252fec28abecde27164aa55c7564736f6c63430008140033",
    "sourceMap": "223:7249:127:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:232;;;:::i;:::-;;2452:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3360:151;;;:::i;:::-;;;;;;;:::i;3221:133::-;;;:::i;2922:141::-;;;:::i;2738:178::-;;;:::i;:::-;;;;;;;:::i;2592:140::-;;;:::i;:::-;;;;;;;:::i;3069:146::-;;;:::i;993:3231:127:-;;;:::i;2157:141:6:-;;;:::i;1243:204:2:-;;;:::i;:::-;;;5638:14:152;;5631:22;5613:41;;5601:2;5586:18;1243:204:2;5473:187:152;2304:142:6;;;:::i;4230:3240:127:-;;;:::i;755:232::-;809:22;;-1:-1:-1;;;809:22:127;;5867:2:152;809:22:127;;;5849:21:152;5906:1;5886:18;;;5879:29;5944:11;5924:18;;;5917:39;789:19:127;;;;;;809:9;;5973:18:152;;809:22:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;809:22:127;;;;;;;;;;;;:::i;:::-;833:8;789:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;240:42:125;313::127;396;865:115;;;;;:::i;:::-;-1:-1:-1;;;;;8177:15:152;;;8159:34;;8229:15;;;8224:2;8209:18;;8202:43;8281:15;;;8276:2;8261:18;;8254:43;8086:2;8071:18;865:115:127;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;853:9:127;:127;;;;-1:-1:-1;;;;;853:127:127;;;;;;;;;;755:232::o;2452:134:6:-;2499:33;2563:16;2544:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2544:35:6;;;;;;;;;;;;;;;;;;;;;;;2452:134;:::o;3360:151::-;3409:42;3485:19;3463:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3463:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3360:151;:::o;3221:133::-;3267:33;3331:16;3312:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3312:35:6;;;;;;;;;;;;;;;;;;;;;;3221:133;:::o;2922:141::-;2970:35;3038:18;3017:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3017:39:6;;;;;;;;;;;;;;;;;;;;;;2922:141;:::o;2738:178::-;2794:48;2883:26;2854:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2854:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2592:140;2640:34;2707:18;2686:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3069:146;3117:40;3190:18;3169:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3169:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:3231:127;1074:16;;;1088:1;1074:16;;;;;;;;1049:22;;1074:16;;;;;;;;;;-1:-1:-1;1074:16:127;1049:41;;772:42:125;1100:5:127;1106:1;1100:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;1100:43:127;;;-1:-1:-1;;;;;1100:43:127;;;;;691:42:125;1153:5:127;1159:1;1153:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:43:127;;;:8;;;;;;;;;:43;1273:9;;:51;;-1:-1:-1;;;1273:51:127;;1226:3;;1207:16;;1273:9;;:34;;:51;;1308:5;;1226:3;;1273:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1273:51:127;;;;;;;;;;;;:::i;:::-;1367:9;;:51;;-1:-1:-1;;;1367:51:127;;1240:84;;-1:-1:-1;1334:30:127;;-1:-1:-1;;;;;1367:9:127;;;;:34;;:51;;1402:5;;1409:8;;1367:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1367:51:127;;;;;;;;;;;;:::i;:::-;1334:84;;1429:75;1438:8;:14;;;1453:1;1438:17;;;;;;;;:::i;:::-;;;;;;;1457:8;:14;;;1472:1;1457:17;;;;;;;;:::i;:::-;;;;;;;1429:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;1514;1523:8;:14;;;1538:1;1523:17;;;;;;;;:::i;:::-;;;;;;;1542:8;:14;;;1557:1;1542:17;;;;;;;;:::i;:::-;;;;;;;1514:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;1600:73;1609:8;:14;;;1624:1;1609:17;;;;;;;;:::i;:::-;;;;;;;584:42;1600:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;1683:76;1692:8;:14;;;1707:1;1692:17;;;;;;;;:::i;:::-;;;;;;;492:42;1683:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;1770:81;1779:8;:17;;;1797:1;1779:20;;;;;;;;:::i;:::-;;;;;;;1801:8;:17;;;1819:1;1801:20;;;;;;;;:::i;:::-;;;;;;;1770:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;1862:95;1877:8;:17;;;1895:1;1877:20;;;;;;;;:::i;:::-;;;;;;;1871:27;;;;;;;;:::i;:::-;1862:95;;1906:20;1862:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;1967;1982:8;:17;;;2000:1;1982:20;;;;;;;;:::i;:::-;;;;;;;1976:27;;;;;;;;:::i;:::-;1967:95;;2011:20;1967:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;2073:79;2082:8;:16;;;2099:1;2082:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2073:79:127;2103:8;:16;;;2120:1;2103:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2073:79:127;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;2162;2171:8;:16;;;2188:1;2171:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2162:79:127;2192:8;:16;;;2209:1;2192:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2162:79:127;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;2252:170;2274:8;:38;;;2313:1;2274:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2252:170:127;2329:8;:38;;;2368:1;2329:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2252:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;2432;2454:8;:38;;;2493:1;2454:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2432:170:127;2509:8;:38;;;2548:1;2509:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2432:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;2613:74;2622:8;:13;;;2636:1;2622:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2613:74:127;2640:8;:13;;;2654:1;2640:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2613:74:127;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;691:42:125;2698:5:127;2704:1;2698:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;2698:43:127;;;-1:-1:-1;;;;;2698:43:127;;;;;772:42:125;2751:5:127;2757:1;2751:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2751:43:127;;;:8;;;;;;;;;:43;2816:9;;:51;;-1:-1:-1;;;2816:51:127;;:9;;;:34;;:51;;2851:5;;2858:8;;2816:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2816:51:127;;;;;;;;;;;;:::i;:::-;2888:9;;:51;;-1:-1:-1;;;2888:51:127;;2805:62;;-1:-1:-1;;;;;;2888:9:127;;:34;;:51;;2923:5;;2930:8;;2888:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2888:51:127;;;;;;;;;;;;:::i;:::-;2877:62;;2950:76;2959:8;:14;;;2974:1;2959:17;;;;;;;;:::i;:::-;;;;;;;2978:8;:14;;;2993:1;2978:17;;;;;;;;:::i;:::-;;;;;;;2950:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;3036;3045:8;:14;;;3060:1;3045:17;;;;;;;;:::i;:::-;;;;;;;3064:8;:14;;;3079:1;3064:17;;;;;;;;:::i;:::-;;;;;;;3036:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;3123:74;3132:8;:14;;;3147:1;3132:17;;;;;;;;:::i;:::-;;;;;;;584:42;3123:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;3207:77;3216:8;:14;;;3231:1;3216:17;;;;;;;;:::i;:::-;;;;;;;492:42;3207:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;3295:82;3304:8;:17;;;3322:1;3304:20;;;;;;;;:::i;:::-;;;;;;;3326:8;:17;;;3344:1;3326:20;;;;;;;;:::i;:::-;;;;;;;3295:82;;;;;;;;;;;;;;;;;:8;:82::i;:::-;3388:96;3403:8;:17;;;3421:1;3403:20;;;;;;;;:::i;:::-;;;;;;;3397:27;;;;;;;;:::i;:::-;3388:96;;3432:20;3388:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;3494;3509:8;:17;;;3527:1;3509:20;;;;;;;;:::i;:::-;;;;;;;3503:27;;;;;;;;:::i;:::-;3494:96;;3538:20;3494:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;3601:80;3610:8;:16;;;3627:1;3610:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3601:80:127;3631:8;:16;;;3648:1;3631:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3601:80:127;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;3691;3700:8;:16;;;3717:1;3700:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3691:80:127;3721:8;:16;;;3738:1;3721:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3691:80:127;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;3782:170;3804:8;:38;;;3843:1;3804:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3782:170:127;3859:8;:38;;;3898:1;3859:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3782:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;3962;3984:8;:38;;;4023:1;3984:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3962:170:127;4039:8;:38;;;4078:1;4039:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3962:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;4143:74;4152:8;:13;;;4166:1;4152:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4143:74:127;4170:8;:13;;;4184:1;4170:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4143:74:127;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;1039:3185;;;;993:3231::o;2157:141:6:-;2206:34;2273:18;2252:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:2;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;:7;:39;;;14689:74:152;;;1398:17:2;14779:18:152;;;14772:34;1428:1:2;;1377:7;;14662:18:152;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2304:142:6:-;2353:35;2421:18;2400:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2400:39:6;;;;;;;;;;;;;;;;;;;;;;2304:142;:::o;4230:3240:127:-;4311:16;;;4325:1;4311:16;;;;;;;;4286:22;;4311:16;;;;;;;;;;-1:-1:-1;4311:16:127;4286:41;;691:42:125;4337:5:127;4343:1;4337:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;4337:43:127;;;-1:-1:-1;;;;;4337:43:127;;;;;772:42:125;4390:5:127;4396:1;4390:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4390:43:127;;;:8;;;;;;;;;:43;4511:9;;:53;;-1:-1:-1;;;4511:53:127;;4464:3;;4444:17;;4511:9;;:35;;:53;;4547:5;;4464:3;;4511:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4511:53:127;;;;;;;;;;;;:::i;:::-;4607:9;;:53;;-1:-1:-1;;;4607:53:127;;4478:86;;-1:-1:-1;4574:30:127;;-1:-1:-1;;;;;4607:9:127;;;;:35;;:53;;4643:5;;4650:9;;4607:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4607:53:127;;;;;;;;;;;;:::i;:::-;4574:86;;4671:75;4680:8;:14;;;4695:1;4680:17;;;;;;;;:::i;:::-;;;;;;;4699:8;:14;;;4714:1;4699:17;;;;;;;;:::i;:::-;;;;;;;4671:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;4756;4765:8;:14;;;4780:1;4765:17;;;;;;;;:::i;:::-;;;;;;;4784:8;:14;;;4799:1;4784:17;;;;;;;;:::i;:::-;;;;;;;4756:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;4842:73;4851:8;:14;;;4866:1;4851:17;;;;;;;;:::i;:::-;;;;;;;584:42;4842:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;4925:76;4934:8;:14;;;4949:1;4934:17;;;;;;;;:::i;:::-;;;;;;;492:42;4925:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;5012:81;5021:8;:17;;;5039:1;5021:20;;;;;;;;:::i;:::-;;;;;;;5043:8;:17;;;5061:1;5043:20;;;;;;;;:::i;:::-;;;;;;;5012:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;5104:95;5119:8;:17;;;5137:1;5119:20;;;;;;;;:::i;:::-;;;;;;;5113:27;;;;;;;;:::i;:::-;5104:95;;5148:20;5104:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;5209;5224:8;:17;;;5242:1;5224:20;;;;;;;;:::i;:::-;;;;;;;5218:27;;;;;;;;:::i;:::-;5209:95;;5253:20;5209:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;5315:79;5324:8;:16;;;5341:1;5324:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5315:79:127;5345:8;:16;;;5362:1;5345:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5315:79:127;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;5404;5413:8;:16;;;5430:1;5413:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5404:79:127;5434:8;:16;;;5451:1;5434:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5404:79:127;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;5494:170;5516:8;:38;;;5555:1;5516:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5494:170:127;5571:8;:38;;;5610:1;5571:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5494:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;5674;5696:8;:38;;;5735:1;5696:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5674:170:127;5751:8;:38;;;5790:1;5751:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5674:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;5855:74;5864:8;:13;;;5878:1;5864:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5855:74:127;5882:8;:13;;;5896:1;5882:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5855:74:127;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;772:42:125;5940:5:127;5946:1;5940:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;5940:43:127;;;-1:-1:-1;;;;;5940:43:127;;;;;691:42:125;5993:5:127;5999:1;5993:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5993:43:127;;;:8;;;;;;;;;:43;6058:9;;:53;;-1:-1:-1;;;6058:53:127;;:9;;;:35;;:53;;6094:5;;6101:9;;6058:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6058:53:127;;;;;;;;;;;;:::i;:::-;6132:9;;:53;;-1:-1:-1;;;6132:53:127;;6047:64;;-1:-1:-1;;;;;;6132:9:127;;:35;;:53;;6168:5;;6175:9;;6132:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6132:53:127;;;;;;;;;;;;:::i;:::-;6121:64;;6196:76;6205:8;:14;;;6220:1;6205:17;;;;;;;;:::i;:::-;;;;;;;6224:8;:14;;;6239:1;6224:17;;;;;;;;:::i;:::-;;;;;;;6196:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;6282;6291:8;:14;;;6306:1;6291:17;;;;;;;;:::i;:::-;;;;;;;6310:8;:14;;;6325:1;6310:17;;;;;;;;:::i;:::-;;;;;;;6282:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;6369:74;6378:8;:14;;;6393:1;6378:17;;;;;;;;:::i;:::-;;;;;;;584:42;6369:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;6453:77;6462:8;:14;;;6477:1;6462:17;;;;;;;;:::i;:::-;;;;;;;492:42;6453:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;6541:82;6550:8;:17;;;6568:1;6550:20;;;;;;;;:::i;:::-;;;;;;;6572:8;:17;;;6590:1;6572:20;;;;;;;;:::i;:::-;;;;;;;6541:82;;;;;;;;;;;;;;;;;:8;:82::i;:::-;6634:96;6649:8;:17;;;6667:1;6649:20;;;;;;;;:::i;:::-;;;;;;;6643:27;;;;;;;;:::i;:::-;6634:96;;6678:20;6634:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;6740;6755:8;:17;;;6773:1;6755:20;;;;;;;;:::i;:::-;;;;;;;6749:27;;;;;;;;:::i;:::-;6740:96;;6784:20;6740:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;6847:80;6856:8;:16;;;6873:1;6856:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6847:80:127;6877:8;:16;;;6894:1;6877:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6847:80:127;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;6937;6946:8;:16;;;6963:1;6946:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6937:80:127;6967:8;:16;;;6984:1;6967:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6937:80:127;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;7028:170;7050:8;:38;;;7089:1;7050:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7028:170:127;7105:8;:38;;;7144:1;7105:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7028:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;7208;7230:8;:38;;;7269:1;7230:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7208:170:127;7285:8;:38;;;7324:1;7285:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7208:170:127;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;7389:74;7398:8;:13;;;7412:1;7398:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7389:74:127;7416:8;:13;;;7430:1;7416:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7389:74:127;;;;;;;;;;;;;;;;;;:8;:74::i;3570:134:2:-;3668:29;;-1:-1:-1;;;3668:29:2;;:11;;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3570:134;;;:::o;2386:::-;2484:29;;-1:-1:-1;;;2484:29:2;;:11;;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:484:152:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:218;269:6;266:1;263:13;255:218;;;334:13;;-1:-1:-1;;;;;330:62:152;318:75;;413:12;;;;448:15;;;;291:1;284:9;255:218;;;-1:-1:-1;489:3:152;;14:484;-1:-1:-1;;;;;14:484:152:o;503:261::-;682:2;671:9;664:21;645:4;702:56;754:2;743:9;739:18;731:6;702:56;:::i;:::-;694:64;503:261;-1:-1:-1;;;503:261:152:o;769:250::-;854:1;864:113;878:6;875:1;872:13;864:113;;;954:11;;;948:18;935:11;;;928:39;900:2;893:10;864:113;;;-1:-1:-1;;1011:1:152;993:16;;986:27;769:250::o;1024:271::-;1066:3;1104:5;1098:12;1131:6;1126:3;1119:19;1147:76;1216:6;1209:4;1204:3;1200:14;1193:4;1186:5;1182:16;1147:76;:::i;:::-;1277:2;1256:15;-1:-1:-1;;1252:29:152;1243:39;;;;1284:4;1239:50;;1024:271;-1:-1:-1;;1024:271:152:o;1300:1765::-;1533:2;1585:21;;;1655:13;;1558:18;;;1677:22;;;1504:4;;1533:2;1718;;1736:18;;;;1773:1;1816:15;;;1801:31;;1797:40;;1860:15;;;1504:4;;1924:1112;1940:6;1935:3;1932:15;1924:1112;;;-1:-1:-1;;2009:22:152;;;2005:36;1993:49;;2065:13;;2152:9;;-1:-1:-1;;;;;2148:58:152;2133:74;;2246:11;;2240:18;2278:15;;;2271:27;;;2359:19;;2105:15;;;2391:24;;;2572:21;;;;2438:2;2520:17;;;2508:30;;2504:39;;;2462:15;;;;2617:1;2631:296;2647:8;2642:3;2639:17;2631:296;;;2753:2;2749:7;2740:6;2732;2728:19;2724:33;2717:5;2710:48;2785:42;2820:6;2809:8;2803:15;2785:42;:::i;:::-;2856:17;;;;2775:52;-1:-1:-1;2899:14:152;;;;2675:1;2666:11;2631:296;;;-1:-1:-1;;;3014:12:152;;;;2950:6;-1:-1:-1;;2979:15:152;;;;1966:1;1957:11;1924:1112;;;-1:-1:-1;3053:6:152;;1300:1765;-1:-1:-1;;;;;;;;;;1300:1765:152:o;3070:1590::-;3272:4;3301:2;3341;3330:9;3326:18;3371:2;3360:9;3353:21;3394:6;3429;3423:13;3460:6;3452;3445:22;3486:2;3476:12;;3519:2;3508:9;3504:18;3497:25;;3581:2;3571:6;3568:1;3564:14;3553:9;3549:30;3545:39;3619:2;3611:6;3607:15;3640:1;3661;3671:960;3687:6;3682:3;3679:15;3671:960;;;3756:22;;;-1:-1:-1;;3752:36:152;3740:49;;3812:13;;3899:9;;-1:-1:-1;;;;;3895:58:152;3880:74;;3993:11;;3987:18;4025:15;;;4018:27;;;4106:19;;3852:15;;;4138:24;;;4228:21;;;;4273:1;;4196:2;4184:15;;;4287:236;4303:8;4298:3;4295:17;4287:236;;;4384:15;;4401:20;4380:42;4366:57;;4492:17;;;;4331:1;4322:11;;;;;4449:14;;;;4287:236;;;-1:-1:-1;4609:12:152;;;;4546:5;-1:-1:-1;;;4574:15:152;;;;3713:1;3704:11;3671:960;;;-1:-1:-1;4648:6:152;;3070:1590;-1:-1:-1;;;;;;;;;3070:1590:152:o;4665:803::-;4827:4;4856:2;4896;4885:9;4881:18;4926:2;4915:9;4908:21;4949:6;4984;4978:13;5015:6;5007;5000:22;5053:2;5042:9;5038:18;5031:25;;5115:2;5105:6;5102:1;5098:14;5087:9;5083:30;5079:39;5065:53;;5153:2;5145:6;5141:15;5174:1;5184:255;5198:6;5195:1;5192:13;5184:255;;;5291:2;5287:7;5275:9;5267:6;5263:22;5259:36;5254:3;5247:49;5319:40;5352:6;5343;5337:13;5319:40;:::i;:::-;5309:50;-1:-1:-1;5417:12:152;;;;5382:15;;;;5220:1;5213:9;5184:255;;;-1:-1:-1;5456:6:152;;4665:803;-1:-1:-1;;;;;;;4665:803:152:o;6002:127::-;6063:10;6058:3;6054:20;6051:1;6044:31;6094:4;6091:1;6084:15;6118:4;6115:1;6108:15;6134:253;6206:2;6200:9;6248:4;6236:17;;6283:18;6268:34;;6304:22;;;6265:62;6262:88;;;6330:18;;:::i;:::-;6366:2;6359:22;6134:253;:::o;6392:275::-;6463:2;6457:9;6528:2;6509:13;;-1:-1:-1;;6505:27:152;6493:40;;6563:18;6548:34;;6584:22;;;6545:62;6542:88;;;6610:18;;:::i;:::-;6646:2;6639:22;6392:275;;-1:-1:-1;6392:275:152:o;6672:719::-;6752:6;6805:2;6793:9;6784:7;6780:23;6776:32;6773:52;;;6821:1;6818;6811:12;6773:52;6854:9;6848:16;6883:18;6924:2;6916:6;6913:14;6910:34;;;6940:1;6937;6930:12;6910:34;6978:6;6967:9;6963:22;6953:32;;7023:7;7016:4;7012:2;7008:13;7004:27;6994:55;;7045:1;7042;7035:12;6994:55;7074:2;7068:9;7096:2;7092;7089:10;7086:36;;;7102:18;;:::i;:::-;7144:53;7187:2;7168:13;;-1:-1:-1;;7164:27:152;7193:2;7160:36;7144:53;:::i;:::-;7131:66;;7220:2;7213:5;7206:17;7260:7;7255:2;7250;7246;7242:11;7238:20;7235:33;7232:53;;;7281:1;7278;7271:12;7232:53;7294:67;7358:2;7353;7346:5;7342:14;7337:2;7333;7329:11;7294:67;:::i;:::-;-1:-1:-1;7380:5:152;6672:719;-1:-1:-1;;;;6672:719:152:o;7396:306::-;7588:2;7577:9;7570:21;7551:4;7608:45;7649:2;7638:9;7634:18;7626:6;7608:45;:::i;:::-;7600:53;;7689:6;7684:2;7673:9;7669:18;7662:34;7396:306;;;;;:::o;7707:184::-;7777:6;7830:2;7818:9;7809:7;7805:23;7801:32;7798:52;;;7846:1;7843;7836:12;7798:52;-1:-1:-1;7869:16:152;;7707:184;-1:-1:-1;7707:184:152:o;8308:380::-;8387:1;8383:12;;;;8430;;;8451:61;;8505:4;8497:6;8493:17;8483:27;;8451:61;8558:2;8550:6;8547:14;8527:18;8524:38;8521:161;;8604:10;8599:3;8595:20;8592:1;8585:31;8639:4;8636:1;8629:15;8667:4;8664:1;8657:15;8521:161;;8308:380;;;:::o;8693:127::-;8754:10;8749:3;8745:20;8742:1;8735:31;8785:4;8782:1;8775:15;8809:4;8806:1;8799:15;8825:373;9032:2;9021:9;9014:21;8995:4;9052:56;9104:2;9093:9;9089:18;9081:6;9052:56;:::i;:::-;9044:64;;-1:-1:-1;;;;;9148:6:152;9144:47;9139:2;9128:9;9124:18;9117:75;8825:373;;;;;:::o;9203:183::-;9263:4;9296:18;9288:6;9285:30;9282:56;;;9318:18;;:::i;:::-;-1:-1:-1;9363:1:152;9359:14;9375:4;9355:25;;9203:183::o;9391:866::-;9456:5;9509:3;9502:4;9494:6;9490:17;9486:27;9476:55;;9527:1;9524;9517:12;9476:55;9556:6;9550:13;9582:4;9606:60;9622:43;9662:2;9622:43;:::i;:::-;9606:60;:::i;:::-;9700:15;;;9786:1;9782:10;;;;9770:23;;9766:32;;;9731:12;;;;9810:15;;;9807:35;;;9838:1;9835;9828:12;9807:35;9874:2;9866:6;9862:15;9886:342;9902:6;9897:3;9894:15;9886:342;;;9975:3;9969:10;-1:-1:-1;;;;;10016:5:152;10012:54;10005:5;10002:65;9992:163;;10109:1;10138:2;10134;10127:14;9992:163;10168:18;;10206:12;;;;9919;;9886:342;;;-1:-1:-1;10246:5:152;9391:866;-1:-1:-1;;;;;;9391:866:152:o;10262:659::-;10327:5;10380:3;10373:4;10365:6;10361:17;10357:27;10347:55;;10398:1;10395;10388:12;10347:55;10427:6;10421:13;10453:4;10477:60;10493:43;10533:2;10493:43;:::i;10477:60::-;10571:15;;;10657:1;10653:10;;;;10641:23;;10637:32;;;10602:12;;;;10681:15;;;10678:35;;;10709:1;10706;10699:12;10678:35;10745:2;10737:6;10733:15;10757:135;10773:6;10768:3;10765:15;10757:135;;;10839:10;;10827:23;;10870:12;;;;10790;;10757:135;;10926:818;10996:5;11049:3;11042:4;11034:6;11030:17;11026:27;11016:55;;11067:1;11064;11057:12;11016:55;11096:6;11090:13;11122:4;11146:60;11162:43;11202:2;11162:43;:::i;11146:60::-;11240:15;;;11326:1;11322:10;;;;11310:23;;11306:32;;;11271:12;;;;11350:15;;;11347:35;;;11378:1;11375;11368:12;11347:35;11414:2;11406:6;11402:15;11426:289;11442:6;11437:3;11434:15;11426:289;;;11515:3;11509:10;11552:1;11545:5;11542:12;11532:110;;11596:1;11625:2;11621;11614:14;11532:110;11655:18;;11693:12;;;;11459;;11426:289;;11749:858;11814:5;11867:3;11860:4;11852:6;11848:17;11844:27;11834:55;;11885:1;11882;11875:12;11834:55;11914:6;11908:13;11940:4;11964:60;11980:43;12020:2;11980:43;:::i;11964:60::-;12058:15;;;12144:1;12140:10;;;;12128:23;;12124:32;;;12089:12;;;;12168:15;;;12165:35;;;12196:1;12193;12186:12;12165:35;12232:2;12224:6;12220:15;12244:334;12260:6;12255:3;12252:15;12244:334;;;12333:3;12327:10;-1:-1:-1;;;;;12374:5:152;12370:46;12363:5;12360:57;12350:155;;12459:1;12488:2;12484;12477:14;12350:155;12518:18;;12556:12;;;;12277;;12244:334;;12612:1766;12706:6;12759:2;12747:9;12738:7;12734:23;12730:32;12727:52;;;12775:1;12772;12765:12;12727:52;12808:9;12802:16;12837:18;12878:2;12870:6;12867:14;12864:34;;;12894:1;12891;12884:12;12864:34;12917:22;;;;12973:4;12955:16;;;12951:27;12948:47;;;12991:1;12988;12981:12;12948:47;13017:22;;:::i;:::-;13070:2;13064:9;13098:2;13088:8;13085:16;13082:36;;;13114:1;13111;13104:12;13082:36;13141:67;13200:7;13189:8;13185:2;13181:17;13141:67;:::i;:::-;13134:5;13127:82;;13248:2;13244;13240:11;13234:18;13277:2;13267:8;13264:16;13261:36;;;13293:1;13290;13283:12;13261:36;13329:67;13388:7;13377:8;13373:2;13369:17;13329:67;:::i;:::-;13324:2;13317:5;13313:14;13306:91;;13436:2;13432;13428:11;13422:18;13465:2;13455:8;13452:16;13449:36;;;13481:1;13478;13471:12;13449:36;13517:67;13576:7;13565:8;13561:2;13557:17;13517:67;:::i;:::-;13512:2;13505:5;13501:14;13494:91;;13624:2;13620;13616:11;13610:18;13653:2;13643:8;13640:16;13637:36;;;13669:1;13666;13659:12;13637:36;13705:72;13769:7;13758:8;13754:2;13750:17;13705:72;:::i;:::-;13700:2;13693:5;13689:14;13682:96;;13817:3;13813:2;13809:12;13803:19;13847:2;13837:8;13834:16;13831:36;;;13863:1;13860;13853:12;13831:36;13900:67;13959:7;13948:8;13944:2;13940:17;13900:67;:::i;:::-;13894:3;13887:5;13883:15;13876:92;;14007:3;14003:2;13999:12;13993:19;14037:2;14027:8;14024:16;14021:36;;;14053:1;14050;14043:12;14021:36;14090:67;14149:7;14138:8;14134:2;14130:17;14090:67;:::i;:::-;14084:3;14077:5;14073:15;14066:92;;14197:3;14193:2;14189:12;14183:19;14227:2;14217:8;14214:16;14211:36;;;14243:1;14240;14233:12;14211:36;14280:67;14339:7;14328:8;14324:2;14320:17;14280:67;:::i;:::-;14274:3;14263:15;;14256:92;-1:-1:-1;14267:5:152;12612:1766;-1:-1:-1;;;;;12612:1766:152:o;14383:127::-;14444:10;14439:3;14435:20;14432:1;14425:31;14475:4;14472:1;14465:15;14499:4;14496:1;14489:15;15006:441;15174:4;-1:-1:-1;;;;;15284:2:152;15276:6;15272:15;15261:9;15254:34;15336:2;15328:6;15324:15;15319:2;15308:9;15304:18;15297:43;;15376:2;15371;15360:9;15356:18;15349:30;15396:45;15437:2;15426:9;15422:18;15414:6;15396:45;:::i;:::-;15388:53;15006:441;-1:-1:-1;;;;;15006:441:152:o;15452:362::-;15657:6;15646:9;15639:25;15700:6;15695:2;15684:9;15680:18;15673:34;15743:2;15738;15727:9;15723:18;15716:30;15620:4;15763:45;15804:2;15793:9;15789:18;15781:6;15763:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_QuoteFromAmounOut()": "f4af7f08",
    "test_QuoteFromAmountIn()": "a2797cec"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_QuoteFromAmounOut\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_QuoteFromAmountIn\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Makes sure that the new quoter picks the version 2.1 over the version 2 if both outputs are exactly the same\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/integration/LBQuoterPriority.t.sol\":\"LiquidityBinQuoterPriorityTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c\",\"dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x2c67a533e405b77317caffc0d556320a04e58346ed645cefaa9fea5f91a06cb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8b1afdace7d60297379288b4b35310cc81fdd3d013eba888d90c51ba54642c1\",\"dweb:/ipfs/QmeMpyQEKryrVuBGWye6GVqpSNPJUQ6hruMwRBSRSCGg2J\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d\",\"dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b\",\"dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32\",\"dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61\",\"dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4\",\"dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533\",\"dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b\",\"dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126\",\"dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x170a9b2acc018657045741a158ebfdf28982c68beeba6ed145169d1a1248cd53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b800466a1598c4d2e94bf973b7335d5d01bb32ae5e6e78c29c809dcda0fc375\",\"dweb:/ipfs/QmeP9CKVtdGiEo7rLNWqRa24XJjefRpSZtsirHuKdPCRqA\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x911b32ef02c5950a9cf6367a508b9930ace9dc5531459a50951bcbec4717bbda\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://b35351a0ec61432596383de0a8d3a65be8f2122fb50a32ebddf66351179b048c\",\"dweb:/ipfs/Qmf43DEDeEwKz8LvqWiAPmqb3CAqMuVUAHXFkgSd3uqN9M\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe\",\"dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980\",\"dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x718ae75ad57a149ff2dec6dcd51f9e406ac52a45865ec97fa79671e67a225713\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cb67913b2545d5590bb19f1ccbdefa5d479a94a2e3e9a4325c267dbd02a86cf\",\"dweb:/ipfs/QmYbhQwaGewsQKr9KrHqXytXgboYvFFngK6dShw7RYs7AU\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11\",\"dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc\",\"dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf\",\"dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c\",\"dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15\",\"dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51\",\"dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561\",\"dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f\",\"dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6\"]},\"src/libraries/Clone.sol\":{\"keccak256\":\"0x594933ba1ceef90636ac84a1af9cfc5a0be1fcb4340a8a0420fb4505a7012d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25ed9aa543e706d2e87f29130c9e40c7b73528138b53dae5c05d664d28fae97b\",\"dweb:/ipfs/QmSiFFQBhxpJdrrdYMRYX3TDhKY7cWgYPjusonV3Srp2ss\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009\",\"dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee\",\"dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156\",\"dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5\",\"dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1\",\"dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e\",\"dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3\",\"dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8\",\"dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de\",\"dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8\",\"dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5\",\"dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4\",\"dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e\",\"dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20\",\"dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1\",\"dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f\",\"dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242\",\"dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x4c5d29fe5d3d45e9b6e81241f12bce21ed5c21ba931ef7b59eb312295ef02192\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f23dd72e2f9f2e337dae246e5585b1e1c7c5dcd9249155bc96d7c3f2710499dd\",\"dweb:/ipfs/QmWsTHchbEMjBSLFAgFsRZkcuWJG1XpF45HxqXR2Pp8uwe\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/integration/LBQuoterPriority.t.sol\":{\"keccak256\":\"0xb27116038a4ccfe29615f395ea335e9bc7e416253c7c34c2391cf6d9a002cff0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ecb1139358c10788014b00acd1fa214eb80d42bce6a1ffbe527febcd68907ce\",\"dweb:/ipfs/QmXSzzfF1rQ61KwNp1FdKdPAupjCPV4eDHMTwfdnYrR6it\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f\",\"dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170\",\"dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_QuoteFromAmounOut"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_QuoteFromAmountIn"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/integration/LBQuoterPriority.t.sol": "LiquidityBinQuoterPriorityTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf513292ab066e6017db48ca749c1e63a44dfc5cba0326fc65c718f96e029d361",
        "urls": [
          "bzz-raw://02d715ae2898f1fabd08133f80e6a7a3b87a2796ca5d23d1cb3fed9f4367f34c",
          "dweb:/ipfs/QmfESqa4j3PQAvvdfrnDQ1xUH1TnVCfvZYHsAEDK8z4X4k"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x2c67a533e405b77317caffc0d556320a04e58346ed645cefaa9fea5f91a06cb5",
        "urls": [
          "bzz-raw://e8b1afdace7d60297379288b4b35310cc81fdd3d013eba888d90c51ba54642c1",
          "dweb:/ipfs/QmeMpyQEKryrVuBGWye6GVqpSNPJUQ6hruMwRBSRSCGg2J"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x67299bfacd77fddfa2a67b8e2b901e0e333618a4975fb94850b07475e51f6de6",
        "urls": [
          "bzz-raw://1b61121d310f4053ce344b345b4a9ccf43b059daf9097ec2647f594beaca896d",
          "dweb:/ipfs/QmZUCoTtXBM9zfAZVbj2dFPPnKaV1CSZzXE7zictyg3Gfz"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x8b315e41138983b61c459c8d4e1346fa033607101df30da00a75c7cea230a763",
        "urls": [
          "bzz-raw://65d5f9630ef099fdad8df7cf6227063a7d1a459dfb2d5064db7ae7963751757b",
          "dweb:/ipfs/QmVpZhvjV6s2Sr4fdZx5t6BPZGqEjiCQGKw45QP8kUFzdr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x4298f3f4cedaedb07029820b1daad2c03af45379559392201f7bf3ec71105811",
        "urls": [
          "bzz-raw://6e062f36d8d1ae3c383ef8975757926eaa9c4de3a92b5f1fe2d12748bcd8db32",
          "dweb:/ipfs/QmcWkv3ia5Ew4DZNcudMNSTNXZ3W2QiXTZunRd44e9BT8z"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x502b18a4becda6ecd91fa8b419d8034946bfa80e6cc7f6497f51f8565bfadae0",
        "urls": [
          "bzz-raw://bf499ee483a1dfd02023d4ce78ed4029a49794ccd5b849aaab912faea0d2ba61",
          "dweb:/ipfs/QmP6hwNZW7sYbQK9fBzuZWxfLm6Swx2nKzvZ54qWNqQkzX"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x9809a6a14dd9ad6c519574760c03ec4ddc0e0c58955a1fc4f0dcca2822fd5362",
        "urls": [
          "bzz-raw://12fa33c2968fa8bee1b8a2034f4d0f0cf5363008c013e928cca03896b41d39d4",
          "dweb:/ipfs/QmfXcdjrB3JVarRVwpSEpBRQJEsS11HKiRzwr2Z517GaF1"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x9736a4b7c4da663d441bb94dd866b7ef91bcba3b4514412c29fa8681dbc41876",
        "urls": [
          "bzz-raw://76179d87219192c3b626cf1a1126931d12c0bec0ac1975f868449509f1dda533",
          "dweb:/ipfs/QmTcuxaX38ReqFfbdTZks69xeMsga6XkdKeueSKvksH7te"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0x3293dcbb7acd28df553c954e4e39e288bf10aab7ecda8d50ef21b4f4a91a28d9",
        "urls": [
          "bzz-raw://9eb374daf6df34f4392f8926f1fddbce9f22c423066aeaefdfbe77395f77967b",
          "dweb:/ipfs/QmWR81zBJRX2uyRjveGzikYPj6ZwKppWsU49YEQXTLWUsN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44",
        "urls": [
          "bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126",
          "dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x170a9b2acc018657045741a158ebfdf28982c68beeba6ed145169d1a1248cd53",
        "urls": [
          "bzz-raw://3b800466a1598c4d2e94bf973b7335d5d01bb32ae5e6e78c29c809dcda0fc375",
          "dweb:/ipfs/QmeP9CKVtdGiEo7rLNWqRa24XJjefRpSZtsirHuKdPCRqA"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x911b32ef02c5950a9cf6367a508b9930ace9dc5531459a50951bcbec4717bbda",
        "urls": [
          "bzz-raw://b35351a0ec61432596383de0a8d3a65be8f2122fb50a32ebddf66351179b048c",
          "dweb:/ipfs/Qmf43DEDeEwKz8LvqWiAPmqb3CAqMuVUAHXFkgSd3uqN9M"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495",
        "urls": [
          "bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe",
          "dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2",
        "urls": [
          "bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980",
          "dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x718ae75ad57a149ff2dec6dcd51f9e406ac52a45865ec97fa79671e67a225713",
        "urls": [
          "bzz-raw://9cb67913b2545d5590bb19f1ccbdefa5d479a94a2e3e9a4325c267dbd02a86cf",
          "dweb:/ipfs/QmYbhQwaGewsQKr9KrHqXytXgboYvFFngK6dShw7RYs7AU"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3",
        "urls": [
          "bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11",
          "dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9",
        "urls": [
          "bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246",
          "dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62",
        "urls": [
          "bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56",
          "dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca",
        "urls": [
          "bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc",
          "dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a",
        "urls": [
          "bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf",
          "dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2",
        "urls": [
          "bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c",
          "dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727",
        "urls": [
          "bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15",
          "dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf711b76faedb1b796f9c4c3edb9ab5044b87a6c9435316c6008b3082e836bf70",
        "urls": [
          "bzz-raw://bcb0fd6cb81410f90650d87eb8be6034f85246172457338e09d13b6f5c919f51",
          "dweb:/ipfs/QmSxBFGVJX3PofmhGY8SGLnQXqcthE5V1jrsUcw4bnjHsB"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47",
        "urls": [
          "bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561",
          "dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9",
        "urls": [
          "bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f",
          "dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49",
        "urls": [
          "bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f",
          "dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6"
        ],
        "license": "MIT"
      },
      "src/libraries/Clone.sol": {
        "keccak256": "0x594933ba1ceef90636ac84a1af9cfc5a0be1fcb4340a8a0420fb4505a7012d70",
        "urls": [
          "bzz-raw://25ed9aa543e706d2e87f29130c9e40c7b73528138b53dae5c05d664d28fae97b",
          "dweb:/ipfs/QmSiFFQBhxpJdrrdYMRYX3TDhKY7cWgYPjusonV3Srp2ss"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2",
        "urls": [
          "bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009",
          "dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084",
        "urls": [
          "bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee",
          "dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151",
        "urls": [
          "bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156",
          "dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9",
        "urls": [
          "bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5",
          "dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3",
        "urls": [
          "bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1",
          "dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a",
        "urls": [
          "bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e",
          "dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658",
        "urls": [
          "bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3",
          "dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154",
        "urls": [
          "bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8",
          "dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994",
        "urls": [
          "bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de",
          "dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba",
        "urls": [
          "bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8",
          "dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1",
        "urls": [
          "bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5",
          "dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901",
        "urls": [
          "bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4",
          "dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed",
        "urls": [
          "bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e",
          "dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63",
        "urls": [
          "bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20",
          "dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b",
        "urls": [
          "bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1",
          "dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba",
        "urls": [
          "bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f",
          "dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2",
        "urls": [
          "bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242",
          "dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x4c5d29fe5d3d45e9b6e81241f12bce21ed5c21ba931ef7b59eb312295ef02192",
        "urls": [
          "bzz-raw://f23dd72e2f9f2e337dae246e5585b1e1c7c5dcd9249155bc96d7c3f2710499dd",
          "dweb:/ipfs/QmWsTHchbEMjBSLFAgFsRZkcuWJG1XpF45HxqXR2Pp8uwe"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/integration/LBQuoterPriority.t.sol": {
        "keccak256": "0xb27116038a4ccfe29615f395ea335e9bc7e416253c7c34c2391cf6d9a002cff0",
        "urls": [
          "bzz-raw://9ecb1139358c10788014b00acd1fa214eb80d42bce6a1ffbe527febcd68907ce",
          "dweb:/ipfs/QmXSzzfF1rQ61KwNp1FdKdPAupjCPV4eDHMTwfdnYrR6it"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6",
        "urls": [
          "bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f",
          "dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb",
        "urls": [
          "bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170",
          "dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/integration/LBQuoterPriority.t.sol",
    "id": 105944,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        45841
      ],
      "AvalancheAddresses": [
        103697
      ],
      "BinHelper": [
        69201
      ],
      "BitMath": [
        72709
      ],
      "Clone": [
        69323
      ],
      "Constants": [
        69361
      ],
      "ERC20": [
        48859
      ],
      "ERC20Mock": [
        119771
      ],
      "ERC20TransferTaxMock": [
        119825
      ],
      "Encoded": [
        72916
      ],
      "EnumerableMap": [
        51848
      ],
      "EnumerableSet": [
        52461
      ],
      "FeeHelper": [
        69554
      ],
      "FlashBorrower": [
        120554
      ],
      "Hooks": [
        70428
      ],
      "IERC20": [
        48937
      ],
      "ILBFactory": [
        64899
      ],
      "ILBFlashLoanCallback": [
        64924
      ],
      "ILBHooks": [
        65097
      ],
      "ILBLegacyFactory": [
        65463
      ],
      "ILBLegacyPair": [
        65879
      ],
      "ILBLegacyRouter": [
        66288
      ],
      "ILBPair": [
        66855
      ],
      "ILBRouter": [
        67387
      ],
      "ILBToken": [
        67510
      ],
      "ISovrynLBFactoryV1": [
        67584
      ],
      "ISovrynLBPairV1": [
        67827
      ],
      "ISovrynLBRouter01": [
        68136
      ],
      "ISovrynLBRouter02": [
        68226
      ],
      "IWNATIVE": [
        68242
      ],
      "ImmutableClone": [
        70506
      ],
      "Initializable": [
        48344
      ],
      "LBFactory": [
        56167
      ],
      "LBPair": [
        58985
      ],
      "LBPairBeaconProxy": [
        59146
      ],
      "LBPairUpgradeableBeacon": [
        59350
      ],
      "LBQuoter": [
        60638
      ],
      "LBRouter": [
        63882
      ],
      "LBToken": [
        64401
      ],
      "LiquidityBinQuoterPriorityTest": [
        105943
      ],
      "LiquidityConfigurations": [
        73086
      ],
      "OracleHelper": [
        71163
      ],
      "Ownable": [
        47040
      ],
      "Ownable2StepUpgradeable": [
        45978
      ],
      "OwnableUpgradeable": [
        46173
      ],
      "PackedUint128Math": [
        73440
      ],
      "PairParameterHelper": [
        72020
      ],
      "PriceHelper": [
        72194
      ],
      "ReentrancyGuardUpgradeable": [
        72323
      ],
      "SafeCast": [
        74188
      ],
      "SafeERC20": [
        49386
      ],
      "SampleMath": [
        74613
      ],
      "SovrynLBLibrary": [
        72529
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3507
      ],
      "StdCheats": [
        6360
      ],
      "StdInvariant": [
        6685
      ],
      "StdStorage": [
        7451
      ],
      "StdStyle": [
        10301
      ],
      "StdUtils": [
        11087
      ],
      "Test": [
        11134
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        103496
      ],
      "TokenHelper": [
        72615
      ],
      "TransparentUpgradeableProxy": [
        48090
      ],
      "TreeMath": [
        75545
      ],
      "Uint256x256Math": [
        76181
      ],
      "UpgradeableBeacon": [
        47907
      ],
      "Utils": [
        103664
      ],
      "Vm": [
        14564
      ],
      "WNATIVE": [
        120864
      ],
      "console": [
        22628
      ],
      "console2": [
        30753
      ],
      "safeconsole": [
        45478
      ],
      "stdError": [
        6426
      ],
      "stdJson": [
        7277
      ],
      "stdMath": [
        7419
      ],
      "stdStorage": [
        9090
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:7433:127",
    "nodes": [
      {
        "id": 105106,
        "nodeType": "PragmaDirective",
        "src": "40:24:127",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 105107,
        "nodeType": "ImportDirective",
        "src": "66:35:127",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "../helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 105944,
        "sourceUnit": 103497,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 105943,
        "nodeType": "ContractDefinition",
        "src": "223:7249:127",
        "nodes": [
          {
            "id": 105113,
            "nodeType": "VariableDeclaration",
            "src": "277:78:127",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "factory",
            "nameLocation": "303:7:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105111,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:127",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838653432663246343130313536336246363739393735313738653838304644383764336546643465",
              "id": 105112,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "313:42:127",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8e42f2F4101563bF679975178e880FD87d3eFd4e"
            },
            "visibility": "internal"
          },
          {
            "id": 105116,
            "nodeType": "VariableDeclaration",
            "src": "361:77:127",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "router",
            "nameLocation": "387:6:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "361:7:127",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862343331356538373364426366393646666430616364384541343366363839443863323066423330",
              "id": 105115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "396:42:127",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb4315e873dBcf96Ffd0acd8EA43f689D8c20fB30"
            },
            "visibility": "internal"
          },
          {
            "id": 105119,
            "nodeType": "VariableDeclaration",
            "src": "445:89:127",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "legacyUsdcUsdtPair",
            "nameLocation": "471:18:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105117,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:127",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831443741316137396532623445663838443233323366333834353234364432346133633230463164",
              "id": 105118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:42:127",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1D7A1a79e2b4Ef88D2323f3845246D24a3c20F1d"
            },
            "visibility": "internal"
          },
          {
            "id": 105122,
            "nodeType": "VariableDeclaration",
            "src": "540:86:127",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "newUsdcUsdtPair",
            "nameLocation": "566:15:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 105120,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:127",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839423243633845366132426262353664366245343638323839316139314230653438363333633732",
              "id": 105121,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:42:127",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9B2Cc8E6a2Bbb56d6bE4682891a91B0e48633c72"
            },
            "visibility": "internal"
          },
          {
            "id": 105125,
            "nodeType": "VariableDeclaration",
            "src": "633:27:127",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newQuoter",
            "nameLocation": "651:9:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBQuoter_$60638",
              "typeString": "contract LBQuoter"
            },
            "typeName": {
              "id": 105124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 105123,
                "name": "LBQuoter",
                "nameLocations": [
                  "633:8:127"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60638,
                "src": "633:8:127"
              },
              "referencedDeclaration": 60638,
              "src": "633:8:127",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$60638",
                "typeString": "contract LBQuoter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 105131,
            "nodeType": "VariableDeclaration",
            "src": "666:82:127",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "oldQuoter",
            "nameLocation": "684:9:127",
            "scope": 105943,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBQuoter_$60638",
              "typeString": "contract LBQuoter"
            },
            "typeName": {
              "id": 105127,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 105126,
                "name": "LBQuoter",
                "nameLocations": [
                  "666:8:127"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 60638,
                "src": "666:8:127"
              },
              "referencedDeclaration": 60638,
              "src": "666:8:127",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$60638",
                "typeString": "contract LBQuoter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836346235374634323439614139396138313232313263656537444145464544433430423230336344",
                  "id": 105129,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "705:42:127",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x64b57F4249aA99a812212cee7DAEFEDC40B203cD"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 105128,
                "name": "LBQuoter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 60638,
                "src": "696:8:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBQuoter_$60638_$",
                  "typeString": "type(contract LBQuoter)"
                }
              },
              "id": 105130,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "696:52:127",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$60638",
                "typeString": "contract LBQuoter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 105156,
            "nodeType": "FunctionDefinition",
            "src": "755:232:127",
            "nodes": [],
            "body": {
              "id": 105155,
              "nodeType": "Block",
              "src": "779:208:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6176616c616e636865",
                            "id": 105139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "819:11:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            },
                            "value": "avalanche"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            }
                          ],
                          "expression": {
                            "id": 105137,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "809:2:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$14564",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 105138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "812:6:127",
                          "memberName": "rpcUrl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 13776,
                          "src": "809:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) view external returns (string memory)"
                          }
                        },
                        "id": 105140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "809:22:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3333333133343432",
                        "id": 105141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "833:8:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33313442_by_1",
                          "typeString": "int_const 33313442"
                        },
                        "value": "33313442"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_33313442_by_1",
                          "typeString": "int_const 33313442"
                        }
                      ],
                      "expression": {
                        "id": 105134,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "789:2:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$14564",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 105136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "792:16:127",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14066,
                      "src": "789:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 105142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:53:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105143,
                  "nodeType": "ExpressionStatement",
                  "src": "789:53:127"
                },
                {
                  "expression": {
                    "id": 105153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105144,
                      "name": "newQuoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105125,
                      "src": "853:9:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBQuoter_$60638",
                        "typeString": "contract LBQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105148,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "891:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "910:19:127",
                          "memberName": "SovrynLB_V1_FACTORY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103672,
                          "src": "891:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 105150,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105113,
                          "src": "943:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 105151,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105116,
                          "src": "964:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "865:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_LBQuoter_$60638_$",
                          "typeString": "function (address,address,address) returns (contract LBQuoter)"
                        },
                        "typeName": {
                          "id": 105146,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 105145,
                            "name": "LBQuoter",
                            "nameLocations": [
                              "869:8:127"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 60638,
                            "src": "869:8:127"
                          },
                          "referencedDeclaration": 60638,
                          "src": "869:8:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$60638",
                            "typeString": "contract LBQuoter"
                          }
                        }
                      },
                      "id": 105152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "865:115:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBQuoter_$60638",
                        "typeString": "contract LBQuoter"
                      }
                    },
                    "src": "853:127:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBQuoter_$60638",
                      "typeString": "contract LBQuoter"
                    }
                  },
                  "id": 105154,
                  "nodeType": "ExpressionStatement",
                  "src": "853:127:127"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "764:5:127",
            "parameters": {
              "id": 105132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:2:127"
            },
            "returnParameters": {
              "id": 105133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:127"
            },
            "scope": 105943,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 105549,
            "nodeType": "FunctionDefinition",
            "src": "993:3231:127",
            "nodes": [],
            "body": {
              "id": 105548,
              "nodeType": "Block",
              "src": "1039:3185:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    105163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105163,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "1066:5:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105548,
                      "src": "1049:22:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 105161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 105162,
                        "nodeType": "ArrayTypeName",
                        "src": "1049:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105169,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 105167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1088:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 105166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1074:13:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 105164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:127",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 105165,
                        "nodeType": "ArrayTypeName",
                        "src": "1078:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 105168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:16:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:41:127"
                },
                {
                  "expression": {
                    "id": 105178,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105170,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "1100:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105172,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 105171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1100:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105175,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "1119:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1138:4:127",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103690,
                          "src": "1119:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1111:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105173,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1111:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1111:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1100:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105179,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:43:127"
                },
                {
                  "expression": {
                    "id": 105188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105180,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "1153:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105182,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 105181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1153:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105185,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "1172:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1191:4:127",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103687,
                          "src": "1172:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1164:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105183,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1164:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1153:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105189,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:43:127"
                },
                {
                  "assignments": [
                    105191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105191,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1215:8:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105548,
                      "src": "1207:16:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 105190,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1207:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105193,
                  "initialValue": {
                    "hexValue": "316536",
                    "id": 105192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1226:3:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1e6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1207:22:127"
                },
                {
                  "assignments": [
                    105198
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105198,
                      "mutability": "mutable",
                      "name": "newQuote",
                      "nameLocation": "1262:8:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105548,
                      "src": "1240:30:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 105197,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 105196,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "1240:8:127",
                            "1249:5:127"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59419,
                          "src": "1240:14:127"
                        },
                        "referencedDeclaration": 59419,
                        "src": "1240:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$59419_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105204,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 105201,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "1308:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 105202,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105191,
                        "src": "1315:8:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 105199,
                        "name": "newQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105125,
                        "src": "1273:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$60638",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 105200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1283:24:127",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59980,
                      "src": "1273:34:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 105203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:51:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1240:84:127"
                },
                {
                  "assignments": [
                    105209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105209,
                      "mutability": "mutable",
                      "name": "oldQuote",
                      "nameLocation": "1356:8:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105548,
                      "src": "1334:30:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 105208,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 105207,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "1334:8:127",
                            "1343:5:127"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59419,
                          "src": "1334:14:127"
                        },
                        "referencedDeclaration": 59419,
                        "src": "1334:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$59419_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105215,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 105212,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "1402:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 105213,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105191,
                        "src": "1409:8:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 105210,
                        "name": "oldQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105131,
                        "src": "1367:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$60638",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 105211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:24:127",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59980,
                      "src": "1367:34:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 105214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:51:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1334:84:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105217,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "1438:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105218,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1447:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "1438:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105220,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1453:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1438:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105221,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "1457:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105222,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1466:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "1457:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105224,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1472:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1457:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a31",
                        "id": 105225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ade5933723476328572d205447a393363e8ce455b08102b529d13dee7a9cd26",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::1\""
                        },
                        "value": "test_QuoteFromAmountIn::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ade5933723476328572d205447a393363e8ce455b08102b529d13dee7a9cd26",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::1\""
                        }
                      ],
                      "id": 105216,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1429:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:75:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105227,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:75:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105229,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "1523:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105230,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1532:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "1523:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105232,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1538:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1523:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105233,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "1542:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105234,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1551:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "1542:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105236,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1557:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1542:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a32",
                        "id": 105237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c49b9a50020fae504ba362d64198b78d7aa7386c0b471d630ae730352f9f6a6",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::2\""
                        },
                        "value": "test_QuoteFromAmountIn::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c49b9a50020fae504ba362d64198b78d7aa7386c0b471d630ae730352f9f6a6",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::2\""
                        }
                      ],
                      "id": 105228,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1514:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:75:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105239,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:75:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105241,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "1609:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105242,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1618:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "1609:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105244,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1624:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1609:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105245,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105122,
                        "src": "1628:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a33",
                        "id": 105246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fd045d264b775aecead07d2650ce4d8553137d12d0d8d5fe679926b41d69e15",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::3\""
                        },
                        "value": "test_QuoteFromAmountIn::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fd045d264b775aecead07d2650ce4d8553137d12d0d8d5fe679926b41d69e15",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::3\""
                        }
                      ],
                      "id": 105240,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1600:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:73:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105248,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:73:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105250,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "1692:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105251,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1701:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "1692:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105253,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1707:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1692:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105254,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105119,
                        "src": "1711:18:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a34",
                        "id": 105255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852e146cb53659af6e8f24cc369b4f730536c3de33f618a16975b80f0e1401c2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::4\""
                        },
                        "value": "test_QuoteFromAmountIn::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852e146cb53659af6e8f24cc369b4f730536c3de33f618a16975b80f0e1401c2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::4\""
                        }
                      ],
                      "id": 105249,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1683:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105257,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105259,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "1779:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105260,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1788:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "1779:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105262,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1797:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1779:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105263,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "1801:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1810:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "1801:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105266,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1819:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1801:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a35",
                        "id": 105267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974f6386cb91e0d32c274b9d8187075b493370e45d98f9cbcb74f98dac7b6d17",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::5\""
                        },
                        "value": "test_QuoteFromAmountIn::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974f6386cb91e0d32c274b9d8187075b493370e45d98f9cbcb74f98dac7b6d17",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::5\""
                        }
                      ],
                      "id": 105258,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1770:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1770:81:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105269,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:81:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105273,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105198,
                                "src": "1877:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105274,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1886:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "1877:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105276,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1895:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1877:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1871:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105271,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1871:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1871:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105280,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "1906:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1916:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "1906:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105282,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1924:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "1906:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1900:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105278,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1900:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a36",
                        "id": 105284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1929:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d528e86113a662d074971cbb6bc682b8569d24ebe5045fc256e4640f464eb60",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::6\""
                        },
                        "value": "test_QuoteFromAmountIn::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d528e86113a662d074971cbb6bc682b8569d24ebe5045fc256e4640f464eb60",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::6\""
                        }
                      ],
                      "id": 105270,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1862:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:95:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105286,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:95:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105290,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105209,
                                "src": "1982:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105291,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1991:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "1982:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105293,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105292,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1982:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1976:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105288,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1976:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1976:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105297,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "2011:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2021:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "2011:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2029:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "2011:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2005:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105295,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "2005:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2005:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a37",
                        "id": 105301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43e1db9296f6a8d9f32485b2937f895f82d9f4162a541cbbbfe43c3aec0427d2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::7\""
                        },
                        "value": "test_QuoteFromAmountIn::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43e1db9296f6a8d9f32485b2937f895f82d9f4162a541cbbbfe43c3aec0427d2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::7\""
                        }
                      ],
                      "id": 105287,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1967:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:95:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105303,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:95:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105305,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2082:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2091:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "2082:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105308,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2099:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2082:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105309,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2103:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105310,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2112:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "2103:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105312,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2120:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2103:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a38",
                        "id": 105313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b828fa874a5f74c460357fddea115c85f99dcd07bba7a1ba47d67edee62f7655",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::8\""
                        },
                        "value": "test_QuoteFromAmountIn::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b828fa874a5f74c460357fddea115c85f99dcd07bba7a1ba47d67edee62f7655",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::8\""
                        }
                      ],
                      "id": 105304,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2073:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:79:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105315,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:79:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105317,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2171:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105318,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2180:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "2171:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105320,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2188:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2171:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105321,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2192:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105322,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2201:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "2192:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105324,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2209:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2192:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a39",
                        "id": 105325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2213:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7099d4db99b6c4e6598fd6be92b9256cde0c9abb08a7c911aef0b74ca94d4216",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::9\""
                        },
                        "value": "test_QuoteFromAmountIn::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7099d4db99b6c4e6598fd6be92b9256cde0c9abb08a7c911aef0b74ca94d4216",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::9\""
                        }
                      ],
                      "id": 105316,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2162:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:79:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105327,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:79:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105329,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2274:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105330,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2283:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "2274:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105332,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2313:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2274:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105333,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2329:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105334,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2338:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "2329:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105336,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2368:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2329:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3130",
                        "id": 105337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8257deec61e99c02fd6126793a05495bfcacb569893aaf51431b3d4b8a52ec54",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::10\""
                        },
                        "value": "test_QuoteFromAmountIn::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8257deec61e99c02fd6126793a05495bfcacb569893aaf51431b3d4b8a52ec54",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::10\""
                        }
                      ],
                      "id": 105328,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2252:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105339,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105341,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2454:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105342,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2463:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "2454:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105344,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2493:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2454:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105345,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2509:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105346,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2518:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "2509:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105348,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2548:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2509:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3131",
                        "id": 105349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_182e89f291f89906fa4054956bdb5a95546a62c5b0731a3aecfb8d6721d91be3",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::11\""
                        },
                        "value": "test_QuoteFromAmountIn::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_182e89f291f89906fa4054956bdb5a95546a62c5b0731a3aecfb8d6721d91be3",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::11\""
                        }
                      ],
                      "id": 105340,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2432:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105351,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105353,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2622:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105354,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2631:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "2622:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105356,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2636:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2622:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105357,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2640:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105358,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2649:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "2640:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105360,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2654:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2640:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3132",
                        "id": 105361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2658:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a806099841472022a7deed1ac185d35b8d9fea14960d854f824702995f79477",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::12\""
                        },
                        "value": "test_QuoteFromAmountIn::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a806099841472022a7deed1ac185d35b8d9fea14960d854f824702995f79477",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::12\""
                        }
                      ],
                      "id": 105352,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2613:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105363,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:74:127"
                },
                {
                  "expression": {
                    "id": 105372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105364,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "2698:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105366,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 105365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2704:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2698:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105369,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "2717:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2736:4:127",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103687,
                          "src": "2717:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2709:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105367,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2709:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2698:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105373,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:43:127"
                },
                {
                  "expression": {
                    "id": 105382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105374,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105163,
                        "src": "2751:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105376,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 105375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2757:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2751:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105379,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "2770:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2789:4:127",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103690,
                          "src": "2770:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2762:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105377,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2762:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2751:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105383,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:43:127"
                },
                {
                  "expression": {
                    "id": 105390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105384,
                      "name": "newQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105198,
                      "src": "2805:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105387,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105163,
                          "src": "2851:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 105388,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105191,
                          "src": "2858:8:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 105385,
                          "name": "newQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105125,
                          "src": "2816:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$60638",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 105386,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2826:24:127",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59980,
                        "src": "2816:34:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 105389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2816:51:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "2805:62:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 105391,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:62:127"
                },
                {
                  "expression": {
                    "id": 105398,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105392,
                      "name": "oldQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105209,
                      "src": "2877:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105395,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105163,
                          "src": "2923:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 105396,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105191,
                          "src": "2930:8:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 105393,
                          "name": "oldQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105131,
                          "src": "2888:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$60638",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 105394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2898:24:127",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59980,
                        "src": "2888:34:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 105397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2888:51:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "2877:62:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 105399,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:62:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105401,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "2959:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105402,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2968:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "2959:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105404,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2974:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2959:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105405,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "2978:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105406,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2987:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "2978:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105408,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2993:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2978:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3133",
                        "id": 105409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd82e0cac9bcdfa7aab09fc5476fcafc80c0b4cf6cb31f8cead903c74979af2d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::13\""
                        },
                        "value": "test_QuoteFromAmountIn::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd82e0cac9bcdfa7aab09fc5476fcafc80c0b4cf6cb31f8cead903c74979af2d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::13\""
                        }
                      ],
                      "id": 105400,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "2950:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105411,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105413,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3045:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105414,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3054:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "3045:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105416,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3060:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3045:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105417,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3064:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105418,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3073:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "3064:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105420,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3079:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3064:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3134",
                        "id": 105421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a70e46b67241a4d13ebb71aeccbb1cf969b47d7428831c4e67e88280ca41777",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::14\""
                        },
                        "value": "test_QuoteFromAmountIn::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a70e46b67241a4d13ebb71aeccbb1cf969b47d7428831c4e67e88280ca41777",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::14\""
                        }
                      ],
                      "id": 105412,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3036:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105423,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105425,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3132:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105426,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3141:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "3132:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105428,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3147:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3132:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105429,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105122,
                        "src": "3151:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3135",
                        "id": 105430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3168:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3a28d5fbcb599c180bbabaab1b0bb67b616a222646290431c3a5d2956d426c9",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::15\""
                        },
                        "value": "test_QuoteFromAmountIn::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3a28d5fbcb599c180bbabaab1b0bb67b616a222646290431c3a5d2956d426c9",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::15\""
                        }
                      ],
                      "id": 105424,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3123:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3123:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105432,
                  "nodeType": "ExpressionStatement",
                  "src": "3123:74:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105434,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3216:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105435,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "3216:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105437,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3231:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3216:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105438,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105119,
                        "src": "3235:18:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3136",
                        "id": 105439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3255:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b148161a7c659b6c20413592a31efc92ab11d3b9321dbbc38bd186951297233",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::16\""
                        },
                        "value": "test_QuoteFromAmountIn::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b148161a7c659b6c20413592a31efc92ab11d3b9321dbbc38bd186951297233",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::16\""
                        }
                      ],
                      "id": 105433,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3207:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3207:77:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105441,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:77:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105443,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3304:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105444,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3313:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "3304:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105446,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3322:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3304:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105447,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3326:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105448,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3335:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "3326:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105450,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3344:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3326:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3137",
                        "id": 105451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3348:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_feb2b5a854ebb3f51fa37b55404a8138fcdfbf4a55895ddae88a58bb8cf1323f",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::17\""
                        },
                        "value": "test_QuoteFromAmountIn::17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_feb2b5a854ebb3f51fa37b55404a8138fcdfbf4a55895ddae88a58bb8cf1323f",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::17\""
                        }
                      ],
                      "id": 105442,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3295:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:82:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105453,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:82:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105457,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105198,
                                "src": "3403:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105458,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3412:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "3403:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105460,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3421:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3403:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3397:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105455,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3397:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3397:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105464,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "3432:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3442:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "3432:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3450:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "3432:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105463,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105462,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3138",
                        "id": 105468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3455:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9016cb6cb86a530067eec132762abb405f154759b8a8ae2535c3dbda0df127e",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::18\""
                        },
                        "value": "test_QuoteFromAmountIn::18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9016cb6cb86a530067eec132762abb405f154759b8a8ae2535c3dbda0df127e",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::18\""
                        }
                      ],
                      "id": 105454,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3388:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:96:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105470,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:96:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105474,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105209,
                                "src": "3509:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105475,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3518:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "3509:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105477,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3527:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3509:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3503:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105472,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3503:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3503:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105481,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "3538:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3548:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "3538:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3556:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "3538:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3532:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105479,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3532:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3532:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3139",
                        "id": 105485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3561:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d3cd6686c5ac80f3328deca0f1e3518be4a80913695957a7dfed2c664073f59",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::19\""
                        },
                        "value": "test_QuoteFromAmountIn::19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d3cd6686c5ac80f3328deca0f1e3518be4a80913695957a7dfed2c664073f59",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::19\""
                        }
                      ],
                      "id": 105471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3494:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:96:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105487,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:96:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105489,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3610:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105490,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3619:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "3610:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105492,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3627:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3610:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105493,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3631:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105494,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3640:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "3631:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105496,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3648:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3631:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3230",
                        "id": 105497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5727a553d32ebe285619c3cc23c41a79086b20ec9ab238e0348f7f5cc7a4776d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::20\""
                        },
                        "value": "test_QuoteFromAmountIn::20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5727a553d32ebe285619c3cc23c41a79086b20ec9ab238e0348f7f5cc7a4776d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::20\""
                        }
                      ],
                      "id": 105488,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3601:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:80:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105499,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:80:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105501,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3700:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105502,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3709:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "3700:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105504,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3717:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3700:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105505,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3721:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105506,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3730:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "3721:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105508,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3738:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3721:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3231",
                        "id": 105509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3742:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01cd90876c6f9fbcdd827af851518f5110468dfe0db9b3ecf73e5f6a623627ed",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::21\""
                        },
                        "value": "test_QuoteFromAmountIn::21"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01cd90876c6f9fbcdd827af851518f5110468dfe0db9b3ecf73e5f6a623627ed",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::21\""
                        }
                      ],
                      "id": 105500,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3691:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3691:80:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105511,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:80:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105513,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3804:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105514,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3813:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "3804:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105516,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3804:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105517,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "3859:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105518,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3868:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "3859:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105520,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3898:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3859:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3232",
                        "id": 105521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3914:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c1be7be0eb34fc65bfb99d8805fc9c71dbf330ea5cceff6d968b90ad926da72",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::22\""
                        },
                        "value": "test_QuoteFromAmountIn::22"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c1be7be0eb34fc65bfb99d8805fc9c71dbf330ea5cceff6d968b90ad926da72",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::22\""
                        }
                      ],
                      "id": 105512,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3782:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105523,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105525,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "3984:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105526,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3993:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "3984:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105528,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4023:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3984:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105529,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "4039:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105530,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4048:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "4039:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105532,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4078:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4039:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3233",
                        "id": 105533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_027ea22dbef1bc5581ed38b111c836bfd211516ce2d6317ece7cd657f000a977",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::23\""
                        },
                        "value": "test_QuoteFromAmountIn::23"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_027ea22dbef1bc5581ed38b111c836bfd211516ce2d6317ece7cd657f000a977",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::23\""
                        }
                      ],
                      "id": 105524,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3962:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105535,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105537,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105198,
                            "src": "4152:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105538,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4161:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "4152:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105540,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4166:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4152:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105541,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105209,
                            "src": "4170:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105542,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4179:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "4170:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105544,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4184:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4170:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3234",
                        "id": 105545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4188:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6b2c85e49c1e355c5ca57b5fc06ba141a7b9b7ec0520bac09f448f35cf33162",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::24\""
                        },
                        "value": "test_QuoteFromAmountIn::24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6b2c85e49c1e355c5ca57b5fc06ba141a7b9b7ec0520bac09f448f35cf33162",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::24\""
                        }
                      ],
                      "id": 105536,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4143:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105547,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:74:127"
                }
              ]
            },
            "functionSelector": "a2797cec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_QuoteFromAmountIn",
            "nameLocation": "1002:22:127",
            "parameters": {
              "id": 105157,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:2:127"
            },
            "returnParameters": {
              "id": 105158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:0:127"
            },
            "scope": 105943,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 105942,
            "nodeType": "FunctionDefinition",
            "src": "4230:3240:127",
            "nodes": [],
            "body": {
              "id": 105941,
              "nodeType": "Block",
              "src": "4276:3194:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    105556
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105556,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "4303:5:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105941,
                      "src": "4286:22:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 105554,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4286:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 105555,
                        "nodeType": "ArrayTypeName",
                        "src": "4286:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105562,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 105560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 105559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4311:13:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 105557,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4315:7:127",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 105558,
                        "nodeType": "ArrayTypeName",
                        "src": "4315:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 105561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:16:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4286:41:127"
                },
                {
                  "expression": {
                    "id": 105571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105563,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "4337:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105565,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 105564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4343:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4337:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105568,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "4356:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4375:4:127",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103687,
                          "src": "4356:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4348:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105566,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4348:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105570,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4348:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4337:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105572,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:43:127"
                },
                {
                  "expression": {
                    "id": 105581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105573,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "4390:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105575,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 105574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4390:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105578,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "4409:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4428:4:127",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103690,
                          "src": "4409:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4401:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4401:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4401:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4390:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105582,
                  "nodeType": "ExpressionStatement",
                  "src": "4390:43:127"
                },
                {
                  "assignments": [
                    105584
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105584,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4452:9:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105941,
                      "src": "4444:17:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 105583,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4444:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105586,
                  "initialValue": {
                    "hexValue": "316536",
                    "id": 105585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4464:3:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1e6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4444:23:127"
                },
                {
                  "assignments": [
                    105591
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105591,
                      "mutability": "mutable",
                      "name": "newQuote",
                      "nameLocation": "4500:8:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105941,
                      "src": "4478:30:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 105590,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 105589,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4478:8:127",
                            "4487:5:127"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59419,
                          "src": "4478:14:127"
                        },
                        "referencedDeclaration": 59419,
                        "src": "4478:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$59419_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105597,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 105594,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "4547:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 105595,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105584,
                        "src": "4554:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 105592,
                        "name": "newQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105125,
                        "src": "4511:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$60638",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 105593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4521:25:127",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60534,
                      "src": "4511:35:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 105596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:53:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4478:86:127"
                },
                {
                  "assignments": [
                    105602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 105602,
                      "mutability": "mutable",
                      "name": "oldQuote",
                      "nameLocation": "4596:8:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 105941,
                      "src": "4574:30:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 105601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 105600,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4574:8:127",
                            "4583:5:127"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 59419,
                          "src": "4574:14:127"
                        },
                        "referencedDeclaration": 59419,
                        "src": "4574:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$59419_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105608,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 105605,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "4643:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 105606,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105584,
                        "src": "4650:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 105603,
                        "name": "oldQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105131,
                        "src": "4607:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$60638",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 105604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4617:25:127",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60534,
                      "src": "4607:35:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 105607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:53:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4574:86:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105610,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "4680:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105611,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4689:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "4680:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105613,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4695:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4680:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105614,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "4699:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105615,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4708:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "4699:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105617,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4714:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4699:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a31",
                        "id": 105618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4718:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b7efa93e2d5e5d89309adcfc6c4707d315fe337ace4e93f32bcee3b6342ab09",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::1\""
                        },
                        "value": "test_QuoteFromAmounOut::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b7efa93e2d5e5d89309adcfc6c4707d315fe337ace4e93f32bcee3b6342ab09",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::1\""
                        }
                      ],
                      "id": 105609,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4671:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4671:75:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105620,
                  "nodeType": "ExpressionStatement",
                  "src": "4671:75:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105622,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "4765:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105623,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4774:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "4765:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105625,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4780:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4765:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105626,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "4784:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105627,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4793:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "4784:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105629,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4799:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4784:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a32",
                        "id": 105630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d1a68de5d3e69b4910acb4a8f93ade6165bf9a7ac15ce1033a8a76a1e442a5d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::2\""
                        },
                        "value": "test_QuoteFromAmounOut::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d1a68de5d3e69b4910acb4a8f93ade6165bf9a7ac15ce1033a8a76a1e442a5d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::2\""
                        }
                      ],
                      "id": 105621,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4756:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:75:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105632,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:75:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105634,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "4851:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105635,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4860:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "4851:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105637,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4851:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105638,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105122,
                        "src": "4870:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a33",
                        "id": 105639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4887:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af554d1516586fd02e3fde0cf1bd2edee8e069d0d12ffad0390d1cf84a93cb5c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::3\""
                        },
                        "value": "test_QuoteFromAmounOut::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af554d1516586fd02e3fde0cf1bd2edee8e069d0d12ffad0390d1cf84a93cb5c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::3\""
                        }
                      ],
                      "id": 105633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4842:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:73:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105641,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:73:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105643,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "4934:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4943:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "4934:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105646,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4949:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4934:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105647,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105119,
                        "src": "4953:18:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a34",
                        "id": 105648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4973:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_139b010b0c62e870153b716c7a2b6fe600c32345be0424c644f0f4f440169d4a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::4\""
                        },
                        "value": "test_QuoteFromAmounOut::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_139b010b0c62e870153b716c7a2b6fe600c32345be0424c644f0f4f440169d4a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::4\""
                        }
                      ],
                      "id": 105642,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4925:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4925:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105650,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105652,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5021:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105653,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5030:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "5021:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105655,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5039:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5021:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105656,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5043:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105657,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5052:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "5043:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105659,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5061:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5043:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a35",
                        "id": 105660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5065:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_362d2600d8671b9fd9929e5721f4b1dd759a1cf4d16f869e4d53d906b805c599",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::5\""
                        },
                        "value": "test_QuoteFromAmounOut::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_362d2600d8671b9fd9929e5721f4b1dd759a1cf4d16f869e4d53d906b805c599",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::5\""
                        }
                      ],
                      "id": 105651,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5012:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:81:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105662,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:81:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105666,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105591,
                                "src": "5119:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105667,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5128:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "5119:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105669,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5137:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5119:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5113:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105664,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5113:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5113:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105673,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "5148:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105674,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5158:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "5148:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5166:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "5148:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5142:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105671,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5142:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5142:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a36",
                        "id": 105677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c474193438c618081e332eca0e92b1fb252afb2ffdedb84a212661d3c09fe72b",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::6\""
                        },
                        "value": "test_QuoteFromAmounOut::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c474193438c618081e332eca0e92b1fb252afb2ffdedb84a212661d3c09fe72b",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::6\""
                        }
                      ],
                      "id": 105663,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5104:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:95:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105679,
                  "nodeType": "ExpressionStatement",
                  "src": "5104:95:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105683,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105602,
                                "src": "5224:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105684,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5233:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "5224:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105686,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105685,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5242:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5224:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5218:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105681,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5218:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5218:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105690,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "5253:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5263:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "5253:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5271:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "5253:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5247:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105688,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5247:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a37",
                        "id": 105694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5276:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2dbb203b1f6ae498a310fb785f57a6fd8167801f032f74ed7a02e3cdc8b1576",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::7\""
                        },
                        "value": "test_QuoteFromAmounOut::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2dbb203b1f6ae498a310fb785f57a6fd8167801f032f74ed7a02e3cdc8b1576",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::7\""
                        }
                      ],
                      "id": 105680,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5209:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5209:95:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105696,
                  "nodeType": "ExpressionStatement",
                  "src": "5209:95:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105698,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5324:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105699,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5333:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "5324:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105701,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5341:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5324:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105702,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5345:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105703,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5354:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "5345:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105705,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5362:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5345:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a38",
                        "id": 105706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14621948003ec0f5f94c3e71eccd19c3cf14545981d0254bfb811effe86ed54a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::8\""
                        },
                        "value": "test_QuoteFromAmounOut::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14621948003ec0f5f94c3e71eccd19c3cf14545981d0254bfb811effe86ed54a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::8\""
                        }
                      ],
                      "id": 105697,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5315:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5315:79:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105708,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:79:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105710,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5413:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105711,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5422:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "5413:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105713,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5430:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5413:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105714,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5434:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105715,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5443:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "5434:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105717,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5451:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5434:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a39",
                        "id": 105718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5455:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac9b513cafd59c7f63fcc3fb2c48b7b935ad393bf70af13b751621dcfac30d17",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::9\""
                        },
                        "value": "test_QuoteFromAmounOut::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac9b513cafd59c7f63fcc3fb2c48b7b935ad393bf70af13b751621dcfac30d17",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::9\""
                        }
                      ],
                      "id": 105709,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5404:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:79:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105720,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:79:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105722,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5516:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105723,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5525:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "5516:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105725,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5555:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5516:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105726,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5571:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105727,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5580:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "5571:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105729,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5610:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5571:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3130",
                        "id": 105730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5626:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a25a1aec3dc3dc9608544a8f97b47d7c4de103adb8f7c5fcd724457b203d2f70",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::10\""
                        },
                        "value": "test_QuoteFromAmounOut::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a25a1aec3dc3dc9608544a8f97b47d7c4de103adb8f7c5fcd724457b203d2f70",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::10\""
                        }
                      ],
                      "id": 105721,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5494:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5494:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105732,
                  "nodeType": "ExpressionStatement",
                  "src": "5494:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105734,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5696:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105735,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5705:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "5696:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105737,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5735:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5696:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105738,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5751:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105739,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5760:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "5751:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105741,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5790:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5751:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3131",
                        "id": 105742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5806:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bd61434362d2e2bbaabbacd735e1e56673493e027551988bf22ddd4fd3c8c0f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::11\""
                        },
                        "value": "test_QuoteFromAmounOut::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bd61434362d2e2bbaabbacd735e1e56673493e027551988bf22ddd4fd3c8c0f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::11\""
                        }
                      ],
                      "id": 105733,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5674:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5674:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105744,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105746,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "5864:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105747,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5873:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "5864:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105749,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5878:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5864:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105750,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "5882:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105751,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5891:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "5882:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105753,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5896:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5882:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3132",
                        "id": 105754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5900:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c04ede4ef9cfe74a205bafea4c69f70a4964fa3778418c962d88d70285ea8466",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::12\""
                        },
                        "value": "test_QuoteFromAmounOut::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c04ede4ef9cfe74a205bafea4c69f70a4964fa3778418c962d88d70285ea8466",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::12\""
                        }
                      ],
                      "id": 105745,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5855:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105756,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:74:127"
                },
                {
                  "expression": {
                    "id": 105765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105757,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "5940:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105759,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 105758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5946:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5940:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105762,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "5959:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5978:4:127",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103690,
                          "src": "5959:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5951:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105760,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5951:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5951:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5940:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105766,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:43:127"
                },
                {
                  "expression": {
                    "id": 105775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 105767,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105556,
                        "src": "5993:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 105769,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 105768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5999:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5993:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 105772,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103697,
                            "src": "6012:18:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$103697_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 105773,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6031:4:127",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 103687,
                          "src": "6012:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 105771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6004:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 105770,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6004:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 105774,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6004:32:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5993:43:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 105776,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:43:127"
                },
                {
                  "expression": {
                    "id": 105783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105777,
                      "name": "newQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105591,
                      "src": "6047:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105780,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105556,
                          "src": "6094:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 105781,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105584,
                          "src": "6101:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 105778,
                          "name": "newQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105125,
                          "src": "6058:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$60638",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 105779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6068:25:127",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60534,
                        "src": "6058:35:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 105782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6058:53:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6047:64:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 105784,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:64:127"
                },
                {
                  "expression": {
                    "id": 105791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 105785,
                      "name": "oldQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105602,
                      "src": "6121:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105788,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105556,
                          "src": "6168:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 105789,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105584,
                          "src": "6175:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 105786,
                          "name": "oldQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105131,
                          "src": "6132:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$60638",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 105787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6142:25:127",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60534,
                        "src": "6132:35:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$59419_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 105790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6132:53:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6121:64:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 105792,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:64:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105794,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6205:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105795,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6214:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "6205:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105797,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6220:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6205:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105798,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6224:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105799,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6233:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "6224:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105801,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6239:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6224:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3133",
                        "id": 105802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6243:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af21704ee4bee10290b284c882866c41192140c5a48d5b1c208b870c415b1c37",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::13\""
                        },
                        "value": "test_QuoteFromAmounOut::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af21704ee4bee10290b284c882866c41192140c5a48d5b1c208b870c415b1c37",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::13\""
                        }
                      ],
                      "id": 105793,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6196:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6196:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105804,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105806,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6291:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105807,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6300:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "6291:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105809,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6306:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6291:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105810,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6310:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105811,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6319:5:127",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59399,
                          "src": "6310:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105813,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6325:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6310:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3134",
                        "id": 105814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6329:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67624ec0b072c75b5fec7603b5108eea3d5003f9f52cf315e98bc27d11a4ff",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::14\""
                        },
                        "value": "test_QuoteFromAmounOut::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67624ec0b072c75b5fec7603b5108eea3d5003f9f52cf315e98bc27d11a4ff",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::14\""
                        }
                      ],
                      "id": 105805,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6282:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6282:76:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105816,
                  "nodeType": "ExpressionStatement",
                  "src": "6282:76:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105818,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6378:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105819,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6387:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "6378:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105821,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6393:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6378:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105822,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105122,
                        "src": "6397:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3135",
                        "id": 105823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6414:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3b3baeae76a1c381ab3b0e0ffc48a3791f77cd229486fcf3dfb8dae11e1674f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::15\""
                        },
                        "value": "test_QuoteFromAmounOut::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3b3baeae76a1c381ab3b0e0ffc48a3791f77cd229486fcf3dfb8dae11e1674f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::15\""
                        }
                      ],
                      "id": 105817,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6369:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105825,
                  "nodeType": "ExpressionStatement",
                  "src": "6369:74:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105827,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6462:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105828,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6471:5:127",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59402,
                          "src": "6462:14:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 105830,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6477:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6462:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 105831,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105119,
                        "src": "6481:18:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3136",
                        "id": 105832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6501:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22675353a6ec51306533897cfaf33d9b6b2e056f2944f373eeeaf6627e97fbb0",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::16\""
                        },
                        "value": "test_QuoteFromAmounOut::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22675353a6ec51306533897cfaf33d9b6b2e056f2944f373eeeaf6627e97fbb0",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::16\""
                        }
                      ],
                      "id": 105826,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6453:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 105833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:77:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105834,
                  "nodeType": "ExpressionStatement",
                  "src": "6453:77:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105836,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6550:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105837,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6559:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "6550:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105839,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6568:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6550:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105840,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6572:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105841,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6581:8:127",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59405,
                          "src": "6572:17:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 105843,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6590:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6572:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3137",
                        "id": 105844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6239a2f55d8b3416142b9cdeb01099884a96c4462b8f3c7514a9afbf8854835",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::17\""
                        },
                        "value": "test_QuoteFromAmounOut::17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6239a2f55d8b3416142b9cdeb01099884a96c4462b8f3c7514a9afbf8854835",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::17\""
                        }
                      ],
                      "id": 105835,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6541:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6541:82:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105846,
                  "nodeType": "ExpressionStatement",
                  "src": "6541:82:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105850,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105591,
                                "src": "6649:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105851,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6658:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "6649:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105853,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105852,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6667:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6649:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6643:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105848,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6643:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6643:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105857,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "6678:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105858,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6688:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "6678:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105859,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6696:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "6678:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6672:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105855,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6672:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6672:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3138",
                        "id": 105861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6701:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bed5822ed825416d1b73f85fa617eb61eead44d9907d9d9d08eedf10d8bfaea2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::18\""
                        },
                        "value": "test_QuoteFromAmounOut::18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bed5822ed825416d1b73f85fa617eb61eead44d9907d9d9d08eedf10d8bfaea2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::18\""
                        }
                      ],
                      "id": 105847,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6634:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6634:96:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105863,
                  "nodeType": "ExpressionStatement",
                  "src": "6634:96:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 105867,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105602,
                                "src": "6755:8:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 105868,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6764:8:127",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 59409,
                              "src": "6755:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$66990_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 105870,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 105869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6773:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6755:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6749:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105865,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6749:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6749:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 105874,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 67387,
                                "src": "6784:9:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$67387_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 105875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6794:7:127",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66990,
                              "src": "6784:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$66990_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 105876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6802:2:127",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66989,
                            "src": "6784:20:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$66990",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 105873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6778:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 105872,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6778:5:127",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 105877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:27:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3139",
                        "id": 105878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6807:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc1f2362be154e65090324ce822afcdf470146b9322d3b21598eafcad1cf9142",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::19\""
                        },
                        "value": "test_QuoteFromAmounOut::19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc1f2362be154e65090324ce822afcdf470146b9322d3b21598eafcad1cf9142",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::19\""
                        }
                      ],
                      "id": 105864,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6740:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6740:96:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105880,
                  "nodeType": "ExpressionStatement",
                  "src": "6740:96:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105882,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6856:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105883,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6865:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "6856:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105885,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105884,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6873:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6856:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105886,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6877:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105887,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6886:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "6877:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105889,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6894:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6877:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3230",
                        "id": 105890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6898:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ecdc613f7f25d377a0712e341e1401a7254e0524a0e1ab97dd1895b399c1d8d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::20\""
                        },
                        "value": "test_QuoteFromAmounOut::20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ecdc613f7f25d377a0712e341e1401a7254e0524a0e1ab97dd1895b399c1d8d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::20\""
                        }
                      ],
                      "id": 105881,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6847:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6847:80:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105892,
                  "nodeType": "ExpressionStatement",
                  "src": "6847:80:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105894,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "6946:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6955:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "6946:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105897,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6963:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6946:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105898,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "6967:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105899,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6976:7:127",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59412,
                          "src": "6967:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105901,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6984:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6967:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3231",
                        "id": 105902,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6988:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e9e218d9589ab609b5686b359b0c8379308eaeb9369123ccc730af18e81cb0c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::21\""
                        },
                        "value": "test_QuoteFromAmounOut::21"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e9e218d9589ab609b5686b359b0c8379308eaeb9369123ccc730af18e81cb0c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::21\""
                        }
                      ],
                      "id": 105893,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6937:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6937:80:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105904,
                  "nodeType": "ExpressionStatement",
                  "src": "6937:80:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105906,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "7050:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105907,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7059:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "7050:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105909,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7089:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7050:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105910,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "7105:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105911,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7114:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "7105:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105913,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7144:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7105:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3232",
                        "id": 105914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_411dafe8324eda4204fa926cdfad6074fdea5f2decb34511df96f4bc6ab88ef2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::22\""
                        },
                        "value": "test_QuoteFromAmounOut::22"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_411dafe8324eda4204fa926cdfad6074fdea5f2decb34511df96f4bc6ab88ef2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::22\""
                        }
                      ],
                      "id": 105905,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7028:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105916,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105918,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "7230:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105919,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7239:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "7230:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105921,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7269:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7230:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105922,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "7285:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105923,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7294:29:127",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59415,
                          "src": "7285:38:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105925,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 105924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7324:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7285:41:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3233",
                        "id": 105926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7340:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd75a9936fdcb779e3b8c5d6cbc79414d9dfadc430475c4090bce9cce2e9d93",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::23\""
                        },
                        "value": "test_QuoteFromAmounOut::23"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd75a9936fdcb779e3b8c5d6cbc79414d9dfadc430475c4090bce9cce2e9d93",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::23\""
                        }
                      ],
                      "id": 105917,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7208:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:170:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105928,
                  "nodeType": "ExpressionStatement",
                  "src": "7208:170:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105930,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105591,
                            "src": "7398:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105931,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7407:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "7398:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105933,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7412:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7398:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 105934,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105602,
                            "src": "7416:8:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$59419_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 105935,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7425:4:127",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59418,
                          "src": "7416:13:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 105937,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 105936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7430:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7416:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3234",
                        "id": 105938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7434:28:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c341e876eaf3bee41f72dca6b154b051bd70736c5421a937f6bd9875d4a9add",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::24\""
                        },
                        "value": "test_QuoteFromAmounOut::24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c341e876eaf3bee41f72dca6b154b051bd70736c5421a937f6bd9875d4a9add",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::24\""
                        }
                      ],
                      "id": 105929,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7389:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 105939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7389:74:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105940,
                  "nodeType": "ExpressionStatement",
                  "src": "7389:74:127"
                }
              ]
            },
            "functionSelector": "f4af7f08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_QuoteFromAmounOut",
            "nameLocation": "4239:22:127",
            "parameters": {
              "id": 105550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:2:127"
            },
            "returnParameters": {
              "id": 105551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4276:0:127"
            },
            "scope": 105943,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 105109,
              "name": "Test",
              "nameLocations": [
                "266:4:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11134,
              "src": "266:4:127"
            },
            "id": 105110,
            "nodeType": "InheritanceSpecifier",
            "src": "266:4:127"
          }
        ],
        "canonicalName": "LiquidityBinQuoterPriorityTest",
        "contractDependencies": [
          60638
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 105108,
          "nodeType": "StructuredDocumentation",
          "src": "103:119:127",
          "text": " Makes sure that the new quoter picks the version 2.1 over the version 2 if both outputs are exactly the same"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          105943,
          11134,
          11087,
          6685,
          6360,
          5567,
          3507,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinQuoterPriorityTest",
        "nameLocation": "232:30:127",
        "scope": 105944,
        "usedErrors": [],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 127
}