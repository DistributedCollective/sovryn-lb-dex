{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_QuoteFromAmounOut",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_QuoteFromAmountIn",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600c805460ff199081166001908117909255601f80549091169091179055602080546001600160a01b0319167364b57f4249aa99a812212cee7daefedc40b203cd17905534801561005457600080fd5b50616249806100646000396000f3fe60806040523480156200001157600080fd5b5060043610620001095760003560e01c8063916a17c611620000a3578063ba414fa6116200006e578063ba414fa614620001d2578063e20c9f7114620001ed578063f4af7f0814620001f7578063fa7626d4146200020157600080fd5b8063916a17c6146200019b578063a2797cec14620001b4578063b0464fdc14620001be578063b5508aa914620001c857600080fd5b80633e5e3c2311620000e45780633e5e3c2314620001555780633f7286f4146200015f57806366d9a9a0146200016957806385226c81146200018257600080fd5b80630a9254e4146200010e5780631ed7831c146200011a5780632ade3880146200013c575b600080fd5b620001186200020f565b005b62000124620003dd565b60405162000133919062002d76565b60405180910390f35b6200014662000441565b60405162000133919062002de6565b620001246200058f565b62000124620005f1565b6200017362000653565b60405162000133919062002f00565b6200018c620007cc565b60405162000133919062002f8b565b620001a5620008a6565b60405162000133919062002ff1565b6200011862000990565b620001a56200198f565b6200018c62001a79565b620001dc62001b53565b604051901515815260200162000133565b6200012462001c12565b6200011862001c74565b601f54620001dc9060ff1681565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa15801562000295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002bf9190810190620030da565b6301fc52a26040518363ffffffff1660e01b8152600401620002e392919062003179565b6020604051808303816000875af115801562000303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032991906200319d565b50739ad6c38be94206ca50bb0d90783181662f0cfa10738e42f2f4101563bf679975178e880fd87d3efd4e73b4315e873dbcf96ffd0acd8ea43f689d8c20fb30604051620003779062002d22565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620003b4573d6000803e3d6000fd5b50601f60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b606060168054806020026020016040519081016040528092919081815260200182805480156200043757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000418575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b828210156200058657600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200056e578382906000526020600020018054620004da90620031b7565b80601f01602080910402602001604051908101604052809291908181526020018280546200050890620031b7565b8015620005595780601f106200052d5761010080835404028352916020019162000559565b820191906000526020600020905b8154815290600101906020018083116200053b57829003601f168201915b505050505081526020019060010190620004b8565b50505050815250508152602001906001019062000465565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620005865783829060005260206000209060020201604051806040016040529081600082018054620006ad90620031b7565b80601f0160208091040260200160405190810160405280929190818152602001828054620006db90620031b7565b80156200072c5780601f1062000700576101008083540402835291602001916200072c565b820191906000526020600020905b8154815290600101906020018083116200070e57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620007b357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620007745790505b5050505050815250508152602001906001019062000677565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620005865783829060005260206000200180546200081290620031b7565b80601f01602080910402602001604051908101604052809291908181526020018280546200084090620031b7565b8015620008915780601f10620008655761010080835404028352916020019162000891565b820191906000526020600020905b8154815290600101906020018083116200087357829003601f168201915b505050505081526020019060010190620007f0565b6060601d805480602002602001604051908101604052809291908181526020016000905b82821015620005865760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200097757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009385790505b50505050508152505081526020019060010190620008ca565b604080516002808252606082018352600092602083019080368337019050509050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c781600081518110620009dc57620009dc620031f3565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160018151811062000a275762000a27620031f3565b6001600160a01b039283166020918202929092010152601f54604051623e40a960e61b8152620f42409260009261010090041690630f902a409062000a73908690869060040162003209565b600060405180830381865afa15801562000a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000abb919081019062003433565b602054604051623e40a960e61b81529192506000916001600160a01b0390911690630f902a409062000af4908790879060040162003209565b600060405180830381865afa15801562000b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b3c919081019062003433565b905062000bc2826000015160008151811062000b5c5762000b5c620031f3565b6020026020010151826000015160008151811062000b7e5762000b7e620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a310000000000000081525062002c71565b62000c46826000015160018151811062000be05762000be0620031f3565b6020026020010151826000015160018151811062000c025762000c02620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a320000000000000081525062002c71565b62000cbd826020015160008151811062000c645762000c64620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a330000000000000081525062002c71565b62000d34816020015160008151811062000cdb5762000cdb620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a340000000000000081525062002c71565b62000db8826040015160008151811062000d525762000d52620031f3565b6020026020010151826040015160008151811062000d745762000d74620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a350000000000000081525062002ce5565b62000e36826060015160008151811062000dd65762000dd6620031f3565b6020026020010151600181111562000df25762000df262003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a360000000000000081525062002ce5565b62000eb4816060015160008151811062000e545762000e54620031f3565b6020026020010151600181111562000e705762000e7062003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a370000000000000081525062002ce5565b62000f4a826080015160008151811062000ed25762000ed2620031f3565b60200260200101516001600160801b0316826080015160008151811062000efd5762000efd620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a380000000000000081525062002ce5565b62000fe0826080015160018151811062000f685762000f68620031f3565b60200260200101516001600160801b0316826080015160018151811062000f935762000f93620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a390000000000000081525062002ce5565b620010768260a0015160008151811062000ffe5762000ffe620031f3565b60200260200101516001600160801b03168260a00151600081518110620010295762001029620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313000000000000081525062002ce5565b6200110c8260a00151600181518110620010945762001094620031f3565b60200260200101516001600160801b03168260a00151600181518110620010bf57620010bf620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313100000000000081525062002ce5565b620011a28260c001516000815181106200112a576200112a620031f3565b60200260200101516001600160801b03168260c00151600081518110620011555762001155620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313200000000000081525062002ce5565b73b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e84600081518110620011cd57620011cd620031f3565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c784600181518110620012185762001218620031f3565b6001600160a01b039283166020918202929092010152601f54604051623e40a960e61b815261010090910490911690630f902a40906200125f908790879060040162003209565b600060405180830381865afa1580156200127d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620012a7919081019062003433565b602054604051623e40a960e61b81529193506001600160a01b031690630f902a4090620012db908790879060040162003209565b600060405180830381865afa158015620012f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001323919081019062003433565b9050620013a98260000151600081518110620013435762001343620031f3565b60200260200101518260000151600081518110620013655762001365620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313300000000000081525062002c71565b6200142d8260000151600181518110620013c757620013c7620031f3565b60200260200101518260000151600181518110620013e957620013e9620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313400000000000081525062002c71565b620014a482602001516000815181106200144b576200144b620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313500000000000081525062002c71565b6200151b8160200151600081518110620014c257620014c2620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313600000000000081525062002c71565b6200159f8260400151600081518110620015395762001539620031f3565b602002602001015182604001516000815181106200155b576200155b620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313700000000000081525062002ce5565b6200161d8260600151600081518110620015bd57620015bd620031f3565b60200260200101516001811115620015d957620015d962003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313800000000000081525062002ce5565b6200169b81606001516000815181106200163b576200163b620031f3565b6020026020010151600181111562001657576200165762003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313900000000000081525062002ce5565b620017318260800151600081518110620016b957620016b9620031f3565b60200260200101516001600160801b03168260800151600081518110620016e457620016e4620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323000000000000081525062002ce5565b620017c782608001516001815181106200174f576200174f620031f3565b60200260200101516001600160801b031682608001516001815181106200177a576200177a620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323100000000000081525062002ce5565b6200185d8260a00151600081518110620017e557620017e5620031f3565b60200260200101516001600160801b03168260a00151600081518110620018105762001810620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323200000000000081525062002ce5565b620018f38260a001516001815181106200187b576200187b620031f3565b60200260200101516001600160801b03168260a00151600181518110620018a657620018a6620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323300000000000081525062002ce5565b620019898260c00151600081518110620019115762001911620031f3565b60200260200101516001600160801b03168260c001516000815181106200193c576200193c620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323400000000000081525062002ce5565b50505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b82821015620005865760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562001a6057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001a215790505b50505050508152505081526020019060010190620019b3565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200058657838290600052602060002001805462001abf90620031b7565b80601f016020809104026020016040519081016040528092919081815260200182805462001aed90620031b7565b801562001b3e5780601f1062001b125761010080835404028352916020019162001b3e565b820191906000526020600020905b81548152906001019060200180831162001b2057829003601f168201915b50505050508152602001906001019062001a9d565b60085460009060ff161562001b6c575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562001be5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0b91906200319d565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b60408051600280825260608201835260009260208301908036833701905050905073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160008151811062001cc05762001cc0620031f3565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78160018151811062001d0b5762001d0b620031f3565b6001600160a01b039283166020918202929092010152601f54604051632c90a11360e11b8152620f4240926000926101009004169063592142269062001d58908690869060040162003209565b600060405180830381865afa15801562001d76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001da0919081019062003433565b602054604051632c90a11360e11b81529192506000916001600160a01b039091169063592142269062001dda908790879060040162003209565b600060405180830381865afa15801562001df8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e22919081019062003433565b905062001ea8826000015160008151811062001e425762001e42620031f3565b6020026020010151826000015160008151811062001e645762001e64620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a310000000000000081525062002c71565b62001f2c826000015160018151811062001ec65762001ec6620031f3565b6020026020010151826000015160018151811062001ee85762001ee8620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a320000000000000081525062002c71565b62001fa3826020015160008151811062001f4a5762001f4a620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a330000000000000081525062002c71565b6200201a816020015160008151811062001fc15762001fc1620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a340000000000000081525062002c71565b6200209e8260400151600081518110620020385762002038620031f3565b602002602001015182604001516000815181106200205a576200205a620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a350000000000000081525062002ce5565b6200211c8260600151600081518110620020bc57620020bc620031f3565b60200260200101516001811115620020d857620020d862003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a360000000000000081525062002ce5565b6200219a81606001516000815181106200213a576200213a620031f3565b6020026020010151600181111562002156576200215662003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a370000000000000081525062002ce5565b620022308260800151600081518110620021b857620021b8620031f3565b60200260200101516001600160801b03168260800151600081518110620021e357620021e3620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a380000000000000081525062002ce5565b620022c682608001516001815181106200224e576200224e620031f3565b60200260200101516001600160801b03168260800151600181518110620022795762002279620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a390000000000000081525062002ce5565b6200235c8260a00151600081518110620022e457620022e4620031f3565b60200260200101516001600160801b03168260a001516000815181106200230f576200230f620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313000000000000081525062002ce5565b620023f28260a001516001815181106200237a576200237a620031f3565b60200260200101516001600160801b03168260a00151600181518110620023a557620023a5620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313100000000000081525062002ce5565b620024888260c00151600081518110620024105762002410620031f3565b60200260200101516001600160801b03168260c001516000815181106200243b576200243b620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313200000000000081525062002ce5565b739702230a8ea53601f5cd2dc00fdbc13d4df4a8c784600081518110620024b357620024b3620031f3565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e84600181518110620024fe57620024fe620031f3565b6001600160a01b039283166020918202929092010152601f54604051632c90a11360e11b81526101009091049091169063592142269062002546908790879060040162003209565b600060405180830381865afa15801562002564573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200258e919081019062003433565b602054604051632c90a11360e11b81529193506001600160a01b031690635921422690620025c3908790879060040162003209565b600060405180830381865afa158015620025e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200260b919081019062003433565b90506200269182600001516000815181106200262b576200262b620031f3565b602002602001015182600001516000815181106200264d576200264d620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313300000000000081525062002c71565b620027158260000151600181518110620026af57620026af620031f3565b60200260200101518260000151600181518110620026d157620026d1620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313400000000000081525062002c71565b6200278c8260200151600081518110620027335762002733620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313500000000000081525062002c71565b620028038160200151600081518110620027aa57620027aa620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313600000000000081525062002c71565b620028878260400151600081518110620028215762002821620031f3565b60200260200101518260400151600081518110620028435762002843620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313700000000000081525062002ce5565b620029058260600151600081518110620028a557620028a5620031f3565b60200260200101516001811115620028c157620028c162003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313800000000000081525062002ce5565b620029838160600151600081518110620029235762002923620031f3565b602002602001015160018111156200293f576200293f62003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313900000000000081525062002ce5565b62002a198260800151600081518110620029a157620029a1620031f3565b60200260200101516001600160801b03168260800151600081518110620029cc57620029cc620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323000000000000081525062002ce5565b62002aaf826080015160018151811062002a375762002a37620031f3565b60200260200101516001600160801b0316826080015160018151811062002a625762002a62620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323100000000000081525062002ce5565b62002b458260a0015160008151811062002acd5762002acd620031f3565b60200260200101516001600160801b03168260a0015160008151811062002af85762002af8620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323200000000000081525062002ce5565b62002bdb8260a0015160018151811062002b635762002b63620031f3565b60200260200101516001600160801b03168260a0015160018151811062002b8e5762002b8e620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323300000000000081525062002ce5565b620019898260c0015160008151811062002bf95762002bf9620031f3565b60200260200101516001600160801b03168260c0015160008151811062002c245762002c24620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323400000000000081525062002ce5565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d19062002cae90869086908690600401620035a8565b60006040518083038186803b15801562002cc757600080fd5b505afa15801562002cdc573d6000803e3d6000fd5b50505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062002cae90869086908690600401620035df565b612c13806200360183390190565b600081518084526020808501945080840160005b8381101562002d6b5781516001600160a01b03168752958201959082019060010162002d44565b509495945050505050565b60208152600062002d8b602083018462002d30565b9392505050565b60005b8381101562002daf57818101518382015260200162002d95565b50506000910152565b6000815180845262002dd281602086016020860162002d92565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002e9c57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002e8557605f1989850301835262002e7284865162002db8565b948e01949350918d019160010162002e53565b505050978a01979450509188019160010162002e0d565b50919a9950505050505050505050565b600081518084526020808501945080840160005b8381101562002d6b5781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010162002ec0565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562002f7d57888303603f190185528151805187855262002f4e8886018262002db8565b91890151858303868b015291905062002f68818362002eac565b96890196945050509086019060010162002f27565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002fe457603f1988860301845262002fd185835162002db8565b9450928501929085019060010162002fb2565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562002f7d57888303603f19018552815180516001600160a01b03168452870151878401879052620030508785018262002eac565b958801959350509086019060010162003018565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715620030a057620030a062003064565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620030d257620030d262003064565b604052919050565b600060208284031215620030ed57600080fd5b815167ffffffffffffffff808211156200310657600080fd5b818401915084601f8301126200311b57600080fd5b81518181111562003130576200313062003064565b62003145601f8201601f1916602001620030a6565b91508082528560208285010111156200315d57600080fd5b6200317081602084016020860162002d92565b50949350505050565b6040815260006200318e604083018562002db8565b90508260208301529392505050565b600060208284031215620031b057600080fd5b5051919050565b600181811c90821680620031cc57607f821691505b602082108103620031ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6040815260006200321e604083018562002d30565b90506001600160801b03831660208301529392505050565b600067ffffffffffffffff82111562003253576200325362003064565b5060051b60200190565b600082601f8301126200326f57600080fd5b8151602062003288620032828362003236565b620030a6565b82815260059290921b84018101918181019086841115620032a857600080fd5b8286015b84811015620032dc5780516001600160a01b0381168114620032ce5760008081fd5b8352918301918301620032ac565b509695505050505050565b600082601f830112620032f957600080fd5b815160206200330c620032828362003236565b82815260059290921b840181019181810190868411156200332c57600080fd5b8286015b84811015620032dc578051835291830191830162003330565b600082601f8301126200335b57600080fd5b815160206200336e620032828362003236565b82815260059290921b840181019181810190868411156200338e57600080fd5b8286015b84811015620032dc57805160028110620033ac5760008081fd5b835291830191830162003392565b600082601f830112620033cc57600080fd5b81516020620033df620032828362003236565b82815260059290921b84018101918181019086841115620033ff57600080fd5b8286015b84811015620032dc5780516001600160801b0381168114620034255760008081fd5b835291830191830162003403565b6000602082840312156200344657600080fd5b815167ffffffffffffffff808211156200345f57600080fd5b9083019060e082860312156200347457600080fd5b6200347e6200307a565b8251828111156200348e57600080fd5b6200349c878286016200325d565b825250602083015182811115620034b257600080fd5b620034c0878286016200325d565b602083015250604083015182811115620034d957600080fd5b620034e787828601620032e7565b6040830152506060830151828111156200350057600080fd5b6200350e8782860162003349565b6060830152506080830151828111156200352757600080fd5b6200353587828601620033ba565b60808301525060a0830151828111156200354e57600080fd5b6200355c87828601620033ba565b60a08301525060c0830151828111156200357557600080fd5b6200358387828601620033ba565b60c08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808616835280851660208401525060606040830152620035d6606083018462002db8565b95945050505050565b838152826020820152606060408201526000620035d6606083018462002db856fe60e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220d4aa32d18c702b63dca8c26128a14e379148c534dea1c274c97ba208a69289c564736f6c63430008140033a26469706673582212206aaa4821dea62523eda595d3e9c066b7990d3a3a4c8279284fc7194cc533e99264736f6c63430008140033",
    "sourceMap": "223:7249:139:-:0;;;3126:44:3;;;-1:-1:-1;;3126:44:3;;;3166:4;3126:44;;;;;;1016:26:13;;;;;;;;;;;666:82:139;;;-1:-1:-1;;;;;;666:82:139;705:42;666:82;;;223:7249;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001095760003560e01c8063916a17c611620000a3578063ba414fa6116200006e578063ba414fa614620001d2578063e20c9f7114620001ed578063f4af7f0814620001f7578063fa7626d4146200020157600080fd5b8063916a17c6146200019b578063a2797cec14620001b4578063b0464fdc14620001be578063b5508aa914620001c857600080fd5b80633e5e3c2311620000e45780633e5e3c2314620001555780633f7286f4146200015f57806366d9a9a0146200016957806385226c81146200018257600080fd5b80630a9254e4146200010e5780631ed7831c146200011a5780632ade3880146200013c575b600080fd5b620001186200020f565b005b62000124620003dd565b60405162000133919062002d76565b60405180910390f35b6200014662000441565b60405162000133919062002de6565b620001246200058f565b62000124620005f1565b6200017362000653565b60405162000133919062002f00565b6200018c620007cc565b60405162000133919062002f8b565b620001a5620008a6565b60405162000133919062002ff1565b6200011862000990565b620001a56200198f565b6200018c62001a79565b620001dc62001b53565b604051901515815260200162000133565b6200012462001c12565b6200011862001c74565b601f54620001dc9060ff1681565b60405163975a6ce960e01b815260206004820152600960248201527f6176616c616e63686500000000000000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906371ee464d90829063975a6ce990606401600060405180830381865afa15801562000295573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620002bf9190810190620030da565b6301fc52a26040518363ffffffff1660e01b8152600401620002e392919062003179565b6020604051808303816000875af115801562000303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032991906200319d565b50739ad6c38be94206ca50bb0d90783181662f0cfa10738e42f2f4101563bf679975178e880fd87d3efd4e73b4315e873dbcf96ffd0acd8ea43f689d8c20fb30604051620003779062002d22565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f080158015620003b4573d6000803e3d6000fd5b50601f60016101000a8154816001600160a01b0302191690836001600160a01b03160217905550565b606060168054806020026020016040519081016040528092919081815260200182805480156200043757602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000418575b5050505050905090565b6060601e805480602002602001604051908101604052809291908181526020016000905b828210156200058657600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b828210156200056e578382906000526020600020018054620004da90620031b7565b80601f01602080910402602001604051908101604052809291908181526020018280546200050890620031b7565b8015620005595780601f106200052d5761010080835404028352916020019162000559565b820191906000526020600020905b8154815290600101906020018083116200053b57829003601f168201915b505050505081526020019060010190620004b8565b50505050815250508152602001906001019062000465565b50505050905090565b6060601880548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b6060601780548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b6060601b805480602002602001604051908101604052809291908181526020016000905b82821015620005865783829060005260206000209060020201604051806040016040529081600082018054620006ad90620031b7565b80601f0160208091040260200160405190810160405280929190818152602001828054620006db90620031b7565b80156200072c5780601f1062000700576101008083540402835291602001916200072c565b820191906000526020600020905b8154815290600101906020018083116200070e57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620007b357602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620007745790505b5050505050815250508152602001906001019062000677565b6060601a805480602002602001604051908101604052809291908181526020016000905b82821015620005865783829060005260206000200180546200081290620031b7565b80601f01602080910402602001604051908101604052809291908181526020018280546200084090620031b7565b8015620008915780601f10620008655761010080835404028352916020019162000891565b820191906000526020600020905b8154815290600101906020018083116200087357829003601f168201915b505050505081526020019060010190620007f0565b6060601d805480602002602001604051908101604052809291908181526020016000905b82821015620005865760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200097757602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620009385790505b50505050508152505081526020019060010190620008ca565b604080516002808252606082018352600092602083019080368337019050509050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c781600081518110620009dc57620009dc620031f3565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160018151811062000a275762000a27620031f3565b6001600160a01b039283166020918202929092010152601f54604051623e40a960e61b8152620f42409260009261010090041690630f902a409062000a73908690869060040162003209565b600060405180830381865afa15801562000a91573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000abb919081019062003433565b602054604051623e40a960e61b81529192506000916001600160a01b0390911690630f902a409062000af4908790879060040162003209565b600060405180830381865afa15801562000b12573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b3c919081019062003433565b905062000bc2826000015160008151811062000b5c5762000b5c620031f3565b6020026020010151826000015160008151811062000b7e5762000b7e620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a310000000000000081525062002c71565b62000c46826000015160018151811062000be05762000be0620031f3565b6020026020010151826000015160018151811062000c025762000c02620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a320000000000000081525062002c71565b62000cbd826020015160008151811062000c645762000c64620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a330000000000000081525062002c71565b62000d34816020015160008151811062000cdb5762000cdb620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a340000000000000081525062002c71565b62000db8826040015160008151811062000d525762000d52620031f3565b6020026020010151826040015160008151811062000d745762000d74620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a350000000000000081525062002ce5565b62000e36826060015160008151811062000dd65762000dd6620031f3565b6020026020010151600181111562000df25762000df262003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a360000000000000081525062002ce5565b62000eb4816060015160008151811062000e545762000e54620031f3565b6020026020010151600181111562000e705762000e7062003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a370000000000000081525062002ce5565b62000f4a826080015160008151811062000ed25762000ed2620031f3565b60200260200101516001600160801b0316826080015160008151811062000efd5762000efd620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a380000000000000081525062002ce5565b62000fe0826080015160018151811062000f685762000f68620031f3565b60200260200101516001600160801b0316826080015160018151811062000f935762000f93620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a390000000000000081525062002ce5565b620010768260a0015160008151811062000ffe5762000ffe620031f3565b60200260200101516001600160801b03168260a00151600081518110620010295762001029620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313000000000000081525062002ce5565b6200110c8260a00151600181518110620010945762001094620031f3565b60200260200101516001600160801b03168260a00151600181518110620010bf57620010bf620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313100000000000081525062002ce5565b620011a28260c001516000815181106200112a576200112a620031f3565b60200260200101516001600160801b03168260c00151600081518110620011555762001155620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313200000000000081525062002ce5565b73b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e84600081518110620011cd57620011cd620031f3565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c784600181518110620012185762001218620031f3565b6001600160a01b039283166020918202929092010152601f54604051623e40a960e61b815261010090910490911690630f902a40906200125f908790879060040162003209565b600060405180830381865afa1580156200127d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620012a7919081019062003433565b602054604051623e40a960e61b81529193506001600160a01b031690630f902a4090620012db908790879060040162003209565b600060405180830381865afa158015620012f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001323919081019062003433565b9050620013a98260000151600081518110620013435762001343620031f3565b60200260200101518260000151600081518110620013655762001365620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313300000000000081525062002c71565b6200142d8260000151600181518110620013c757620013c7620031f3565b60200260200101518260000151600181518110620013e957620013e9620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313400000000000081525062002c71565b620014a482602001516000815181106200144b576200144b620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313500000000000081525062002c71565b6200151b8160200151600081518110620014c257620014c2620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313600000000000081525062002c71565b6200159f8260400151600081518110620015395762001539620031f3565b602002602001015182604001516000815181106200155b576200155b620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313700000000000081525062002ce5565b6200161d8260600151600081518110620015bd57620015bd620031f3565b60200260200101516001811115620015d957620015d962003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313800000000000081525062002ce5565b6200169b81606001516000815181106200163b576200163b620031f3565b6020026020010151600181111562001657576200165762003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a313900000000000081525062002ce5565b620017318260800151600081518110620016b957620016b9620031f3565b60200260200101516001600160801b03168260800151600081518110620016e457620016e4620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323000000000000081525062002ce5565b620017c782608001516001815181106200174f576200174f620031f3565b60200260200101516001600160801b031682608001516001815181106200177a576200177a620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323100000000000081525062002ce5565b6200185d8260a00151600081518110620017e557620017e5620031f3565b60200260200101516001600160801b03168260a00151600081518110620018105762001810620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323200000000000081525062002ce5565b620018f38260a001516001815181106200187b576200187b620031f3565b60200260200101516001600160801b03168260a00151600181518110620018a657620018a6620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323300000000000081525062002ce5565b620019898260c00151600081518110620019115762001911620031f3565b60200260200101516001600160801b03168260c001516000815181106200193c576200193c620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e74496e3a3a323400000000000081525062002ce5565b50505050565b6060601c805480602002602001604051908101604052809291908181526020016000905b82821015620005865760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562001a6057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162001a215790505b50505050508152505081526020019060010190620019b3565b60606019805480602002602001604051908101604052809291908181526020016000905b828210156200058657838290600052602060002001805462001abf90620031b7565b80601f016020809104026020016040519081016040528092919081815260200182805462001aed90620031b7565b801562001b3e5780601f1062001b125761010080835404028352916020019162001b3e565b820191906000526020600020905b81548152906001019060200180831162001b2057829003601f168201915b50505050508152602001906001019062001a9d565b60085460009060ff161562001b6c575060085460ff1690565b604051630667f9d760e41b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562001be5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001c0b91906200319d565b1415905090565b6060601580548060200260200160405190810160405280929190818152602001828054801562000437576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000418575050505050905090565b60408051600280825260608201835260009260208301908036833701905050905073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e8160008151811062001cc05762001cc0620031f3565b60200260200101906001600160a01b031690816001600160a01b031681525050739702230a8ea53601f5cd2dc00fdbc13d4df4a8c78160018151811062001d0b5762001d0b620031f3565b6001600160a01b039283166020918202929092010152601f54604051632c90a11360e11b8152620f4240926000926101009004169063592142269062001d58908690869060040162003209565b600060405180830381865afa15801562001d76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001da0919081019062003433565b602054604051632c90a11360e11b81529192506000916001600160a01b039091169063592142269062001dda908790879060040162003209565b600060405180830381865afa15801562001df8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001e22919081019062003433565b905062001ea8826000015160008151811062001e425762001e42620031f3565b6020026020010151826000015160008151811062001e645762001e64620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a310000000000000081525062002c71565b62001f2c826000015160018151811062001ec65762001ec6620031f3565b6020026020010151826000015160018151811062001ee85762001ee8620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a320000000000000081525062002c71565b62001fa3826020015160008151811062001f4a5762001f4a620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a330000000000000081525062002c71565b6200201a816020015160008151811062001fc15762001fc1620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a340000000000000081525062002c71565b6200209e8260400151600081518110620020385762002038620031f3565b602002602001015182604001516000815181106200205a576200205a620031f3565b60200260200101516040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a350000000000000081525062002ce5565b6200211c8260600151600081518110620020bc57620020bc620031f3565b60200260200101516001811115620020d857620020d862003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a360000000000000081525062002ce5565b6200219a81606001516000815181106200213a576200213a620031f3565b6020026020010151600181111562002156576200215662003592565b60ff16600160ff166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a370000000000000081525062002ce5565b620022308260800151600081518110620021b857620021b8620031f3565b60200260200101516001600160801b03168260800151600081518110620021e357620021e3620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a380000000000000081525062002ce5565b620022c682608001516001815181106200224e576200224e620031f3565b60200260200101516001600160801b03168260800151600181518110620022795762002279620031f3565b60200260200101516001600160801b03166040518060400160405280601981526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a390000000000000081525062002ce5565b6200235c8260a00151600081518110620022e457620022e4620031f3565b60200260200101516001600160801b03168260a001516000815181106200230f576200230f620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313000000000000081525062002ce5565b620023f28260a001516001815181106200237a576200237a620031f3565b60200260200101516001600160801b03168260a00151600181518110620023a557620023a5620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313100000000000081525062002ce5565b620024888260c00151600081518110620024105762002410620031f3565b60200260200101516001600160801b03168260c001516000815181106200243b576200243b620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313200000000000081525062002ce5565b739702230a8ea53601f5cd2dc00fdbc13d4df4a8c784600081518110620024b357620024b3620031f3565b60200260200101906001600160a01b031690816001600160a01b03168152505073b97ef9ef8734c71904d8002f8b6bc66dd9c48a6e84600181518110620024fe57620024fe620031f3565b6001600160a01b039283166020918202929092010152601f54604051632c90a11360e11b81526101009091049091169063592142269062002546908790879060040162003209565b600060405180830381865afa15801562002564573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200258e919081019062003433565b602054604051632c90a11360e11b81529193506001600160a01b031690635921422690620025c3908790879060040162003209565b600060405180830381865afa158015620025e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200260b919081019062003433565b90506200269182600001516000815181106200262b576200262b620031f3565b602002602001015182600001516000815181106200264d576200264d620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313300000000000081525062002c71565b620027158260000151600181518110620026af57620026af620031f3565b60200260200101518260000151600181518110620026d157620026d1620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313400000000000081525062002c71565b6200278c8260200151600081518110620027335762002733620031f3565b6020026020010151739b2cc8e6a2bbb56d6be4682891a91b0e48633c726040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313500000000000081525062002c71565b620028038160200151600081518110620027aa57620027aa620031f3565b6020026020010151731d7a1a79e2b4ef88d2323f3845246d24a3c20f1d6040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313600000000000081525062002c71565b620028878260400151600081518110620028215762002821620031f3565b60200260200101518260400151600081518110620028435762002843620031f3565b60200260200101516040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313700000000000081525062002ce5565b620029058260600151600081518110620028a557620028a5620031f3565b60200260200101516001811115620028c157620028c162003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313800000000000081525062002ce5565b620029838160600151600081518110620029235762002923620031f3565b602002602001015160018111156200293f576200293f62003592565b60ff16600160ff166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a313900000000000081525062002ce5565b62002a198260800151600081518110620029a157620029a1620031f3565b60200260200101516001600160801b03168260800151600081518110620029cc57620029cc620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323000000000000081525062002ce5565b62002aaf826080015160018151811062002a375762002a37620031f3565b60200260200101516001600160801b0316826080015160018151811062002a625762002a62620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323100000000000081525062002ce5565b62002b458260a0015160008151811062002acd5762002acd620031f3565b60200260200101516001600160801b03168260a0015160008151811062002af85762002af8620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323200000000000081525062002ce5565b62002bdb8260a0015160018151811062002b635762002b63620031f3565b60200260200101516001600160801b03168260a0015160018151811062002b8e5762002b8e620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323300000000000081525062002ce5565b620019898260c0015160008151811062002bf95762002bf9620031f3565b60200260200101516001600160801b03168260c0015160008151811062002c245762002c24620031f3565b60200260200101516001600160801b03166040518060400160405280601a81526020017f746573745f51756f746546726f6d416d6f756e4f75743a3a323400000000000081525062002ce5565b604051632f2769d160e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d90632f2769d19062002cae90869086908690600401620035a8565b60006040518083038186803b15801562002cc757600080fd5b505afa15801562002cdc573d6000803e3d6000fd5b50505050505050565b6040516388b44c8560e01b8152737109709ecfa91a80626ff3989d68f67f5b1dd12d906388b44c859062002cae90869086908690600401620035df565b612c13806200360183390190565b600081518084526020808501945080840160005b8381101562002d6b5781516001600160a01b03168752958201959082019060010162002d44565b509495945050505050565b60208152600062002d8b602083018462002d30565b9392505050565b60005b8381101562002daf57818101518382015260200162002d95565b50506000910152565b6000815180845262002dd281602086016020860162002d92565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b8581101562002e9c57603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b8181101562002e8557605f1989850301835262002e7284865162002db8565b948e01949350918d019160010162002e53565b505050978a01979450509188019160010162002e0d565b50919a9950505050505050505050565b600081518084526020808501945080840160005b8381101562002d6b5781517fffffffff00000000000000000000000000000000000000000000000000000000168752958201959082019060010162002ec0565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562002f7d57888303603f190185528151805187855262002f4e8886018262002db8565b91890151858303868b015291905062002f68818362002eac565b96890196945050509086019060010162002f27565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101562002fe457603f1988860301845262002fd185835162002db8565b9450928501929085019060010162002fb2565b5092979650505050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101562002f7d57888303603f19018552815180516001600160a01b03168452870151878401879052620030508785018262002eac565b958801959350509086019060010162003018565b634e487b7160e01b600052604160045260246000fd5b60405160e0810167ffffffffffffffff81118282101715620030a057620030a062003064565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715620030d257620030d262003064565b604052919050565b600060208284031215620030ed57600080fd5b815167ffffffffffffffff808211156200310657600080fd5b818401915084601f8301126200311b57600080fd5b81518181111562003130576200313062003064565b62003145601f8201601f1916602001620030a6565b91508082528560208285010111156200315d57600080fd5b6200317081602084016020860162002d92565b50949350505050565b6040815260006200318e604083018562002db8565b90508260208301529392505050565b600060208284031215620031b057600080fd5b5051919050565b600181811c90821680620031cc57607f821691505b602082108103620031ed57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b6040815260006200321e604083018562002d30565b90506001600160801b03831660208301529392505050565b600067ffffffffffffffff82111562003253576200325362003064565b5060051b60200190565b600082601f8301126200326f57600080fd5b8151602062003288620032828362003236565b620030a6565b82815260059290921b84018101918181019086841115620032a857600080fd5b8286015b84811015620032dc5780516001600160a01b0381168114620032ce5760008081fd5b8352918301918301620032ac565b509695505050505050565b600082601f830112620032f957600080fd5b815160206200330c620032828362003236565b82815260059290921b840181019181810190868411156200332c57600080fd5b8286015b84811015620032dc578051835291830191830162003330565b600082601f8301126200335b57600080fd5b815160206200336e620032828362003236565b82815260059290921b840181019181810190868411156200338e57600080fd5b8286015b84811015620032dc57805160028110620033ac5760008081fd5b835291830191830162003392565b600082601f830112620033cc57600080fd5b81516020620033df620032828362003236565b82815260059290921b84018101918181019086841115620033ff57600080fd5b8286015b84811015620032dc5780516001600160801b0381168114620034255760008081fd5b835291830191830162003403565b6000602082840312156200344657600080fd5b815167ffffffffffffffff808211156200345f57600080fd5b9083019060e082860312156200347457600080fd5b6200347e6200307a565b8251828111156200348e57600080fd5b6200349c878286016200325d565b825250602083015182811115620034b257600080fd5b620034c0878286016200325d565b602083015250604083015182811115620034d957600080fd5b620034e787828601620032e7565b6040830152506060830151828111156200350057600080fd5b6200350e8782860162003349565b6060830152506080830151828111156200352757600080fd5b6200353587828601620033ba565b60808301525060a0830151828111156200354e57600080fd5b6200355c87828601620033ba565b60a08301525060c0830151828111156200357557600080fd5b6200358387828601620033ba565b60c08301525095945050505050565b634e487b7160e01b600052602160045260246000fd5b60006001600160a01b03808616835280851660208401525060606040830152620035d6606083018462002db8565b95945050505050565b838152826020820152606060408201526000620035d6606083018462002db856fe60e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220d4aa32d18c702b63dca8c26128a14e379148c534dea1c274c97ba208a69289c564736f6c63430008140033a26469706673582212206aaa4821dea62523eda595d3e9c066b7990d3a3a4c8279284fc7194cc533e99264736f6c63430008140033",
    "sourceMap": "223:7249:139:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;755:232;;;:::i;:::-;;2907:134:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3823:151;;;:::i;:::-;;;;;;;:::i;3684:133::-;;;:::i;3385:141::-;;;:::i;3193:186::-;;;:::i;:::-;;;;;;;:::i;3047:140::-;;;:::i;:::-;;;;;;;:::i;3532:146::-;;;:::i;:::-;;;;;;;:::i;993:3231:139:-;;;:::i;2754:147:6:-;;;:::i;2459:141::-;;;:::i;1243:204:2:-;;;:::i;:::-;;;6800:14:147;;6793:22;6775:41;;6763:2;6748:18;1243:204:2;6635:187:147;2606:142:6;;;:::i;4230:3240:139:-;;;:::i;1016:26:13:-;;;;;;;;;755:232:139;809:22;;-1:-1:-1;;;809:22:139;;7029:2:147;809:22:139;;;7011:21:147;7068:1;7048:18;;;7041:29;7106:11;7086:18;;;7079:39;789:19:139;;;;;;809:9;;7135:18:147;;809:22:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;809:22:139;;;;;;;;;;;;:::i;:::-;833:8;789:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;240:42:137;313::139;396;865:115;;;;;:::i;:::-;-1:-1:-1;;;;;9339:15:147;;;9321:34;;9391:15;;;9386:2;9371:18;;9364:43;9443:15;;;9438:2;9423:18;;9416:43;9248:2;9233:18;865:115:139;;;;;;;;;;;;;;;;;;;;;;;853:9;;:127;;;;;-1:-1:-1;;;;;853:127:139;;;;;-1:-1:-1;;;;;853:127:139;;;;;;755:232::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;3823:151::-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;3193:186::-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:140;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3532:146;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:3231:139;1074:16;;;1088:1;1074:16;;;;;;;;1049:22;;1074:16;;;;;;;;;;-1:-1:-1;1074:16:139;1049:41;;772:42:137;1100:5:139;1106:1;1100:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;1100:43:139;;;-1:-1:-1;;;;;1100:43:139;;;;;691:42:137;1153:5:139;1159:1;1153:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1153:43:139;;;:8;;;;;;;;;:43;1273:9;;:51;;-1:-1:-1;;;1273:51:139;;1226:3;;1207:16;;1273:9;;;;;:34;;:51;;1308:5;;1226:3;;1273:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1273:51:139;;;;;;;;;;;;:::i;:::-;1367:9;;:51;;-1:-1:-1;;;1367:51:139;;1240:84;;-1:-1:-1;1334:30:139;;-1:-1:-1;;;;;1367:9:139;;;;:34;;:51;;1402:5;;1409:8;;1367:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1367:51:139;;;;;;;;;;;;:::i;:::-;1334:84;;1429:75;1438:8;:14;;;1453:1;1438:17;;;;;;;;:::i;:::-;;;;;;;1457:8;:14;;;1472:1;1457:17;;;;;;;;:::i;:::-;;;;;;;1429:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;1514;1523:8;:14;;;1538:1;1523:17;;;;;;;;:::i;:::-;;;;;;;1542:8;:14;;;1557:1;1542:17;;;;;;;;:::i;:::-;;;;;;;1514:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;1600:73;1609:8;:14;;;1624:1;1609:17;;;;;;;;:::i;:::-;;;;;;;584:42;1600:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;1683:76;1692:8;:14;;;1707:1;1692:17;;;;;;;;:::i;:::-;;;;;;;492:42;1683:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;1770:81;1779:8;:17;;;1797:1;1779:20;;;;;;;;:::i;:::-;;;;;;;1801:8;:17;;;1819:1;1801:20;;;;;;;;:::i;:::-;;;;;;;1770:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;1862:95;1877:8;:17;;;1895:1;1877:20;;;;;;;;:::i;:::-;;;;;;;1871:27;;;;;;;;:::i;:::-;1862:95;;1906:20;1862:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;1967;1982:8;:17;;;2000:1;1982:20;;;;;;;;:::i;:::-;;;;;;;1976:27;;;;;;;;:::i;:::-;1967:95;;2011:20;1967:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;2073:79;2082:8;:16;;;2099:1;2082:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2073:79:139;2103:8;:16;;;2120:1;2103:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2073:79:139;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;2162;2171:8;:16;;;2188:1;2171:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2162:79:139;2192:8;:16;;;2209:1;2192:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2162:79:139;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;2252:170;2274:8;:38;;;2313:1;2274:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2252:170:139;2329:8;:38;;;2368:1;2329:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2252:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;2432;2454:8;:38;;;2493:1;2454:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2432:170:139;2509:8;:38;;;2548:1;2509:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2432:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;2613:74;2622:8;:13;;;2636:1;2622:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2613:74:139;2640:8;:13;;;2654:1;2640:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2613:74:139;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;691:42:137;2698:5:139;2704:1;2698:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;2698:43:139;;;-1:-1:-1;;;;;2698:43:139;;;;;772:42:137;2751:5:139;2757:1;2751:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2751:43:139;;;:8;;;;;;;;;:43;2816:9;;:51;;-1:-1:-1;;;2816:51:139;;:9;;;;;;;;:34;;:51;;2851:5;;2858:8;;2816:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2816:51:139;;;;;;;;;;;;:::i;:::-;2888:9;;:51;;-1:-1:-1;;;2888:51:139;;2805:62;;-1:-1:-1;;;;;;2888:9:139;;:34;;:51;;2923:5;;2930:8;;2888:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2888:51:139;;;;;;;;;;;;:::i;:::-;2877:62;;2950:76;2959:8;:14;;;2974:1;2959:17;;;;;;;;:::i;:::-;;;;;;;2978:8;:14;;;2993:1;2978:17;;;;;;;;:::i;:::-;;;;;;;2950:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;3036;3045:8;:14;;;3060:1;3045:17;;;;;;;;:::i;:::-;;;;;;;3064:8;:14;;;3079:1;3064:17;;;;;;;;:::i;:::-;;;;;;;3036:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;3123:74;3132:8;:14;;;3147:1;3132:17;;;;;;;;:::i;:::-;;;;;;;584:42;3123:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;3207:77;3216:8;:14;;;3231:1;3216:17;;;;;;;;:::i;:::-;;;;;;;492:42;3207:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;3295:82;3304:8;:17;;;3322:1;3304:20;;;;;;;;:::i;:::-;;;;;;;3326:8;:17;;;3344:1;3326:20;;;;;;;;:::i;:::-;;;;;;;3295:82;;;;;;;;;;;;;;;;;:8;:82::i;:::-;3388:96;3403:8;:17;;;3421:1;3403:20;;;;;;;;:::i;:::-;;;;;;;3397:27;;;;;;;;:::i;:::-;3388:96;;3432:20;3388:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;3494;3509:8;:17;;;3527:1;3509:20;;;;;;;;:::i;:::-;;;;;;;3503:27;;;;;;;;:::i;:::-;3494:96;;3538:20;3494:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;3601:80;3610:8;:16;;;3627:1;3610:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3601:80:139;3631:8;:16;;;3648:1;3631:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3601:80:139;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;3691;3700:8;:16;;;3717:1;3700:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3691:80:139;3721:8;:16;;;3738:1;3721:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3691:80:139;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;3782:170;3804:8;:38;;;3843:1;3804:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3782:170:139;3859:8;:38;;;3898:1;3859:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3782:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;3962;3984:8;:38;;;4023:1;3984:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3962:170:139;4039:8;:38;;;4078:1;4039:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;3962:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;4143:74;4152:8;:13;;;4166:1;4152:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4143:74:139;4170:8;:13;;;4184:1;4170:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4143:74:139;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;1039:3185;;;;993:3231::o;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1243:204:2;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;:7;:39;;;15851:74:147;;;1398:17:2;15941:18:147;;;15934:34;1428:1:2;;1377:7;;15824:18:147;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;4230:3240:139:-;4311:16;;;4325:1;4311:16;;;;;;;;4286:22;;4311:16;;;;;;;;;;-1:-1:-1;4311:16:139;4286:41;;691:42:137;4337:5:139;4343:1;4337:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;4337:43:139;;;-1:-1:-1;;;;;4337:43:139;;;;;772:42:137;4390:5:139;4396:1;4390:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4390:43:139;;;:8;;;;;;;;;:43;4511:9;;:53;;-1:-1:-1;;;4511:53:139;;4464:3;;4444:17;;4511:9;;;;;:35;;:53;;4547:5;;4464:3;;4511:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4511:53:139;;;;;;;;;;;;:::i;:::-;4607:9;;:53;;-1:-1:-1;;;4607:53:139;;4478:86;;-1:-1:-1;4574:30:139;;-1:-1:-1;;;;;4607:9:139;;;;:35;;:53;;4643:5;;4650:9;;4607:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4607:53:139;;;;;;;;;;;;:::i;:::-;4574:86;;4671:75;4680:8;:14;;;4695:1;4680:17;;;;;;;;:::i;:::-;;;;;;;4699:8;:14;;;4714:1;4699:17;;;;;;;;:::i;:::-;;;;;;;4671:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;4756;4765:8;:14;;;4780:1;4765:17;;;;;;;;:::i;:::-;;;;;;;4784:8;:14;;;4799:1;4784:17;;;;;;;;:::i;:::-;;;;;;;4756:75;;;;;;;;;;;;;;;;;:8;:75::i;:::-;4842:73;4851:8;:14;;;4866:1;4851:17;;;;;;;;:::i;:::-;;;;;;;584:42;4842:73;;;;;;;;;;;;;;;;;:8;:73::i;:::-;4925:76;4934:8;:14;;;4949:1;4934:17;;;;;;;;:::i;:::-;;;;;;;492:42;4925:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;5012:81;5021:8;:17;;;5039:1;5021:20;;;;;;;;:::i;:::-;;;;;;;5043:8;:17;;;5061:1;5043:20;;;;;;;;:::i;:::-;;;;;;;5012:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;5104:95;5119:8;:17;;;5137:1;5119:20;;;;;;;;:::i;:::-;;;;;;;5113:27;;;;;;;;:::i;:::-;5104:95;;5148:20;5104:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;5209;5224:8;:17;;;5242:1;5224:20;;;;;;;;:::i;:::-;;;;;;;5218:27;;;;;;;;:::i;:::-;5209:95;;5253:20;5209:95;;;;;;;;;;;;;;;;;;;:8;:95::i;:::-;5315:79;5324:8;:16;;;5341:1;5324:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5315:79:139;5345:8;:16;;;5362:1;5345:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5315:79:139;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;5404;5413:8;:16;;;5430:1;5413:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5404:79:139;5434:8;:16;;;5451:1;5434:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5404:79:139;;;;;;;;;;;;;;;;;;:8;:79::i;:::-;5494:170;5516:8;:38;;;5555:1;5516:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5494:170:139;5571:8;:38;;;5610:1;5571:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5494:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;5674;5696:8;:38;;;5735:1;5696:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5674:170:139;5751:8;:38;;;5790:1;5751:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5674:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;5855:74;5864:8;:13;;;5878:1;5864:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5855:74:139;5882:8;:13;;;5896:1;5882:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5855:74:139;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;772:42:137;5940:5:139;5946:1;5940:8;;;;;;;;:::i;:::-;;;;;;:43;-1:-1:-1;;;;;5940:43:139;;;-1:-1:-1;;;;;5940:43:139;;;;;691:42:137;5993:5:139;5999:1;5993:8;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5993:43:139;;;:8;;;;;;;;;:43;6058:9;;:53;;-1:-1:-1;;;6058:53:139;;:9;;;;;;;;:35;;:53;;6094:5;;6101:9;;6058:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6058:53:139;;;;;;;;;;;;:::i;:::-;6132:9;;:53;;-1:-1:-1;;;6132:53:139;;6047:64;;-1:-1:-1;;;;;;6132:9:139;;:35;;:53;;6168:5;;6175:9;;6132:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6132:53:139;;;;;;;;;;;;:::i;:::-;6121:64;;6196:76;6205:8;:14;;;6220:1;6205:17;;;;;;;;:::i;:::-;;;;;;;6224:8;:14;;;6239:1;6224:17;;;;;;;;:::i;:::-;;;;;;;6196:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;6282;6291:8;:14;;;6306:1;6291:17;;;;;;;;:::i;:::-;;;;;;;6310:8;:14;;;6325:1;6310:17;;;;;;;;:::i;:::-;;;;;;;6282:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;6369:74;6378:8;:14;;;6393:1;6378:17;;;;;;;;:::i;:::-;;;;;;;584:42;6369:74;;;;;;;;;;;;;;;;;:8;:74::i;:::-;6453:77;6462:8;:14;;;6477:1;6462:17;;;;;;;;:::i;:::-;;;;;;;492:42;6453:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;6541:82;6550:8;:17;;;6568:1;6550:20;;;;;;;;:::i;:::-;;;;;;;6572:8;:17;;;6590:1;6572:20;;;;;;;;:::i;:::-;;;;;;;6541:82;;;;;;;;;;;;;;;;;:8;:82::i;:::-;6634:96;6649:8;:17;;;6667:1;6649:20;;;;;;;;:::i;:::-;;;;;;;6643:27;;;;;;;;:::i;:::-;6634:96;;6678:20;6634:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;6740;6755:8;:17;;;6773:1;6755:20;;;;;;;;:::i;:::-;;;;;;;6749:27;;;;;;;;:::i;:::-;6740:96;;6784:20;6740:96;;;;;;;;;;;;;;;;;;;:8;:96::i;:::-;6847:80;6856:8;:16;;;6873:1;6856:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6847:80:139;6877:8;:16;;;6894:1;6877:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6847:80:139;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;6937;6946:8;:16;;;6963:1;6946:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6937:80:139;6967:8;:16;;;6984:1;6967:19;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;6937:80:139;;;;;;;;;;;;;;;;;;:8;:80::i;:::-;7028:170;7050:8;:38;;;7089:1;7050:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7028:170:139;7105:8;:38;;;7144:1;7105:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7028:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;7208;7230:8;:38;;;7269:1;7230:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7208:170:139;7285:8;:38;;;7324:1;7285:41;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7208:170:139;;;;;;;;;;;;;;;;;;:8;:170::i;:::-;7389:74;7398:8;:13;;;7412:1;7398:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7389:74:139;7416:8;:13;;;7430:1;7416:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;7389:74:139;;;;;;;;;;;;;;;;;;:8;:74::i;3570:134:2:-;3668:29;;-1:-1:-1;;;3668:29:2;;:11;;;;:29;;3680:4;;3686:5;;3693:3;;3668:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3570:134;;;:::o;2386:::-;2484:29;;-1:-1:-1;;;2484:29:2;;:11;;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;-1:-1:-1:-;;;;;;;;:::o;14:484:147:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:218;269:6;266:1;263:13;255:218;;;334:13;;-1:-1:-1;;;;;330:62:147;318:75;;413:12;;;;448:15;;;;291:1;284:9;255:218;;;-1:-1:-1;489:3:147;;14:484;-1:-1:-1;;;;;14:484:147:o;503:261::-;682:2;671:9;664:21;645:4;702:56;754:2;743:9;739:18;731:6;702:56;:::i;:::-;694:64;503:261;-1:-1:-1;;;503:261:147:o;769:250::-;854:1;864:113;878:6;875:1;872:13;864:113;;;954:11;;;948:18;935:11;;;928:39;900:2;893:10;864:113;;;-1:-1:-1;;1011:1:147;993:16;;986:27;769:250::o;1024:271::-;1066:3;1104:5;1098:12;1131:6;1126:3;1119:19;1147:76;1216:6;1209:4;1204:3;1200:14;1193:4;1186:5;1182:16;1147:76;:::i;:::-;1277:2;1256:15;-1:-1:-1;;1252:29:147;1243:39;;;;1284:4;1239:50;;1024:271;-1:-1:-1;;1024:271:147:o;1300:1765::-;1533:2;1585:21;;;1655:13;;1558:18;;;1677:22;;;1504:4;;1533:2;1718;;1736:18;;;;1773:1;1816:15;;;1801:31;;1797:40;;1860:15;;;1504:4;;1924:1112;1940:6;1935:3;1932:15;1924:1112;;;-1:-1:-1;;2009:22:147;;;2005:36;1993:49;;2065:13;;2152:9;;-1:-1:-1;;;;;2148:58:147;2133:74;;2246:11;;2240:18;2278:15;;;2271:27;;;2359:19;;2105:15;;;2391:24;;;2572:21;;;;2438:2;2520:17;;;2508:30;;2504:39;;;2462:15;;;;2617:1;2631:296;2647:8;2642:3;2639:17;2631:296;;;2753:2;2749:7;2740:6;2732;2728:19;2724:33;2717:5;2710:48;2785:42;2820:6;2809:8;2803:15;2785:42;:::i;:::-;2856:17;;;;2775:52;-1:-1:-1;2899:14:147;;;;2675:1;2666:11;2631:296;;;-1:-1:-1;;;3014:12:147;;;;2950:6;-1:-1:-1;;2979:15:147;;;;1966:1;1957:11;1924:1112;;;-1:-1:-1;3053:6:147;;1300:1765;-1:-1:-1;;;;;;;;;;1300:1765:147:o;3070:461::-;3122:3;3160:5;3154:12;3187:6;3182:3;3175:19;3213:4;3242:2;3237:3;3233:12;3226:19;;3279:2;3272:5;3268:14;3300:1;3310:196;3324:6;3321:1;3318:13;3310:196;;;3389:13;;3404:20;3385:40;3373:53;;3446:12;;;;3481:15;;;;3346:1;3339:9;3310:196;;3536:1185;3754:4;3783:2;3823;3812:9;3808:18;3853:2;3842:9;3835:21;3876:6;3911;3905:13;3942:6;3934;3927:22;3968:2;3958:12;;4001:2;3990:9;3986:18;3979:25;;4063:2;4053:6;4050:1;4046:14;4035:9;4031:30;4027:39;4101:2;4093:6;4089:15;4122:1;4132:560;4146:6;4143:1;4140:13;4132:560;;;4211:22;;;-1:-1:-1;;4207:36:147;4195:49;;4267:13;;4313:9;;4335:18;;;4380:48;4412:15;;;4313:9;4380:48;:::i;:::-;4469:11;;;4463:18;4518:19;;;4501:15;;;4494:44;4463:18;4366:62;-1:-1:-1;4561:51:147;4366:62;4463:18;4561:51;:::i;:::-;4670:12;;;;4551:61;-1:-1:-1;;;4635:15:147;;;;4168:1;4161:9;4132:560;;;-1:-1:-1;4709:6:147;;3536:1185;-1:-1:-1;;;;;;;;3536:1185:147:o;4726:803::-;4888:4;4917:2;4957;4946:9;4942:18;4987:2;4976:9;4969:21;5010:6;5045;5039:13;5076:6;5068;5061:22;5114:2;5103:9;5099:18;5092:25;;5176:2;5166:6;5163:1;5159:14;5148:9;5144:30;5140:39;5126:53;;5214:2;5206:6;5202:15;5235:1;5245:255;5259:6;5256:1;5253:13;5245:255;;;5352:2;5348:7;5336:9;5328:6;5324:22;5320:36;5315:3;5308:49;5380:40;5413:6;5404;5398:13;5380:40;:::i;:::-;5370:50;-1:-1:-1;5478:12:147;;;;5443:15;;;;5281:1;5274:9;5245:255;;;-1:-1:-1;5517:6:147;;4726:803;-1:-1:-1;;;;;;;4726:803:147:o;5534:1096::-;5736:4;5765:2;5805;5794:9;5790:18;5835:2;5824:9;5817:21;5858:6;5893;5887:13;5924:6;5916;5909:22;5950:2;5940:12;;5983:2;5972:9;5968:18;5961:25;;6045:2;6035:6;6032:1;6028:14;6017:9;6013:30;6009:39;6083:2;6075:6;6071:15;6104:1;6114:487;6128:6;6125:1;6122:13;6114:487;;;6193:22;;;-1:-1:-1;;6189:36:147;6177:49;;6249:13;;6294:9;;-1:-1:-1;;;;;6290:58:147;6275:74;;6388:11;;6382:18;6420:15;;;6413:27;;;6463:58;6505:15;;;6382:18;6463:58;:::i;:::-;6579:12;;;;6453:68;-1:-1:-1;;6544:15:147;;;;6150:1;6143:9;6114:487;;7164:127;7225:10;7220:3;7216:20;7213:1;7206:31;7256:4;7253:1;7246:15;7280:4;7277:1;7270:15;7296:253;7368:2;7362:9;7410:4;7398:17;;7445:18;7430:34;;7466:22;;;7427:62;7424:88;;;7492:18;;:::i;:::-;7528:2;7521:22;7296:253;:::o;7554:275::-;7625:2;7619:9;7690:2;7671:13;;-1:-1:-1;;7667:27:147;7655:40;;7725:18;7710:34;;7746:22;;;7707:62;7704:88;;;7772:18;;:::i;:::-;7808:2;7801:22;7554:275;;-1:-1:-1;7554:275:147:o;7834:719::-;7914:6;7967:2;7955:9;7946:7;7942:23;7938:32;7935:52;;;7983:1;7980;7973:12;7935:52;8016:9;8010:16;8045:18;8086:2;8078:6;8075:14;8072:34;;;8102:1;8099;8092:12;8072:34;8140:6;8129:9;8125:22;8115:32;;8185:7;8178:4;8174:2;8170:13;8166:27;8156:55;;8207:1;8204;8197:12;8156:55;8236:2;8230:9;8258:2;8254;8251:10;8248:36;;;8264:18;;:::i;:::-;8306:53;8349:2;8330:13;;-1:-1:-1;;8326:27:147;8355:2;8322:36;8306:53;:::i;:::-;8293:66;;8382:2;8375:5;8368:17;8422:7;8417:2;8412;8408;8404:11;8400:20;8397:33;8394:53;;;8443:1;8440;8433:12;8394:53;8456:67;8520:2;8515;8508:5;8504:14;8499:2;8495;8491:11;8456:67;:::i;:::-;-1:-1:-1;8542:5:147;7834:719;-1:-1:-1;;;;7834:719:147:o;8558:306::-;8750:2;8739:9;8732:21;8713:4;8770:45;8811:2;8800:9;8796:18;8788:6;8770:45;:::i;:::-;8762:53;;8851:6;8846:2;8835:9;8831:18;8824:34;8558:306;;;;;:::o;8869:184::-;8939:6;8992:2;8980:9;8971:7;8967:23;8963:32;8960:52;;;9008:1;9005;8998:12;8960:52;-1:-1:-1;9031:16:147;;8869:184;-1:-1:-1;8869:184:147:o;9470:380::-;9549:1;9545:12;;;;9592;;;9613:61;;9667:4;9659:6;9655:17;9645:27;;9613:61;9720:2;9712:6;9709:14;9689:18;9686:38;9683:161;;9766:10;9761:3;9757:20;9754:1;9747:31;9801:4;9798:1;9791:15;9829:4;9826:1;9819:15;9683:161;;9470:380;;;:::o;9855:127::-;9916:10;9911:3;9907:20;9904:1;9897:31;9947:4;9944:1;9937:15;9971:4;9968:1;9961:15;9987:373;10194:2;10183:9;10176:21;10157:4;10214:56;10266:2;10255:9;10251:18;10243:6;10214:56;:::i;:::-;10206:64;;-1:-1:-1;;;;;10310:6:147;10306:47;10301:2;10290:9;10286:18;10279:75;9987:373;;;;;:::o;10365:183::-;10425:4;10458:18;10450:6;10447:30;10444:56;;;10480:18;;:::i;:::-;-1:-1:-1;10525:1:147;10521:14;10537:4;10517:25;;10365:183::o;10553:866::-;10618:5;10671:3;10664:4;10656:6;10652:17;10648:27;10638:55;;10689:1;10686;10679:12;10638:55;10718:6;10712:13;10744:4;10768:60;10784:43;10824:2;10784:43;:::i;:::-;10768:60;:::i;:::-;10862:15;;;10948:1;10944:10;;;;10932:23;;10928:32;;;10893:12;;;;10972:15;;;10969:35;;;11000:1;10997;10990:12;10969:35;11036:2;11028:6;11024:15;11048:342;11064:6;11059:3;11056:15;11048:342;;;11137:3;11131:10;-1:-1:-1;;;;;11178:5:147;11174:54;11167:5;11164:65;11154:163;;11271:1;11300:2;11296;11289:14;11154:163;11330:18;;11368:12;;;;11081;;11048:342;;;-1:-1:-1;11408:5:147;10553:866;-1:-1:-1;;;;;;10553:866:147:o;11424:659::-;11489:5;11542:3;11535:4;11527:6;11523:17;11519:27;11509:55;;11560:1;11557;11550:12;11509:55;11589:6;11583:13;11615:4;11639:60;11655:43;11695:2;11655:43;:::i;11639:60::-;11733:15;;;11819:1;11815:10;;;;11803:23;;11799:32;;;11764:12;;;;11843:15;;;11840:35;;;11871:1;11868;11861:12;11840:35;11907:2;11899:6;11895:15;11919:135;11935:6;11930:3;11927:15;11919:135;;;12001:10;;11989:23;;12032:12;;;;11952;;11919:135;;12088:818;12158:5;12211:3;12204:4;12196:6;12192:17;12188:27;12178:55;;12229:1;12226;12219:12;12178:55;12258:6;12252:13;12284:4;12308:60;12324:43;12364:2;12324:43;:::i;12308:60::-;12402:15;;;12488:1;12484:10;;;;12472:23;;12468:32;;;12433:12;;;;12512:15;;;12509:35;;;12540:1;12537;12530:12;12509:35;12576:2;12568:6;12564:15;12588:289;12604:6;12599:3;12596:15;12588:289;;;12677:3;12671:10;12714:1;12707:5;12704:12;12694:110;;12758:1;12787:2;12783;12776:14;12694:110;12817:18;;12855:12;;;;12621;;12588:289;;12911:858;12976:5;13029:3;13022:4;13014:6;13010:17;13006:27;12996:55;;13047:1;13044;13037:12;12996:55;13076:6;13070:13;13102:4;13126:60;13142:43;13182:2;13142:43;:::i;13126:60::-;13220:15;;;13306:1;13302:10;;;;13290:23;;13286:32;;;13251:12;;;;13330:15;;;13327:35;;;13358:1;13355;13348:12;13327:35;13394:2;13386:6;13382:15;13406:334;13422:6;13417:3;13414:15;13406:334;;;13495:3;13489:10;-1:-1:-1;;;;;13536:5:147;13532:46;13525:5;13522:57;13512:155;;13621:1;13650:2;13646;13639:14;13512:155;13680:18;;13718:12;;;;13439;;13406:334;;13774:1766;13868:6;13921:2;13909:9;13900:7;13896:23;13892:32;13889:52;;;13937:1;13934;13927:12;13889:52;13970:9;13964:16;13999:18;14040:2;14032:6;14029:14;14026:34;;;14056:1;14053;14046:12;14026:34;14079:22;;;;14135:4;14117:16;;;14113:27;14110:47;;;14153:1;14150;14143:12;14110:47;14179:22;;:::i;:::-;14232:2;14226:9;14260:2;14250:8;14247:16;14244:36;;;14276:1;14273;14266:12;14244:36;14303:67;14362:7;14351:8;14347:2;14343:17;14303:67;:::i;:::-;14296:5;14289:82;;14410:2;14406;14402:11;14396:18;14439:2;14429:8;14426:16;14423:36;;;14455:1;14452;14445:12;14423:36;14491:67;14550:7;14539:8;14535:2;14531:17;14491:67;:::i;:::-;14486:2;14479:5;14475:14;14468:91;;14598:2;14594;14590:11;14584:18;14627:2;14617:8;14614:16;14611:36;;;14643:1;14640;14633:12;14611:36;14679:67;14738:7;14727:8;14723:2;14719:17;14679:67;:::i;:::-;14674:2;14667:5;14663:14;14656:91;;14786:2;14782;14778:11;14772:18;14815:2;14805:8;14802:16;14799:36;;;14831:1;14828;14821:12;14799:36;14867:72;14931:7;14920:8;14916:2;14912:17;14867:72;:::i;:::-;14862:2;14855:5;14851:14;14844:96;;14979:3;14975:2;14971:12;14965:19;15009:2;14999:8;14996:16;14993:36;;;15025:1;15022;15015:12;14993:36;15062:67;15121:7;15110:8;15106:2;15102:17;15062:67;:::i;:::-;15056:3;15049:5;15045:15;15038:92;;15169:3;15165:2;15161:12;15155:19;15199:2;15189:8;15186:16;15183:36;;;15215:1;15212;15205:12;15183:36;15252:67;15311:7;15300:8;15296:2;15292:17;15252:67;:::i;:::-;15246:3;15239:5;15235:15;15228:92;;15359:3;15355:2;15351:12;15345:19;15389:2;15379:8;15376:16;15373:36;;;15405:1;15402;15395:12;15373:36;15442:67;15501:7;15490:8;15486:2;15482:17;15442:67;:::i;:::-;15436:3;15425:15;;15418:92;-1:-1:-1;15429:5:147;13774:1766;-1:-1:-1;;;;;13774:1766:147:o;15545:127::-;15606:10;15601:3;15597:20;15594:1;15587:31;15637:4;15634:1;15627:15;15661:4;15658:1;15651:15;16168:441;16336:4;-1:-1:-1;;;;;16446:2:147;16438:6;16434:15;16423:9;16416:34;16498:2;16490:6;16486:15;16481:2;16470:9;16466:18;16459:43;;16538:2;16533;16522:9;16518:18;16511:30;16558:45;16599:2;16588:9;16584:18;16576:6;16558:45;:::i;:::-;16550:53;16168:441;-1:-1:-1;;;;;16168:441:147:o;16614:362::-;16819:6;16808:9;16801:25;16862:6;16857:2;16846:9;16842:18;16835:34;16905:2;16900;16889:9;16885:18;16878:30;16782:4;16925:45;16966:2;16955:9;16951:18;16943:6;16925:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_QuoteFromAmounOut()": "f4af7f08",
    "test_QuoteFromAmountIn()": "a2797cec"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_QuoteFromAmounOut\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_QuoteFromAmountIn\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Makes sure that the new quoter picks the version 2.1 over the version 2 if both outputs are exactly the same\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/integration/LBQuoterPriority.t.sol\":\"LiquidityBinQuoterPriorityTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4\",\"dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415\",\"dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97\",\"dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044\",\"dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a\",\"dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e\",\"dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4\",\"dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2\",\"dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof\"]},\"src/LBToken.sol\":{\"keccak256\":\"0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8\",\"dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e\",\"dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a\",\"dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490\",\"dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262\",\"dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0\",\"dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f\",\"dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3\",\"dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6\",\"dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12\",\"dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65\",\"dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a\",\"dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a\",\"dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8\",\"dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b\",\"dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f\",\"dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea\",\"dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ\"]},\"src/libraries/StringUtils.sol\":{\"keccak256\":\"0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f\",\"dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a\",\"dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d\",\"dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1\",\"dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f\",\"dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0\",\"dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e\",\"dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97\",\"dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126\",\"dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94\",\"dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea\",\"dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a\",\"dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/integration/LBQuoterPriority.t.sol\":{\"keccak256\":\"0xb27116038a4ccfe29615f395ea335e9bc7e416253c7c34c2391cf6d9a002cff0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9ecb1139358c10788014b00acd1fa214eb80d42bce6a1ffbe527febcd68907ce\",\"dweb:/ipfs/QmXSzzfF1rQ61KwNp1FdKdPAupjCPV4eDHMTwfdnYrR6it\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12\",\"dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211\",\"dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_QuoteFromAmounOut"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "test_QuoteFromAmountIn"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/integration/LBQuoterPriority.t.sol": "LiquidityBinQuoterPriorityTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x84e18f0b9bc7b6c056b873dfbf8f7dc2b92e886bb3a890f02c819769b7e73ff2",
        "urls": [
          "bzz-raw://5af342ff9ccdc33958a0e4a809057ad81475d15790f18b9ecd3c8fd089c908c4",
          "dweb:/ipfs/QmcdYN7BGeVJkYfsXM5p2QFoK9WNKDR6AjL3M2wo284AJk"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0xac108214082d1f9f85e64219bd644a3eff5d03359f05deaf87617cb620f0bcdd",
        "urls": [
          "bzz-raw://9b94949f46ccd6c175014bff7a34cae5e5c61981aa4be3f9a5b51ac734c82415",
          "dweb:/ipfs/QmecNV55pv1SsbP2JEhzjVVAdbFskvPSHbmt2Q4soUjFnX"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0x321a8ff665ac8d108b6f46ba6d8d1d1a4e300dd46db4575b5dd50b451e108520",
        "urls": [
          "bzz-raw://884b14ac2a3359f25277ca7a8eba087df65cfa5e93ebd3baf9ba11a54ebccf97",
          "dweb:/ipfs/QmYHP77kec9AHrwz6d8sWRPdFLJGsji9DEoi87pHtrGiSR"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x850f215029806d0d65f946a281b7e6f92f156de0976266a802ed7fef93677b7f",
        "urls": [
          "bzz-raw://5d21796b01b7456515734f7a815b7afc689f840fbfd30eed86905b7eccb27044",
          "dweb:/ipfs/QmV5EsZWXdJLt4UVQm2qyVem1rPTBV8KxzpYtyfSSwCAQN"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0x8e5a15e3a5cab31ee5f4b6531631d3e05c8a548eea7d11a9a1f0f2c982956310",
        "urls": [
          "bzz-raw://edc5e344c172c1dd0c7ec9720759171745505d0a4bb14bb2011f2e774aaaad2a",
          "dweb:/ipfs/QmZjqGVy1w1SJXfbC68Vubay4DJ5kz2FuPtZ4KK98YGYaC"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x3d59b9e537898dbd14847404d37cf2624bcf7e54d503a112cde0b09ed5b09b22",
        "urls": [
          "bzz-raw://aebd34b8a49995e1d6d2d28c737d32b5417209c245a96114b7af3372c7b7857e",
          "dweb:/ipfs/QmPGtbToJTJrgzeWHm1XgELYqBmpzkjZwXDHcx5fpT73xS"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0x4b386dc092d5fd816f5ca3faf36fc10868d665d0cb354dbdcd8062f9ca0c5d94",
        "urls": [
          "bzz-raw://3de211766d8d291709152352297aa292a6d3717eacbdfd2d1a01a8caefd2a7b4",
          "dweb:/ipfs/QmYBQpzeukZ3JyGXjmiMB66UJuAARGayeeANZbLxRy9jFr"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0x891c8762610adadf0ff54f37fbc34d6d92d7eb3c6230115506082e68e9d3c8ae",
        "urls": [
          "bzz-raw://a5c33e2480a7dc6a795b1c9f6592c46e0cd2e5c6d5e4eb2c57ae8e8e5fd619b2",
          "dweb:/ipfs/QmbZLZ3kCUwLRLsqUtXg8tjFjE3meHobgbcoimpX6m2gof"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0x78867b040bf328d62830ca634f1cc6d99b5048ceada652803dee81d57b41b434",
        "urls": [
          "bzz-raw://1f96def30cd2252561ddd341434b6bf04e81656e2a6a64e2556a3b66f33f12a8",
          "dweb:/ipfs/QmdMZ4sfWNMUdvaRGusNcsifjFvtrJuWZwiBS4WCVwyZAV"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xddcd3890949ab5bb4731a14e4a9c77ec5f08afb45489cf66114579f605fb1f53",
        "urls": [
          "bzz-raw://26a2573f58163514a154a55c62d55cfa05c66fe4169c56b0d94c660a5561f61e",
          "dweb:/ipfs/QmPTiFGfzFBT8jgsXSYpADkjwcgqRPUsewXvZiMzJ1PgrK"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0xd6241939a66626bbfa60eac46b5fc566f55ff302c7b6eb124d453be0e1a3117b",
        "urls": [
          "bzz-raw://a6a8d3894f2e0820b6bcd973d7de2450fa310440572a5d83ff55ef0d5b70d90a",
          "dweb:/ipfs/QmXeJXvy2sSW77y1Wotp9HLe9chgs6XM62toq9EyEGVXtt"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0xcec90d4f620b1ff5b3c6b57348044e8e9c0e1313c20fa2f5c91206c84e47a388",
        "urls": [
          "bzz-raw://6cd83dd005f0fd8229fd6eb9d2cd37399b543ab9d9ccefe9050c472dcb106490",
          "dweb:/ipfs/Qmca42wgwAUCWRX3ZMezhnJGwSHcXpP7D4hDYRZmeJChgY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x4d26410d0c866e3ed50c39ffeb191d2beefcbb603a39812b3497de267035bac4",
        "urls": [
          "bzz-raw://a307fdcace490a0b52e4db19befde1267615602140858d4b806b885258dec262",
          "dweb:/ipfs/QmYPEdQJRAFwdyrphHZT2vpqdFo7gK3SULn3QYA3kdx3Ka"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0xdeee599df829ad6c0ee8174c48def9858ac4a9b420cd0f3ca4541f3fb6cdf82e",
        "urls": [
          "bzz-raw://2688d777fec9ad1e91bd74cd323897de85a1776e16c9441474d63c1b08c3b8c0",
          "dweb:/ipfs/QmZfB4VBegmr7vD4RXUBXEXtynny2JrwF69gh2uks5UxAD"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0x8761bc1f131de7fc47ab2e83df8e42dea8472976e5b6cd85e6e6b4c97a5b1c1f",
        "urls": [
          "bzz-raw://069c01d23f87b602eac49dc7c6cdfc1b3d505cffc4b42dfc3284b382853a0c3f",
          "dweb:/ipfs/QmQnu2Uff3wzJ3ZnLwZrKB8ECnoF3SzPHLBHQcMhcWpFHT"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0xe71da86c5fb90e7cff71d874bb7d3d805df175afd8c876f000c80ce329be31da",
        "urls": [
          "bzz-raw://1282a496ed9eee833f91def600027739966f41313722fe92f1d9b573f4e6e6b3",
          "dweb:/ipfs/QmXJRCjTd5DRd5VEuTpN1ZKkxP4TcRFuPSL5ZdQb5GnV1G"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xe7b35ed8bfc934c205870fbff04dcdcfb7b86947ab55053d5b5d1deebf2a22d7",
        "urls": [
          "bzz-raw://7f9d85fc124b31d5a76279e31190d23d48cdd715e5eea97c99ae64feed3301e6",
          "dweb:/ipfs/QmQdrU2VcSQLTG9yCtJK7AexWCEmUX46Ko4eEBzeZV5jKg"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x628f601bafe7f4f26703fa2d2af1b354504afb334120c1c230ce59cf835fe9b1",
        "urls": [
          "bzz-raw://1849fb70a3d6792e3600a1edc62cf78e4bfe4cdb58fc66f77ad1698677ae8e12",
          "dweb:/ipfs/QmXmfTTf7RWACPNPg6NnptKntkpggNZhkPJgBf4v34Zpnu"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xbaec78116502fa592e778f692d21ff4365b92e3e1fe32ffb44442a50d2273401",
        "urls": [
          "bzz-raw://b932c47fedd8a4ff390e928319882c5682d6e5b718202b84db924cf1de059c65",
          "dweb:/ipfs/QmetbTc4Z5UtXP9Cx7m3K1788LqQCSbYHXkPzgDnCfFCZZ"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0x1006878aa066fb9f68bcc4a56029454acfb919abaa3fb84c7e956f61c6435365",
        "urls": [
          "bzz-raw://bdcd8045a060f75493de19cd4c731bd6a7d27bb3554be4cf235d1e2705094d6a",
          "dweb:/ipfs/QmfB2CdBhid2ixRgsFPF4w3JfFkieL2DuJLX6zjn11EH2x"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0xb11421c05ec91ca74a2ce9c9108fb6a13be96177a072383c8e02490be28590bd",
        "urls": [
          "bzz-raw://3589fceccbeb601e4a2565797acad2ffcc6000ea682ce158d367c541d3d6054a",
          "dweb:/ipfs/QmNz2CLyArtuxTE652mtVfVKysZ8hY99RdssPUjKhVx7ZL"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0x1ec4fa14d15f89e1001ad6d58f4437cf42cc031526206ca9f8bf44e368ee2a42",
        "urls": [
          "bzz-raw://8963ef3fb3983e6cb64927a0d030b6f011f89f5dd00f8345cec62e9013bc18d8",
          "dweb:/ipfs/QmRm5RLU6rfLEVds8VwYdrSeBLXHVoz9vSh58F2AnBwoHy"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xd75796a09915a4ce7fd69894504bb21d8f4b6b8fd96b9d863422911313f9dd71",
        "urls": [
          "bzz-raw://c38fa6ee12c97e1aa1b33ae4cca16f52c1712b7b7a2222dc0cdf61f087ab6e1b",
          "dweb:/ipfs/QmUXVXUhAtZufsRKKEujphnQLhEmiADw215LMcpjooiERr"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0xe8af4af39a9063fa569aa161f0fb0b81825131c102b8504deebe142f79f918a6",
        "urls": [
          "bzz-raw://1b6e1bcd23acaf79754aed4eb8f32ca3f1712696396a6f06511a6422f73da01f",
          "dweb:/ipfs/QmNZjn3byK4aDYMC5xYPKWCjVUoSmUQgeaHx14q9iA412N"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0x514625c1f1c443cd266e4649c4477f6e7fb97933abd23bd5730a2702e70d3db0",
        "urls": [
          "bzz-raw://5cbde0beee3ca3cc8f0a101709cf10b91a5433a385c625a44368bdda228730ea",
          "dweb:/ipfs/QmSwpUSDzaZbP8DDSWeuYUr3c2YKQLBor2kgofdEREmjMZ"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/StringUtils.sol": {
        "keccak256": "0x9734a4e165526a7590c5303bc983a552eadd5a6e20143a4ea731bca9413320d4",
        "urls": [
          "bzz-raw://1239d261c4e0e136106e30dae7766c3fb6f8ee5867db31c265740236f3ada40f",
          "dweb:/ipfs/QmfYnsyuxNZrK8gp4JbDqjfdoEDhFqsQRkK54Ht68jUDqE"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0xe8ae81331a34b92fd7f9d35c5db42155b7a15e030be71461e8fde43b61f94f89",
        "urls": [
          "bzz-raw://ff0d559ce9e5a078b45fc50450031a50aafa28ef9040819ee9389a4ca525646a",
          "dweb:/ipfs/QmXND5xw7qv1thPqTwtLgc6GzTNzo51G8LN1iaqbDnZADZ"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x91d6b780c0e692375fc3f28fa7dc91945d99631d6d11129019f220ce5cf72546",
        "urls": [
          "bzz-raw://3df6c6db95373eff76c8a19686dfdc54cd1648c4aae8213b4e444ddb75e62c7d",
          "dweb:/ipfs/QmQTk9n5Y1jnXm92JY1AzrZ1aRgcJMScfenG1othxwEFp5"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0x80f30c25043cad96df1f36cf8df7aa2bff2f6ea06446a8c2ca7f39cbb7c20dee",
        "urls": [
          "bzz-raw://275111862e401672d91d2eb582e078595947ef1d09cd6ef913770fd1f47c49a1",
          "dweb:/ipfs/QmbbFVyZviadw1S3ZDHeiqFtxQfuEi6f27sxUX6Y87hrew"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x2afb2f102951960df3d03c44fabbc203639df1cf964803c1385e27947abf928f",
        "urls": [
          "bzz-raw://ce35503e67c73199e36b374d90fdba1449a42219a87cac83dd1940d90b5c4d7f",
          "dweb:/ipfs/QmaQ5VkFB6K8r8SmSW6EefFJgnhmwsZGaf9MNLo58at9KB"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0x58f0ee5bbb2d92c766419db9bf60685885f2f503cf59a2f9ee21a55cccf7da6a",
        "urls": [
          "bzz-raw://270cebf1bd2cc7318e1e198d1bb72fdc04c59642f891ad54cb5ba0ac15a457e0",
          "dweb:/ipfs/QmfEkyJ8pxuoYAbjeMrj3uoEYX63mJ5GCPBfdPCoWKcGch"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0xb766fabcdae5b3f112529aee2b960676bb3e856c1cf7acbcea5912e0bd602257",
        "urls": [
          "bzz-raw://c9e10644ad1dedd8c479e0a43f805487324325e6c0fc4563cb3e31973cb1962e",
          "dweb:/ipfs/QmaDRad21DDwHJFq1i7QV5xM7KVRJCHFzkJfw6CEk8VYCD"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0xa8c319787c8f3df495708f1a9dfef57b2adccf864f0633971842183bff20d4e9",
        "urls": [
          "bzz-raw://c7699998897b274937bcedb2eba895670f57a17cf165d015f1986f03d9b36e97",
          "dweb:/ipfs/QmdcJpteBAfv1tGjE1Wa9sSe1EuLPtqFE2ZcZq3Ko15yqR"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x06c7d0a4009237d94ad941dfb48f0f9e2aac42668312756ce0d9645ed90e8d5a",
        "urls": [
          "bzz-raw://047be759e05ae0c0a1b51462f75b7e3f4a07945bfd737ab394c144d14e4ba126",
          "dweb:/ipfs/QmVDLumG5RUMp8qwsrAZMgdxc919fZqXrTMPyw42c4RRfm"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0xa7cf73467bb5e81673936e1f8858f3e1527b201dd80b60c05cb12d8b6299d59a",
        "urls": [
          "bzz-raw://0d82b3b566be3a0c9374cb34ef19e62876ea020c03f8138bb6a57f4c8a999a94",
          "dweb:/ipfs/QmQwxpssza3hxtRwf1HQEwH1j7Vx5AELvELLTbbbz52KnU"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x53673c6ee8410fa57e2be64120ee214648506d14467260d5f81cacbcd2a3c51f",
        "urls": [
          "bzz-raw://a9c44d1bdc36e290edf212767c11d0e374804819f26fbdb8af2cfc78e3271cea",
          "dweb:/ipfs/QmPkmBujndep8jp2wcS63CiSCwYR2nXiGU7hQmz1UpFJ3M"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1ea4913ee7db00b880e9b8234b01fa30122678fb005d478c5135ec4a586dae72",
        "urls": [
          "bzz-raw://94f9df2b4ef7e2f4229d047bfa297df2a5048fe7951e66d5abf97f3a06eb064a",
          "dweb:/ipfs/QmWtGtTErchYComi92kZ14qsawkHPRfnsJfpdfQ2Xa22Fs"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/integration/LBQuoterPriority.t.sol": {
        "keccak256": "0xb27116038a4ccfe29615f395ea335e9bc7e416253c7c34c2391cf6d9a002cff0",
        "urls": [
          "bzz-raw://9ecb1139358c10788014b00acd1fa214eb80d42bce6a1ffbe527febcd68907ce",
          "dweb:/ipfs/QmXSzzfF1rQ61KwNp1FdKdPAupjCPV4eDHMTwfdnYrR6it"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0x8c3ee3657067cf4bae590e5140fa3e1cb4e594832cdf23cbb2610a29b68f7ad8",
        "urls": [
          "bzz-raw://2ebbc13ad60060d419d5a66e335f1999e63af5ed0f07a92510476a75d80c8a12",
          "dweb:/ipfs/QmdieMEyKJsVP8qAXVrDr2Vyavah5AcsbA43B21oJUdaA2"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd09d7b3573c608759122a518ff2e7618ffe1637440e38dd3e88457399f62a894",
        "urls": [
          "bzz-raw://f02c68728cef2bce889b934f6702b6e7049ae1db2e932f6a02c857c11f71c211",
          "dweb:/ipfs/QmR24CzYntF47QvffsCz8dpcCxErmw8nMkeSYQ3zmK8dMF"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/integration/LBQuoterPriority.t.sol",
    "id": 103512,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39201
      ],
      "AvalancheAddresses": [
        101265
      ],
      "BinHelper": [
        71915
      ],
      "BitMath": [
        75382
      ],
      "Constants": [
        71953
      ],
      "ERC20": [
        42133
      ],
      "ERC20Mock": [
        106636
      ],
      "ERC20TransferTaxMock": [
        106690
      ],
      "Encoded": [
        75589
      ],
      "EnumerableMap": [
        48749
      ],
      "EnumerableSet": [
        49362
      ],
      "FeeHelper": [
        72146
      ],
      "FlashBorrower": [
        106857
      ],
      "Hooks": [
        73020
      ],
      "IERC20": [
        42211
      ],
      "IERC20Metadata": [
        42237
      ],
      "ILBFactory": [
        67618
      ],
      "ILBFlashLoanCallback": [
        67643
      ],
      "ILBHooks": [
        67816
      ],
      "ILBLegacyFactory": [
        68182
      ],
      "ILBLegacyPair": [
        68598
      ],
      "ILBLegacyRouter": [
        69007
      ],
      "ILBPair": [
        69569
      ],
      "ILBRouter": [
        70101
      ],
      "ILBToken": [
        70224
      ],
      "ISovrynLBFactoryV1": [
        70298
      ],
      "ISovrynLBPairV1": [
        70541
      ],
      "ISovrynLBRouter01": [
        70850
      ],
      "ISovrynLBRouter02": [
        70940
      ],
      "IWNATIVE": [
        70956
      ],
      "ImmutableClone": [
        73098
      ],
      "Initializable": [
        41618
      ],
      "LBFactory": [
        58932
      ],
      "LBPair": [
        61826
      ],
      "LBPairBeaconProxy": [
        61890
      ],
      "LBPairUpgradeableBeacon": [
        62082
      ],
      "LBQuoter": [
        63370
      ],
      "LBRouter": [
        66608
      ],
      "LBToken": [
        67127
      ],
      "LiquidityBinQuoterPriorityTest": [
        103511
      ],
      "LiquidityConfigurations": [
        75759
      ],
      "OracleHelper": [
        73755
      ],
      "Ownable": [
        40400
      ],
      "Ownable2StepUpgradeable": [
        39338
      ],
      "OwnableUpgradeable": [
        39533
      ],
      "PackedUint128Math": [
        76113
      ],
      "PairParameterHelper": [
        74612
      ],
      "PriceHelper": [
        74786
      ],
      "ReentrancyGuardUpgradeable": [
        74915
      ],
      "SafeCast": [
        76861
      ],
      "SafeERC20": [
        42660
      ],
      "SampleMath": [
        77286
      ],
      "SovrynLBLibrary": [
        75121
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3570
      ],
      "StdCheats": [
        6423
      ],
      "StdInvariant": [
        6783
      ],
      "StdStorage": [
        7555
      ],
      "StdStyle": [
        10725
      ],
      "StdUtils": [
        12103
      ],
      "StringUtils": [
        75202
      ],
      "Test": [
        12155
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        101064
      ],
      "TokenHelper": [
        75288
      ],
      "TransparentUpgradeableProxy": [
        41364
      ],
      "TreeMath": [
        78218
      ],
      "Uint256x256Math": [
        78854
      ],
      "UpgradeableBeacon": [
        41181
      ],
      "Utils": [
        101232
      ],
      "Vm": [
        15998
      ],
      "WNATIVE": [
        107167
      ],
      "console": [
        24122
      ],
      "console2": [
        24122
      ],
      "safeconsole": [
        38838
      ],
      "stdError": [
        6489
      ],
      "stdJson": [
        7375
      ],
      "stdMath": [
        7517
      ],
      "stdStorage": [
        9514
      ],
      "stdToml": [
        11317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "40:7433:139",
    "nodes": [
      {
        "id": 102674,
        "nodeType": "PragmaDirective",
        "src": "40:24:139",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 102675,
        "nodeType": "ImportDirective",
        "src": "66:35:139",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "../helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 103512,
        "sourceUnit": 101065,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 103511,
        "nodeType": "ContractDefinition",
        "src": "223:7249:139",
        "nodes": [
          {
            "id": 102681,
            "nodeType": "VariableDeclaration",
            "src": "277:78:139",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "factory",
            "nameLocation": "303:7:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 102679,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "277:7:139",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838653432663246343130313536336246363739393735313738653838304644383764336546643465",
              "id": 102680,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "313:42:139",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x8e42f2F4101563bF679975178e880FD87d3eFd4e"
            },
            "visibility": "internal"
          },
          {
            "id": 102684,
            "nodeType": "VariableDeclaration",
            "src": "361:77:139",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "router",
            "nameLocation": "387:6:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 102682,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "361:7:139",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307862343331356538373364426366393646666430616364384541343366363839443863323066423330",
              "id": 102683,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "396:42:139",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xb4315e873dBcf96Ffd0acd8EA43f689D8c20fB30"
            },
            "visibility": "internal"
          },
          {
            "id": 102687,
            "nodeType": "VariableDeclaration",
            "src": "445:89:139",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "legacyUsdcUsdtPair",
            "nameLocation": "471:18:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 102685,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "445:7:139",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307831443741316137396532623445663838443233323366333834353234364432346133633230463164",
              "id": 102686,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "492:42:139",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x1D7A1a79e2b4Ef88D2323f3845246D24a3c20F1d"
            },
            "visibility": "internal"
          },
          {
            "id": 102690,
            "nodeType": "VariableDeclaration",
            "src": "540:86:139",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "newUsdcUsdtPair",
            "nameLocation": "566:15:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 102688,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "540:7:139",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307839423243633845366132426262353664366245343638323839316139314230653438363333633732",
              "id": 102689,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "584:42:139",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x9B2Cc8E6a2Bbb56d6bE4682891a91B0e48633c72"
            },
            "visibility": "internal"
          },
          {
            "id": 102693,
            "nodeType": "VariableDeclaration",
            "src": "633:27:139",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "newQuoter",
            "nameLocation": "651:9:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBQuoter_$63370",
              "typeString": "contract LBQuoter"
            },
            "typeName": {
              "id": 102692,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 102691,
                "name": "LBQuoter",
                "nameLocations": [
                  "633:8:139"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63370,
                "src": "633:8:139"
              },
              "referencedDeclaration": 63370,
              "src": "633:8:139",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$63370",
                "typeString": "contract LBQuoter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 102699,
            "nodeType": "VariableDeclaration",
            "src": "666:82:139",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "oldQuoter",
            "nameLocation": "684:9:139",
            "scope": 103511,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LBQuoter_$63370",
              "typeString": "contract LBQuoter"
            },
            "typeName": {
              "id": 102695,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 102694,
                "name": "LBQuoter",
                "nameLocations": [
                  "666:8:139"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 63370,
                "src": "666:8:139"
              },
              "referencedDeclaration": 63370,
              "src": "666:8:139",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$63370",
                "typeString": "contract LBQuoter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836346235374634323439614139396138313232313263656537444145464544433430423230336344",
                  "id": 102697,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "705:42:139",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x64b57F4249aA99a812212cee7DAEFEDC40B203cD"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 102696,
                "name": "LBQuoter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 63370,
                "src": "696:8:139",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LBQuoter_$63370_$",
                  "typeString": "type(contract LBQuoter)"
                }
              },
              "id": 102698,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "696:52:139",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LBQuoter_$63370",
                "typeString": "contract LBQuoter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 102724,
            "nodeType": "FunctionDefinition",
            "src": "755:232:139",
            "nodes": [],
            "body": {
              "id": 102723,
              "nodeType": "Block",
              "src": "779:208:139",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "6176616c616e636865",
                            "id": 102707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "819:11:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            },
                            "value": "avalanche"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6e8b0d92516ee4289145e3b78cea58daac177b1c618beeedbc6cdabd388a6e55",
                              "typeString": "literal_string \"avalanche\""
                            }
                          ],
                          "expression": {
                            "id": 102705,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "809:2:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$15998",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 102706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "812:6:139",
                          "memberName": "rpcUrl",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14950,
                          "src": "809:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (string memory) view external returns (string memory)"
                          }
                        },
                        "id": 102708,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "809:22:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "3333333133343432",
                        "id": 102709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "833:8:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_33313442_by_1",
                          "typeString": "int_const 33313442"
                        },
                        "value": "33313442"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_rational_33313442_by_1",
                          "typeString": "int_const 33313442"
                        }
                      ],
                      "expression": {
                        "id": 102702,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "789:2:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15998",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 102704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "792:16:139",
                      "memberName": "createSelectFork",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15487,
                      "src": "789:19:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (string memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 102710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "789:53:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 102711,
                  "nodeType": "ExpressionStatement",
                  "src": "789:53:139"
                },
                {
                  "expression": {
                    "id": 102721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102712,
                      "name": "newQuoter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102693,
                      "src": "853:9:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBQuoter_$63370",
                        "typeString": "contract LBQuoter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102716,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "891:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 102717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "910:19:139",
                          "memberName": "SovrynLB_V1_FACTORY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101240,
                          "src": "891:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 102718,
                          "name": "factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102681,
                          "src": "943:7:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 102719,
                          "name": "router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102684,
                          "src": "964:6:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 102715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "865:12:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_LBQuoter_$63370_$",
                          "typeString": "function (address,address,address) returns (contract LBQuoter)"
                        },
                        "typeName": {
                          "id": 102714,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 102713,
                            "name": "LBQuoter",
                            "nameLocations": [
                              "869:8:139"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 63370,
                            "src": "869:8:139"
                          },
                          "referencedDeclaration": 63370,
                          "src": "869:8:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        }
                      },
                      "id": 102720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "865:115:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBQuoter_$63370",
                        "typeString": "contract LBQuoter"
                      }
                    },
                    "src": "853:127:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBQuoter_$63370",
                      "typeString": "contract LBQuoter"
                    }
                  },
                  "id": 102722,
                  "nodeType": "ExpressionStatement",
                  "src": "853:127:139"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "764:5:139",
            "parameters": {
              "id": 102700,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "769:2:139"
            },
            "returnParameters": {
              "id": 102701,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "779:0:139"
            },
            "scope": 103511,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103117,
            "nodeType": "FunctionDefinition",
            "src": "993:3231:139",
            "nodes": [],
            "body": {
              "id": 103116,
              "nodeType": "Block",
              "src": "1039:3185:139",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    102731
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102731,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "1066:5:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103116,
                      "src": "1049:22:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:7:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102730,
                        "nodeType": "ArrayTypeName",
                        "src": "1049:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102737,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 102735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1088:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 102734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1074:13:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 102732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1078:7:139",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 102733,
                        "nodeType": "ArrayTypeName",
                        "src": "1078:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 102736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1074:16:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1049:41:139"
                },
                {
                  "expression": {
                    "id": 102746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102738,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "1100:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102740,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1106:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1100:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102743,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "1119:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 102744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1138:4:139",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101258,
                          "src": "1119:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 102742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1111:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102741,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1111:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1111:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1100:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102747,
                  "nodeType": "ExpressionStatement",
                  "src": "1100:43:139"
                },
                {
                  "expression": {
                    "id": 102756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102748,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "1153:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102750,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1159:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1153:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102753,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "1172:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 102754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1191:4:139",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101255,
                          "src": "1172:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 102752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1164:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102751,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1164:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1164:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1153:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102757,
                  "nodeType": "ExpressionStatement",
                  "src": "1153:43:139"
                },
                {
                  "assignments": [
                    102759
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102759,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1215:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103116,
                      "src": "1207:16:139",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 102758,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1207:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102761,
                  "initialValue": {
                    "hexValue": "316536",
                    "id": 102760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1226:3:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1e6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1207:22:139"
                },
                {
                  "assignments": [
                    102766
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102766,
                      "mutability": "mutable",
                      "name": "newQuote",
                      "nameLocation": "1262:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103116,
                      "src": "1240:30:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 102765,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102764,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "1240:8:139",
                            "1249:5:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "1240:14:139"
                        },
                        "referencedDeclaration": 62151,
                        "src": "1240:14:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102772,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102769,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "1308:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 102770,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102759,
                        "src": "1315:8:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 102767,
                        "name": "newQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102693,
                        "src": "1273:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 102768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1283:24:139",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "1273:34:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 102771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1273:51:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1240:84:139"
                },
                {
                  "assignments": [
                    102777
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102777,
                      "mutability": "mutable",
                      "name": "oldQuote",
                      "nameLocation": "1356:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103116,
                      "src": "1334:30:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 102776,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 102775,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "1334:8:139",
                            "1343:5:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "1334:14:139"
                        },
                        "referencedDeclaration": 62151,
                        "src": "1334:14:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 102783,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 102780,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "1402:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 102781,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102759,
                        "src": "1409:8:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 102778,
                        "name": "oldQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102699,
                        "src": "1367:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 102779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1377:24:139",
                      "memberName": "findBestPathFromAmountIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 62712,
                      "src": "1367:34:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 102782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:51:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1334:84:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102785,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "1438:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102786,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1447:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "1438:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102788,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1453:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1438:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102789,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "1457:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102790,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1466:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "1457:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102792,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1472:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1457:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a31",
                        "id": 102793,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1476:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ade5933723476328572d205447a393363e8ce455b08102b529d13dee7a9cd26",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::1\""
                        },
                        "value": "test_QuoteFromAmountIn::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7ade5933723476328572d205447a393363e8ce455b08102b529d13dee7a9cd26",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::1\""
                        }
                      ],
                      "id": 102784,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1429:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:75:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102795,
                  "nodeType": "ExpressionStatement",
                  "src": "1429:75:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102797,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "1523:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102798,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1532:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "1523:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102800,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1538:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1523:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102801,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "1542:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102802,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1551:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "1542:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102804,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1557:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1542:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a32",
                        "id": 102805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1561:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c49b9a50020fae504ba362d64198b78d7aa7386c0b471d630ae730352f9f6a6",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::2\""
                        },
                        "value": "test_QuoteFromAmountIn::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c49b9a50020fae504ba362d64198b78d7aa7386c0b471d630ae730352f9f6a6",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::2\""
                        }
                      ],
                      "id": 102796,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1514:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1514:75:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102807,
                  "nodeType": "ExpressionStatement",
                  "src": "1514:75:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102809,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "1609:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102810,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1618:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "1609:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102812,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1624:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1609:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102813,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102690,
                        "src": "1628:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a33",
                        "id": 102814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1645:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fd045d264b775aecead07d2650ce4d8553137d12d0d8d5fe679926b41d69e15",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::3\""
                        },
                        "value": "test_QuoteFromAmountIn::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fd045d264b775aecead07d2650ce4d8553137d12d0d8d5fe679926b41d69e15",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::3\""
                        }
                      ],
                      "id": 102808,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1600:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1600:73:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102816,
                  "nodeType": "ExpressionStatement",
                  "src": "1600:73:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102818,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "1692:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102819,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1701:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "1692:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102821,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1707:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1692:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102822,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102687,
                        "src": "1711:18:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a34",
                        "id": 102823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852e146cb53659af6e8f24cc369b4f730536c3de33f618a16975b80f0e1401c2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::4\""
                        },
                        "value": "test_QuoteFromAmountIn::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852e146cb53659af6e8f24cc369b4f730536c3de33f618a16975b80f0e1401c2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::4\""
                        }
                      ],
                      "id": 102817,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "1683:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102825,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102827,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "1779:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102828,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1788:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "1779:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102830,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1797:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1779:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102831,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "1801:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102832,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1810:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "1801:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 102834,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1819:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1801:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a35",
                        "id": 102835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_974f6386cb91e0d32c274b9d8187075b493370e45d98f9cbcb74f98dac7b6d17",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::5\""
                        },
                        "value": "test_QuoteFromAmountIn::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_974f6386cb91e0d32c274b9d8187075b493370e45d98f9cbcb74f98dac7b6d17",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::5\""
                        }
                      ],
                      "id": 102826,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1770:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1770:81:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102837,
                  "nodeType": "ExpressionStatement",
                  "src": "1770:81:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102841,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102766,
                                "src": "1877:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102842,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1886:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "1877:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102844,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1895:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1877:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1871:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 102839,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1871:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1871:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102848,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "1906:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1916:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "1906:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 102850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1924:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "1906:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1900:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 102846,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1900:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1900:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a36",
                        "id": 102852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1929:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d528e86113a662d074971cbb6bc682b8569d24ebe5045fc256e4640f464eb60",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::6\""
                        },
                        "value": "test_QuoteFromAmountIn::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d528e86113a662d074971cbb6bc682b8569d24ebe5045fc256e4640f464eb60",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::6\""
                        }
                      ],
                      "id": 102838,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1862:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1862:95:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102854,
                  "nodeType": "ExpressionStatement",
                  "src": "1862:95:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 102858,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102777,
                                "src": "1982:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 102859,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1991:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "1982:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 102861,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 102860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2000:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1982:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1976:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 102856,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "1976:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1976:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 102865,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "2011:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 102866,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2021:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "2011:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 102867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2029:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "2011:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 102864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2005:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 102863,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "2005:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 102868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2005:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a37",
                        "id": 102869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43e1db9296f6a8d9f32485b2937f895f82d9f4162a541cbbbfe43c3aec0427d2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::7\""
                        },
                        "value": "test_QuoteFromAmountIn::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43e1db9296f6a8d9f32485b2937f895f82d9f4162a541cbbbfe43c3aec0427d2",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::7\""
                        }
                      ],
                      "id": 102855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1967:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:95:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102871,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:95:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102873,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2082:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102874,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2091:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "2082:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102876,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2099:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2082:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102877,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2103:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102878,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2112:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "2103:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102880,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2120:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2103:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a38",
                        "id": 102881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b828fa874a5f74c460357fddea115c85f99dcd07bba7a1ba47d67edee62f7655",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::8\""
                        },
                        "value": "test_QuoteFromAmountIn::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b828fa874a5f74c460357fddea115c85f99dcd07bba7a1ba47d67edee62f7655",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::8\""
                        }
                      ],
                      "id": 102872,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2073:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:79:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102883,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:79:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102885,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2171:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2180:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "2171:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102888,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2188:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2171:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102889,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2192:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102890,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2201:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "2192:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102892,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2209:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2192:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a39",
                        "id": 102893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2213:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7099d4db99b6c4e6598fd6be92b9256cde0c9abb08a7c911aef0b74ca94d4216",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::9\""
                        },
                        "value": "test_QuoteFromAmountIn::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7099d4db99b6c4e6598fd6be92b9256cde0c9abb08a7c911aef0b74ca94d4216",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::9\""
                        }
                      ],
                      "id": 102884,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2162:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2162:79:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102895,
                  "nodeType": "ExpressionStatement",
                  "src": "2162:79:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102897,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2274:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102898,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2283:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "2274:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102900,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2313:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2274:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102901,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2329:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102902,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2338:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "2329:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102904,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2368:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2329:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3130",
                        "id": 102905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8257deec61e99c02fd6126793a05495bfcacb569893aaf51431b3d4b8a52ec54",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::10\""
                        },
                        "value": "test_QuoteFromAmountIn::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8257deec61e99c02fd6126793a05495bfcacb569893aaf51431b3d4b8a52ec54",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::10\""
                        }
                      ],
                      "id": 102896,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2252:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2252:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102907,
                  "nodeType": "ExpressionStatement",
                  "src": "2252:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102909,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2454:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102910,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2463:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "2454:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102912,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2493:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2454:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102913,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2509:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102914,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2518:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "2509:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102916,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2548:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2509:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3131",
                        "id": 102917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_182e89f291f89906fa4054956bdb5a95546a62c5b0731a3aecfb8d6721d91be3",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::11\""
                        },
                        "value": "test_QuoteFromAmountIn::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_182e89f291f89906fa4054956bdb5a95546a62c5b0731a3aecfb8d6721d91be3",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::11\""
                        }
                      ],
                      "id": 102908,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2432:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2432:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102919,
                  "nodeType": "ExpressionStatement",
                  "src": "2432:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102921,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2622:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102922,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2631:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "2622:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102924,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2636:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2622:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102925,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2640:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102926,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2649:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "2640:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 102928,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2654:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2640:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3132",
                        "id": 102929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2658:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a806099841472022a7deed1ac185d35b8d9fea14960d854f824702995f79477",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::12\""
                        },
                        "value": "test_QuoteFromAmountIn::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a806099841472022a7deed1ac185d35b8d9fea14960d854f824702995f79477",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::12\""
                        }
                      ],
                      "id": 102920,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2613:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 102930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2613:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102931,
                  "nodeType": "ExpressionStatement",
                  "src": "2613:74:139"
                },
                {
                  "expression": {
                    "id": 102940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102932,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "2698:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102934,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 102933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2704:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2698:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102937,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "2717:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 102938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2736:4:139",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101255,
                          "src": "2717:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 102936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2709:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102935,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2709:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2709:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2698:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102941,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:43:139"
                },
                {
                  "expression": {
                    "id": 102950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 102942,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102731,
                        "src": "2751:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 102944,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 102943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2757:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2751:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 102947,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "2770:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 102948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2789:4:139",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101258,
                          "src": "2770:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 102946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2762:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 102945,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 102949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2762:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2751:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 102951,
                  "nodeType": "ExpressionStatement",
                  "src": "2751:43:139"
                },
                {
                  "expression": {
                    "id": 102958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102952,
                      "name": "newQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102766,
                      "src": "2805:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102955,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102731,
                          "src": "2851:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102956,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102759,
                          "src": "2858:8:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102953,
                          "name": "newQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102693,
                          "src": "2816:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2826:24:139",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "2816:34:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2816:51:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "2805:62:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102959,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:62:139"
                },
                {
                  "expression": {
                    "id": 102966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 102960,
                      "name": "oldQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102777,
                      "src": "2877:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102963,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102731,
                          "src": "2923:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 102964,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102759,
                          "src": "2930:8:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 102961,
                          "name": "oldQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102699,
                          "src": "2888:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 102962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2898:24:139",
                        "memberName": "findBestPathFromAmountIn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 62712,
                        "src": "2888:34:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 102965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2888:51:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "2877:62:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 102967,
                  "nodeType": "ExpressionStatement",
                  "src": "2877:62:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102969,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "2959:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102970,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2968:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "2959:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102972,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2974:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2959:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102973,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "2978:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102974,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2987:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "2978:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102976,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2993:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2978:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3133",
                        "id": 102977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2997:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd82e0cac9bcdfa7aab09fc5476fcafc80c0b4cf6cb31f8cead903c74979af2d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::13\""
                        },
                        "value": "test_QuoteFromAmountIn::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd82e0cac9bcdfa7aab09fc5476fcafc80c0b4cf6cb31f8cead903c74979af2d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::13\""
                        }
                      ],
                      "id": 102968,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "2950:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2950:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102979,
                  "nodeType": "ExpressionStatement",
                  "src": "2950:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102981,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3045:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102982,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3054:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "3045:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102984,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3060:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3045:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102985,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3064:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102986,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3073:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "3064:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102988,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 102987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3079:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3064:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3134",
                        "id": 102989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3083:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a70e46b67241a4d13ebb71aeccbb1cf969b47d7428831c4e67e88280ca41777",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::14\""
                        },
                        "value": "test_QuoteFromAmountIn::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a70e46b67241a4d13ebb71aeccbb1cf969b47d7428831c4e67e88280ca41777",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::14\""
                        }
                      ],
                      "id": 102980,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3036:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 102991,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 102993,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3132:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 102994,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3141:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "3132:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 102996,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 102995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3147:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3132:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 102997,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102690,
                        "src": "3151:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3135",
                        "id": 102998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3168:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e3a28d5fbcb599c180bbabaab1b0bb67b616a222646290431c3a5d2956d426c9",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::15\""
                        },
                        "value": "test_QuoteFromAmountIn::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e3a28d5fbcb599c180bbabaab1b0bb67b616a222646290431c3a5d2956d426c9",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::15\""
                        }
                      ],
                      "id": 102992,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3123:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 102999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3123:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103000,
                  "nodeType": "ExpressionStatement",
                  "src": "3123:74:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103002,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3216:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103003,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3225:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "3216:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103005,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3231:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3216:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103006,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102687,
                        "src": "3235:18:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3136",
                        "id": 103007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3255:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b148161a7c659b6c20413592a31efc92ab11d3b9321dbbc38bd186951297233",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::16\""
                        },
                        "value": "test_QuoteFromAmountIn::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b148161a7c659b6c20413592a31efc92ab11d3b9321dbbc38bd186951297233",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::16\""
                        }
                      ],
                      "id": 103001,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "3207:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3207:77:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103009,
                  "nodeType": "ExpressionStatement",
                  "src": "3207:77:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103011,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3304:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103012,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3313:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "3304:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103014,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3322:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3304:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103015,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3326:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103016,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3335:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "3326:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103018,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103017,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3344:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3326:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3137",
                        "id": 103019,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3348:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_feb2b5a854ebb3f51fa37b55404a8138fcdfbf4a55895ddae88a58bb8cf1323f",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::17\""
                        },
                        "value": "test_QuoteFromAmountIn::17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_feb2b5a854ebb3f51fa37b55404a8138fcdfbf4a55895ddae88a58bb8cf1323f",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::17\""
                        }
                      ],
                      "id": 103010,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3295:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:82:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103021,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:82:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103025,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102766,
                                "src": "3403:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103026,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3412:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "3403:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103028,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3421:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3403:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3397:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103023,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3397:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3397:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103032,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "3432:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3442:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "3432:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3450:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "3432:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3426:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103030,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3426:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3426:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3138",
                        "id": 103036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3455:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9016cb6cb86a530067eec132762abb405f154759b8a8ae2535c3dbda0df127e",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::18\""
                        },
                        "value": "test_QuoteFromAmountIn::18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9016cb6cb86a530067eec132762abb405f154759b8a8ae2535c3dbda0df127e",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::18\""
                        }
                      ],
                      "id": 103022,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3388:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3388:96:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103038,
                  "nodeType": "ExpressionStatement",
                  "src": "3388:96:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103042,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 102777,
                                "src": "3509:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103043,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3518:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "3509:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103045,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3527:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3509:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3503:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103040,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3503:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3503:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103049,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "3538:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3548:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "3538:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3556:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "3538:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103048,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3532:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103047,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "3532:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3532:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3139",
                        "id": 103053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3561:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d3cd6686c5ac80f3328deca0f1e3518be4a80913695957a7dfed2c664073f59",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::19\""
                        },
                        "value": "test_QuoteFromAmountIn::19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d3cd6686c5ac80f3328deca0f1e3518be4a80913695957a7dfed2c664073f59",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::19\""
                        }
                      ],
                      "id": 103039,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3494:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:96:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103055,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:96:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103057,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3610:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103058,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3619:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "3610:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103060,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3627:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3610:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103061,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3631:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103062,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3640:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "3631:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103064,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3648:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3631:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3230",
                        "id": 103065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3652:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5727a553d32ebe285619c3cc23c41a79086b20ec9ab238e0348f7f5cc7a4776d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::20\""
                        },
                        "value": "test_QuoteFromAmountIn::20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5727a553d32ebe285619c3cc23c41a79086b20ec9ab238e0348f7f5cc7a4776d",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::20\""
                        }
                      ],
                      "id": 103056,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3601:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3601:80:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103067,
                  "nodeType": "ExpressionStatement",
                  "src": "3601:80:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103069,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3700:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103070,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3709:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "3700:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103072,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3717:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3700:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103073,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3721:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103074,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3730:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "3721:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103076,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3738:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3721:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3231",
                        "id": 103077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3742:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01cd90876c6f9fbcdd827af851518f5110468dfe0db9b3ecf73e5f6a623627ed",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::21\""
                        },
                        "value": "test_QuoteFromAmountIn::21"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01cd90876c6f9fbcdd827af851518f5110468dfe0db9b3ecf73e5f6a623627ed",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::21\""
                        }
                      ],
                      "id": 103068,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3691:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3691:80:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103079,
                  "nodeType": "ExpressionStatement",
                  "src": "3691:80:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103081,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3804:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103082,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3813:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "3804:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103084,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3843:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3804:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103085,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "3859:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103086,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3868:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "3859:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103088,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3898:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3859:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3232",
                        "id": 103089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3914:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7c1be7be0eb34fc65bfb99d8805fc9c71dbf330ea5cceff6d968b90ad926da72",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::22\""
                        },
                        "value": "test_QuoteFromAmountIn::22"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7c1be7be0eb34fc65bfb99d8805fc9c71dbf330ea5cceff6d968b90ad926da72",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::22\""
                        }
                      ],
                      "id": 103080,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3782:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103091,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103093,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "3984:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103094,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3993:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "3984:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103096,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4023:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3984:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103097,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "4039:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103098,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4048:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "4039:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103100,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4078:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4039:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3233",
                        "id": 103101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4094:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_027ea22dbef1bc5581ed38b111c836bfd211516ce2d6317ece7cd657f000a977",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::23\""
                        },
                        "value": "test_QuoteFromAmountIn::23"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_027ea22dbef1bc5581ed38b111c836bfd211516ce2d6317ece7cd657f000a977",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::23\""
                        }
                      ],
                      "id": 103092,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3962:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103103,
                  "nodeType": "ExpressionStatement",
                  "src": "3962:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103105,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102766,
                            "src": "4152:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4161:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "4152:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103108,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4166:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4152:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103109,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102777,
                            "src": "4170:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103110,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4179:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "4170:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103112,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4184:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4170:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e74496e3a3a3234",
                        "id": 103113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4188:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6b2c85e49c1e355c5ca57b5fc06ba141a7b9b7ec0520bac09f448f35cf33162",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::24\""
                        },
                        "value": "test_QuoteFromAmountIn::24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6b2c85e49c1e355c5ca57b5fc06ba141a7b9b7ec0520bac09f448f35cf33162",
                          "typeString": "literal_string \"test_QuoteFromAmountIn::24\""
                        }
                      ],
                      "id": 103104,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4143:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4143:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103115,
                  "nodeType": "ExpressionStatement",
                  "src": "4143:74:139"
                }
              ]
            },
            "functionSelector": "a2797cec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_QuoteFromAmountIn",
            "nameLocation": "1002:22:139",
            "parameters": {
              "id": 102725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1024:2:139"
            },
            "returnParameters": {
              "id": 102726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1039:0:139"
            },
            "scope": 103511,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 103510,
            "nodeType": "FunctionDefinition",
            "src": "4230:3240:139",
            "nodes": [],
            "body": {
              "id": 103509,
              "nodeType": "Block",
              "src": "4276:3194:139",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    103124
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103124,
                      "mutability": "mutable",
                      "name": "route",
                      "nameLocation": "4303:5:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103509,
                      "src": "4286:22:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 103122,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4286:7:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 103123,
                        "nodeType": "ArrayTypeName",
                        "src": "4286:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103130,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 103128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 103127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "4311:13:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 103125,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4315:7:139",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 103126,
                        "nodeType": "ArrayTypeName",
                        "src": "4315:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 103129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4311:16:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4286:41:139"
                },
                {
                  "expression": {
                    "id": 103139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103131,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "4337:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 103133,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 103132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4343:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4337:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 103136,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "4356:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 103137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4375:4:139",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101255,
                          "src": "4356:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 103135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4348:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 103134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4348:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4348:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4337:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103140,
                  "nodeType": "ExpressionStatement",
                  "src": "4337:43:139"
                },
                {
                  "expression": {
                    "id": 103149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103141,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "4390:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 103143,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 103142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4390:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 103146,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "4409:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 103147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4428:4:139",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101258,
                          "src": "4409:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 103145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4401:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 103144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4401:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4401:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4390:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103150,
                  "nodeType": "ExpressionStatement",
                  "src": "4390:43:139"
                },
                {
                  "assignments": [
                    103152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103152,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "4452:9:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103509,
                      "src": "4444:17:139",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 103151,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4444:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103154,
                  "initialValue": {
                    "hexValue": "316536",
                    "id": 103153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4464:3:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000_by_1",
                      "typeString": "int_const 1000000"
                    },
                    "value": "1e6"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4444:23:139"
                },
                {
                  "assignments": [
                    103159
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103159,
                      "mutability": "mutable",
                      "name": "newQuote",
                      "nameLocation": "4500:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103509,
                      "src": "4478:30:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 103158,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 103157,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4478:8:139",
                            "4487:5:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "4478:14:139"
                        },
                        "referencedDeclaration": 62151,
                        "src": "4478:14:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103165,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 103162,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "4547:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 103163,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103152,
                        "src": "4554:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 103160,
                        "name": "newQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102693,
                        "src": "4511:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 103161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4521:25:139",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63266,
                      "src": "4511:35:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 103164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4511:53:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4478:86:139"
                },
                {
                  "assignments": [
                    103170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 103170,
                      "mutability": "mutable",
                      "name": "oldQuote",
                      "nameLocation": "4596:8:139",
                      "nodeType": "VariableDeclaration",
                      "scope": 103509,
                      "src": "4574:30:139",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote"
                      },
                      "typeName": {
                        "id": 103169,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 103168,
                          "name": "LBQuoter.Quote",
                          "nameLocations": [
                            "4574:8:139",
                            "4583:5:139"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62151,
                          "src": "4574:14:139"
                        },
                        "referencedDeclaration": 62151,
                        "src": "4574:14:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Quote_$62151_storage_ptr",
                          "typeString": "struct LBQuoter.Quote"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 103176,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 103173,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "4643:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 103174,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103152,
                        "src": "4650:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 103171,
                        "name": "oldQuoter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102699,
                        "src": "4607:9:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBQuoter_$63370",
                          "typeString": "contract LBQuoter"
                        }
                      },
                      "id": 103172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4617:25:139",
                      "memberName": "findBestPathFromAmountOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63266,
                      "src": "4607:35:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                        "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                      }
                    },
                    "id": 103175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4607:53:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4574:86:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103178,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "4680:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4689:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "4680:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103181,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4695:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4680:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103182,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "4699:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4708:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "4699:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103185,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4714:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4699:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a31",
                        "id": 103186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4718:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b7efa93e2d5e5d89309adcfc6c4707d315fe337ace4e93f32bcee3b6342ab09",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::1\""
                        },
                        "value": "test_QuoteFromAmounOut::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b7efa93e2d5e5d89309adcfc6c4707d315fe337ace4e93f32bcee3b6342ab09",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::1\""
                        }
                      ],
                      "id": 103177,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4671:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4671:75:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103188,
                  "nodeType": "ExpressionStatement",
                  "src": "4671:75:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103190,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "4765:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103191,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4774:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "4765:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103193,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4780:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4765:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103194,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "4784:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103195,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4793:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "4784:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103197,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4799:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4784:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a32",
                        "id": 103198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4803:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d1a68de5d3e69b4910acb4a8f93ade6165bf9a7ac15ce1033a8a76a1e442a5d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::2\""
                        },
                        "value": "test_QuoteFromAmounOut::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d1a68de5d3e69b4910acb4a8f93ade6165bf9a7ac15ce1033a8a76a1e442a5d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::2\""
                        }
                      ],
                      "id": 103189,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4756:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4756:75:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103200,
                  "nodeType": "ExpressionStatement",
                  "src": "4756:75:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103202,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "4851:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103203,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4860:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "4851:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103205,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4866:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4851:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103206,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102690,
                        "src": "4870:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a33",
                        "id": 103207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4887:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af554d1516586fd02e3fde0cf1bd2edee8e069d0d12ffad0390d1cf84a93cb5c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::3\""
                        },
                        "value": "test_QuoteFromAmounOut::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af554d1516586fd02e3fde0cf1bd2edee8e069d0d12ffad0390d1cf84a93cb5c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::3\""
                        }
                      ],
                      "id": 103201,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4842:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4842:73:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103209,
                  "nodeType": "ExpressionStatement",
                  "src": "4842:73:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103211,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "4934:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103212,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4943:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "4934:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103214,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4949:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4934:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103215,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102687,
                        "src": "4953:18:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a34",
                        "id": 103216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4973:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_139b010b0c62e870153b716c7a2b6fe600c32345be0424c644f0f4f440169d4a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::4\""
                        },
                        "value": "test_QuoteFromAmounOut::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_139b010b0c62e870153b716c7a2b6fe600c32345be0424c644f0f4f440169d4a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::4\""
                        }
                      ],
                      "id": 103210,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "4925:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4925:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103218,
                  "nodeType": "ExpressionStatement",
                  "src": "4925:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103220,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5021:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103221,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5030:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "5021:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103223,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103222,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5039:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5021:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103224,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5043:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103225,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5052:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "5043:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103227,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5061:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5043:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a35",
                        "id": 103228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5065:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_362d2600d8671b9fd9929e5721f4b1dd759a1cf4d16f869e4d53d906b805c599",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::5\""
                        },
                        "value": "test_QuoteFromAmounOut::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_362d2600d8671b9fd9929e5721f4b1dd759a1cf4d16f869e4d53d906b805c599",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::5\""
                        }
                      ],
                      "id": 103219,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5012:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5012:81:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103230,
                  "nodeType": "ExpressionStatement",
                  "src": "5012:81:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103234,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103159,
                                "src": "5119:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103235,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5128:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "5119:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103237,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5137:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5119:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5113:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103232,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5113:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5113:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103241,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "5148:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5158:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "5148:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5166:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "5148:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5142:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103239,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5142:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5142:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a36",
                        "id": 103245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5171:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c474193438c618081e332eca0e92b1fb252afb2ffdedb84a212661d3c09fe72b",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::6\""
                        },
                        "value": "test_QuoteFromAmounOut::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c474193438c618081e332eca0e92b1fb252afb2ffdedb84a212661d3c09fe72b",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::6\""
                        }
                      ],
                      "id": 103231,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5104:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5104:95:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103247,
                  "nodeType": "ExpressionStatement",
                  "src": "5104:95:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103251,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103170,
                                "src": "5224:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103252,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5233:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "5224:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103254,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5242:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5224:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5218:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103249,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5218:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5218:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103258,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "5253:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5263:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "5253:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "5271:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "5253:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5247:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103256,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "5247:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5247:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a37",
                        "id": 103262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5276:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2dbb203b1f6ae498a310fb785f57a6fd8167801f032f74ed7a02e3cdc8b1576",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::7\""
                        },
                        "value": "test_QuoteFromAmounOut::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2dbb203b1f6ae498a310fb785f57a6fd8167801f032f74ed7a02e3cdc8b1576",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::7\""
                        }
                      ],
                      "id": 103248,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5209:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5209:95:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103264,
                  "nodeType": "ExpressionStatement",
                  "src": "5209:95:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103266,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5324:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103267,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5333:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5324:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103269,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5341:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5324:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103270,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5345:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103271,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5354:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5345:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103273,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5362:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5345:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a38",
                        "id": 103274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5366:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14621948003ec0f5f94c3e71eccd19c3cf14545981d0254bfb811effe86ed54a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::8\""
                        },
                        "value": "test_QuoteFromAmounOut::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14621948003ec0f5f94c3e71eccd19c3cf14545981d0254bfb811effe86ed54a",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::8\""
                        }
                      ],
                      "id": 103265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5315:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5315:79:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103276,
                  "nodeType": "ExpressionStatement",
                  "src": "5315:79:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103278,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5413:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103279,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5422:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5413:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103281,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5430:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5413:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103282,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5434:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103283,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5443:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "5434:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103285,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5451:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5434:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a39",
                        "id": 103286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5455:27:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac9b513cafd59c7f63fcc3fb2c48b7b935ad393bf70af13b751621dcfac30d17",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::9\""
                        },
                        "value": "test_QuoteFromAmounOut::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac9b513cafd59c7f63fcc3fb2c48b7b935ad393bf70af13b751621dcfac30d17",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::9\""
                        }
                      ],
                      "id": 103277,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5404:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5404:79:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103288,
                  "nodeType": "ExpressionStatement",
                  "src": "5404:79:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103290,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5516:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103291,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5525:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "5516:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103293,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5555:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5516:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103294,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5571:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103295,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5580:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "5571:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103297,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5610:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5571:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3130",
                        "id": 103298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5626:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a25a1aec3dc3dc9608544a8f97b47d7c4de103adb8f7c5fcd724457b203d2f70",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::10\""
                        },
                        "value": "test_QuoteFromAmounOut::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a25a1aec3dc3dc9608544a8f97b47d7c4de103adb8f7c5fcd724457b203d2f70",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::10\""
                        }
                      ],
                      "id": 103289,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5494:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5494:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103300,
                  "nodeType": "ExpressionStatement",
                  "src": "5494:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103302,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5696:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103303,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5705:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "5696:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103305,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5735:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5696:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103306,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5751:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103307,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5760:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "5751:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103309,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5790:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5751:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3131",
                        "id": 103310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5806:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7bd61434362d2e2bbaabbacd735e1e56673493e027551988bf22ddd4fd3c8c0f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::11\""
                        },
                        "value": "test_QuoteFromAmounOut::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7bd61434362d2e2bbaabbacd735e1e56673493e027551988bf22ddd4fd3c8c0f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::11\""
                        }
                      ],
                      "id": 103301,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5674:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5674:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103312,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103314,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "5864:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103315,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5873:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "5864:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103317,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5878:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5864:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103318,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "5882:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103319,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5891:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "5882:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103321,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5896:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5882:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3132",
                        "id": 103322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5900:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c04ede4ef9cfe74a205bafea4c69f70a4964fa3778418c962d88d70285ea8466",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::12\""
                        },
                        "value": "test_QuoteFromAmounOut::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c04ede4ef9cfe74a205bafea4c69f70a4964fa3778418c962d88d70285ea8466",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::12\""
                        }
                      ],
                      "id": 103313,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5855:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5855:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103324,
                  "nodeType": "ExpressionStatement",
                  "src": "5855:74:139"
                },
                {
                  "expression": {
                    "id": 103333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103325,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "5940:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 103327,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 103326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5946:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5940:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 103330,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "5959:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 103331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "5978:4:139",
                          "memberName": "USDT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101258,
                          "src": "5959:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 103329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5951:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 103328,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5951:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5951:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5940:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103334,
                  "nodeType": "ExpressionStatement",
                  "src": "5940:43:139"
                },
                {
                  "expression": {
                    "id": 103343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 103335,
                        "name": "route",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 103124,
                        "src": "5993:5:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 103337,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 103336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5999:1:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5993:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 103340,
                            "name": "AvalancheAddresses",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101265,
                            "src": "6012:18:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AvalancheAddresses_$101265_$",
                              "typeString": "type(library AvalancheAddresses)"
                            }
                          },
                          "id": 103341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6031:4:139",
                          "memberName": "USDC",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101255,
                          "src": "6012:23:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 103339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6004:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 103338,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6004:7:139",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 103342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6004:32:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5993:43:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 103344,
                  "nodeType": "ExpressionStatement",
                  "src": "5993:43:139"
                },
                {
                  "expression": {
                    "id": 103351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103345,
                      "name": "newQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103159,
                      "src": "6047:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 103348,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103124,
                          "src": "6094:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 103349,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103152,
                          "src": "6101:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 103346,
                          "name": "newQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102693,
                          "src": "6058:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 103347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6068:25:139",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "6058:35:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 103350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6058:53:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6047:64:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 103352,
                  "nodeType": "ExpressionStatement",
                  "src": "6047:64:139"
                },
                {
                  "expression": {
                    "id": 103359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103353,
                      "name": "oldQuote",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 103170,
                      "src": "6121:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 103356,
                          "name": "route",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103124,
                          "src": "6168:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        {
                          "id": 103357,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 103152,
                          "src": "6175:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "expression": {
                          "id": 103354,
                          "name": "oldQuoter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102699,
                          "src": "6132:9:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBQuoter_$63370",
                            "typeString": "contract LBQuoter"
                          }
                        },
                        "id": 103355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6142:25:139",
                        "memberName": "findBestPathFromAmountOut",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63266,
                        "src": "6132:35:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_array$_t_address_$dyn_memory_ptr_$_t_uint128_$returns$_t_struct$_Quote_$62151_memory_ptr_$",
                          "typeString": "function (address[] memory,uint128) view external returns (struct LBQuoter.Quote memory)"
                        }
                      },
                      "id": 103358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6132:53:139",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                        "typeString": "struct LBQuoter.Quote memory"
                      }
                    },
                    "src": "6121:64:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                      "typeString": "struct LBQuoter.Quote memory"
                    }
                  },
                  "id": 103360,
                  "nodeType": "ExpressionStatement",
                  "src": "6121:64:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103362,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6205:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103363,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6214:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "6205:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103365,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6220:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6205:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103366,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6224:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103367,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6233:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "6224:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103369,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6239:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6224:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3133",
                        "id": 103370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6243:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af21704ee4bee10290b284c882866c41192140c5a48d5b1c208b870c415b1c37",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::13\""
                        },
                        "value": "test_QuoteFromAmounOut::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af21704ee4bee10290b284c882866c41192140c5a48d5b1c208b870c415b1c37",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::13\""
                        }
                      ],
                      "id": 103361,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6196:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6196:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103372,
                  "nodeType": "ExpressionStatement",
                  "src": "6196:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103374,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6291:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103375,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6300:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "6291:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103377,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6306:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6291:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103378,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6310:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6319:5:139",
                          "memberName": "route",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62131,
                          "src": "6310:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103381,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103380,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6325:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6310:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3134",
                        "id": 103382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6329:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc67624ec0b072c75b5fec7603b5108eea3d5003f9f52cf315e98bc27d11a4ff",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::14\""
                        },
                        "value": "test_QuoteFromAmounOut::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc67624ec0b072c75b5fec7603b5108eea3d5003f9f52cf315e98bc27d11a4ff",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::14\""
                        }
                      ],
                      "id": 103373,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6282:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6282:76:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103384,
                  "nodeType": "ExpressionStatement",
                  "src": "6282:76:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103386,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6378:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103387,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6387:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "6378:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103389,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6393:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6378:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103390,
                        "name": "newUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102690,
                        "src": "6397:15:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3135",
                        "id": 103391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6414:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3b3baeae76a1c381ab3b0e0ffc48a3791f77cd229486fcf3dfb8dae11e1674f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::15\""
                        },
                        "value": "test_QuoteFromAmounOut::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3b3baeae76a1c381ab3b0e0ffc48a3791f77cd229486fcf3dfb8dae11e1674f",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::15\""
                        }
                      ],
                      "id": 103385,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6369:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103393,
                  "nodeType": "ExpressionStatement",
                  "src": "6369:74:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103395,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6462:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103396,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6471:5:139",
                          "memberName": "pairs",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62134,
                          "src": "6462:14:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 103398,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6477:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6462:17:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 103399,
                        "name": "legacyUsdcUsdtPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102687,
                        "src": "6481:18:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3136",
                        "id": 103400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6501:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22675353a6ec51306533897cfaf33d9b6b2e056f2944f373eeeaf6627e97fbb0",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::16\""
                        },
                        "value": "test_QuoteFromAmounOut::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22675353a6ec51306533897cfaf33d9b6b2e056f2944f373eeeaf6627e97fbb0",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::16\""
                        }
                      ],
                      "id": 103394,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 578,
                      "src": "6453:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 103401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:77:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103402,
                  "nodeType": "ExpressionStatement",
                  "src": "6453:77:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103404,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6550:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103405,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6559:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "6550:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103407,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6568:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6550:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103408,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6572:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103409,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6581:8:139",
                          "memberName": "binSteps",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62137,
                          "src": "6572:17:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "id": 103411,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6590:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6572:20:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3137",
                        "id": 103412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6594:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6239a2f55d8b3416142b9cdeb01099884a96c4462b8f3c7514a9afbf8854835",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::17\""
                        },
                        "value": "test_QuoteFromAmounOut::17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6239a2f55d8b3416142b9cdeb01099884a96c4462b8f3c7514a9afbf8854835",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::17\""
                        }
                      ],
                      "id": 103403,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6541:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6541:82:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103414,
                  "nodeType": "ExpressionStatement",
                  "src": "6541:82:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103418,
                                "name": "newQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103159,
                                "src": "6649:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103419,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6658:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "6649:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103421,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6667:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6649:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6643:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103416,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6643:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6643:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103425,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "6678:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6688:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "6678:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6696:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "6678:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6672:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103423,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6672:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6672:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3138",
                        "id": 103429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6701:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bed5822ed825416d1b73f85fa617eb61eead44d9907d9d9d08eedf10d8bfaea2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::18\""
                        },
                        "value": "test_QuoteFromAmounOut::18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bed5822ed825416d1b73f85fa617eb61eead44d9907d9d9d08eedf10d8bfaea2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::18\""
                        }
                      ],
                      "id": 103415,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6634:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6634:96:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103431,
                  "nodeType": "ExpressionStatement",
                  "src": "6634:96:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "baseExpression": {
                              "expression": {
                                "id": 103435,
                                "name": "oldQuote",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 103170,
                                "src": "6755:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                                  "typeString": "struct LBQuoter.Quote memory"
                                }
                              },
                              "id": 103436,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6764:8:139",
                              "memberName": "versions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 62141,
                              "src": "6755:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_enum$_Version_$69704_$dyn_memory_ptr",
                                "typeString": "enum ILBRouter.Version[] memory"
                              }
                            },
                            "id": 103438,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 103437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6773:1:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6755:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6749:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103433,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6749:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6749:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 103442,
                                "name": "ILBRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70101,
                                "src": "6784:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILBRouter_$70101_$",
                                  "typeString": "type(contract ILBRouter)"
                                }
                              },
                              "id": 103443,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6794:7:139",
                              "memberName": "Version",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 69704,
                              "src": "6784:17:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Version_$69704_$",
                                "typeString": "type(enum ILBRouter.Version)"
                              }
                            },
                            "id": 103444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "6802:2:139",
                            "memberName": "V2",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 69703,
                            "src": "6784:20:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Version_$69704",
                              "typeString": "enum ILBRouter.Version"
                            }
                          ],
                          "id": 103441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6778:5:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint8_$",
                            "typeString": "type(uint8)"
                          },
                          "typeName": {
                            "id": 103440,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "6778:5:139",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 103445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6778:27:139",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3139",
                        "id": 103446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6807:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc1f2362be154e65090324ce822afcdf470146b9322d3b21598eafcad1cf9142",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::19\""
                        },
                        "value": "test_QuoteFromAmounOut::19"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc1f2362be154e65090324ce822afcdf470146b9322d3b21598eafcad1cf9142",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::19\""
                        }
                      ],
                      "id": 103432,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6740:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6740:96:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103448,
                  "nodeType": "ExpressionStatement",
                  "src": "6740:96:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103450,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6856:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103451,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6865:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6856:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103453,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6873:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6856:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103454,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6877:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103455,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6886:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6877:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103457,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6894:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6877:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3230",
                        "id": 103458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6898:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ecdc613f7f25d377a0712e341e1401a7254e0524a0e1ab97dd1895b399c1d8d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::20\""
                        },
                        "value": "test_QuoteFromAmounOut::20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ecdc613f7f25d377a0712e341e1401a7254e0524a0e1ab97dd1895b399c1d8d",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::20\""
                        }
                      ],
                      "id": 103449,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6847:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6847:80:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103460,
                  "nodeType": "ExpressionStatement",
                  "src": "6847:80:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103462,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "6946:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103463,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6955:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6946:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103465,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6963:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6946:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103466,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "6967:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103467,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6976:7:139",
                          "memberName": "amounts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62144,
                          "src": "6967:16:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103469,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6984:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6967:19:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3231",
                        "id": 103470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6988:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e9e218d9589ab609b5686b359b0c8379308eaeb9369123ccc730af18e81cb0c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::21\""
                        },
                        "value": "test_QuoteFromAmounOut::21"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e9e218d9589ab609b5686b359b0c8379308eaeb9369123ccc730af18e81cb0c",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::21\""
                        }
                      ],
                      "id": 103461,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6937:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6937:80:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103472,
                  "nodeType": "ExpressionStatement",
                  "src": "6937:80:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103474,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "7050:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103475,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7059:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "7050:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103477,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7089:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7050:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103478,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "7105:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103479,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7114:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "7105:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103481,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7144:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7105:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3232",
                        "id": 103482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7160:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_411dafe8324eda4204fa926cdfad6074fdea5f2decb34511df96f4bc6ab88ef2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::22\""
                        },
                        "value": "test_QuoteFromAmounOut::22"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_411dafe8324eda4204fa926cdfad6074fdea5f2decb34511df96f4bc6ab88ef2",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::22\""
                        }
                      ],
                      "id": 103473,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7028:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7028:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103484,
                  "nodeType": "ExpressionStatement",
                  "src": "7028:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103486,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "7230:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103487,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7239:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "7230:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103489,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7269:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7230:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103490,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "7285:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103491,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7294:29:139",
                          "memberName": "virtualAmountsWithoutSlippage",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62147,
                          "src": "7285:38:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103493,
                        "indexExpression": {
                          "hexValue": "31",
                          "id": 103492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7324:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7285:41:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3233",
                        "id": 103494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7340:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bfd75a9936fdcb779e3b8c5d6cbc79414d9dfadc430475c4090bce9cce2e9d93",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::23\""
                        },
                        "value": "test_QuoteFromAmounOut::23"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bfd75a9936fdcb779e3b8c5d6cbc79414d9dfadc430475c4090bce9cce2e9d93",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::23\""
                        }
                      ],
                      "id": 103485,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7208:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7208:170:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103496,
                  "nodeType": "ExpressionStatement",
                  "src": "7208:170:139"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103498,
                            "name": "newQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103159,
                            "src": "7398:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7407:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "7398:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103501,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7412:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7398:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "baseExpression": {
                          "expression": {
                            "id": 103502,
                            "name": "oldQuote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 103170,
                            "src": "7416:8:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Quote_$62151_memory_ptr",
                              "typeString": "struct LBQuoter.Quote memory"
                            }
                          },
                          "id": 103503,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7425:4:139",
                          "memberName": "fees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62150,
                          "src": "7416:13:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint128_$dyn_memory_ptr",
                            "typeString": "uint128[] memory"
                          }
                        },
                        "id": 103505,
                        "indexExpression": {
                          "hexValue": "30",
                          "id": 103504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7430:1:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7416:16:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f51756f746546726f6d416d6f756e4f75743a3a3234",
                        "id": 103506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7434:28:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c341e876eaf3bee41f72dca6b154b051bd70736c5421a937f6bd9875d4a9add",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::24\""
                        },
                        "value": "test_QuoteFromAmounOut::24"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c341e876eaf3bee41f72dca6b154b051bd70736c5421a937f6bd9875d4a9add",
                          "typeString": "literal_string \"test_QuoteFromAmounOut::24\""
                        }
                      ],
                      "id": 103497,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7389:8:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 103507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7389:74:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 103508,
                  "nodeType": "ExpressionStatement",
                  "src": "7389:74:139"
                }
              ]
            },
            "functionSelector": "f4af7f08",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_QuoteFromAmounOut",
            "nameLocation": "4239:22:139",
            "parameters": {
              "id": 103118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4261:2:139"
            },
            "returnParameters": {
              "id": 103119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4276:0:139"
            },
            "scope": 103511,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 102677,
              "name": "Test",
              "nameLocations": [
                "266:4:139"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12155,
              "src": "266:4:139"
            },
            "id": 102678,
            "nodeType": "InheritanceSpecifier",
            "src": "266:4:139"
          }
        ],
        "canonicalName": "LiquidityBinQuoterPriorityTest",
        "contractDependencies": [
          63370
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 102676,
          "nodeType": "StructuredDocumentation",
          "src": "103:119:139",
          "text": " Makes sure that the new quoter picks the version 2.1 over the version 2 if both outputs are exactly the same"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          103511,
          12155,
          12103,
          6783,
          6423,
          5630,
          3570,
          2734,
          65,
          62
        ],
        "name": "LiquidityBinQuoterPriorityTest",
        "nameLocation": "232:30:139",
        "scope": 103512,
        "usedErrors": [],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 139
}