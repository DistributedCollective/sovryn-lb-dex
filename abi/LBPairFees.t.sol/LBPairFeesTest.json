{
  "abi": [
    {
      "inputs": [],
      "name": "SafeCast__Exceeds24Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SafeCast__Exceeds64Bits",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Uint256x256Math__MulDivOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "fsig",
          "type": "bytes4"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "keysHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "SlotFound",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slot",
          "type": "uint256"
        }
      ],
      "name": "WARNING_UninitedSlot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "amountX",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountY",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "excludedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getId",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "getTotalBins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        }
      ],
      "name": "isPresetOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isOpen",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "contract LBPair",
          "name": "lbPair",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "activeId",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "percentToBurn",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "nbBinX",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "nbBinY",
          "type": "uint8"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "artifact",
              "type": "string"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetInterfaces",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "string[]",
              "name": "artifacts",
              "type": "string[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzInterface[]",
          "name": "targetedInterfaces_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountOut",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapInX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountXOut",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountYOut",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapInXAndY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountOut",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapInY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountYOut",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountXOut",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapInYandX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountIn",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapOutX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountXIn",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountYIn",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapOutXAndY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountIn",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapOutY",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint128",
          "name": "amountXIn",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "amountYIn",
          "type": "uint128"
        }
      ],
      "name": "testFuzz_SwapOutYAndX",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CollectProtocolFeesAfterSwap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CollectProtocolFeesBothTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CollectProtocolFeesXTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_CollectProtocolFeesYTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Fees2LPFlashloan",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_FeesX2LP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_FeesY2LP",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "binStep",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "baseFactor",
          "type": "uint16"
        },
        {
          "internalType": "uint24",
          "name": "variableFeeControl",
          "type": "uint24"
        },
        {
          "internalType": "uint24",
          "name": "maxVolatilityAccumulator",
          "type": "uint24"
        }
      ],
      "name": "test_revert_TotalFeeExceeded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "3126:44:3:-:0;;;3166:4;-1:-1:-1;;3126:44:3;;;;;;;;1016:26:13;;;;;;;;;;;1951:4:140;1903:54;;2005:17;142:23215:128;2005:17:140;;142:23215:128;2005:17:140;;;-1:-1:-1;;;3126:44:3;2005:17:140;;;:8;:17::i;:::-;-1:-1:-1;;;;;1963:60:140;;;2069:15;;;;;;;;;;;;-1:-1:-1;;;2069:15:140;;;;;;:8;:15::i;:::-;-1:-1:-1;;;;;2029:56:140;;;142:23215:128;;;;;;;;;;;;20439:125:4;20503:12;20537:20;20552:4;20537:14;:20::i;:::-;-1:-1:-1;20527:30:4;20439:125;-1:-1:-1;;20439:125:4:o;20158:242::-;20228:12;20242:18;20320:4;20303:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;20303:22:4;;;;;;;20293:33;;20303:22;20293:33;;;;-1:-1:-1;;;;;;20344:19:4;;;;;709:25:169;;;20293:33:4;-1:-1:-1;20344:7:4;;;;682:18:169;;20344:19:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20373:20;;-1:-1:-1;;;20373:20:4;;20337:26;;-1:-1:-1;20373:8:4;;;;:20;;20337:26;;20388:4;;20373:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20158:242;;;:::o;14:250:169:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:169;238:16;;231:27;14:250::o;269:289::-;400:3;438:6;432:13;454:66;513:6;508:3;501:4;493:6;489:17;454:66;:::i;:::-;536:16;;;;;269:289;-1:-1:-1;;269:289:169:o;745:290::-;815:6;868:2;856:9;847:7;843:23;839:32;836:52;;;884:1;881;874:12;836:52;910:16;;-1:-1:-1;;;;;955:31:169;;945:42;;935:70;;1001:1;998;991:12;935:70;1024:5;745:290;-1:-1:-1;;;745:290:169:o;1040:493::-;1246:1;1242;1237:3;1233:11;1229:19;1221:6;1217:32;1206:9;1199:51;1286:2;1281;1270:9;1266:18;1259:30;1180:4;1318:6;1312:13;1361:6;1356:2;1345:9;1341:18;1334:34;1377:79;1449:6;1444:2;1433:9;1429:18;1424:2;1416:6;1412:15;1377:79;:::i;:::-;1517:2;1496:15;-1:-1:-1;;1492:29:169;1477:45;;;;1524:2;1473:54;;1040:493;-1:-1:-1;;;1040:493:169:o
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620002705760003560e01c8063891432ed116200015f578063b89e023311620000cc578063d7f975b41162000097578063ee2a4a05116200007a578063ee2a4a0514620004f4578063fa7626d4146200050b578063fecaa223146200051957600080fd5b8063d7f975b414620004d3578063e20c9f7114620004ea57600080fd5b8063b89e02331462000491578063b965124314620004a8578063ba414fa614620004b2578063befbe28b14620004bc57600080fd5b80639cac290a116200012a578063aabdebad116200010d578063aabdebad1462000473578063b0464fdc146200047d578063b5508aa9146200048757600080fd5b80639cac290a1462000452578063a7aa85e9146200045c57600080fd5b8063891432ed14620003f45780638eafd734146200040b578063916a17c61462000422578063958493b8146200043b57600080fd5b80633e5e3c2311620001fe5780634ab64e4811620001c95780637b921e8f11620001ac5780637b921e8f146200039857806385226c8114620003af578063889be5b714620003c857600080fd5b80634ab64e48146200037557806366d9a9a0146200037f57600080fd5b80633e5e3c2314620003315780633f7286f4146200033b57806345fc1e89146200034557806349789ef9146200034f57600080fd5b80631ed7831c116200023f5780631ed7831c14620002de57806320c2ff2c14620002f7578063257fbfef146200030e5780632ade3880146200031857600080fd5b806301ffc9a714620002755780630a9254e414620002b157806313f1994a14620002bd57806317e5786d14620002c7575b600080fd5b6200029c620002863660046200e60b565b6001600160e01b031916631eed36db60e21b1490565b60405190151581526020015b60405180910390f35b620002bb62000530565b005b620002bb62000743565b620002bb620002d83660046200e64d565b62000f50565b620002e8620016d5565b604051620002a891906200e66d565b620002bb620003083660046200e6bc565b62001739565b620002bb6200239f565b6200032262002980565b604051620002a891906200e74e565b620002e862002ace565b620002e862002b30565b620002bb62002b92565b62000366620003603660046200e826565b62003189565b604051908152602001620002a8565b620002bb620031de565b6200038962004381565b604051620002a891906200e8a5565b620002bb620003a93660046200e6bc565b620044fa565b620003b962005153565b604051620002a891906200e930565b620003df620003d93660046200e9aa565b6200522d565b60405162ffffff9091168152602001620002a8565b620002bb620004053660046200e64d565b62005288565b620002bb6200041c3660046200e6bc565b62005a4f565b6200042c620066f1565b604051620002a891906200e9eb565b620002bb6200044c3660046200e64d565b620067db565b620002bb62006f4e565b620002bb6200046d3660046200ea74565b62007af3565b620002bb62007f94565b6200042c62008793565b620003b96200887d565b6200029c620004a23660046200eb21565b62008957565b620002bb620089d9565b6200029c62008fac565b620002bb620004cd3660046200e6bc565b62009066565b620002bb620004e43660046200eb41565b62009d08565b620002e86200a25b565b620002bb620005053660046200e64d565b6200a2bd565b601f546200029c9060ff1681565b620002bb6200052a3660046200eba2565b6200aa8e565b6200053a6200ad82565b601f546020546200055d916001600160a01b03610100909104811691166200c622565b602a80546001600160a01b0319166001600160a01b03929092169182179055620005bc907f000000000000000000000000000000000000000000000000000000000000000090819062800000670de0b6b3a764000080600a8062007af3565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610100909204909116906370a0823190602401602060405180830381865afa1580156200062d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200065391906200ec34565b158015620006ef57506020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152909116906370a0823190602401602060405180830381865afa158015620006c7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006ed91906200ec34565b155b620007415760405162461bcd60e51b815260206004820152600860248201527f73657455703a3a3100000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b565b602a546200078f907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a764000080600a8062007af3565b602a54604051631cee6cdf60e31b8152670de0b6b3a76400006004820181905260016024830152916000916001600160a01b039091169063e77366f890604401606060405180830381865afa158015620007ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200081391906200ec4e565b50601f549092506200085f915061010090046001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160801b0385166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b158015620008d057600080fd5b505af1158015620008e5573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038716602482015261010090920416925063a9059cbb91506044016020604051808303816000875af11580156200094c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200097291906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af1158015620009e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a0d91906200ec34565b50602a5462000a59907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562000aa4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aca91906200ecd1565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015293955091935062000bdf9261010090910416906370a0823190602401602060405180830381865afa15801562000b44573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000b6a91906200ec34565b600262000b7885886200ed1b565b62000b8491906200ed54565b62000ba1906001600160801b0316670de0b6b3a76400006200ed7d565b60026040518060400160405280601081526020017f746573745f4665657358324c503a3a31000000000000000000000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262000ce89216906370a0823190602401602060405180830381865afa15801562000c4d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000c7391906200ec34565b600262000c8184876200ed93565b62000c8d91906200ed54565b62000caa906001600160801b0316670de0b6b3a76400006200edb6565b60026040518060400160405280601081526020017f746573745f4665657358324c503a3a32000000000000000000000000000000008152506200c64f565b602a5462000d33907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262000e4192610100900416906370a0823190602401602060405180830381865afa15801562000da6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000dcc91906200ec34565b600262000dda85886200ed1b565b62000de691906200ed54565b62000e03906001600160801b0316670de0b6b3a76400006200ed7d565b60026040518060400160405280601081526020017f746573745f4665657358324c503a3a33000000000000000000000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262000f4a9216906370a0823190602401602060405180830381865afa15801562000eaf573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ed591906200ec34565b600262000ee384876200ed93565b62000eef91906200ed54565b62000f0c906001600160801b0316670de0b6b3a76400006200edb6565b60026040518060400160405280601081526020017f746573745f4665657358324c503a3a34000000000000000000000000000000008152506200c64f565b50505050565b602a54604051631cee6cdf60e31b81526001600160801b03831660048201526001602482015260009182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562000fae573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000fd491906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b038316158015906200100f57506001600160801b038416155b6040518263ffffffff1660e01b815260040162001030911515815260200190565b60006040518083038186803b1580156200104957600080fd5b505afa1580156200105e573d6000803e3d6000fd5b5050601f54620010aa925061010090046001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006001600160801b0386166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200111b57600080fd5b505af115801562001130573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038816602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562001197573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011bd91906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562001232573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200125891906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200133092610100900416906370a0823190602401602060405180830381865afa158015620012cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012f291906200ec34565b60006040518060400160405280601481526020017f7465737446757a7a5f537761704f7574583a3a310000000000000000000000008152506200c6c1565b6020546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200140a9216906370a0823190602401602060405180830381865afa1580156200139e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013c491906200ec34565b826001600160801b03166040518060400160405280601481526020017f7465737446757a7a5f537761704f7574583a3a320000000000000000000000008152506200c6c1565b602a5462001455907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b815281516000936001600160a01b03169263d8dfcea092600480820193918290030181865afa1580156200149c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620014c291906200ecd1565b50601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092610100909204909116906370a0823190602401602060405180830381865afa1580156200153a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200156091906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa158015620015d1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015f791906200ec34565b90506200166f82846001600160801b0316886001600160801b0316670de0b6b3a76400006200162791906200ed7d565b6200163391906200edb6565b6040518060400160405280601481526020017f7465737446757a7a5f537761704f7574583a3a330000000000000000000000008152506200c6c1565b620016cd81620016916001600160801b038716670de0b6b3a76400006200edb6565b6040518060400160405280601481526020017f7465737446757a7a5f537761704f7574583a3a340000000000000000000000008152506200c6c1565b505050505050565b606060168054806020026020016040519081016040528092919081815260200182805480156200172f57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162001710575b5050505050905090565b602a54604051631cee6cdf60e31b81526001600160801b03831660048201526000602482018190529182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562001797573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017bd91906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b038416158015620017f957506000836001600160801b0316115b6040518263ffffffff1660e01b81526004016200181a911515815260200190565b60006040518083038186803b1580156200183357600080fd5b505afa15801562001848573d6000803e3d6000fd5b5050601f546200189a925061010090046001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b602054620018e2906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200195357600080fd5b505af115801562001968573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03881660248201529116925063a9059cbb91506044016020604051808303816000875af1158015620019ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620019f091906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562001a65573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a8b91906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262001b6b92610100900416906370a0823190602401602060405180830381865afa15801562001aff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b2591906200ec34565b826001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3100000000000000008152506200c6c1565b602a54604051631cee6cdf60e31b81526001600160801b03861660048201526001602482015260009182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562001bc9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bef91906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b03841615801562001c2b57506000836001600160801b0316115b6040518263ffffffff1660e01b815260040162001c4c911515815260200190565b60006040518083038186803b15801562001c6557600080fd5b505afa15801562001c7a573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c833981519152925063ca669fa79150602401600060405180830381600087803b15801562001cef57600080fd5b505af115801562001d04573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038b16602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562001d6b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d9191906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562001e06573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e2c91906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009216906370a0823190602401602060405180830381865afa15801562001e99573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ebf91906200ec34565b905062001f0c81836001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3200000000000000008152506200c730565b602a5462001f57907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562001fa2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001fc891906200ecd1565b601f54602a546040516370a0823160e01b81526001600160a01b0391821660048201529395509193506200209392610100909104909116906370a0823190602401602060405180830381865afa15801562002027573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200204d91906200ec34565b836001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3300000000000000008152506200c6c1565b602054602a546040516370a0823160e01b81526001600160a01b039182166004820152620021539291909116906370a0823190602401602060405180830381865afa158015620020e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200210d91906200ec34565b826001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3400000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa158015620021c4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021ea91906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa1580156200225b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200228191906200ec34565b90506200230f82856001600160801b03168a6001600160801b03168e6001600160801b0316670de0b6b3a7640000620022bb91906200ed7d565b620022c791906200edb6565b620022d391906200edb6565b6040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3500000000000000008152506200c6c1565b6200239281846001600160801b0316878d6001600160801b0316670de0b6b3a76400006200233e91906200ed7d565b6200234a91906200edb6565b6200235691906200edb6565b6040518060400160405280601881526020017f7465737446757a7a5f537761704f757459416e64583a3a3600000000000000008152506200c6c1565b5050505050505050505050565b602a546040516000916001600160a01b031690620023bd906200e4fc565b6001600160a01b039091168152602001604051809103906000f080158015620023ea573d6000803e3d6000fd5b50601f549091506200241b9061010090046001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60205462002443906001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b03821660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200249457600080fd5b505af1158015620024a9573d6000803e3d6000fd5b5050602a5460408051600060208201819052670de0b6b3a7640001828401527fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c260608301526080808301919091528251808303909101815260a082019283905263ea3446bf60e01b9092526001600160a01b03909216935063ea3446bf92506200254b9185917001000000000000000000000000000000009160a4016200edcc565b600060405180830381600087803b1580156200256657600080fd5b505af11580156200257b573d6000803e3d6000fd5b50505050600080602a60009054906101000a90046001600160a01b03166001600160a01b031663d8dfcea06040518163ffffffff1660e01b81526004016040805180830381865afa158015620025d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620025fb91906200ecd1565b915091506000602760009054906101000a90046001600160a01b03166001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200267b91906200edf6565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b158015620026cf57600080fd5b505af1158015620026e4573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af11580156200273e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200276491906200ec34565b50601f546040516370a0823160e01b81526001600160a01b0383811660048301526200280092610100900416906370a0823190602401602060405180830381865afa158015620027b8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620027de91906200ec34565b600060405180606001604052806022815260200162026125602291396200c6c1565b6020546040516370a0823160e01b81526001600160a01b038381166004830152620028aa9216906370a0823190602401602060405180830381865afa1580156200284e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200287491906200ec34565b620028816001856200ed1b565b6001600160801b0316604051806060016040528060228152602001620260bc602291396200c6c1565b602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa158015620028f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200291891906200ecd1565b809350819450505062002950836001600160801b03166000604051806060016040528060228152602001620261fe602291396200c6c1565b62000f4a826001600160801b03166001604051806060016040528060228152602001620260de602291396200c6c1565b6060601e805480602002602001604051908101604052809291908181526020016000905b8282101562002ac557600084815260208082206040805180820182526002870290920180546001600160a01b03168352600181018054835181870281018701909452808452939591948681019491929084015b8282101562002aad57838290600052602060002001805462002a19906200ee16565b80601f016020809104026020016040519081016040528092919081815260200182805462002a47906200ee16565b801562002a985780601f1062002a6c5761010080835404028352916020019162002a98565b820191906000526020600020905b81548152906001019060200180831162002a7a57829003601f168201915b505050505081526020019060010190620029f7565b505050508152505081526020019060010190620029a4565b50505050905090565b606060188054806020026020016040519081016040528092919081815260200182805480156200172f576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001710575050505050905090565b606060178054806020026020016040519081016040528092919081815260200182805480156200172f576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001710575050505050905090565b602a546040516000916001600160a01b03169062002bb0906200e4fc565b6001600160a01b039091168152602001604051809103906000f08015801562002bdd573d6000803e3d6000fd5b50601f5490915062002c0e9061010090046001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60205462002c36906001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b03821660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562002c8757600080fd5b505af115801562002c9c573d6000803e3d6000fd5b5050602a546001600160a01b0316915063ea3446bf90508270010000000000000000000000000000000160408051670de0b6b3a764000160208201819052918101919091527fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c260608201526000608082015260a0016040516020818303038152906040526040518463ffffffff1660e01b815260040162002d40939291906200edcc565b600060405180830381600087803b15801562002d5b57600080fd5b505af115801562002d70573d6000803e3d6000fd5b50505050600080602a60009054906101000a90046001600160a01b03166001600160a01b031663d8dfcea06040518163ffffffff1660e01b81526004016040805180830381865afa15801562002dca573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002df091906200ecd1565b915091506000602760009054906101000a90046001600160a01b03166001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562002e4a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002e7091906200edf6565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562002ec457600080fd5b505af115801562002ed9573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562002f33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f5991906200ec34565b50601f546040516370a0823160e01b81526001600160a01b0383811660048301526200300992610100900416906370a0823190602401602060405180830381865afa15801562002fad573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002fd391906200ec34565b62002fe06001866200ed1b565b6001600160801b03166040518060600160405280602581526020016202628b602591396200c6c1565b6020546040516370a0823160e01b81526001600160a01b038381166004830152620030b39216906370a0823190602401602060405180830381865afa15801562003057573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200307d91906200ec34565b6200308a6001856200ed1b565b6001600160801b0316604051806060016040528060258152602001620263f3602591396200c6c1565b602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa158015620030fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200312191906200ecd1565b809350819450505062003159836001600160801b03166001604051806060016040528060258152602001620262d4602591396200c6c1565b62000f4a826001600160801b031660016040518060600160405280602581526020016202618f602591396200c6c1565b6000808360ff16118015620031a1575060008260ff16115b620031b857620031b282846200ee52565b620031d2565b6001620031c683856200ee52565b620031d291906200ee6e565b60ff1690505b92915050565b601f54620032249061010090046001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200329557600080fd5b505af1158015620032aa573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b039182166004820152670de0b6b3a7640000602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562003310573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200333691906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af1158015620033ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620033d191906200ec34565b50602a60009054906101000a90046001600160a01b03166001600160a01b03166317f11ecc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562003426573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200344c91906200ee8a565b50602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562003498573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620034be91906200ecd1565b915091506000829050620034f7836001600160801b0316600060405180606001604052806024815260200162026031602491396200c768565b62003527826001600160801b0316600060405180606001604052806024815260200162026220602491396200c6c1565b602a5460408051630240bc6b60e21b8152815160009384936001600160a01b0390911692630902f1ac92600480830193928290030181865afa15801562003572573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200359891906200ecd1565b915091506000602760009054906101000a90046001600160a01b03166001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa158015620035f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200361891906200edf6565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200366c57600080fd5b505af115801562003681573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620036db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200370191906200ec34565b50602a5460408051630240bc6b60e21b8152815160009384936001600160a01b0390911692630902f1ac92600480830193928290030181865afa1580156200374d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200377391906200ecd1565b91509150620037af826001600160801b0316866001600160801b03166040518060600160405280602481526020016202643d602491396200c6c1565b620037e7816001600160801b0316856001600160801b0316604051806060016040528060248152602001620263ad602491396200c6c1565b601f546040516370a0823160e01b81526001600160a01b0385811660048301526200389692610100900416906370a0823190602401602060405180830381865afa1580156200383a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200386091906200ec34565b6200386d60018b6200ed1b565b6001600160801b031660405180606001604052806024815260200162026389602491396200c6c1565b6020546040516370a0823160e01b81526001600160a01b0385811660048301526200392c9216906370a0823190602401602060405180830381865afa158015620038e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200390a91906200ec34565b600060405180606001604052806024815260200162026147602491396200c6c1565b602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa15801562003974573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200399a91906200ecd1565b8098508199505050620039d2886001600160801b03166001604051806060016040528060248152602001620262f9602491396200c6c1565b62003a02876001600160801b03166000604051806060016040528060248152602001620262b0602491396200c6c1565b60205462003a43906001600160a01b03167f0000000000000000000000000000000000000000000000000000000000000000670de0b6b3a76400006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562003ab457600080fd5b505af115801562003ac9573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b039182166004820152670de0b6b3a764000060248201529116925063a9059cbb91506044016020604051808303816000875af115801562003b2a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003b5091906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562003bc5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003beb91906200ec34565b50602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa15801562003c34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c5a91906200ecd1565b8098508199505050600087905062003c97896001600160801b031660016040518060600160405280602481526020016202616b602491396200c6c1565b62003cc7886001600160801b03166000604051806060016040528060258152602001620261b4602591396200c768565b602a5460408051630240bc6b60e21b815281516001600160a01b0390931692630902f1ac926004808401939192918290030181865afa15801562003d0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003d3591906200ecd1565b60405163ca669fa760e01b81526001600160a01b038716600482015291975095506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562003d8b57600080fd5b505af115801562003da0573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562003dfa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e2091906200ec34565b50602a5460408051630240bc6b60e21b815281516001600160a01b0390931692630902f1ac926004808401939192918290030181865afa15801562003e69573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003e8f91906200ecd1565b809350819450505062003ecf836001600160801b0316876001600160801b03166040518060600160405280602581526020016202633f602591396200c6c1565b62003f07826001600160801b0316866001600160801b031660405180606001604052806025815260200162026418602591396200c6c1565b601f546040516370a0823160e01b81526001600160a01b03868116600483015262003fb692610100900416906370a0823190602401602060405180830381865afa15801562003f5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003f8091906200ec34565b62003f8d60018a6200ed1b565b6001600160801b0316604051806060016040528060258152602001620261d9602591396200c6c1565b6020546040516370a0823160e01b81526001600160a01b038681166004830152620040609216906370a0823190602401602060405180830381865afa15801562004004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200402a91906200ec34565b6200403760018b6200ed1b565b6001600160801b031660405180606001604052806025815260200162026100602591396200c6c1565b602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa158015620040a8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620040ce91906200ecd1565b809950819a50505062004106896001600160801b0316600160405180606001604052806025815260200162026461602591396200c6c1565b62004136886001600160801b0316600160405180606001604052806025815260200162026266602591396200c6c1565b60405163ca669fa760e01b81526001600160a01b03851660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200418757600080fd5b505af11580156200419c573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015620041f6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200421c91906200ec34565b50601f546040516370a0823160e01b81526001600160a01b038681166004830152620042cc92610100900416906370a0823190602401602060405180830381865afa15801562004270573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200429691906200ec34565b620042a360018a6200ed1b565b6001600160801b031660405180606001604052806025815260200162026077602591396200c6c1565b6020546040516370a0823160e01b81526001600160a01b038681166004830152620043769216906370a0823190602401602060405180830381865afa1580156200431a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200434091906200ec34565b6200434d6001846200ed1b565b6001600160801b031660405180606001604052806025815260200162026364602591396200c6c1565b505050505050505050565b6060601b805480602002602001604051908101604052809291908181526020016000905b8282101562002ac55783829060005260206000209060020201604051806040016040529081600082018054620043db906200ee16565b80601f016020809104026020016040519081016040528092919081815260200182805462004409906200ee16565b80156200445a5780601f106200442e576101008083540402835291602001916200445a565b820191906000526020600020905b8154815290600101906020018083116200443c57829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020018280548015620044e157602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620044a25790505b50505050508152505081526020019060010190620043a5565b602a54604051631cee6cdf60e31b81526001600160801b03841660048201526001602482015260009182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562004558573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200457e91906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b038416158015620045ba57506000836001600160801b0316115b6040518263ffffffff1660e01b8152600401620045db911515815260200190565b60006040518083038186803b158015620045f457600080fd5b505afa15801562004609573d6000803e3d6000fd5b5050601f546200465b925061010090046001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b602054620046a3906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200471457600080fd5b505af115801562004729573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038916602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562004790573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620047b691906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af11580156200482b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200485191906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200492c9216906370a0823190602401602060405180830381865afa158015620048c0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620048e691906200ec34565b826001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3100000000000000008152506200c6c1565b602a54604051631cee6cdf60e31b81526001600160801b03851660048201526000602482018190529182916001600160a01b039091169063e77366f890604401606060405180830381865afa1580156200498a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620049b091906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b038416158015620049ec57506000836001600160801b0316115b6040518263ffffffff1660e01b815260040162004a0d911515815260200190565b60006040518083038186803b15801562004a2657600080fd5b505afa15801562004a3b573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c833981519152925063ca669fa79150602401600060405180830381600087803b15801562004ab057600080fd5b505af115801562004ac5573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038a1660248201529116925063a9059cbb91506044016020604051808303816000875af115801562004b27573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004b4d91906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562004bc2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004be891906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa15801562004c5a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004c8091906200ec34565b905062004ccd81836001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3200000000000000008152506200c730565b602a5462004d18907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562004d63573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004d8991906200ecd1565b601f54602a546040516370a0823160e01b81526001600160a01b03918216600482015293955091935062004e5492610100909104909116906370a0823190602401602060405180830381865afa15801562004de8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004e0e91906200ec34565b836001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3300000000000000008152506200c6c1565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262004f149291909116906370a0823190602401602060405180830381865afa15801562004ea8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004ece91906200ec34565b826001600160801b03166040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3400000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa15801562004f85573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062004fab91906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa1580156200501c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200504291906200ec34565b9050620050c782856001600160801b0316878e6001600160801b0316670de0b6b3a76400006200507391906200ed7d565b6200507f91906200edb6565b6200508b91906200edb6565b6040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3500000000000000008152506200c6c1565b6200239281846001600160801b03168a6001600160801b03168d6001600160801b0316670de0b6b3a7640000620050ff91906200ed7d565b6200510b91906200edb6565b6200511791906200edb6565b6040518060400160405280601881526020017f7465737446757a7a5f537761704f757458416e64593a3a3600000000000000008152506200c6c1565b6060601a805480602002602001604051908101604052809291908181526020016000905b8282101562002ac557838290600052602060002001805462005199906200ee16565b80601f0160208091040260200160405190810160405280929190818152602001828054620051c7906200ee16565b8015620052185780601f10620051ec5761010080835404028352916020019162005218565b820191906000526020600020905b815481529060010190602001808311620051fa57829003601f168201915b50505050508152602001906001019062005177565b600080620052418462ffffff87166200ed7d565b905060008360ff161162005256578062005272565b6200526560ff8416826200edb6565b620052729060016200ed7d565b90506200527f816200c7a0565b95945050505050565b6000805160206202609c833981519152634c63e5626001600160801b03831615801590620052c75750670de0b6b3a7640000836001600160801b031611155b6040518263ffffffff1660e01b8152600401620052e8911515815260200190565b60006040518083038186803b1580156200530157600080fd5b505afa15801562005316573d6000803e3d6000fd5b5050602a54604051630abcd78360e41b81526001600160801b038516600482015260006024820181905293508392506001600160a01b039091169063abcd783090604401606060405180830381865afa15801562005378573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200539e91906200ec4e565b5091509150620053ef816001600160801b031660006040518060400160405280601381526020017f7465737446757a7a5f53776170496e593a3a31000000000000000000000000008152506200c6c1565b60205462005431906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160801b0385166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b158015620054a257600080fd5b505af1158015620054b7573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03871660248201529116925063a9059cbb91506044016020604051808303816000875af115801562005519573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200553f91906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af1158015620055b4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620055da91906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620056ad9216906370a0823190602401602060405180830381865afa15801562005649573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200566f91906200ec34565b60006040518060400160405280601381526020017f7465737446757a7a5f53776170496e593a3a32000000000000000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200578c92610100900416906370a0823190602401602060405180830381865afa15801562005720573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200574691906200ec34565b846001600160801b03166040518060400160405280601381526020017f7465737446757a7a5f53776170496e593a3a33000000000000000000000000008152506200c6c1565b602a54620057d7907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b815281516000936001600160a01b03169263d8dfcea092600480820193918290030181865afa1580156200581e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200584491906200ecd1565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015292945060009350610100909104909116906370a0823190602401602060405180830381865afa158015620058bc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620058e291906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa15801562005953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200597991906200ec34565b9050620059d9826200599d6001600160801b038916670de0b6b3a76400006200edb6565b6040518060400160405280601381526020017f7465737446757a7a5f53776170496e593a3a34000000000000000000000000008152506200c6c1565b620016cd81846001600160801b0316876001600160801b0316670de0b6b3a764000062005a0791906200ed7d565b62005a1391906200edb6565b6040518060400160405280601381526020017f7465737446757a7a5f53776170496e593a3a35000000000000000000000000008152506200c6c1565b6000805160206202609c833981519152634c63e5626001600160801b0384161580159062005a8e5750670de0b6b3a7640000846001600160801b031611155b801562005aa457506000836001600160801b0316115b801562005ac25750670de0b6b3a7640000836001600160801b031611155b6040518263ffffffff1660e01b815260040162005ae3911515815260200190565b60006040518083038186803b15801562005afc57600080fd5b505afa15801562005b11573d6000803e3d6000fd5b5050602a54604051630abcd78360e41b81526001600160801b038516600482015260016024820152600093508392506001600160a01b039091169063abcd783090604401606060405180830381865afa15801562005b73573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005b9991906200ec4e565b509150915062005bea816001600160801b031660006040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a310000000000000000008152506200c6c1565b601f5462005c379061010090046001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60205462005c7f906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562005cf057600080fd5b505af115801562005d05573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038716602482015261010090920416925063a9059cbb91506044016020604051808303816000875af115801562005d6c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005d9291906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562005e07573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005e2d91906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262005f089216906370a0823190602401602060405180830381865afa15801562005e9c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005ec291906200ec34565b846001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a320000000000000000008152506200c6c1565b602a54604051630abcd78360e41b81526001600160801b03861660048201526000602482018190529182916001600160a01b039091169063abcd783090604401606060405180830381865afa15801562005f66573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062005f8c91906200ec4e565b509150915062005fdd816001600160801b031660006040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a330000000000000000008152506200c6c1565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200604e57600080fd5b505af115801562006063573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03871660248201529116925063a9059cbb91506044016020604051808303816000875af1158015620060c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620060eb91906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562006160573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200618691906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa158015620061f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200621e91906200ec34565b90506200626b81886001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a340000000000000000008152506200c730565b602a54620062b6907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562006301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200632791906200ecd1565b601f54602a546040516370a0823160e01b81526001600160a01b039182166004820152939550919350620063f292610100909104909116906370a0823190602401602060405180830381865afa15801562006386573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620063ac91906200ec34565b836001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a350000000000000000008152506200c6c1565b602054602a546040516370a0823160e01b81526001600160a01b039182166004820152620064b29291909116906370a0823190602401602060405180830381865afa15801562006446573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200646c91906200ec34565b826001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a360000000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa15801562006523573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200654991906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa158015620065ba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620065e091906200ec34565b90506200666582856001600160801b0316878c6001600160801b0316670de0b6b3a76400006200661191906200ed7d565b6200661d91906200edb6565b6200662991906200edb6565b6040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a370000000000000000008152506200c6c1565b6200239281846001600160801b03168c6001600160801b03168a6001600160801b0316670de0b6b3a76400006200669d91906200ed7d565b620066a991906200edb6565b620066b591906200edb6565b6040518060400160405280601781526020017f7465737446757a7a5f53776170496e58416e64593a3a380000000000000000008152506200c6c1565b6060601d805480602002602001604051908101604052809291908181526020016000905b8282101562002ac55760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015620067c257602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620067835790505b5050505050815250508152602001906001019062006715565b602a54604051631cee6cdf60e31b81526001600160801b03831660048201526000602482018190529182916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562006839573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200685f91906200ec4e565b5090925090506000805160206202609c833981519152634c63e5626001600160801b038316158015906200689a57506001600160801b038416155b6040518263ffffffff1660e01b8152600401620068bb911515815260200190565b60006040518083038186803b158015620068d457600080fd5b505afa158015620068e9573d6000803e3d6000fd5b50506020546200693092506001600160a01b031690507f00000000000000000000000000000000000000000000000000000000000000006001600160801b0386166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b158015620069a157600080fd5b505af1158015620069b6573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03881660248201529116925063a9059cbb91506044016020604051808303816000875af115801562006a18573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006a3e91906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562006ab3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006ad991906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262006bac9216906370a0823190602401602060405180830381865afa15801562006b48573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006b6e91906200ec34565b60006040518060400160405280601481526020017f7465737446757a7a5f537761704f7574593a3a310000000000000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262006c8b92610100900416906370a0823190602401602060405180830381865afa15801562006c1f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006c4591906200ec34565b826001600160801b03166040518060400160405280601481526020017f7465737446757a7a5f537761704f7574593a3a320000000000000000000000008152506200c6c1565b602a5462006cd6907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b815281516000936001600160a01b03169263d8dfcea092600480820193918290030181865afa15801562006d1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006d4391906200ecd1565b601f546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015292945060009350610100909104909116906370a0823190602401602060405180830381865afa15801562006dbb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006de191906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa15801562006e52573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062006e7891906200ec34565b905062006ed88262006e9c6001600160801b038716670de0b6b3a76400006200edb6565b6040518060400160405280601481526020017f7465737446757a7a5f537761704f7574593a3a330000000000000000000000008152506200c6c1565b620016cd81846001600160801b0316886001600160801b0316670de0b6b3a764000062006f0691906200ed7d565b62006f1291906200edb6565b6040518060400160405280601481526020017f7465737446757a7a5f537761704f7574593a3a340000000000000000000000008152506200c6c1565b602a5462006f99907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a5462006fe5907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a76400008060018062007af3565b602a546040516000916001600160a01b03169062007003906200e4fc565b6001600160a01b039091168152602001604051809103906000f08015801562007030573d6000803e3d6000fd5b50601f549091506200705a9061010090046001600160a01b031682671bc16d674ec800006200c63b565b6020546200707b906001600160a01b031682671bc16d674ec800006200c63b565b60405163ca669fa760e01b81526001600160a01b0382166004820152670de0b6b3a764000190670de0b6b3a7640000906000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b158015620070e057600080fd5b505af1158015620070f5573d6000803e3d6000fd5b5050602a54604080516001600160801b0387811660208301528616818301527fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2606082015260006080808301919091528251808303909101815260a082019283905263ea3446bf60e01b9092526001600160a01b03909216935063ea3446bf92506200718991879160019160a4016200edcc565b600060405180830381600087803b158015620071a457600080fd5b505af1158015620071b9573d6000803e3d6000fd5b50505050600080602a60009054906101000a90046001600160a01b03166001600160a01b031663d8dfcea06040518163ffffffff1660e01b81526004016040805180830381865afa15801562007213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200723991906200ecd1565b90925090506200724a82856200ed1b565b6200725682856200ed1b565b602a549195509350620072a7907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a76400008060018062007af3565b60405163ca669fa760e01b81526001600160a01b0386166004820152670de0b6b3a764000190670de0b6b3a7640000906000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200730c57600080fd5b505af115801562007321573d6000803e3d6000fd5b5050602a54604080516001600160801b0387811660208301528616818301527fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2606082015260006080808301919091528251808303909101815260a082019283905263ea3446bf60e01b9092526001600160a01b03909216935063ea3446bf9250620073b5918b9160019160a4016200edcc565b600060405180830381600087803b158015620073d057600080fd5b505af1158015620073e5573d6000803e3d6000fd5b50505050600080602a60009054906101000a90046001600160a01b03166001600160a01b031663d8dfcea06040518163ffffffff1660e01b81526004016040805180830381865afa1580156200743f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200746591906200ecd1565b90925090506200747686836200ed1b565b6200748290856200ed1b565b6200748e86836200ed1b565b6200749a90856200ed1b565b602a54604051627eeac760e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262800000602483015293975091955060009450849350919091169062fdd58e90604401602060405180830381865afa1580156200751a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200754091906200ec34565b602a54604051627eeac760e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526280000060248301529091169062fdd58e90604401602060405180830381865afa158015620075b2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620075d891906200ec34565b602a54919350915062007628907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a76400006001806200aa8e565b602a5462007673907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a76400006001806200aa8e565b601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200778b92610100900416906370a0823190602401602060405180830381865afa158015620076e6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200770c91906200ec34565b6200771883856200ed7d565b6200772d856001600160801b0389166200eeaa565b6200773991906200eec4565b6200774d90670de0b6b3a76400006200ed7d565b60016040518060400160405280601881526020017f746573745f46656573324c50466c6173686c6f616e3a3a3100000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200789e9216906370a0823190602401602060405180830381865afa158015620077f9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200781f91906200ec34565b6200782b83856200ed7d565b62007840856001600160801b0388166200eeaa565b6200784c91906200eec4565b6200786090670de0b6b3a76400006200ed7d565b60016040518060400160405280601881526020017f746573745f46656573324c50466c6173686c6f616e3a3a3200000000000000008152506200c64f565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620079cb92610100900416906370a0823190602401602060405180830381865afa15801562007911573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200793791906200ec34565b6200794383856200ed7d565b62007958846001600160801b0389166200eeaa565b6200796491906200eec4565b620079816001600160801b038c16670de0b6b3a76400006200ed7d565b6200798d91906200ed7d565b60016040518060400160405280601881526020017f746573745f46656573324c50466c6173686c6f616e3a3a3300000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620043769216906370a0823190602401602060405180830381865afa15801562007a39573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007a5f91906200ec34565b62007a6b83856200ed7d565b62007a80846001600160801b0388166200eeaa565b62007a8c91906200eec4565b62007aa96001600160801b038b16670de0b6b3a76400006200ed7d565b62007ab591906200ed7d565b60016040518060400160405280601881526020017f746573745f46656573324c50466c6173686c6f616e3a3a3400000000000000008152506200c64f565b6000866001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007b34573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007b5a91906200edf6565b90506000876001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562007b9d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007bc391906200edf6565b905062007bd2828b886200c63b565b62007bdf818b876200c63b565b600062007bed858562003189565b905060008167ffffffffffffffff81111562007c0d5762007c0d6200eedb565b60405190808252806020026020018201604052801562007c37578160200160208202803683370190505b50905060005b8281101562007d3657600062007c558b83896200522d565b905060008b62ffffff168262ffffff161015801562007c77575060008960ff16115b62007c8457600062007ca5565b62007ca562007c9f60ff8b16670de0b6b3a76400006200eec4565b6200c7cc565b905060008c62ffffff168362ffffff161115801562007cc7575060008960ff16115b62007cd457600062007cef565b62007cef62007c9f60ff8b16670de0b6b3a76400006200eec4565b905062007cfe8282856200c7f8565b85858151811062007d135762007d136200eef1565b6020026020010181815250505050508062007d2e906200ef07565b905062007c3d565b506040516303223eab60e11b81526001600160a01b038d1660048201526000805160206202609c833981519152906306447d5690602401600060405180830381600087803b15801562007d8857600080fd5b505af115801562007d9d573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038d81166004830152602482018c90528716925063a9059cbb91506044016020604051808303816000875af115801562007df1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007e1791906200ecb3565b5060405163a9059cbb60e01b81526001600160a01b038b811660048301526024820189905284169063a9059cbb906044016020604051808303816000875af115801562007e68573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062007e8e91906200ecb3565b507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b03166390c5013b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562007eee57600080fd5b505af115801562007f03573d6000803e3d6000fd5b50505050896001600160a01b031663383d15c58c838f6040518463ffffffff1660e01b815260040162007f39939291906200ef23565b6000604051808303816000875af115801562007f59573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262007f8391908101906200efe4565b505050505050505050505050505050565b602a5462007fe0907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a764000080600a8062007af3565b602a54604051631cee6cdf60e31b8152670de0b6b3a764000060048201819052600060248301819052909290916001600160a01b039091169063e77366f890604401606060405180830381865afa15801562008040573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200806691906200ec4e565b50602054909250620080ad91506001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160801b0385166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200811e57600080fd5b505af115801562008133573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03871660248201529116925063a9059cbb91506044016020604051808303816000875af115801562008195573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620081bb91906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562008230573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200825691906200ec34565b50602a54620082a2907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa158015620082ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200831391906200ecd1565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152939550919350620084289261010090910416906370a0823190602401602060405180830381865afa1580156200838d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620083b391906200ec34565b6002620083c185876200ed93565b620083cd91906200ed54565b620083ea906001600160801b0316670de0b6b3a76400006200edb6565b60026040518060400160405280601081526020017f746573745f4665657359324c503a3a31000000000000000000000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152620085319216906370a0823190602401602060405180830381865afa15801562008496573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620084bc91906200ec34565b6002620084ca84886200ed1b565b620084d691906200ed54565b620084f3906001600160801b0316670de0b6b3a76400006200ed7d565b60026040518060400160405280601081526020017f746573745f4665657359324c503a3a32000000000000000000000000000000008152506200c64f565b602a546200857c907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200868a92610100900416906370a0823190602401602060405180830381865afa158015620085ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200861591906200ec34565b60026200862385876200ed93565b6200862f91906200ed54565b6200864c906001600160801b0316670de0b6b3a76400006200edb6565b60026040518060400160405280601081526020017f746573745f4665657359324c503a3a33000000000000000000000000000000008152506200c64f565b6020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015262000f4a9216906370a0823190602401602060405180830381865afa158015620086f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200871e91906200ec34565b60026200872c84886200ed1b565b6200873891906200ed54565b62008755906001600160801b0316670de0b6b3a76400006200ed7d565b60026040518060400160405280601081526020017f746573745f4665657359324c503a3a34000000000000000000000000000000008152506200c64f565b6060601c805480602002602001604051908101604052809291908181526020016000905b8282101562002ac55760008481526020908190206040805180820182526002860290920180546001600160a01b031683526001810180548351818702810187019094528084529394919385830193928301828280156200886457602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b03191681526020019060040190602082600301049283019260010382029150808411620088255790505b50505050508152505081526020019060010190620087b7565b60606019805480602002602001604051908101604052809291908181526020016000905b8282101562002ac5578382906000526020600020018054620088c3906200ee16565b80601f0160208091040260200160405190810160405280929190818152602001828054620088f1906200ee16565b8015620089425780601f10620089165761010080835404028352916020019162008942565b820191906000526020600020905b8154815290600101906020018083116200892457829003601f168201915b505050505081526020019060010190620088a1565b602754604051632aaf12cf60e21b815261ffff831660048201526000916001600160a01b03169063aabc4b3c9060240161010060405180830381865afa158015620089a6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620089cc91906200f099565b9998505050505050505050565b602a546040516000916001600160a01b031690620089f7906200e4fc565b6001600160a01b039091168152602001604051809103906000f08015801562008a24573d6000803e3d6000fd5b50601f5490915062008a559061010090046001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60205462008a7d906001600160a01b0316826ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b03821660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562008ace57600080fd5b505af115801562008ae3573d6000803e3d6000fd5b5050602a546001600160a01b0316915063ea3446bf905082600160408051670de0b6b3a7640001602082015260009181018290527fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c26060820152608081019190915260a0016040516020818303038152906040526040518463ffffffff1660e01b815260040162008b77939291906200edcc565b600060405180830381600087803b15801562008b9257600080fd5b505af115801562008ba7573d6000803e3d6000fd5b50505050600080602a60009054906101000a90046001600160a01b03166001600160a01b031663d8dfcea06040518163ffffffff1660e01b81526004016040805180830381865afa15801562008c01573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008c2791906200ecd1565b915091506000602760009054906101000a90046001600160a01b03166001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa15801562008c81573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008ca791906200edf6565b60405163ca669fa760e01b81526001600160a01b03821660048201529091506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b15801562008cfb57600080fd5b505af115801562008d10573d6000803e3d6000fd5b50505050602a60009054906101000a90046001600160a01b03166001600160a01b031663a1af5b9a6040518163ffffffff1660e01b81526004016020604051808303816000875af115801562008d6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008d9091906200ec34565b50601f546040516370a0823160e01b81526001600160a01b03838116600483015262008e4092610100900416906370a0823190602401602060405180830381865afa15801562008de4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008e0a91906200ec34565b62008e176001866200ed1b565b6001600160801b031660405180606001604052806022815260200162026244602291396200c6c1565b6020546040516370a0823160e01b81526001600160a01b03838116600483015262008ed69216906370a0823190602401602060405180830381865afa15801562008e8e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008eb491906200ec34565b600060405180606001604052806022815260200162026055602291396200c6c1565b602a54604080516306c6fe7560e51b815281516001600160a01b039093169263d8dfcea0926004808401939192918290030181865afa15801562008f1e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062008f4491906200ecd1565b809350819450505062008f7c836001600160801b03166001604051806060016040528060228152602001620263d1602291396200c6c1565b62000f4a826001600160801b031660006040518060600160405280602281526020016202631d602291396200c6c1565b60085460009060ff161562008fc5575060085460ff1690565b604051630667f9d760e41b81526000805160206202609c833981519152600482018190527f6661696c65640000000000000000000000000000000000000000000000000000602483015260009163667f9d7090604401602060405180830381865afa15801562009039573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200905f91906200ec34565b1415905090565b6000805160206202609c833981519152634c63e5626001600160801b03831615801590620090a55750670de0b6b3a7640000836001600160801b031611155b8015620090bb57506000846001600160801b0316115b8015620090d95750670de0b6b3a7640000846001600160801b031611155b6040518263ffffffff1660e01b8152600401620090fa911515815260200190565b60006040518083038186803b1580156200911357600080fd5b505afa15801562009128573d6000803e3d6000fd5b5050602a54604051630abcd78360e41b81526001600160801b038516600482015260006024820181905293508392506001600160a01b039091169063abcd783090604401606060405180830381865afa1580156200918a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620091b091906200ec4e565b509150915062009201816001600160801b031660006040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a310000000000000000008152506200c6c1565b601f546200924e9061010090046001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60205462009296906001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006ec097ce7bc90715b34b9f10000000006200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200930757600080fd5b505af11580156200931c573d6000803e3d6000fd5b5050602054602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b03871660248201529116925063a9059cbb91506044016020604051808303816000875af11580156200937e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620093a491906200ecb3565b50602a5460405163029e02cd60e51b8152600060048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af115801562009419573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200943f91906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200951f92610100900416906370a0823190602401602060405180830381865afa158015620094b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620094d991906200ec34565b846001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a320000000000000000008152506200c6c1565b602a54604051630abcd78360e41b81526001600160801b03861660048201526001602482015260009182916001600160a01b039091169063abcd783090604401606060405180830381865afa1580156200957d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620095a391906200ec4e565b5091509150620095f4816001600160801b031660006040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a330000000000000000008152506200c6c1565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200966557600080fd5b505af11580156200967a573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038716602482015261010090920416925063a9059cbb91506044016020604051808303816000875af1158015620096e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200970791906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af11580156200977c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620097a291906200ec34565b506020546040516370a0823160e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260009216906370a0823190602401602060405180830381865afa1580156200980f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200983591906200ec34565b90506200988281886001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a340000000000000000008152506200c730565b602a54620098cd907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b8152815160009384936001600160a01b039091169263d8dfcea092600480830193928290030181865afa15801562009918573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200993e91906200ecd1565b601f54602a546040516370a0823160e01b81526001600160a01b03918216600482015293955091935062009a0992610100909104909116906370a0823190602401602060405180830381865afa1580156200999d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620099c391906200ec34565b836001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a350000000000000000008152506200c6c1565b602054602a546040516370a0823160e01b81526001600160a01b03918216600482015262009ac99291909116906370a0823190602401602060405180830381865afa15801562009a5d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009a8391906200ec34565b826001600160801b03166040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a360000000000000000008152506200c6c1565b601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152600092610100900416906370a0823190602401602060405180830381865afa15801562009b3a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009b6091906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa15801562009bd1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062009bf791906200ec34565b905062009c8582856001600160801b03168c6001600160801b03168a6001600160801b0316670de0b6b3a764000062009c3191906200ed7d565b62009c3d91906200edb6565b62009c4991906200edb6565b6040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a370000000000000000008152506200c6c1565b6200239281846001600160801b0316878c6001600160801b0316670de0b6b3a764000062009cb491906200ed7d565b62009cc091906200edb6565b62009ccc91906200edb6565b6040518060400160405280601781526020017f7465737446757a7a5f53776170496e59616e64583a3a380000000000000000008152506200c6c1565b604051632631f2b160e11b8152620fffff62ffffff8316111560048201526000805160206202609c83398151915290634c63e5629060240160006040518083038186803b15801562009d5957600080fd5b505afa15801562009d6e573d6000803e3d6000fd5b5050505060008461ffff168461ffff1662009d8a91906200eeaa565b62009d9b906402540be4006200eeaa565b9050600060648462ffffff1660028562ffffff168961ffff1662009dc091906200eeaa565b62009dcc91906200f1f0565b62009dd891906200eeaa565b62009de59060636200ed7d565b62009df191906200eec4565b90506000805160206202609c833981519152634c63e56267016345785d8a000062009e1d84866200ed7d565b6040516001600160e01b031960e085901b1681529110600482015260240160006040518083038186803b15801562009e5457600080fd5b505afa15801562009e69573d6000803e3d6000fd5b5050602754604051600093506001600160a01b03909116915062009e8d906200e50a565b6001600160a01b039091168152602001604051809103906000f08015801562009eba573d6000803e3d6000fd5b5090506000817f0000000000000000000000000000000000000000000000000000000000000000602760009054906101000a90046001600160a01b031660405162009f05906200e518565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f08015801562009f42573d6000803e3d6000fd5b50601f5460205460405192935060009284926001600160a01b0361010090910481169216908c9062009f74906200e526565b6001600160a01b03948516815292841660208401529216604082015261ffff909116606082015260a06080820181905260009082015260c001604051809103906000f08015801562009fca573d6000803e3d6000fd5b50602a80546001600160a01b0319166001600160a01b038381169190911790915560275460405163ca669fa760e01b8152911660048201529091506000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200a03a57600080fd5b505af11580156200a04f573d6000803e3d6000fd5b5050602a546040516347973bff60e01b81526001600482018190526024820181905260448201819052606482018190526084820181905260a4820181905260c4820181905260e48201526001600160a01b0390911692506347973bff915061010401600060405180830381600087803b1580156200a0cc57600080fd5b505af11580156200a0e1573d6000803e3d6000fd5b5050604051630618f58760e51b81526372db9c0b60e11b60048201526000805160206202609c833981519152925063c31eb0e09150602401600060405180830381600087803b1580156200a13457600080fd5b505af11580156200a149573d6000803e3d6000fd5b505060275460405163ca669fa760e01b81526001600160a01b0390911660048201526000805160206202609c833981519152925063ca669fa79150602401600060405180830381600087803b1580156200a1a257600080fd5b505af11580156200a1b7573d6000803e3d6000fd5b5050602a54604051633329c28d60e11b815261ffff8c166004820152600160248201819052604482018190526064820181905262ffffff808d16608484015260a48301919091528a1660c48201526001600160a01b039091169250636653851a915060e401600060405180830381600087803b1580156200a23757600080fd5b505af11580156200a24c573d6000803e3d6000fd5b50505050505050505050505050565b606060158054806020026020016040519081016040528092919081815260200182805480156200172f576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162001710575050505050905090565b6000805160206202609c833981519152634c63e5626001600160801b038316158015906200a2fc5750670de0b6b3a7640000836001600160801b031611155b6040518263ffffffff1660e01b81526004016200a31d911515815260200190565b60006040518083038186803b1580156200a33657600080fd5b505afa1580156200a34b573d6000803e3d6000fd5b5050602a54604051630abcd78360e41b81526001600160801b038516600482015260016024820152600093508392506001600160a01b039091169063abcd783090604401606060405180830381865afa1580156200a3ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a3d391906200ec4e565b50915091506200a424816001600160801b031660006040518060400160405280601381526020017f7465737446757a7a5f53776170496e583a3a31000000000000000000000000008152506200c6c1565b601f546200a46b9061010090046001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160801b0385166200c63b565b60405163ca669fa760e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200a4dc57600080fd5b505af11580156200a4f1573d6000803e3d6000fd5b5050601f54602a5460405163a9059cbb60e01b81526001600160a01b0391821660048201526001600160801b038716602482015261010090920416925063a9059cbb91506044016020604051808303816000875af11580156200a558573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a57e91906200ecb3565b50602a5460405163029e02cd60e51b8152600160048201526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166024830152909116906353c059a0906044016020604051808303816000875af11580156200a5f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a61991906200ec34565b50601f546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200a6f192610100900416906370a0823190602401602060405180830381865afa1580156200a68d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a6b391906200ec34565b60006040518060400160405280601381526020017f7465737446757a7a5f53776170496e583a3a32000000000000000000000000008152506200c6c1565b6020546040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526200a7cb9216906370a0823190602401602060405180830381865afa1580156200a75f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a78591906200ec34565b846001600160801b03166040518060400160405280601381526020017f7465737446757a7a5f53776170496e583a3a33000000000000000000000000008152506200c6c1565b602a546200a816907f00000000000000000000000000000000000000000000000000000000000000009081906001600160a01b031662800000670de0b6b3a7640000600a806200aa8e565b602a54604080516306c6fe7560e51b815281516000936001600160a01b03169263d8dfcea092600480820193918290030181865afa1580156200a85d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a88391906200ecd1565b50601f546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092610100909204909116906370a0823190602401602060405180830381865afa1580156200a8fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a92191906200ec34565b6020546040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152929350600092909116906370a0823190602401602060405180830381865afa1580156200a992573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200a9b891906200ec34565b90506200aa3082846001600160801b0316876001600160801b0316670de0b6b3a76400006200a9e891906200ed7d565b6200a9f491906200edb6565b6040518060400160405280601381526020017f7465737446757a7a5f53776170496e583a3a34000000000000000000000000008152506200c6c1565b620016cd816200aa526001600160801b038916670de0b6b3a76400006200edb6565b6040518060400160405280601381526020017f7465737446757a7a5f53776170496e583a3a35000000000000000000000000008152506200c6c1565b670de0b6b3a76400008311156200aae85760405162461bcd60e51b815260206004820152601860248201527f50657263656e7420746f206275726e20746f6f20686967680000000000000000604482015260640162000738565b60006200aaf6838362003189565b905060008167ffffffffffffffff8111156200ab16576200ab166200eedb565b6040519080825280602002602001820160405280156200ab40578160200160208202803683370190505b50905060008267ffffffffffffffff8111156200ab61576200ab616200eedb565b6040519080825280602002602001820160405280156200ab8b578160200160208202803683370190505b50905060005b838110156200ac995760006200aba98983886200522d565b604051627eeac760e11b81526001600160a01b038e8116600483015262ffffff831660248301529192506000918c169062fdd58e90604401602060405180830381865afa1580156200abff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200ac2591906200ec34565b90508162ffffff168584815181106200ac42576200ac426200eef1565b60209081029190910101526200ac62818a670de0b6b3a76400006200c836565b8484815181106200ac77576200ac776200eef1565b6020026020010181815250505050806200ac91906200ef07565b90506200ab91565b5060405163ca669fa760e01b81526001600160a01b038b1660048201526000805160206202609c8339815191529063ca669fa790602401600060405180830381600087803b1580156200aceb57600080fd5b505af11580156200ad00573d6000803e3d6000fd5b50506040516364c9cfaf60e11b81526001600160a01b038b16925063c9939f5e91506200ad38908d908d90879087906004016200f233565b6000604051808303816000875af11580156200ad58573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200239291908101906200f2ed565b601f80547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1674b31f66aa3c1e785363f0875a1b74e27b85fd66c70017908190556001600160a01b03610100909104163b6000036200aeaa57601f546040516000805160206202609c8339815191529163b4d6c782916101009091046001600160a01b0316906200ae13906200e534565b604051809103906000f0801580156200ae30573d6000803e3d6000fd5b506001600160a01b0316803b806020016040519081016040528181526000908060200190933c6040518363ffffffff1660e01b81526004016200ae759291906200f326565b600060405180830381600087803b1580156200ae9057600080fd5b505af11580156200aea5573d6000803e3d6000fd5b505050505b60066040516200aeba906200e542565b60ff9091168152602001604051809103906000f0801580156200aee1573d6000803e3d6000fd5b50602080546001600160a01b0319166001600160a01b03929092169190911790556040516006906200af13906200e542565b60ff9091168152602001604051809103906000f0801580156200af3a573d6000803e3d6000fd5b50602180546001600160a01b0319166001600160a01b03929092169190911790556040516008906200af6c906200e542565b60ff9091168152602001604051809103906000f0801580156200af93573d6000803e3d6000fd5b50602280546001600160a01b0319166001600160a01b03929092169190911790556040516012906200afc5906200e542565b60ff9091168152602001604051809103906000f0801580156200afec573d6000803e3d6000fd5b50602580546001600160a01b0319166001600160a01b03929092169190911790556040516012906200b01e906200e542565b60ff9091168152602001604051809103906000f0801580156200b045573d6000803e3d6000fd5b50602380546001600160a01b0319166001600160a01b03929092169190911790556040516012906200b077906200e542565b60ff9091168152602001604051809103906000f0801580156200b09e573d6000803e3d6000fd5b50602480546001600160a01b0319166001600160a01b03929092169190911790556040516200b0cd906200e550565b604051809103906000f0801580156200b0ea573d6000803e3d6000fd5b50602680546001600160a01b0319166001600160a01b03928316179055601f54604080516318caf8e360e31b815261010090920490921660048201526024810191909152600760448201527f776e61746976650000000000000000000000000000000000000000000000000060648201526000805160206202609c8339815191529063c657c71890608401600060405180830381600087803b1580156200b19057600080fd5b505af11580156200b1a5573d6000803e3d6000fd5b5050602054604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637573646360e01b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b21d57600080fd5b505af11580156200b232573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152631d5cd91d60e21b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b2aa57600080fd5b505af11580156200b2bf573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152637762746360e01b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b33757600080fd5b505af11580156200b34c573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152630eecae8d60e31b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b3c457600080fd5b505af11580156200b3d9573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048084019190915260248301919091526044820152636c696e6b60e01b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b45157600080fd5b505af11580156200b466573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152600360448201526231373160e91b60648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b4db57600080fd5b505af11580156200b4f0573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f746178546f6b656e00000000000000000000000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200b57c57600080fd5b505af11580156200b591573d6000803e3d6000fd5b5050602d80546001600160a01b03199081167360ae616a2155ee3d9a68541ba4544862310933d417909155602e8054909116739ad6c38be94206ca50bb0d90783181662f0cfa1017905550506040516000906200b5ee906200e55e565b604051809103906000f0801580156200b60b573d6000803e3d6000fd5b509050807f00000000000000000000000000000000000000000000000000000000000000006040516200b63e906200e56c565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156200b681573d6000803e3d6000fd5b50602780546001600160a01b0319166001600160a01b03929092169182179055604051600091906200b6b3906200e50a565b6001600160a01b039091168152602001604051809103906000f0801580156200b6e0573d6000803e3d6000fd5b5090506000817f0000000000000000000000000000000000000000000000000000000000000000602760009054906101000a90046001600160a01b03166040516200b72b906200e518565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200b768573d6000803e3d6000fd5b50602754604051632f880c2560e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830181905260248301526602d79883d200006044830152838116606483015292935091169063be20309490608401600060405180830381600087803b1580156200b7ef57600080fd5b505af11580156200b804573d6000803e3d6000fd5b50506027546040516001600160a01b0390911692506200b82591506200e50a565b6001600160a01b039091168152602001604051809103906000f0801580156200b852573d6000803e3d6000fd5b50602c80546001600160a01b0319166001600160a01b0392831690811790915560275460405163b038478160e01b815260048101929092529091169063b038478190602401600060405180830381600087803b1580156200b8b257600080fd5b505af11580156200b8c7573d6000803e3d6000fd5b505050506200b8d56200c864565b6200b8e1600a6200cc18565b602754602e54601f546040516000936001600160a01b0390811693811692610100900416906200b911906200e57a565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200b94e573d6000803e3d6000fd5b5060408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905191925082917f000000000000000000000000000000000000000000000000000000000000000091906200b9ac906200e56c565b6200b9ba939291906200f34a565b604051809103906000f0801580156200b9d7573d6000803e3d6000fd5b50602880546001600160a01b0319166001600160a01b03928316908117909155602e54602754604051918416931691906200ba12906200e588565b6001600160a01b03938416815291831660208301529091166040820152606001604051809103906000f0801580156200ba4f573d6000803e3d6000fd5b50602b80546001600160a01b0319166001600160a01b03928316179055602854604080516318caf8e360e31b81529190921660048201526024810191909152600660448201527f726f75746572000000000000000000000000000000000000000000000000000060648201526000805160206202609c8339815191529063c657c71890608401600060405180830381600087803b1580156200baf057600080fd5b505af11580156200bb05573d6000803e3d6000fd5b5050602b54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600660448201527f71756f746572000000000000000000000000000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200bb9157600080fd5b505af11580156200bba6573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600760448201527f666163746f72790000000000000000000000000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200bc3257600080fd5b505af11580156200bc47573d6000803e3d6000fd5b5050602c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601260448201527f70616972496d706c656d656e746174696f6e000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200bcd357600080fd5b505af11580156200bce8573d6000803e3d6000fd5b5050602d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600860448201527f726f75746572563100000000000000000000000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200bd7457600080fd5b505af11580156200bd89573d6000803e3d6000fd5b5050602e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f666163746f72795631000000000000000000000000000000000000000000000060648201526000805160206202609c833981519152925063c657c7189150608401600060405180830381600087803b1580156200be1557600080fd5b505af11580156200be2a573d6000803e3d6000fd5b5050601f54602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015261010090920416925063095ea7b391506044016020604051808303816000875af11580156200be8a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200beb091906200ecb3565b50602054602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200bf08573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bf2e91906200ecb3565b50602154602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200bf86573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200bfac91906200ecb3565b50602254602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c004573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c02a91906200ecb3565b50602554602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c082573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c0a891906200ecb3565b50602354602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c100573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c12691906200ecb3565b5060248054602d5460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200c180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c1a691906200ecb3565b50602654602d5460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c1fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c22491906200ecb3565b50601f5460285460405163095ea7b360e01b81526001600160a01b0391821660048201526000196024820152610100909204169063095ea7b3906044016020604051808303816000875af11580156200c281573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c2a791906200ecb3565b5060205460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c2ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c32591906200ecb3565b5060215460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c37d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c3a391906200ecb3565b5060225460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c3fb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c42191906200ecb3565b5060255460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c479573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c49f91906200ecb3565b5060235460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c4f7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c51d91906200ecb3565b506024805460285460405163095ea7b360e01b81526001600160a01b03918216600482015260001993810193909352169063095ea7b3906044016020604051808303816000875af11580156200c577573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c59d91906200ecb3565b5060265460285460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156200c5f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200c61b91906200ecb3565b5050505050565b60006200c6348383628000006200ccb7565b9392505050565b6200c64a83838360006200ccc8565b505050565b604051637b88583160e11b81526000805160206202609c8339815191529063f710b062906200c6899087908790879087906004016200f378565b60006040518083038186803b1580156200c6a257600080fd5b505afa1580156200c6b7573d6000803e3d6000fd5b5050505050505050565b6040516388b44c8560e01b81526000805160206202609c833981519152906388b44c85906200c6f9908690869086906004016200f39f565b60006040518083038186803b1580156200c71257600080fd5b505afa1580156200c727573d6000803e3d6000fd5b50505050505050565b604051630389490b60e61b81526000805160206202609c8339815191529063e25242c0906200c6f9908690869086906004016200f39f565b604051636cd1e26960e11b81526000805160206202609c8339815191529063d9a3c4d2906200c6f9908690869086906004016200f39f565b8062ffffff811681146200c7c757604051639b63641560e01b815260040160405180910390fd5b919050565b8067ffffffffffffffff811681146200c7c75760405163cc21feb960e01b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff821681175b949350505050565b60008060006200c84786866200cec3565b915091506200c85a86868685856200cee2565b9695505050505050565b601f5461010090046001600160a01b0316156200c8e457602754601f54604051635a44092360e01b81526001600160a01b0361010090920482166004820152911690635a44092390602401600060405180830381600087803b1580156200c8ca57600080fd5b505af11580156200c8df573d6000803e3d6000fd5b505050505b6020546001600160a01b0316156200c95a57602754602054604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200c94057600080fd5b505af11580156200c955573d6000803e3d6000fd5b505050505b6021546001600160a01b0316156200c9d057602754602154604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200c9b657600080fd5b505af11580156200c9cb573d6000803e3d6000fd5b505050505b6022546001600160a01b0316156200ca4657602754602254604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200ca2c57600080fd5b505af11580156200ca41573d6000803e3d6000fd5b505050505b6025546001600160a01b0316156200cabc57602754602554604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200caa257600080fd5b505af11580156200cab7573d6000803e3d6000fd5b505050505b6023546001600160a01b0316156200cb3257602754602354604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200cb1857600080fd5b505af11580156200cb2d573d6000803e3d6000fd5b505050505b6024546001600160a01b0316156200cba75760275460248054604051635a44092360e01b81526001600160a01b039182166004820152921691635a4409239101600060405180830381600087803b1580156200cb8d57600080fd5b505af11580156200cba2573d6000803e3d6000fd5b505050505b6026546001600160a01b0316156200074157602754602654604051635a44092360e01b81526001600160a01b039182166004820152911690635a44092390602401600060405180830381600087803b1580156200cc0357600080fd5b505af115801562000f4a573d6000803e3d6000fd5b60275460405163379ee80360e01b815261ffff8316600482015261138860248201819052601e604483015261025860648301526084820152619c4060a48201526103e860c48201526205573060e482015260006101048201526001600160a01b039091169063379ee8039061012401600060405180830381600087803b1580156200cca257600080fd5b505af11580156200c61b573d6000803e3d6000fd5b60006200c82e848484600a6200cf94565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b17905291516000928716916200cd1e916200f3c0565b600060405180830381855afa9150503d80600081146200cd5b576040519150601f19603f3d011682016040523d82523d6000602084013e6200cd60565b606091505b509150506000818060200190518101906200cd7c91906200ec34565b90506200cdb6846200cdaf876200cda86370a0823160e01b6200cda1600d8d6200d025565b906200d04b565b906200d069565b906200d095565b8215620016cd5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b038916916200ce0191906200f3c0565b600060405180830381855afa9150503d80600081146200ce3e576040519150601f19603f3d011682016040523d82523d6000602084013e6200ce43565b606091505b509150506000818060200190518101906200ce5f91906200ec34565b9050828610156200ce8a576200ce7686846200edb6565b6200ce8290826200edb6565b90506200cea5565b6200ce9683876200edb6565b6200cea290826200ed7d565b90505b6200c6b7816200cdaf6318160ddd60e01b6200cda1600d8d6200d025565b6000806000198385098385029250828110838203039150509250929050565b6000816000036200cf08578383816200ceff576200ceff6200ed3e565b0490506200527f565b8382106200cf29576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b60275460405163659ac74b60e01b81526001600160a01b038681166004830152858116602483015262ffffff8516604483015261ffff84166064830152600092169063659ac74b906084016020604051808303816000875af11580156200cfff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200527f91906200edf6565b6004820180546001600160a01b0319166001600160a01b0383161790556000826200c634565b60028201805463ffffffff191660e083901c1790556000826200c634565b6001808301805491820181556000908152602081206001600160a01b038416920191909155826200c634565b6200d0a182826200d0a5565b5050565b6004820154600283015460038401546001600160a01b039092169160e09190911b9060006200d0d4866200d51c565b6001600160a01b0385166000908152602088815260408083206001600160e01b03198816845282528083209051939450926200d1159185918791016200f3de565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200d155576200d1538660006200d634565b505b6001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909183916200d1969186918891016200f3de565b60405160208183030381529060405280519060200120815260200190815260200160002090506000816002015482600101546200d1d491906200ed7d565b11156200d2d0576000816002015482600101546200d1f391906200ed7d565b6200d201906101006200edb6565b6200d20e9060026200f402565b60405163348051d760e11b815260048101829052909150818810906000805160206202609c83398151915290636900a3ae90602401600060405180830381865afa1580156200d261573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200d28b91908101906200f410565b6040516020016200d29d91906200f4af565b604051602081830303815290604052906200d2cd5760405162461bcd60e51b81526004016200073891906200f542565b50505b8054604051630667f9d760e41b81526001600160a01b038716600482015260248101919091526000906000805160206202609c8339815191529063667f9d7090604401602060405180830381865afa1580156200d331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200d35791906200ec34565b6001838101546002850154929350600092908101610100039190911b60001901811b1983169089901b1783546040516370ca10bb60e01b81526001600160a01b038a1660048201526024810191909152604481018290529091506000805160206202609c833981519152906370ca10bb90606401600060405180830381600087803b1580156200d3e657600080fd5b505af11580156200d3fb573d6000803e3d6000fd5b505050506000806200d40d8b6200d64a565b915091508115806200d41f5750898114155b156200d5115784546040516370ca10bb60e01b81526001600160a01b038b1660048201526024810191909152604481018590526000805160206202609c833981519152906370ca10bb90606401600060405180830381600087803b1580156200d48757600080fd5b505af11580156200d49c573d6000803e3d6000fd5b505060405162461bcd60e51b815260206004820152603360248201527f73746453746f726167652066696e642853746453746f72616765293a2046616960448201527f6c656420746f2077726974652076616c75652e0000000000000000000000000060648201526084019150620007389050565b620023928b6200d721565b60608160070180546200d52f906200ee16565b90506000036200d59857620031d8826001018054806020026020016040519081016040528092919081815260200182805480156200d58d57602002820191906000526020600020905b8154815260200190600101908083116200d578575b50505050506200d72f565b8160070180546200d5a9906200ee16565b80601f01602080910402602001604051908101604052809291908181526020018280546200d5d7906200ee16565b80156200d6285780601f106200d5fc576101008083540402835291602001916200d628565b820191906000526020600020905b8154815290600101906020018083116200d60a57829003601f168201915b50505050509050919050565b60006200d64283836200d7e3565b549392505050565b60028101546000908190819060e01b6200d664856200d51c565b6040516020016200d6779291906200f557565b60408051601f1981840301815290829052600486015490925060009182916001600160a01b0316906200d6ac9085906200f3c0565b600060405180830381855afa9150503d80600081146200d6e9576040519150601f19603f3d011682016040523d82523d6000602084013e6200d6ee565b606091505b509150915060006200d71382886003015460206200d70d91906200eeaa565b6200dfa6565b929792965091945050505050565b6200d72c816200e048565b50565b60606000825160206200d74391906200eeaa565b67ffffffffffffffff8111156200d75e576200d75e6200eedb565b6040519080825280601f01601f1916602001820160405280156200d789576020820181803683370190505b50905060005b83518110156200d7dc5760008482815181106200d7b0576200d7b06200eef1565b6020026020010151905080826020026020018401525080806200d7d3906200ef07565b9150506200d78f565b5092915050565b6004820154600283015460038401546000926001600160a01b03169160e01b90836200d80f876200d51c565b6001600160a01b0385166000908152602089815260408083206001600160e01b03198816845282528083209051939450926200d8509185918791016200f3de565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff16156200d9045785156200d894576200d894876200e048565b6001600160a01b0384166000908152602088815260408083206001600160e01b031987168452825280832090519092916200d8d49185918791016200f3de565b604051602081830303815290604052805190602001208152602001908152602001600020945050505050620031d8565b7f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200d96357600080fd5b505af11580156200d978573d6000803e3d6000fd5b5050505060006200d989886200d64a565b6040516365bc948160e01b81526001600160a01b0388166004820152909250600091506000805160206202609c833981519152906365bc9481906024016000604051808303816000875af11580156200d9e6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200da1091908101906200f58a565b50905080516000036200da8e576040805162461bcd60e51b81526020600482015260248101919091527f73746453746f726167652066696e642853746453746f72616765293a204e6f2060448201527f73746f726167652075736520646574656374656420666f72207461726765742e606482015260840162000738565b60005b81518110156200de415760007f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c6001600160a01b031663667f9d70898585815181106200dae5576200dae56200eef1565b60200260200101516040518363ffffffff1660e01b81526004016200db1f9291906001600160a01b03929092168252602082015260400190565b602060405180830381865afa1580156200db3d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200db6391906200ec34565b9050806200dbcd577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888484815181106200dba2576200dba26200eef1565b602090810291909101810151604080516001600160a01b039094168452918301520160405180910390a15b6200dbf58b8484815181106200dbe7576200dbe76200eef1565b60200260200101516200e09e565b6200dc0157506200de2c565b60068b0154600090819060ff16156200dc575760006200dc3e8e8787815181106200dc30576200dc306200eef1565b60200260200101516200e287565b90945092509050806200dc5557505050506200de2c565b505b6001828201610100031b60001901811b8316811c8681146200dc7d57505050506200de2c565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c6040516020016200dcb59291906200f3de565b604051602081830303815290604052805190602001208989815181106200dce0576200dce06200eef1565b602090810291909101810151604080516001600160a01b0390961686526001600160e01b03199094169185019190915291830152606082015260800160405180910390a160405180608001604052808787815181106200dd44576200dd446200eef1565b602002602001015160001c8152602001848152602001838152602001600115158152508e60000160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c6040516020016200ddca9291906200f3de565b60408051808303601f190181529181528151602092830120835282820193909352908201600020835181559083015160018201559082015160028201556060909101516003909101805460ff1916911515919091179055506200de4192505050565b806200de38816200ef07565b9150506200da91565b506001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200de829187918991016200f3de565b60408051601f198184030181529181528151602092830120835290820192909252016000206003015460ff166200df225760405162461bcd60e51b815260206004820152602f60248201527f73746453746f726167652066696e642853746453746f72616765293a20536c6f60448201527f74287329206e6f7420666f756e642e0000000000000000000000000000000000606482015260840162000738565b87156200df34576200df34896200e048565b6001600160a01b038616600090815260208a815260408083206001600160e01b031989168452825280832090519092916200df749187918991016200f3de565b604051602081830303815290604052805190602001208152602001908152602001600020965050505050505092915050565b600080600060208551116200dfbd5784516200dfc0565b60205b905060005b818110156200e03e576200dfdb8160086200eeaa565b866200dfe883886200ed7d565b815181106200dffb576200dffb6200eef1565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016901c9290921791806200e035816200ef07565b9150506200dfc5565b5090949350505050565b6004810180546001600160a01b031916905560028101805463ffffffff191690556200e0796001820160006200e596565b60006003820181905560068201805460ff191690556200d72c9060078301906200e5b6565b600482810154604051630667f9d760e41b81526001600160a01b03909116918101919091526024810182905260009081906000805160206202609c8339815191529063667f9d7090604401602060405180830381865afa1580156200e107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e12d91906200ec34565b90506000806200e13d866200d64a565b9092509050600081156200e1535760006200e157565b6000195b6004888101546040516370ca10bb60e01b81526001600160a01b039091169181019190915260248101889052604481018290529091506000805160206202609c833981519152906370ca10bb90606401600060405180830381600087803b1580156200e1c257600080fd5b505af11580156200e1d7573d6000803e3d6000fd5b5050505060006200e1e8886200d64a565b60048a8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018a9052604481018890529092506000805160206202609c83398151915291506370ca10bb90606401600060405180830381600087803b1580156200e25457600080fd5b505af11580156200e269573d6000803e3d6000fd5b505050508380156200e27b5750808314155b98975050505050505050565b600482810154604051630667f9d760e41b81526001600160a01b0390911691810191909152602481018290526000908190819081906000805160206202609c8339815191529063667f9d7090604401602060405180830381865afa1580156200e2f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200e31a91906200ec34565b90506000806200e32d888860016200e3e3565b915091506000806200e3428a8a60006200e3e3565b60048c8101546040516370ca10bb60e01b81526001600160a01b0390911691810191909152602481018c90526044810188905291935091506000805160206202609c833981519152906370ca10bb90606401600060405180830381600087803b1580156200e3af57600080fd5b505af11580156200e3c4573d6000803e3d6000fd5b505050508380156200e3d35750815b9a92995097509095505050505050565b60008060005b6101008110156200e4eb576000846200e406576001821b6200e418565b6200e4138260ff6200edb6565b6001901b5b6004888101546040516370ca10bb60e01b81526001600160a01b039091169181019190915260248101889052604481018290529091506000805160206202609c833981519152906370ca10bb90606401600060405180830381600087803b1580156200e48357600080fd5b505af11580156200e498573d6000803e3d6000fd5b505050506000806200e4aa896200d64a565b915091508180156200e4bb57508015155b156200e4d25760018495509550505050506200e4f4565b50505080806200e4e2906200ef07565b9150506200e3e9565b50600080915091505b935093915050565b6106a8806200f5f683390190565b61666b806200fc9e83390190565b610917806201630983390190565b6108008062016c2083390190565b610b08806201742083390190565b610bfd8062017f2883390190565b610c188062018b2583390190565b613f50806201973d83390190565b610f1f806201d68d83390190565b614e72806201e5ac83390190565b612c13806202341e83390190565b50805460008255906000526020600020908101906200d72c91906200e5f0565b5080546200e5c4906200ee16565b6000825580601f106200e5d5575050565b601f0160209004906000526020600020908101906200d72c91905b5b808211156200e60757600081556001016200e5f1565b5090565b6000602082840312156200e61e57600080fd5b81356001600160e01b0319811681146200c63457600080fd5b6001600160801b03811681146200d72c57600080fd5b6000602082840312156200e66057600080fd5b81356200c634816200e637565b6020808252825182820181905260009190848201906040850190845b818110156200e6b05783516001600160a01b0316835292840192918401916001016200e689565b50909695505050505050565b600080604083850312156200e6d057600080fd5b82356200e6dd816200e637565b915060208301356200e6ef816200e637565b809150509250929050565b60005b838110156200e7175781810151838201526020016200e6fd565b50506000910152565b600081518084526200e73a8160208601602086016200e6fa565b601f01601f19169290920160200192915050565b602080825282518282018190526000919060409081850190600581811b8701840188860187805b858110156200e80457603f198b8503018752825180516001600160a01b031685528901518985018990528051898601819052908a0190606081881b870181019190870190855b818110156200e7ed57605f198985030183526200e7da8486516200e720565b948e01949350918d01916001016200e7bb565b505050978a0197945050918801916001016200e775565b50919a9950505050505050505050565b803560ff811681146200c7c757600080fd5b600080604083850312156200e83a57600080fd5b6200e845836200e814565b91506200e855602084016200e814565b90509250929050565b600081518084526020808501945080840160005b838110156200e89a5781516001600160e01b031916875295820195908201906001016200e872565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200e92257888303603f19018552815180518785526200e8f3888601826200e720565b91890151858303868b01529190506200e90d81836200e85e565b9689019694505050908601906001016200e8cc565b509098975050505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156200e98957603f198886030184526200e9768583516200e720565b945092850192908501906001016200e957565b5092979650505050505050565b803562ffffff811681146200c7c757600080fd5b6000806000606084860312156200e9c057600080fd5b6200e9cb846200e996565b9250602084013591506200e9e2604085016200e814565b90509250925092565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b838110156200e92257888303603f19018552815180516001600160a01b031684528701518784018790526200ea4a878501826200e85e565b95880195935050908601906001016200ea12565b6001600160a01b03811681146200d72c57600080fd5b600080600080600080600080610100898b0312156200ea9257600080fd5b88356200ea9f816200ea5e565b975060208901356200eab1816200ea5e565b965060408901356200eac3816200ea5e565b95506200ead360608a016200e996565b94506080890135935060a089013592506200eaf160c08a016200e814565b91506200eb0160e08a016200e814565b90509295985092959890939650565b61ffff811681146200d72c57600080fd5b6000602082840312156200eb3457600080fd5b81356200c634816200eb10565b600080600080608085870312156200eb5857600080fd5b84356200eb65816200eb10565b935060208501356200eb77816200eb10565b92506200eb87604086016200e996565b91506200eb97606086016200e996565b905092959194509250565b600080600080600080600060e0888a0312156200ebbe57600080fd5b87356200ebcb816200ea5e565b965060208801356200ebdd816200ea5e565b955060408801356200ebef816200ea5e565b94506200ebff606089016200e996565b9350608088013592506200ec1660a089016200e814565b91506200ec2660c089016200e814565b905092959891949750929550565b6000602082840312156200ec4757600080fd5b5051919050565b6000806000606084860312156200ec6457600080fd5b83516200ec71816200e637565b60208501519093506200ec84816200e637565b60408501519092506200ec97816200e637565b809150509250925092565b805180151581146200c7c757600080fd5b6000602082840312156200ecc657600080fd5b6200c634826200eca2565b600080604083850312156200ece557600080fd5b82516200ecf2816200e637565b60208401519092506200e6ef816200e637565b634e487b7160e01b600052601160045260246000fd5b6001600160801b038281168282160390808211156200d7dc576200d7dc6200ed05565b634e487b7160e01b600052601260045260246000fd5b60006001600160801b03808416806200ed71576200ed716200ed3e565b92169190910492915050565b80820180821115620031d857620031d86200ed05565b6001600160801b038181168382160190808211156200d7dc576200d7dc6200ed05565b81810381811115620031d857620031d86200ed05565b6001600160a01b03841681528260208201526060604082015260006200527f60608301846200e720565b6000602082840312156200ee0957600080fd5b81516200c634816200ea5e565b600181811c908216806200ee2b57607f821691505b6020821081036200ee4c57634e487b7160e01b600052602260045260246000fd5b50919050565b60ff8181168382160190811115620031d857620031d86200ed05565b60ff8281168282160390811115620031d857620031d86200ed05565b6000602082840312156200ee9d57600080fd5b81516200c634816200eb10565b8082028115828204841417620031d857620031d86200ed05565b6000826200eed6576200eed66200ed3e565b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016200ef1c576200ef1c6200ed05565b5060010190565b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b818110156200ef70578551835294830194918301916001016200ef52565b5050809450505080851660408501525050949350505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156200efb5576200efb56200eedb565b604052919050565b600067ffffffffffffffff8211156200efda576200efda6200eedb565b5060051b60200190565b6000806000606084860312156200effa57600080fd5b835192506020808501519250604085015167ffffffffffffffff8111156200f02157600080fd5b8501601f810187136200f03357600080fd5b80516200f04a6200f044826200efbd565b6200ef89565b81815260059190911b820183019083810190898311156200f06a57600080fd5b928401925b828410156200f08a578351825292840192908401906200f06f565b80955050505050509250925092565b600080600080600080600080610100898b0312156200f0b757600080fd5b885197506020890151965060408901519550606089015194506080890151935060a0890151925060c089015191506200eb0160e08a016200eca2565b600181815b808511156200f1345781600019048211156200f118576200f1186200ed05565b808516156200f12657918102915b93841c93908002906200f0f8565b509250929050565b6000826200f14d57506001620031d8565b816200f15c57506000620031d8565b81600181146200f17557600281146200f180576200f1a0565b6001915050620031d8565b60ff8411156200f194576200f1946200ed05565b50506001821b620031d8565b5060208310610133831016604e8410600b84101617156200f1c5575081810a620031d8565b6200f1d183836200f0f3565b80600019048211156200f1e8576200f1e86200ed05565b029392505050565b60006200c63460ff8416836200f13c565b600081518084526020808501945080840160005b838110156200e89a578151875295820195908201906001016200f215565b60006001600160a01b038087168352808616602084015250608060408301526200f26160808301856200f201565b82810360608401526200f27581856200f201565b979650505050505050565b600082601f8301126200f29257600080fd5b815160206200f2a56200f044836200efbd565b82815260059290921b840181019181810190868411156200f2c557600080fd5b8286015b848110156200f2e257805183529183019183016200f2c9565b509695505050505050565b6000602082840312156200f30057600080fd5b815167ffffffffffffffff8111156200f31857600080fd5b6200c82e848285016200f280565b6001600160a01b03831681526040602082015260006200c82e60408301846200e720565b60006001600160a01b038086168352808516602084015250606060408301526200527f60608301846200e720565b8481528360208201528260408201526080606082015260006200c85a60808301846200e720565b8381528260208201526060604082015260006200527f60608301846200e720565b600082516200f3d48184602087016200e6fa565b9190910192915050565b600083516200f3f28184602088016200e6fa565b9190910191825250602001919050565b60006200c63483836200f13c565b6000602082840312156200f42357600080fd5b815167ffffffffffffffff808211156200f43c57600080fd5b818401915084601f8301126200f45157600080fd5b8151818111156200f466576200f4666200eedb565b6200f47b601f8201601f19166020016200ef89565b91508082528560208285010111156200f49357600080fd5b6200f4a68160208401602086016200e6fa565b50949350505050565b7f73746453746f726167652066696e642853746453746f72616765293a2050616381527f6b656420736c6f742e2057652063616e2774206669742076616c75652067726560208201527f61746572207468616e20000000000000000000000000000000000000000000006040820152600082516200f53581604a8501602087016200e6fa565b91909101604a0192915050565b6020815260006200c63460208301846200e720565b6001600160e01b03198316815281516000906200f57c8160048501602087016200e6fa565b919091016004019392505050565b600080604083850312156200f59e57600080fd5b825167ffffffffffffffff808211156200f5b757600080fd5b6200f5c5868387016200f280565b935060208501519150808211156200f5dc57600080fd5b506200f5eb858286016200f280565b915050925092905056fe60a060405234801561001057600080fd5b506040516106a83803806106a883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161061e61008a600039600060b4015261061e6000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631faa6b8714610030575b600080fd5b61004361003e36600461041f565b610055565b60405190815260200160405180910390f35b600080808080610067868801886104f9565b9296509094509250905060018160018111156100855761008561054c565b036101195760405163ea3446bf60e01b8152306004820152602481018a905260606044820152600060648201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063ea3446bf90608401600060405180830381600087803b15801561010057600080fd5b505af1158015610114573d6000803e3d6000fd5b505050505b6ffffffffffffffffffffffffffffffffe196001600160801b03851601610153576101506001600160801b03898116908b16610562565b93505b6ffffffffffffffffffffffffffffffffe196001600160801b038416016101955761017e8860801c90565b6101888a60801c90565b6101929190610562565b92505b6001600160801b038416156101c1576101c16001600160a01b038c16336001600160801b0387166101fc565b6001600160801b038316156101ed576101ed6001600160a01b038b16336001600160801b0386166101fc565b509a9950505050505050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b179052610263908490610268565b505050565b600061027d6001600160a01b038416836102d0565b905080516000141580156102a25750808060200190518101906102a09190610597565b155b1561026357604051635274afe760e01b81526001600160a01b03841660048201526024015b60405180910390fd5b60606102de838360006102e5565b9392505050565b60608147101561030a5760405163cd78605960e01b81523060048201526024016102c7565b600080856001600160a01b0316848660405161032691906105b9565b60006040518083038185875af1925050503d8060008114610363576040519150601f19603f3d011682016040523d82523d6000602084013e610368565b606091505b5091509150610378868383610382565b9695505050505050565b60608261039757610392826103de565b6102de565b81511580156103ae57506001600160a01b0384163b155b156103d757604051639996b31560e01b81526001600160a01b03851660048201526024016102c7565b50806102de565b8051156103ee5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b50565b6001600160a01b038116811461040757600080fd5b600080600080600080600060c0888a03121561043a57600080fd5b87356104458161040a565b965060208801356104558161040a565b955060408801356104658161040a565b9450606088013593506080880135925060a088013567ffffffffffffffff8082111561049057600080fd5b818a0191508a601f8301126104a457600080fd5b8135818111156104b357600080fd5b8b60208285010111156104c557600080fd5b60208301945080935050505092959891949750929550565b80356001600160801b03811681146104f457600080fd5b919050565b6000806000806080858703121561050f57600080fd5b610518856104dd565b9350610526602086016104dd565b92506040850135915060608501356002811061054157600080fd5b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b6001600160801b0381811683821601908082111561059057634e487b7160e01b600052601160045260246000fd5b5092915050565b6000602082840312156105a957600080fd5b815180151581146102de57600080fd5b6000825160005b818110156105da57602081860181015185830152016105c0565b50600092019182525091905056fea2646970667358221220d7d527434590d9bb3ab00f02826b007b85b043b4e0d97edf547c1b576403448a64736f6c6343000814003360a06040523480156200001157600080fd5b506040516200666b3803806200666b833981016040819052620000349162000106565b6001600160a01b0381166080526200004b62000052565b5062000138565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000a35760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001035780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6000602082840312156200011957600080fd5b81516001600160a01b03811681146200013157600080fd5b9392505050565b608051616502620001696000396000818161048d0152818161159b0152818161241601526138f301526165026000f3fe608060405234801561001057600080fd5b506004361061025b5760003560e01c80638940a16a11610145578063d3b9fbe4116100bd578063e584b6541161008c578063e985e9c511610071578063e985e9c51461062a578063ea3446bf1461064d578063f5e293291461066057600080fd5b8063e584b65414610604578063e77366f81461061757600080fd5b8063d3b9fbe4146105e4578063d8dfcea0146105ec578063da10610c146105f4578063dbe65edc146105fc57600080fd5b8063a41a01fb11610114578063bd85b039116100f9578063bd85b0391461059e578063c7bd6586146105be578063c9939f5e146105d157600080fd5b8063a41a01fb1461053a578063abcd78301461056157600080fd5b80638940a16a146104b15780638d7024e5146104ef57806395d89b411461052a578063a1af5b9a1461053257600080fd5b806347973bff116101d857806355182894116101a7578063781a89151161018c578063781a89151461042f5780637ca0de301461043957806388cc58e41461048b57600080fd5b806355182894146103d75780636653851a1461041c57600080fd5b806347973bff1461037e5780634c7cffbd146103915780634e1273f4146103a457806353c059a0146103c457600080fd5b80630abe96881161022f57806317fad7fc1161021457806317fad7fc146103345780631b057f6d14610349578063383d15c51461035c57600080fd5b80630abe9688146102e357806317f11ecc1461031957600080fd5b8062fdd58e1461026057806305e8746d1461028657806306fdde03146102a65780630902f1ac146102bb575b600080fd5b61027361026e3660046157ba565b610673565b6040519081526020015b60405180910390f35b61028e61069c565b6040516001600160a01b03909116815260200161027d565b6102ae6106b9565b60405161027d919061580a565b6102c361074d565b604080516001600160801b0393841681529290911660208301520161027d565b6102c36102f1366004615850565b62ffffff166000908152600660205260409020546001600160801b0381169160809190911c90565b610321610787565b60405161ffff909116815260200161027d565b6103476103423660046158b0565b6107b1565b005b610347610357366004615987565b61080c565b61036f61036a3660046159d3565b61092b565b60405161027d93929190615a76565b61034761038c366004615aa7565b610bcd565b61027361039f366004615850565b610e91565b6103b76103b2366004615b3e565b610eca565b60405161027d9190615baa565b6102736103d2366004615bcd565b610fa0565b6103df6112f4565b6040805160ff909616865261ffff9485166020870152939092169284019290925264ffffffffff918216606084015216608082015260a00161027d565b61034761042a366004615c04565b61139e565b6201000954610273565b6104416113d7565b6040805161ffff9889168152968816602088015294871694860194909452918516606085015262ffffff9081166080850152931660a08301529190911660c082015260e00161027d565b7f000000000000000000000000000000000000000000000000000000000000000061028e565b6104c46104bf366004615c8a565b61143f565b6040805167ffffffffffffffff9485168152928416602084015292169181019190915260600161027d565b6104f761153e565b6040805162ffffff95861681529385166020850152919093169082015264ffffffffff909116606082015260800161027d565b6102ae61157e565b61027361158f565b61054d610548366004615cb1565b611755565b60405162ffffff909116815260200161027d565b61057461056f366004615cdb565b611768565b604080516001600160801b039485168152928416602084015292169181019190915260600161027d565b6102736105ac366004615d13565b60009081526001602052604090205490565b6103476105cc366004615d2c565b611916565b6103b76105df3660046158b0565b6119ac565b610347611ce4565b6102c3611d78565b61028e611d93565b61054d611dab565b610347610612366004615d47565b611db8565b610574610625366004615cdb565b611dc7565b61063d610638366004615d65565b611f16565b604051901515815260200161027d565b61034761065b366004615d83565b611f22565b61054d61066e366004615d13565b612220565b6001600160a01b0382166000908152602081815260408083208484529091529020545b92915050565b60006106b460008051602061648d8339815191525490565b905090565b60606201000a80546106ca90615dd3565b80601f01602080910402602001604051908101604052809291908181526020018280546106f690615dd3565b80156107435780601f1061071857610100808354040283529160200191610743565b820191906000526020600020905b81548152906001019060200180831161072657829003601f168201915b5050505050905090565b60008061077e61076a60055460045461225490919063ffffffff16565b6001600160801b0381169160809190911c90565b90939092509050565b60006106b47fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b6107b961228e565b62010009546107ce81338989898989896122c6565b6107dc878787878787612366565b6107f360016000805160206164ad83398151915255565b61080381338989898989896123c4565b50505050505050565b61081461228e565b61081c61240b565b62010009839055604080518481529051849133917f4d24d81a1a6e09c37497747b4c9d67d858ce80438b54df0fa361a24dc742d9349181900360200190a26001600160a01b038116158015906108e55750306001600160a01b0316816001600160a01b0316635f9c01b16040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d99190615e07565b6001600160a01b031614155b1561090357604051631b5de6eb60e01b815260040160405180910390fd5b61090e848484612454565b5061092660016000805160206164ad83398151915255565b505050565b60008060608661093a8161247b565b61094261228e565b60008690036109645760405163296db0d960e01b815260040160405180910390fd5b62010009546040805160608101909152600090808967ffffffffffffffff81111561099157610991615e24565b6040519080825280602002602001820160405280156109ba578160200160208202803683370190505b5081526020018967ffffffffffffffff8111156109d9576109d9615e24565b604051908082528060200260200182016040528015610a02578160200160208202803683370190505b5081526020018967ffffffffffffffff811115610a2157610a21615e24565b604051908082528060200260200182016040528015610a4a578160200160208202803683370190505b509052600454909150610a84610a6c60008051602061648d8339815191525490565b60008051602061646d833981519152548391906124b7565b9650610a9483338d8d8d8c6124f7565b610aa18a8a898e86612541565b9550610ab7610ab08888612254565b829061267f565b600455604080830151835191519096506001600160a01b038d169160009133917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb91610b0591908b90615e3a565b60405180910390a4815160208301516040516001600160a01b038e169233927f87f1f9dcf5e8089a3e00811b6a008d8f30293a3da878cb1fe8c90ca376402f8a92610b51929190615e3a565b60405180910390a38515610b9157610b91610b7860008051602061648d8339815191525490565b60008051602061646d833981519152548891908b6126b9565b610ba860016000805160206164ad83398151915255565b610bbf83338d8d8d610bba8d8d612254565b612717565b505050509450945094915050565b610bd561240b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff16600081158015610c205750825b905060008267ffffffffffffffff166001148015610c3d5750303b155b905081158015610c4b575080155b15610c695760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610c9d57845468ff00000000000000001916680100000000000000001785555b610ca5612759565b610cd1610cc5610cc08860035461276990919063ffffffff16565b6127b8565b8e8e8e8e8e8e8e61280c565b6000610ce960008051602061648d8339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d4e9190810190615e5f565b90506000610d6860008051602061646d8339815191525490565b6001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa158015610da5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610dcd9190810190615e5f565b90508181604051602001610de2929190615f01565b6040516020818303038152906040526201000a9081610e019190615fae565b508181604051602001610e1592919061606e565b6040516020818303038152906040526201000b9081610e349190615fae565b5050508315610e8257845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050505050565b6000610696610ebe7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b62ffffff84169061299c565b60608382610ed882826129d3565b8567ffffffffffffffff811115610ef157610ef1615e24565b604051908082528060200260200182016040528015610f1a578160200160208202803683370190505b50925060005b86811015610f9557610f70888883818110610f3d57610f3d6160ba565b9050602002016020810190610f5291906160d0565b878784818110610f6457610f646160ba565b90506020020135610673565b848281518110610f8257610f826160ba565b6020908102919091010152600101610f20565b505050949350505050565b6000610faa61228e565b6201000954600454600554600086610fe157610fdc610fd560008051602061646d8339815191525490565b84906129f3565b611001565b611001610ffa60008051602061648d8339815191525490565b8490612a28565b9050600081900361102557604051637df801c760e01b815260040160405180910390fd5b866110338533898486612a57565b61103d848361267f565b600354909450600061106d7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b9050600061107a83612abb565b90506110868342612ac7565b92505b62ffffff81166000908152600660205260409020546110a9818615612b3d565b6111cd576110b78483612b6c565b9350600080806110cb8488888b898e612bf4565b9194509250905082156111c9576110e28984612254565b98506110ee8d8361267f565b9c5060006111096110fe89612e1a565b839061ffff16612e2a565b9050801561112a5761111b8b8261267f565b9a506111278482612254565b93505b61113e83611138878761267f565b90612254565b62ffffff87166000908152600660205260409020556001600160a01b038f16337fad7d6f97abf51ce18e17a38f4d70e975be9c0708474987bb3e26ad21bd93ca7088878761118b8e612ea0565b6040805162ffffff9586168152602081019490945283019190915290911660608201526080810186905260a0810185905260c00160405180910390a3505b5050505b60008690036111dc5750611226565b60006111e88684612eb1565b905062ffffff81161580611200575062ffffff818116145b1561121e57604051631a6d7fb160e31b815260040160405180910390fd5b915050611089565b60008990036112485760405163439df85d60e11b815260040160405180910390fd5b611252878a612254565b6004556005869055611266600a8483612ed3565b92506112728382612769565b60035583156112a15761129c61129460008051602061646d8339815191525490565b8a908c612fee565b6112c2565b6112c26112ba60008051602061648d8339815191525490565b8a908c61302e565b6112d960016000805160206164ad83398151915255565b6112e688338c878d61303f565b505050505050505092915050565b6003546078906000908190819081908161130d8261309c565b905061ffff811615611395576000611326600a836130ac565b965090506113338161310a565b965061133e81613116565b94508464ffffffffff1660000361135457600095505b61ffff861615611393576113858661ffff168361ffff1681611378576113786160ed565b600a916001910601613137565b905061139081613116565b93505b505b50509091929394565b6113a661228e565b6113ae61240b565b6113c06003548888888888888861280c565b61080360016000805160206164ad83398151915255565b60008060008060008060008060035490506113f18161310a565b97506113fc81613167565b965061140781613177565b955061141281613187565b945061141d81613197565b935061142881612e1a565b9250611433816131a8565b91505090919293949596565b600080600080600354905060006114558261309c565b905061ffff8116158061146e5750428664ffffffffff16115b156114855760008060009450945094505050611537565b6000611493600a83896131b9565b91985096509450905064ffffffffff8088169082161015611533576114c96114ba84612abb565b849064ffffffffff8a166132dc565b925060006114d78289616119565b90508064ffffffffff166114ea85612abb565b62ffffff166114f99190616137565b6115039088616163565b96508064ffffffffff1661151685612ea0565b62ffffff166115259190616137565b61152f9087616163565b9550505b5050505b9193909250565b6000806000806000600354905061155481612ea0565b945061155f816132f4565b935061156a81613305565b925061157581613316565b91505090919293565b60606201000b80546106ca90615dd3565b600061159961228e565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634ccb20c06040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061161b9190615e07565b6001600160a01b0316336001600160a01b03161461164c57604051630f8937c560e21b815260040160405180910390fd5b6005546001600160801b038116608082901c60006116a78261166f576000611672565b60015b60ff166000856001600160801b03161161168d576000611690565b60015b60ff169060801b6001600160801b03919091161790565b90506116b38482612254565b945084156117375760058190556004546116cd9086612254565b60045560405185815233907f3f41a5ddc53701cc7db577ade4f1fca9838a8ec0b5ea50b9f0f5d17bc4554e329060200160405180910390a261173761171e60008051602061648d8339815191525490565b60008051602061646d83398151915254879190336126b9565b5050505061175260016000805160206164ad83398151915255565b90565b60006117618383612eb1565b9392505050565b600354600090839082908161179b7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b905060006117a883612abb565b90506117b48342612ac7565b92505b62ffffff81166000908152600660205260408120546117d7908915613329565b90506001600160801b038116156118bd5760006117f962ffffff84168561299c565b90506000876001600160801b0316836001600160801b03161161181c578261181e565b875b905061182a8685612b6c565b955060008a61184d576118486001600160801b038316846080613349565b611862565b6118626001600160801b03831660808561337f565b9050600061187088886133b5565b905060006118876001600160801b038416836133d4565b90506118938184616184565b61189d908d616184565b9b506118a9848c6161a4565b9a506118b5818b616184565b995050505050505b856001600160801b03166000036118d4575061190c565b60006118e08984612eb1565b905062ffffff811615806118f8575062ffffff818116145b1561190457505061190c565b9150506117b7565b5050509250925092565b61191e61228e565b600354600061192c8261309c565b90508061ffff1660000361194b57506001611947828261341d565b6003555b611957600a828561346c565b60405161ffff8416815233907fc975541e72d695746a43ba65745d79963a23082637c8f4609354d9bcf70194d69060200160405180910390a250506119a960016000805160206164ad83398151915255565b50565b606086336119ba8282613555565b6119ef5760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044015b60405180910390fd5b6119f761228e565b851580611a045750858414155b15611a2257604051633ab7870760e01b815260040160405180910390fd5b6201000954611a3781338c8c8c8c8c8c6135a1565b898767ffffffffffffffff811115611a5157611a51615e24565b604051908082528060200260200182016040528015611a7a578160200160208202803683370190505b5094506000805b89811015611bce576000611aac8c8c84818110611aa057611aa06160ba565b905060200201356135e7565b905060008a8a84818110611ac257611ac26160ba565b90506020020135905080600003611af357604051636996a92560e01b815262ffffff831660048201526024016119e6565b62ffffff82166000818152600660209081526040808320546001909252909120549091611b2290889085613612565b6000611b2f838584613693565b90506000819003611b5a5760405163fd44792960e01b815262ffffff861660048201526024016119e6565b611b648382612254565b9250838203611b7a57611b7860078661370b565b505b62ffffff851660009081526006602052604090208390558b5181908d9088908110611ba757611ba76160ba565b6020908102919091010152611bbc878261267f565b96508560010195505050505050611a81565b50600454611bdc9082612254565b6004556040516000906001600160a01b0384169033907f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb90611c25908f908f908f908f9061620f565b60405180910390a48a6001600160a01b0316336001600160a01b03167fa32e146844d6144a22e94c586715a1317d58a8aa3581ec33d040113ddcb243508c8c8a604051611c7493929190616236565b60405180910390a3611cae611c9560008051602061648d8339815191525490565b60008051602061646d833981519152548391908e6126b9565b611cc560016000805160206164ad83398151915255565b611cd58333848e8e8e8e8e6137ad565b50505050509695505050505050565b611cec61228e565b611cf461240b565b600354611d08611d03826127b8565b6137f3565b600355337f282afaeeae84c1d85ad1424a3aa2ddbedaeefca3b1e53d889d15265fe44db7fc611d3683613305565b611d3f846132f4565b6040805162ffffff93841681529290911660208301520160405180910390a250611d7660016000805160206164ad83398151915255565b565b60055460009081906001600160801b0381169060801c61077e565b60006106b460008051602061646d8339815191525490565b60006106b4600354612abb565b611dc3338383613828565b5050565b6000808080611ddf6001600160801b038716866138dd565b6003549091506000611e0f7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b90506000611e1c83612abb565b9050611e288342612ac7565b92505b62ffffff8116600090815260066020526040902054611e4b818a15612b3d565b611eb857611e598483612b6c565b935060008080611e6d8488888f898d612bf4565b919450925090508215611eb457611e848884612254565b9750611e91828d15613329565b611e9b908b616184565b9950611ea7818d613329565b611eb1908a616184565b98505b5050505b6000859003611ec75750611eff565b6000611ed38a84612eb1565b905062ffffff81161580611eeb575062ffffff818116145b15611ef7575050611eff565b915050611e2b565b611f098489613329565b9650505050509250925092565b60006117618383613555565b611f2a61228e565b6000839003611f4c5760405163727ab02160e11b815260040160405180910390fd5b62010009546004546000611f5f866138ee565b9050611f6d833389896139f6565b611f9f611f8660008051602061648d8339815191525490565b60008051602061646d833981519152548891908a6126b9565b6000806001600160a01b038916631faa6b8760e01b33611fcb60008051602061648d8339815191525490565b60008051602061646d833981519152548c888d8d604051602401611ff59796959493929190616285565b60408051601f198184030181529181526020820180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161204b91906162c6565b6000604051808303816000865af19150503d8060008114612088576040519150601f19603f3d011682016040523d82523d6000602084013e61208d565b606091505b50915091508115806120a157508051602014155b806120df57507fab5c473bce5960a8292e9c8db82f9272504caab4e9ef09553fc112f82b62a3c2818060200190518101906120dc91906162e2565b14155b156120fd57604051634a57011360e01b815260040160405180910390fd5b600061213161211860008051602061648d8339815191525490565b60008051602061646d83398151915254600091906124b7565b9050612147612140868661267f565b8290613a4b565b1561216557604051630e3c717160e11b815260040160405180910390fd5b60006121718287612254565b6004839055600554909150612186908261267f565b6005556003546001600160a01b038c169033907fd126bd9d94daca8e55ffd8283fac05394aec8326c6b1639e1e8a445fbe8bbc7d906121c490612abb565b6040805162ffffff9092168252602082018f905281018590526060810185905260800160405180910390a361220660016000805160206164ad83398151915255565b61221387338d8885613a8f565b5050505050505050505050565b600061069661224d7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b8390613aeb565b8082038281118061227057506001600160801b03808416908216115b156106965760405163e599af5560e01b815260040160405180910390fd5b6000805160206164ad8339815191528054600119016122c057604051633ee5aeb560e01b815260040160405180910390fd5b60029055565b750100000000000000000000000000000000000000000088161561235c5761235c886379c8ccf760e01b8989898989898960405160240161230d97969594939291906162fb565b60408051601f198184030181529190526020810180516001600160e01b03167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613b30565b5050505050505050565b85336123728282613555565b6123a25760405163548f773d60e01b81526001600160a01b038084166004830152821660248201526044016119e6565b61235c888888888888613b94565b60016000805160206164ad83398151915255565b750200000000000000000000000000000000000000000088161561235c5761235c886367ddb27860e01b8989898989898960405160240161230d97969594939291906162fb565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611d7657604051632486085360e01b815260040160405180910390fd5b82156109265761092683634e430b5a60e01b85858560405160240161230d93929190616351565b6001600160a01b038116158061249957506001600160a01b03811630145b156119a9576040516345c210e760e11b815260040160405180910390fd5b60006124ef846111386124c985613cf7565b6124d287613cf7565b6001600160801b03169060801b6001600160801b03919091161790565b949350505050565b741000000000000000000000000000000000000000008616156125395761253986630d4abdb360e01b878787878760405160240161230d95949392919061636b565b505050505050565b60008061256c7fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b600354909150600061257d82612abb565b905086935060005b88811015612672576000806125bb8a8d8d868181106125a6576125a66160ba565b90506020020135613d6690919063ffffffff16565b9150915060008060006125d1898886888c613daf565b919450925090506125e28a83612254565b99508362ffffff168b600001518781518110612600576126006160ba565b602002602001018181525050808b602001518781518110612623576126236160ba565b602002602001018181525050828b604001518781518110612646576126466160ba565b6020026020010181815250506126628c8562ffffff1685613fbd565b8560010195505050505050612585565b5050505095945050505050565b8181018281108061269b57506001600160801b03808416908216105b15610696576040516316692de960e01b815260040160405180910390fd5b6001600160801b038416608085901c81156126eb576126eb6001600160a01b038616846001600160801b03851661400a565b6001600160801b03811615612539576125396001600160a01b038516846001600160801b03841661400a565b742000000000000000000000000000000000000000008616156125395761253986637a51a4c660e01b878787878760405160240161230d95949392919061636b565b61276161405b565b611d766140a9565b60007cffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83167fffffff000000000000000000000000000000000000000000000000000000000060e884901b1617611761565b6000806127c483612abb565b90507fffffffffffffffffffff000000ffffffffffffffffffffffffffffffffffffff831675ffffff00000000000000000000000000000000000000609883901b1617611761565b61ffff8716158015612820575061ffff8616155b801561282e575061ffff8516155b801561283c575061ffff8416155b801561284b575062ffffff8316155b8015612859575061ffff8216155b8015612868575062ffffff8116155b15612886576040516331375e0360e11b815260040160405180910390fd5b61289688888888888888886140b1565b975060006128c27fff057b3b4d4500dda208cde5d654db7aa2ec63ac10ab9f9956a1f569738427825490565b905060006128d08a846141ca565b905060006128de8284614228565b6128e88385614268565b6128f291906163aa565b905067016345785d8a000081111561291d576040516372db9c0b60e11b815260040160405180910390fd5b50505060038890556040805161ffff8981168252888116602083015287811682840152868116606083015262ffffff868116608084015290851660a0830152831660c0820152905133917fd09e5ddc721ff14c5c1e66a305cbba1fd70b82c5232bc391aad6f55e62e4b046919081900360e00190a25050505050505050565b600061271061ffff60801b608084901b1604600160801b0162ffffff8416627fffff19016129ca828261428c565b95945050505050565b808214611dc3576040516340311ffd60e11b815260040160405180910390fd5b600080612a008460801c90565b90506124ef81612a0f85613cf7565b612a1991906161a4565b6001600160801b031660801b90565b60006001600160801b0383166124ef81612a4185613cf7565b612a4b91906161a4565b6001600160801b031690565b74010000000000000000000000000000000000000000851615612ab4576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612ab490869063feee373560e01b9060a40161230d565b5050505050565b600060e882901c610696565b600080612ad384613316565b612ae49064ffffffffff16846163bd565b9050612aef84613167565b61ffff168110612b3357612b02846127b8565b9350612b0d84613177565b61ffff168110612b2757612b228460006144ec565b612b30565b612b30846137f3565b93505b6124ef848461455a565b600081612b5d57612b4e8360801c90565b6001600160801b031615611761565b50506001600160801b03161590565b600080612b7884613305565b62ffffff169050600080828562ffffff1611612b9b578462ffffff168303612ba4565b828562ffffff16035b91506127108202612bb4876132f4565b62ffffff160190506000612bc7876131a8565b62ffffff169050808211612bdb5781612bdd565b805b9150612be987836141ca565b979650505050505050565b6000808080612c0862ffffff87168961299c565b90506000612c178b8915613329565b9050600088612c4257612c3d612c386001600160801b038416856080613349565b6145b3565b612c5a565b612c5a612c386001600160801b03841660808661337f565b90506000612c688c8c6133b5565b90506000612c7f6001600160801b038416836133d4565b9050612c8b8184616184565b92506000612c998a8d613329565b9050600080856001600160801b0316836001600160801b031610612cc4575084915082905085612d3a565b612cd76001600160801b038416866145dd565b91506000612ce583856161a4565b6001600160801b031690508e612d0957612d04612c388260808c614614565b612d18565b612d18612c38828b608061463e565b9150876001600160801b0316826001600160801b03161115612d38578791505b505b8d612d7457612d52836001600160801b031660801b90565b6001600160801b038216612d6f846001600160801b031660801b90565b612d9c565b6001600160801b038316612d91826001600160801b031660801b90565b6001600160801b0384165b809b50819c50829d50505050505050505050507d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b611612dee612de885611138888f61267f90919063ffffffff16565b836146ac565b1115612e0d5760405163a2d7652760e01b815260040160405180910390fd5b5096509650969350505050565b600061069682604e1c613fff1690565b6000816001600160801b0316600003612e4557506000610696565b6127106001600160801b038316811015612e7257604051631514a94960e21b815260040160405180910390fd5b6001600160801b03848116840282900490608086811c86028490049183169082901b175b9695505050505050565b60006106968260701c620fffff1690565b600082612ec857612ec36007836146c8565b611761565b611761600783614814565b600080612edf8461309c565b90508061ffff16600003612ef65783915050611761565b6000612f028683613137565b90506000612f0f82614944565b90506000612f1c83614950565b612f299060ff16836163d0565b90508064ffffffffff16612f3c4261495f565b64ffffffffff161115612fe2576000806000612f818464ffffffffff164203612f648c612abb565b612f6d8d612ea0565b612f778e8e614987565b8a939291906149b7565b9250925092506000612f928761310a565b905064ffffffffff861642036078811115612fc2575096879006600101964295506000612fbf8c8a61341d565b9b505b612fd082868686858c614a1c565b97505050505050612fe2888585614ac0565b50949695505050505050565b6000612ffa8460801c90565b90506001600160801b03811615613028576130286001600160a01b038416836001600160801b03841661400a565b50505050565b60006001600160801b038416612ffa565b74020000000000000000000000000000000000000000851615612ab4576040516001600160a01b03808616602483015284166044820152821515606482015260848101829052612ab49086906353e8079b60e01b9060a40161230d565b60006106968260d81c61ffff1690565b6000806130b98484613137565b91506130c48261310a565b90508061ffff168361ffff1614613103576130e76130e28583613137565b61310a565b90508061ffff168361ffff16116130fe5780613100565b825b90505b9250929050565b600061ffff8216610696565b600061312182614950565b60ff1661312d83614944565b61069691906163d0565b60008161314381614aed565b8361ffff6000198501811690811061315d5761315d6160ba565b0154949350505050565b60006106968260101c610fff1690565b600061069682601c1c610fff1690565b60006106968260281c613fff1690565b60006106968260361c62ffffff1690565b600061069682605c1c620fffff1690565b6000806000806000806131cc89896130ac565b909250905064ffffffffff87166132038a6131e7848c6163ee565b61ffff1661ffff81106131fc576131fc6160ba565b0154613116565b64ffffffffff16111561322957604051631c4e7f9560e21b815260040160405180910390fd5b61323282613116565b95508664ffffffffff168664ffffffffff1611613274578561325383614b12565b61325c84614b28565b61326585614b3e565b955095509550955050506132d3565b8695506000806132868b8b8b86614b54565b9150915060008961329683613116565b6132a09190616119565b905060006132ad84613116565b6132b7908c616119565b90506132c584848484614ca6565b919a50985096505050505050505b93509350935093565b60006132e88483612ac7565b93506124ef8484612b6c565b60006106968260841c620fffff1690565b60006106968260981c62ffffff1690565b60006106968260b01c64ffffffffff1690565b60008161333a57612ec38360801c90565b6001600160801b038316611761565b600061335684848461463e565b9050600160ff83161b8061336c5761336c6160ed565b83850915611761576124ef6001826163aa565b600061338c848484614614565b9050818061339c5761339c6160ed565b600160ff85161b850915611761576124ef6001826163aa565b60006117616133c48484614228565b6133ce8585614268565b016145b3565b6000816133e081614e0a565b6001600160801b03808416670de0b6b3a76400008190039182916000199188160282010181613411576134116160ed565b049250505b5092915050565b60007fffffff0000ffffffffffffffffffffffffffffffffffffffffffffffffffffff83167cffff00000000000000000000000000000000000000000000000000000060d884901b1617611761565b60006134788484613137565b905060006134858261310a565b90508261ffff168161ffff16106134af57604051632c57574160e21b815260040160405180910390fd5b60008461ffff168261ffff16146134e05761ffff8216156134d9576134d48683613137565b6134e2565b60006134e2565b825b905060006134ef8261310a565b61ffff169050808661ffff1611613506578061350c565b8561ffff165b905061ffff83165b8561ffff1681101561353e5781888261ffff8110613534576135346160ba565b0155600101613514565b50610803878761ffff868116881890891617614ac0565b6000816001600160a01b0316836001600160a01b031614806117615750506001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b7440000000000000000000000000000000000000000088161561235c5761235c8863ea9db9d360e01b8989898989898960405160240161230d97969594939291906162fb565b8062ffffff8116811461360d57604051639b63641560e01b815260040160405180910390fd5b919050565b6001600160a01b03831660009081526020818152604080832085845291829052909120548281101561366f57604051625b387760e31b81526001600160a01b038616600482015260248101859052604481018490526064016119e6565b60009384526001602090815260408086208054869003905592905292209103905550565b60006001600160801b038416608085901c828083156136c6576136c3612c38886001600160801b03871689614e3c565b91505b6001600160801b038316156136ef576136ec612c38886001600160801b03861689614e3c565b90505b608081901b6001600160801b0383161798975050505050505050565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b1981168082146137a157600083815260028701602052604081208290558190036137955750600882901c6000818152600187810160205260408220805460ff87169290921b19909116908190559190829003613793578654600160ff83161b191687555b505b60019350505050610696565b50600095945050505050565b7480000000000000000000000000000000000000000088161561235c5761235c8863fdc2725760e01b8989898989898960405160240161230d97969594939291906162fb565b6000806137ff83612ea0565b62ffffff169050600061381184613187565b61ffff169050612710828202046129ca85826144ec565b826138328161247b565b826001600160a01b0316846001600160a01b03160361386f5760405163782ee70760e01b81526001600160a01b03851660048201526024016119e6565b6001600160a01b03848116600081815260026020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b60008161333a57612ec38360801b90565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fd90c2be6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561394f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061397391906162e2565b90506001600160801b0383811690608085901c90670de0b6b3a763ffff906139ac90670de0b6b3a7640000908616850283015b046145b3565b92506139de670de0b6b3a764000082866001600160801b0316856001600160801b03160201816139a6576139a66160ed565b915050608081901b6001600160801b038316176129ca565b74040000000000000000000000000000000000000000841615613028576040516001600160a01b038085166024830152831660448201526064810182905261302890859063505d903360e01b9060840161230d565b60006001600160801b0383811690608085811c9185169085901c81841080612be95750806001600160801b0316836001600160801b03161094505050505092915050565b74080000000000000000000000000000000000000000851615612ab4576040516001600160a01b038086166024830152841660448201526064810183905260848101829052612ab49086906360bed5f360e01b9060a40161230d565b600061271061ffff60801b608084901b1604600160801b0181613b0d82614e5c565b613b1686614e5c565b613b20919061640f565b90506129ca8162800000016135e7565b600080839050602083015160e01c602060008551602087016000865af192503d151583151615613b64573d6000803e3d6000fd5b8060005160e01c14601f3d111683169250508161302857604051636c93cb9b60e01b815260040160405180910390fd5b8281613ba082826129d3565b86613baa8161247b565b6001600160a01b03808a16600090815260208190526040808220928b1682528120905b88811015613c8e5760008a8a83818110613be957613be96160ba565b9050602002013590506000898984818110613c0657613c066160ba565b600085815260208981526040909120549102929092013592505081811015613c63578e83836040516358b4690f60e01b81526004016119e6939291906001600160a01b039390931683526020830191909152604082015260600190565b6000928352602086815260408085209284900390925585905290912080549091019055600101613bcd565b50896001600160a01b03168b6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8c8c8c8c604051613ce2949392919061620f565b60405180910390a45050505050505050505050565b6040516370a0823160e01b8152306004820152600090610696906001600160a01b038416906370a0823190602401602060405180830381865afa158015613d42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c3891906162e2565b6000806000806000613d7787614f69565b670de0b6b3a764000060808a811c90930281900490921b6001600160801b03998a169093029190910490971617979596505050505050565b62ffffff83166000818152600660205260408120549091829182918290613dd6908b61299c565b90506000613df58962ffffff1660009081526001602052604090205490565b9050613e038389848461500c565b909650945084935062ffffff808b16908a1603613f3b57613e25878a426132dc565b96506000613e3784898e89868c615192565b90508015613f35576000613e5584613e4f8985612254565b906146ac565b90506000613e70613e658b612e1a565b849061ffff16612e2a565b90508015613e9657613e828782612254565b600554909750613e92908261267f565b6005555b6000613eb086613e4f613ea98786612254565b8a9061267f565b9050613ebd838683614e3c565b9950613ecb600a8c8f612ed3565b9a508a600381905550336001600160a01b03167f3f0b46725027bb418b2005f4683538eccdbcdf1de2b8649a29dbd9c507d16ff48e8685604051613f299392919062ffffff9390931683526020830191909152604082015260600190565b60405180910390a25050505b50613f46565b613f46858b8b615287565b851580613f51575083155b15613f7657604051634c98d35760e11b815262ffffff8a1660048201526024016119e6565b80600003613f8b57613f8960078a6152ed565b505b613f95838561267f565b62ffffff90991660009081526006602052604090209890985550929891975095509350505050565b60008281526001602052604081208054839290613fdb9084906163aa565b90915550506001600160a01b039092166000908152602081815260408083209383529290522080549091019055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052613028848261537a565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16611d7657604051631afcd79f60e31b815260040160405180910390fd5b6123b061405b565b60008561ffff168761ffff1611806140ce5750610fff8661ffff16115b806140de57506127108561ffff16115b806140ee57506109c48361ffff16115b806141005750620fffff8262ffffff16115b1561411e57604051631c07203f60e01b815260040160405180910390fd5b605c82901b6dfffff00000000000000000000000166dffffffffffffffffffffffffffff1991821661ffff8a1690811760108a901b630fff000016908117601c8a901b64fff00000001690811760288a901b663fff00000000001690811760368a901b693fffffc000000000000016908117604e8a901b6b0fffc000000000000000000016908117871797949095179092171717909117909117908a16175b9998505050505050505050565b6000620fffff8262ffffff1611156141f557604051631c07203f60e01b815260040160405180910390fd5b700fffff0000000000000000000000000000198316700fffff0000000000000000000000000000607084901b1617611761565b60008061423484613197565b62ffffff16905080156134165760008361ffff1661425186612ea0565b62ffffff1602905060646063828002840201613411565b60008161ffff166142788461310a565b61ffff16026402540be40002905092915050565b6000806000836000036142a85750600160801b91506106969050565b508260008112156142ba579015906000035b621000008110156144aa57600160801b9250846001600160801b038111156142e457911591600019045b60018216156142f55792830260801c925b800260801c600282161561430b5792830260801c925b800260801c60048216156143215792830260801c925b800260801c60088216156143375792830260801c925b800260801c601082161561434d5792830260801c925b800260801c60208216156143635792830260801c925b800260801c60408216156143795792830260801c925b8002608090811c908216156143905792830260801c925b800260801c6101008216156143a75792830260801c925b800260801c6102008216156143be5792830260801c925b800260801c6104008216156143d55792830260801c925b800260801c6108008216156143ec5792830260801c925b800260801c6110008216156144035792830260801c925b800260801c61200082161561441a5792830260801c925b800260801c6140008216156144315792830260801c925b800260801c6180008216156144485792830260801c925b800260801c620100008216156144605792830260801c925b800260801c620200008216156144785792830260801c925b800260801c620400008216156144905792830260801c925b800260801c620800008216156144a85792830260801c925b505b826000036144d557604051631dba598d60e11b815260048101869052602481018590526044016119e6565b816144e057826129ca565b6129ca8360001961643d565b6000620fffff8262ffffff16111561451757604051631c07203f60e01b815260040160405180910390fd5b7fffffffffffffffffffffffffff00000fffffffffffffffffffffffffffffffff831672fffff000000000000000000000000000000000608484901b1617611761565b6000806145668361495f565b90507fffffffffff0000000000ffffffffffffffffffffffffffffffffffffffffffff84167affffffffff0000000000000000000000000000000000000000000060b083901b16176124ef565b806001600160801b038116811461360d57604051632f45db3d60e21b815260040160405180910390fd5b6000816145e981614e0a565b670de0b6b3a7640000670de0b6b3a763ffff6001600160801b03868116908616020104949350505050565b600060ff831684811b9061ffff6101008290031686901c90612e969087906001901b8685856153ea565b600080600061464d8686615496565b9150915081600014614663578360ff1682901c92505b80156146a357600160ff85161b811061468f57604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b830192505b50509392505050565b60006001600160801b038316608084901c6129ca8282866154b5565b60008061ffff600884901c1660ff80851690811461471d57600082815260028701602052604081205493506146fd8483615520565b9050600019811461471b5760089290921b9091179250610696915050565b505b5060ff80821690600883901c908214614797576000818152600188016020526040812054945061474d8584615520565b9050600019811461479557600882901b8117600081815260028a0160205260409020549550935061477d8561552f565b60ff1660088560001c901b1795505050505050610696565b505b60ff81811692508214614807578654935060006147b48584615520565b9050600019811461480557600081815260018901602052604090205494509050806147de8561552f565b60ff16600883901b17600081815260028a0160205260409020549550935061477d8561552f565b505b5060009695505050505050565b60008061ffff600884901c1660ff84168015614867576000828152600287016020526040812054935061484784836155cb565b905060001981146148655760089290921b9091179250610696915050565b505b5060ff8116600882901c81156148c6576000818152600188016020526040812054945061489485846155cb565b905060001981146148c457600882901b8117600081815260028a0160205260409020549550935061477d856155db565b505b60ff811691508115614935578654935060006148e285846155cb565b90506000198114614933576000818152600189016020526040902054945090508061490c856155db565b60ff16600883901b17600081815260028a0160205260409020549550935061477d856155db565b505b5062ffffff9695505050505050565b600060d882901c610696565b60006106968260d01c60ff1690565b8064ffffffffff8116811461360d576040516350dbfc8760e11b815260040160405180910390fd5b60008061499384612abb565b90508062ffffff168362ffffff16116149ae578281036124ef565b90910392915050565b64ffffffffff841662ffffff8481168202918482168102918416026149db88614b12565b6149e59084616163565b92506149f088614b28565b6149fa9083616163565b9150614a0588614b3e565b614a0f9082616163565b9050955095509592505050565b60d082901b7aff000000000000000000000000000000000000000000000000000016609084901b79ffffffffffffffff00000000000000000000000000000000000016605086901b71ffffffffffffffff0000000000000000000016601088901b69ffffffffffffffff00001661ffff8a161717171760d882901b7fffffffffff000000000000000000000000000000000000000000000000000000168117612be9565b81614aca81614aed565b818461ffff60001986018116908110614ae557614ae56160ba565b015550505050565b8061ffff166000036119a95760405163944e113960e01b815260040160405180910390fd5b60006106968260101c67ffffffffffffffff1690565b60006106968260501c67ffffffffffffffff1690565b60006106968260901c67ffffffffffffffff1690565b6000808080614b64600186616451565b61ffff16905060008060008961ffff1690505b838511614c225760006001614b8c86886163aa565b901c9050888183089a508b61ffff808d16908110614bac57614bac6160ba565b01549350614bb984613116565b92508964ffffffffff168364ffffffffff161115614be357614bdc6001826163bd565b9450614c1c565b8964ffffffffff168364ffffffffff161015614c0b57614c048160016163aa565b9550614c1c565b838497509750505050505050614c9d565b50614b77565b8164ffffffffff168964ffffffffff161015614c73578961ffff16600003614c48578799505b8a61ffff6000198c018116908110614c6257614c626160ba565b015483965096505050505050614c9d565b8760018b089950828b61ffff808d16908110614c9157614c916160ba565b01549650965050505050505b94509492505050565b600080600080614cb588614b12565b67ffffffffffffffff1690506000614ccc89614b28565b67ffffffffffffffff1690506000614ce38a614b3e565b67ffffffffffffffff1690508664ffffffffff16600003614d0a5791945092509050614e00565b6000614d158a614b12565b67ffffffffffffffff1690506000614d2c8b614b28565b67ffffffffffffffff1690506000614d438c614b3e565b67ffffffffffffffff1690508a64ffffffffff16600003614d6e5791975095509350614e0092505050565b6000614d8464ffffffffff808d16908e166163aa565b9050808b64ffffffffff1685028d64ffffffffff1689020181614da957614da96160ed565b049950808b64ffffffffff1684028d64ffffffffff1688020181614dcf57614dcf6160ed565b049850808b64ffffffffff1683028d64ffffffffff1687020181614df557614df56160ed565b049750505050505050505b9450945094915050565b67016345785d8a0000816001600160801b031611156119a957604051638630bc6b60e01b815260040160405180910390fd5b6000806000614e4b8686615496565b91509150612e9686868685856153ea565b600081600103614e6f5750607f19919050565b81600003614e905760405163125946cf60e11b815260040160405180910390fd5b60019190911c9060006f800000000000000000000000000000008310614eb857506001614ed3565b5060001982600160fe1b81614ecf57614ecf6160ed565b0492505b6000614ee2607f85901c6155db565b707f80000000000000000000000000000000607f82901b16935060ff16905083811c6f800000000000000000000000000000008114614f5e576f400000000000000000000000000000005b6000811315614f5c57908002607f1c90600160801b8210614f54579384019360019190911c905b60011d614f2d565b505b50500260011b919050565b60008080614f818460581c67ffffffffffffffff1690565b9250614f978460181c67ffffffffffffffff1690565b91505062ffffff831672ffffffffffffffffffffffffffffffffffffff841180614fd25750670de0b6b3a76400008367ffffffffffffffff16115b80614fee5750670de0b6b3a76400008267ffffffffffffffff16115b1561153757604051637752557f60e11b815260040160405180910390fd5b6000806001600160801b038516608086901c8261502a8383896154b5565b905080600003615044575060009350839250614c9d915050565b60006150508a896146ac565b905080158061505d575086155b156150795761506b82615676565b899550955050505050614c9d565b615084828883614e3c565b9550600061509387838a6156e8565b9050808311156151325760006150a982856163bd565b9050600160801b81106150ea57608081901c8581116150c857806150ca565b855b90506150d681876163bd565b95506150e6608082901b836163bd565b9150505b89811061511e5760006150fd8b8361643d565b905086811161510c578061510e565b865b905061511a81886163bd565b9650505b608085901b6001600160801b038716179a50505b7d09745258e83de0d0f4e400fce79aca44773dd596d31a6d336ca2a775b61161516461515e8d8d61267f565b8b6146ac565b11156151835760405163a2d7652760e01b815260040160405180910390fd5b50949997985050505050505050565b6000816000036151a457506000612e96565b6001600160801b038416608085901c6000806151d661076a6151c68d8b61267f565b886151d1818c6163aa565b613693565b91509150836001600160801b0316826001600160801b0316111561523957600061521c6152038c8c6133b5565b61520d84876161a4565b6001600160801b031690615705565b9050615231816001600160801b031660801b90565b955050615279565b826001600160801b0316816001600160801b0316111561527957600061526c6152628c8c6133b5565b61520d85886161a4565b6001600160801b03169550505b505050509695505050505050565b8162ffffff168162ffffff161080156152a35750608083901b15155b806152c857508162ffffff168162ffffff161180156152c857506001600160801b0383115b156109265760405163227bd87160e21b815262ffffff821660048201526024016119e6565b61ffff600882901c166000818152600284016020526040812054909190600160ff85161b81178082146137a1576000838152600287016020526040812082905582900361379557600883901c6000818152600180890160205260408220805460ff88169290921b821790559350839003613793578654600160ff83161b1787555060019350505050610696565b600080600052602060008351602085016000875af190508080156153bb573d80156153ae57600160005114831692506153b5565b843b151592505b506153cb565b3d156153cb573d6000803e3d6000fd5b50806109265760405163197138bd60e11b815260040160405180910390fd5b60008160000361540b57838381615403576154036160ed565b0490506129ca565b83821061542b576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6000806000198385098385029250828110838203039150509250929050565b600083156154f05750808302818482816154d1576154d16160ed565b04146154f0576040516363f1e01f60e01b815260040160405180910390fd5b82156117615760809290921b91820182811015611761576040516363f1e01f60e01b815260040160405180910390fd5b60006117618360018401615746565b60008160801b801561554357608091508092505b8260401b90508015615556579150604001815b8260201b90508015615569579150602001815b8260101b9050801561557c579150601001815b8260081b9050801561558f579150600801815b8260041b905080156155a2579150600401815b8260021b905080156155b5579150600201815b508160011b156155c3576001015b60ff03919050565b6000611761836000198401615774565b60006001600160801b038211156155f45750608090811c905b67ffffffffffffffff82111561560c57604091821c91015b63ffffffff82111561562057602091821c91015b61ffff82111561563257601091821c91015b60ff82111561564357600891821c91015b600f82111561565457600491821c91015b600382111561566557600291821c91015b600182111561360d57600101919050565b60008160000361568857506000919050565b6000615693836155db565b600181811c607f1681811b9086901c01811c80860401811c80860401811c80860401811c80860401811c80860401811c80860401901c9384900493925060ff1690508282106156e25782611761565b50919050565b60006156f5848484614e3c565b9050818061336c5761336c6160ed565b60008161571181614e0a565b6ec097ce7bc90715b34b9f1000000000806001600160801b03868116908616908102670de0b6b3a76400009190910102613411565b60ff81169190911c906000821561576a57816157618461552f565b0160ff16611761565b5060001992915050565b60ff8181031691821b91600090831561579a5780615791856155db565b60ff16036124ef565b506000199392505050565b6001600160a01b03811681146119a957600080fd5b600080604083850312156157cd57600080fd5b82356157d8816157a5565b946020939093013593505050565b60005b838110156158015781810151838201526020016157e9565b50506000910152565b60208152600082518060208401526158298160408501602087016157e6565b601f01601f19169190910160400192915050565b803562ffffff8116811461360d57600080fd5b60006020828403121561586257600080fd5b6117618261583d565b60008083601f84011261587d57600080fd5b50813567ffffffffffffffff81111561589557600080fd5b6020830191508360208260051b850101111561310357600080fd5b600080600080600080608087890312156158c957600080fd5b86356158d4816157a5565b955060208701356158e4816157a5565b9450604087013567ffffffffffffffff8082111561590157600080fd5b61590d8a838b0161586b565b9096509450606089013591508082111561592657600080fd5b5061593389828a0161586b565b979a9699509497509295939492505050565b60008083601f84011261595757600080fd5b50813567ffffffffffffffff81111561596f57600080fd5b60208301915083602082850101111561310357600080fd5b60008060006040848603121561599c57600080fd5b83359250602084013567ffffffffffffffff8111156159ba57600080fd5b6159c686828701615945565b9497909650939450505050565b600080600080606085870312156159e957600080fd5b84356159f4816157a5565b9350602085013567ffffffffffffffff811115615a1057600080fd5b615a1c8782880161586b565b9094509250506040850135615a30816157a5565b939692955090935050565b600081518084526020808501945080840160005b83811015615a6b57815187529582019590820190600101615a4f565b509495945050505050565b8381528260208201526060604082015260006129ca6060830184615a3b565b803561ffff8116811461360d57600080fd5b600080600080600080600080610100898b031215615ac457600080fd5b615acd89615a95565b9750615adb60208a01615a95565b9650615ae960408a01615a95565b9550615af760608a01615a95565b9450615b0560808a0161583d565b9350615b1360a08a01615a95565b9250615b2160c08a0161583d565b9150615b2f60e08a0161583d565b90509295985092959890939650565b60008060008060408587031215615b5457600080fd5b843567ffffffffffffffff80821115615b6c57600080fd5b615b788883890161586b565b90965094506020870135915080821115615b9157600080fd5b50615b9e8782880161586b565b95989497509550505050565b6020815260006117616020830184615a3b565b8035801515811461360d57600080fd5b60008060408385031215615be057600080fd5b615be983615bbd565b91506020830135615bf9816157a5565b809150509250929050565b600080600080600080600060e0888a031215615c1f57600080fd5b615c2888615a95565b9650615c3660208901615a95565b9550615c4460408901615a95565b9450615c5260608901615a95565b9350615c606080890161583d565b9250615c6e60a08901615a95565b9150615c7c60c0890161583d565b905092959891949750929550565b600060208284031215615c9c57600080fd5b813564ffffffffff8116811461176157600080fd5b60008060408385031215615cc457600080fd5b615ccd83615bbd565b91506131006020840161583d565b60008060408385031215615cee57600080fd5b82356001600160801b0381168114615d0557600080fd5b915061310060208401615bbd565b600060208284031215615d2557600080fd5b5035919050565b600060208284031215615d3e57600080fd5b61176182615a95565b60008060408385031215615d5a57600080fd5b8235615d05816157a5565b60008060408385031215615d7857600080fd5b8235615be9816157a5565b60008060008060608587031215615d9957600080fd5b8435615da4816157a5565b935060208501359250604085013567ffffffffffffffff811115615dc757600080fd5b615b9e87828801615945565b600181811c90821680615de757607f821691505b6020821081036156e257634e487b7160e01b600052602260045260246000fd5b600060208284031215615e1957600080fd5b8151611761816157a5565b634e487b7160e01b600052604160045260246000fd5b604081526000615e4d6040830185615a3b565b82810360208401526129ca8185615a3b565b600060208284031215615e7157600080fd5b815167ffffffffffffffff80821115615e8957600080fd5b818401915084601f830112615e9d57600080fd5b815181811115615eaf57615eaf615e24565b604051601f8201601f19908116603f01168101908382118183101715615ed757615ed7615e24565b81604052828152876020848701011115615ef057600080fd5b612be98360208301602088016157e6565b7f4c697175696469747920426f6f6b20546f6b656e200000000000000000000000815260008351615f398160158501602088016157e6565b6201016960ed1b6015918401918201528351615f5c8160188401602088016157e6565b01601801949350505050565b601f82111561092657600081815260208120601f850160051c81016020861015615f8f5750805b601f850160051c820191505b8181101561253957828155600101615f9b565b815167ffffffffffffffff811115615fc857615fc8615e24565b615fdc81615fd68454615dd3565b84615f68565b602080601f8311600181146160115760008415615ff95750858301515b600019600386901b1c1916600185901b178555612539565b600085815260208120601f198616915b8281101561604057888601518255948401946001909101908401616021565b508582101561605e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634c42545f60e01b81526000835161608d8160048501602088016157e6565b602d60f81b60049184019182015283516160ae8160058401602088016157e6565b01600501949350505050565b634e487b7160e01b600052603260045260246000fd5b6000602082840312156160e257600080fd5b8135611761816157a5565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b64ffffffffff82811682821603908082111561341657613416616103565b67ffffffffffffffff81811683821602808216919082811461615b5761615b616103565b505092915050565b67ffffffffffffffff81811683821601908082111561341657613416616103565b6001600160801b0381811683821601908082111561341657613416616103565b6001600160801b0382811682821603908082111561341657613416616103565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156161f657600080fd5b8260051b80836020870137939093016020019392505050565b6040815260006162236040830186886161c4565b8281036020840152612be98185876161c4565b60408152600061624a6040830185876161c4565b8281036020840152612e968185615a3b565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006001600160a01b03808a168352808916602084015280881660408401525085606083015284608083015260c060a08301526141bd60c08301848661625c565b600082516162d88184602087016157e6565b9190910192915050565b6000602082840312156162f457600080fd5b5051919050565b60006001600160a01b03808a168352808916602084015280881660408401525060a0606083015261633060a0830186886161c4565b82810360808401526163438185876161c4565b9a9950505050505050505050565b8381526040602082015260006129ca60408301848661625c565b60006001600160a01b038088168352808716602084015250608060408301526163986080830185876161c4565b90508260608301529695505050505050565b8082018082111561069657610696616103565b8181038181111561069657610696616103565b64ffffffffff81811683821601908082111561341657613416616103565b600061ffff80841680616403576164036160ed565b92169190910692915050565b60008261641e5761641e6160ed565b600160ff1b82146000198414161561643857616438616103565b500590565b60008261644c5761644c6160ed565b500490565b61ffff8281168282160390808211156134165761341661610356fe7e1935766b7c49e7482a018a5ee52ca183a2ddfcb6810787916934079aa582643441ab29b24daf7a3fd59500b0e08396ec08ec96f5cc2d0362924cdd45cfec319b779b17422d0df92223018b32b4d1fa46e071723d6817e2486d003becc55f00a264697066735822122022e41827a1d530f291cb2c5caf2ee6c94f69297e4c61c802092d1636b82dde8064736f6c63430008140033608060405234801561001057600080fd5b5060405161091738038061091783398101604081905261002f916101a2565b8282806001600160a01b03811661006157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61006a816100b6565b5061007482610106565b50506001600160a01b0382161561008e5761008e826100b6565b600380546001600160a01b0319166001600160a01b0392909216919091179055506101e59050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806001600160a01b03163b60000361013c5760405163211eb15960e21b81526001600160a01b0382166004820152602401610058565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b80516001600160a01b038116811461019d57600080fd5b919050565b6000806000606084860312156101b757600080fd5b6101c084610186565b92506101ce60208501610186565b91506101dc60408501610186565b90509250925092565b610723806101f46000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c8063762c51a111610081578063a3a4d3611161005b578063a3a4d36114610162578063b187bd2614610173578063f2fde38b1461018b57600080fd5b8063762c51a11461012e5780638456cb59146101495780638da5cb5b1461015157600080fd5b80633f4ba83a116100b25780633f4ba83a1461010d5780635c60da1b14610115578063715018a61461012657600080fd5b80631af7a41f146100ce5780633659cfe6146100f8575b600080fd5b6003546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b61010b610106366004610682565b61019e565b005b61010b6101b2565b6001546001600160a01b03166100db565b61010b610358565b6100db73576a05e4080c23a653c3c2240da4437e83dd50bf81565b61010b61036c565b6000546001600160a01b03166100db565b6002546001600160a01b03166100db565b61017b6104fd565b60405190151581526020016100ef565b61010b610199366004610682565b61054a565b6101a6610585565b6101af816105b2565b50565b6000546001600160a01b031633148015906102be5750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa15801561021a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023e91906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102bc91906106cb565b155b156102e357604051630a33ca5d60e31b81523360048201526024015b60405180910390fd5b6102eb6104fd565b61030857604051631d08162f60e11b815260040160405180910390fd5b6002546001600160a01b03166103315760405163a027d3f960e01b815260040160405180910390fd5b600254610346906001600160a01b03166105b2565b600280546001600160a01b0319169055565b610360610585565b61036a6000610632565b565b6000546001600160a01b031633148015906104785750600354604080516360dc98df60e11b815290516001600160a01b03909216916391d1485491839163c1b931be916004808201926020929091908290030181865afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f891906106b2565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152336024820152604401602060405180830381865afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047691906106cb565b155b1561049857604051630a33ca5d60e31b81523360048201526024016102da565b6104a06104fd565b156104be57604051636d18edcb60e01b815260040160405180910390fd5b600154600280546001600160a01b0319166001600160a01b0390921691909117905561036a73576a05e4080c23a653c3c2240da4437e83dd50bf6105b2565b600073576a05e4080c23a653c3c2240da4437e83dd50bf6105266001546001600160a01b031690565b6001600160a01b0316148061054557506002546001600160a01b031615155b905090565b610552610585565b6001600160a01b03811661057c57604051631e4fbdf760e01b8152600060048201526024016102da565b6101af81610632565b6000546001600160a01b0316331461036a5760405163118cdaa760e01b81523360048201526024016102da565b806001600160a01b03163b6000036105e85760405163211eb15960e21b81526001600160a01b03821660048201526024016102da565b600180546001600160a01b0319166001600160a01b0383169081179091556040517fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561069457600080fd5b81356001600160a01b03811681146106ab57600080fd5b9392505050565b6000602082840312156106c457600080fd5b5051919050565b6000602082840312156106dd57600080fd5b815180151581146106ab57600080fdfea2646970667358221220040315c1d734cc32caf9162268b5a371b13992b3cfa9f9c500ea1c348c4536b964736f6c6343000814003360a0604052604051610800380380610800833981016040819052610022916104c4565b604080516020810190915260008152859061003d8282610179565b506001600160a01b0316608052600061007760017f73ef95b1b141b4aeb11976757a225324c423bf4634f4361553b9b059a82050bb6105bf565b60405160200161008991815260200190565b60408051601f198184030181529190528051602090910120905060006100d060017f039c6157caeca9b57df712b1365b48c637c526ae0a75b2c95cd3622e6ffda4fd6105bf565b6040516020016100e291815260200190565b60408051601f1981840301815291905280516020909101209050600061012960017fd1a1c4c8365fed7323947e7cb6a7be46aba18d67bc4a4c5418b50b8bbf5a31856105bf565b60405160200161013b91815260200190565b60405160208183030381529060405280519060200120905086835585825584815561016c888561017960201b60201c565b5050505050505050610617565b61018282610239565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a280511561022d57610228826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906105e0565b8261034c565b505050565b6102356103c5565b5050565b806001600160a01b03163b60000361027457604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031491906105e0565b9050806001600160a01b03163b60000361023557604051634c9c8ce360e01b81526001600160a01b038216600482015260240161026b565b6060600080846001600160a01b03168460405161036991906105fb565b600060405180830381855af49150503d80600081146103a4576040519150601f19603f3d011682016040523d82523d6000602084013e6103a9565b606091505b5090925090506103ba8583836103e6565b925050505b92915050565b34156103e45760405163b398979f60e01b815260040160405180910390fd5b565b6060826103fb576103f682610445565b61043e565b815115801561041257506001600160a01b0384163b155b1561043b57604051639996b31560e01b81526001600160a01b038516600482015260240161026b565b50805b9392505050565b8051156104555780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461048557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156104bb5781810151838201526020016104a3565b50506000910152565b600080600080600060a086880312156104dc57600080fd5b6104e58661046e565b94506104f36020870161046e565b93506105016040870161046e565b9250606086015161ffff8116811461051857600080fd5b60808701519092506001600160401b038082111561053557600080fd5b818801915088601f83011261054957600080fd5b81518181111561055b5761055b61048a565b604051601f8201601f19908116603f011681019083821181831017156105835761058361048a565b816040528281528b602084870101111561059c57600080fd5b6105ad8360208301602088016104a0565b80955050505050509295509295909350565b818103818111156103bf57634e487b7160e01b600052601160045260246000fd5b6000602082840312156105f257600080fd5b61043e8261046e565b6000825161060d8184602087016104a0565b9190910192915050565b6080516101c9610637600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea26469706673582212202f3820ba5b815a6459143880dd49910e4fbff5fbfaa6b8c2f3fb3d7ec3964eb064736f6c63430008140033608060405234801561001057600080fd5b506040518060400160405280600e81526020016d57726170706564204e617469766560901b81525060405180604001604052806007815260200166574e415449564560c81b8152508160039081610067919061011b565b506004610074828261011b565b5050506101da565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806100a657607f821691505b6020821081036100c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561011657600081815260208120601f850160051c810160208610156100f35750805b601f850160051c820191505b81811015610112578281556001016100ff565b5050505b505050565b81516001600160401b038111156101345761013461007c565b610148816101428454610092565b846100cc565b602080601f83116001811461017d57600084156101655750858301515b600019600386901b1c1916600185901b178555610112565b600085815260208120601f198616915b828110156101ac5788860151825594840194600190910190840161018d565b50858210156101ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61091f806101e96000396000f3fe6080604052600436106100bc5760003560e01c8063313ce56711610074578063a9059cbb1161004e578063a9059cbb146101e4578063d0e30db014610204578063dd62ed3e1461020c57600080fd5b8063313ce5671461017d57806370a082311461019957806395d89b41146101cf57600080fd5b806318160ddd116100a557806318160ddd1461011c57806323b872dd1461013b5780632e1a7d4d1461015b57600080fd5b806306fdde03146100c1578063095ea7b3146100ec575b600080fd5b3480156100cd57600080fd5b506100d6610252565b6040516100e39190610750565b60405180910390f35b3480156100f857600080fd5b5061010c6101073660046107ba565b6102e4565b60405190151581526020016100e3565b34801561012857600080fd5b506002545b6040519081526020016100e3565b34801561014757600080fd5b5061010c6101563660046107e4565b6102fe565b34801561016757600080fd5b5061017b610176366004610820565b610322565b005b34801561018957600080fd5b50604051601281526020016100e3565b3480156101a557600080fd5b5061012d6101b4366004610839565b6001600160a01b031660009081526020819052604090205490565b3480156101db57600080fd5b506100d66103cd565b3480156101f057600080fd5b5061010c6101ff3660046107ba565b6103dc565b61017b6103ea565b34801561021857600080fd5b5061012d61022736600461085b565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102619061088e565b80601f016020809104026020016040519081016040528092919081815260200182805461028d9061088e565b80156102da5780601f106102af576101008083540402835291602001916102da565b820191906000526020600020905b8154815290600101906020018083116102bd57829003601f168201915b5050505050905090565b6000336102f28185856103f6565b60019150505b92915050565b60003361030c858285610408565b610317858585610486565b506001949350505050565b61032c33826104e5565b604051600090339083908381818185875af1925050503d806000811461036e576040519150601f19603f3d011682016040523d82523d6000602084013e610373565b606091505b50509050806103c95760405162461bcd60e51b815260206004820152600f60248201527f5769746864726177206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6060600480546102619061088e565b6000336102f2818585610486565b6103f4333461051b565b565b6104038383836001610551565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610480578181101561047157604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016103c0565b61048084848484036000610551565b50505050565b6001600160a01b0383166104b057604051634b637e8f60e11b8152600060048201526024016103c0565b6001600160a01b0382166104da5760405163ec442f0560e01b8152600060048201526024016103c0565b610403838383610626565b6001600160a01b03821661050f57604051634b637e8f60e11b8152600060048201526024016103c0565b6103c982600083610626565b6001600160a01b0382166105455760405163ec442f0560e01b8152600060048201526024016103c0565b6103c960008383610626565b6001600160a01b03841661057b5760405163e602df0560e01b8152600060048201526024016103c0565b6001600160a01b0383166105a557604051634a1406b160e11b8152600060048201526024016103c0565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561048057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161061891815260200190565b60405180910390a350505050565b6001600160a01b03831661065157806002600082825461064691906108c8565b909155506106c39050565b6001600160a01b038316600090815260208190526040902054818110156106a45760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016103c0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106df576002805482900390556106fe565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074391815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561077d57858101830151858201604001528201610761565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107b557600080fd5b919050565b600080604083850312156107cd57600080fd5b6107d68361079e565b946020939093013593505050565b6000806000606084860312156107f957600080fd5b6108028461079e565b92506108106020850161079e565b9150604084013590509250925092565b60006020828403121561083257600080fd5b5035919050565b60006020828403121561084b57600080fd5b6108548261079e565b9392505050565b6000806040838503121561086e57600080fd5b6108778361079e565b91506108856020840161079e565b90509250929050565b600181811c908216806108a257607f821691505b6020821081036108c257634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102f857634e487b7160e01b600052601160045260246000fdfea26469706673582212203676dca41fe70116d022466cee8163b666c31da9d26a6ab943091f2051f816da64736f6c6343000814003360a06040523480156200001157600080fd5b5060405162000bfd38038062000bfd833981016040819052620000349162000136565b336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200008b919062000207565b5060046200009a828262000207565b5050506001600160a01b038116620000cc57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000d781620000e4565b5060ff16608052620002d3565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200014957600080fd5b815160ff811681146200015b57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018d57607f821691505b602082108103620001ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020257600081815260208120601f850160051c81016020861015620001dd5750805b601f850160051c820191505b81811015620001fe57828155600101620001e9565b5050505b505050565b81516001600160401b0381111562000223576200022362000162565b6200023b8162000234845462000178565b84620001b4565b602080601f8311600181146200027357600084156200025a5750858301515b600019600386901b1c1916600185901b178555620001fe565b600085815260208120601f198616915b82811015620002a45788860151825594840194600190910190840162000283565b5085821015620002c35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161090e620002ef6000396000610151015261090e6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610758565b60405180910390f35b6101156101103660046107c2565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b6101156101453660046107ec565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107c2565b610313565b005b61012961019e366004610828565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107c2565b61034c565b61012961020536600461084a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610828565b61035a565b6060600380546102529061087d565b80601f016020809104026020016040519081016040528092919081815260200182805461027e9061087d565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b6060600480546102529061087d565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b6001600160a01b03831661065957806002600082825461064e91906108b7565b909155506106cb9050565b6001600160a01b038316600090815260208190526040902054818110156106ac5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166106e757600280548290039055610706565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161074b91815260200190565b60405180910390a3505050565b600060208083528351808285015260005b8181101561078557858101830151858201604001528201610769565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107bd57600080fd5b919050565b600080604083850312156107d557600080fd5b6107de836107a6565b946020939093013593505050565b60008060006060848603121561080157600080fd5b61080a846107a6565b9250610818602085016107a6565b9150604084013590509250925092565b60006020828403121561083a57600080fd5b610843826107a6565b9392505050565b6000806040838503121561085d57600080fd5b610866836107a6565b9150610874602084016107a6565b90509250929050565b600181811c9082168061089157607f821691505b6020821081036108b157634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e957634e487b7160e01b600052601160045260246000fdfea2646970667358221220140e0dc3f318a2e0bf53d0b6d4925ccbdeb1a8f044c863155735b72d740aff7364736f6c6343000814003360a06040523480156200001157600080fd5b506012336040518060400160405280600a8152602001694552433230204d6f636b60b01b8152506040518060400160405280600981526020016845524332304d6f636b60b81b81525081600390816200006b9190620001bb565b5060046200007a8282620001bb565b5050506001600160a01b038116620000ac57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000b781620000c4565b5060ff1660805262000287565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200014157607f821691505b6020821081036200016257634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001b657600081815260208120601f850160051c81016020861015620001915750805b601f850160051c820191505b81811015620001b2578281556001016200019d565b5050505b505050565b81516001600160401b03811115620001d757620001d762000116565b620001ef81620001e884546200012c565b8462000168565b602080601f8311600181146200022757600084156200020e5750858301515b600019600386901b1c1916600185901b178555620001b2565b600085815260208120601f198616915b82811015620002585788860151825594840194600190910190840162000237565b5085821015620002775787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051610975620002a3600039600061015101526109756000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101dc578063a9059cbb146101e4578063dd62ed3e146101f7578063f2fde38b1461023057600080fd5b806370a0823114610190578063715018a6146101b95780638da5cb5b146101c157600080fd5b806323b872dd116100bd57806323b872dd14610137578063313ce5671461014a57806340c10f191461017b57600080fd5b806306fdde03146100e4578063095ea7b31461010257806318160ddd14610125575b600080fd5b6100ec610243565b6040516100f99190610782565b60405180910390f35b6101156101103660046107ec565b6102d5565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610115610145366004610816565b6102ef565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100f9565b61018e6101893660046107ec565b610313565b005b61012961019e366004610852565b6001600160a01b031660009081526020819052604090205490565b61018e610329565b6005546040516001600160a01b0390911681526020016100f9565b6100ec61033d565b6101156101f23660046107ec565b61034c565b610129610205366004610874565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61018e61023e366004610852565b61035a565b606060038054610252906108a7565b80601f016020809104026020016040519081016040528092919081815260200182805461027e906108a7565b80156102cb5780601f106102a0576101008083540402835291602001916102cb565b820191906000526020600020905b8154815290600101906020018083116102ae57829003601f168201915b5050505050905090565b6000336102e381858561039d565b60019150505b92915050565b6000336102fd8582856103af565b61030885858561042d565b506001949350505050565b61031b61048c565b61032582826104b9565b5050565b61033161048c565b61033b60006104ef565b565b606060048054610252906108a7565b6000336102e381858561042d565b61036261048c565b6001600160a01b03811661039157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61039a816104ef565b50565b6103aa8383836001610559565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610427578181101561041857604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610388565b61042784848484036000610559565b50505050565b6001600160a01b03831661045757604051634b637e8f60e11b815260006004820152602401610388565b6001600160a01b0382166104815760405163ec442f0560e01b815260006004820152602401610388565b6103aa83838361062e565b6005546001600160a01b0316331461033b5760405163118cdaa760e01b8152336004820152602401610388565b6001600160a01b0382166104e35760405163ec442f0560e01b815260006004820152602401610388565b6103256000838361062e565b600580546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0384166105835760405163e602df0560e01b815260006004820152602401610388565b6001600160a01b0383166105ad57604051634a1406b160e11b815260006004820152602401610388565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561042757826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062091815260200190565b60405180910390a350505050565b600061063b6002836108f7565b905061064984600083610658565b61042784846106588486610919565b6001600160a01b038316610683578060026000828254610678919061092c565b909155506106f59050565b6001600160a01b038316600090815260208190526040902054818110156106d65760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610388565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661071157600280548290039055610730565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161077591815260200190565b60405180910390a3505050565b600060208083528351808285015260005b818110156107af57858101830151858201604001528201610793565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146107e757600080fd5b919050565b600080604083850312156107ff57600080fd5b610808836107d0565b946020939093013593505050565b60008060006060848603121561082b57600080fd5b610834846107d0565b9250610842602085016107d0565b9150604084013590509250925092565b60006020828403121561086457600080fd5b61086d826107d0565b9392505050565b6000806040838503121561088757600080fd5b610890836107d0565b915061089e602084016107d0565b90509250929050565b600181811c908216806108bb57607f821691505b6020821081036108db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008261091457634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156102e9576102e96108e1565b808201808211156102e9576102e96108e156fea26469706673582212203128554588a242534b7d180e6bcef67cd97e91abb99161df7c218c6a9eccb86064736f6c6343000814003360806040523480156200001157600080fd5b506200001c62000022565b620000d6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000735760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620000d35780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b613e6a80620000e66000396000f3fe60806040523480156200001157600080fd5b50600436106200033d5760003560e01c8063704037bd11620001bd578063b03847811162000101578063e30c397811620000a3578063e92d0d5d116200007a578063e92d0d5d146200077a578063f2fde38b1462000791578063fd90c2be14620007a857600080fd5b8063e30c39781462000731578063e63ab1e9146200073b578063e74b981b146200076357600080fd5b8063d547741f11620000d8578063d547741f14620006ec578063ddbfd9411462000703578063e203a31f146200071a57600080fd5b8063b03847811462000697578063be20309414620006ae578063c1b931be14620006c557600080fd5b80638ce9aa1c116200016b578063a217fddf1162000142578063a217fddf1462000627578063aabc4b3c1462000630578063af371065146200068557600080fd5b80638ce9aa1c14620005f75780638da5cb5b146200060657806391d14854146200061057600080fd5b806379ba509711620001a057806379ba509714620005cc5780637daf5d6614620005d657806380c5061e14620005ed57600080fd5b8063704037bd146200059c578063715018a614620005c257600080fd5b80633a2f1a9111620002855780635a44092311620002335780636622e0d7116200020a5780636622e0d7146200055757806369d56ea3146200057d578063701ab8c1146200059457600080fd5b80635a440923146200051f5780635b35875c1462000536578063659ac74b146200054057600080fd5b80634ccb20c011620002685780634ccb20c014620004ed5780634cd161d314620004ff5780634e937c3a146200051657600080fd5b80633a2f1a9114620004bf5780633c78a94114620004d657600080fd5b8063248a9ca311620002ef5780632f2ff15d11620002c65780632f2ff15d146200047a57806336568abe1462000491578063379ee80314620004a857600080fd5b8063248a9ca3146200040757806327721842146200044c5780632cc06b8c146200046357600080fd5b80630752092b11620003245780630752092b1462000387578063093ff76914620003b75780631af5bacc14620003d057600080fd5b806301ffc9a714620003425780630282c9c1146200036e575b600080fd5b620003596200035336600462002e46565b620007b1565b60405190151581526020015b60405180910390f35b62000378620007e9565b60405162000365919062002e72565b6200039e6200039836600462002eb8565b620008d9565b6040516001600160a01b03909116815260200162000365565b620003ce620003c836600462002f0f565b620008e8565b005b620003f87fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa981565b60405190815260200162000365565b620003f86200041836600462002eb8565b60009081527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015490565b620003596200045d36600462002fe2565b620009f5565b620003ce6200047436600462003002565b62000a04565b620003ce6200048b36600462003050565b62000a57565b620003ce620004a236600462003050565b62000a9f565b620003ce620004b936600462003094565b62000ada565b620003ce620004d03660046200314f565b62000c01565b620003ce620004e736600462002fe2565b62000cb9565b6000546001600160a01b03166200039e565b620003ce620005103660046200320b565b62000d1b565b600354620003f8565b620003ce6200053036600462002fe2565b62000df3565b6200037862000e6b565b6200039e6200055136600462003243565b62000e7e565b6200056e62000568366004620032a4565b6200140d565b604051620003659190620032d7565b620003ce6200058e3660046200334e565b620015b8565b6001620003f8565b620005b3620005ad366004620033a4565b62001765565b604051620003659190620033ea565b620003ce6200179e565b620003ce620017b6565b6200039e620005e736600462002eb8565b62001804565b620003f862001837565b67016345785d8a0000620003f8565b6200039e62001845565b620003596200062136600462003050565b6200187a565b620003f8600081565b620006476200064136600462002eb8565b620018f5565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c0830152151560e08201526101000162000365565b6002546001600160a01b03166200039e565b620003ce620006a836600462002fe2565b620019ca565b620003ce620006bf36600462003427565b62001b14565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620003f8565b620003ce620006fd36600462003050565b62001ce4565b620003ce6200071436600462002fe2565b62001d2c565b620003ce6200072b36600462003481565b62001da4565b6200039e62001e16565b620003f87f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b620003ce6200077436600462002fe2565b62001e40565b620003ce6200078b36600462002eb8565b62001e55565b620003ce620007a236600462002fe2565b62001eff565b600154620003f8565b60006001600160e01b03198216637965db0b60e01b1480620007e357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000620007f9600562001f88565b90508015620008d5578067ffffffffffffffff8111156200081e576200081e6200349f565b60405190808252806020026020018201604052801562000848578160200160208202803683370190505b5091506000805b82811015620008c5576000806200086860058462001f95565b9092509050620008788162001fb3565b15620008af5781868581518110620008945762000894620034b5565b602090810291909101015283620008ab81620034e1565b9450505b505080620008bd90620034e1565b90506200084f565b5081811015620008d3578083525b505b5090565b6000620007e360088362001fc0565b620008f262001fce565b6000620009058b8b8b61ffff1662002004565b6020015190506001600160a01b038116620009555760405163b65ee95360e01b81526001600160a01b03808d1660048301528b16602482015261ffff8a1660448201526064015b60405180910390fd5b604051633329c28d60e11b815261ffff808a16600483015280891660248301528088166044830152808716606483015262ffffff808716608484015290851660a4830152831660c48201526001600160a01b03821690636653851a9060e401600060405180830381600087803b158015620009cf57600080fd5b505af1158015620009e4573d6000803e3d6000fd5b505050505050505050505050505050565b6000620007e3600883620020b0565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000a3081620020d3565b6040805160008082526020820190925262000a5191869186918691620020df565b50505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462000a9381620020d3565b62000a51838362002233565b6001600160a01b038116331462000ac95760405163334bd91960e11b815260040160405180910390fd5b62000ad5828262002260565b505050565b62000ae462001fce565b60018961ffff16101562000b1257604051634f958e7160e01b815261ffff8a1660048201526024016200094c565b600062000b26818a8a8a8a8a8a8a620022fd565b9050811562000b415762000b3e81600160ff62002402565b90505b62000b53600561ffff8c16836200242c565b506040805161ffff8b811682528a8116602083015289811682840152888116606083015262ffffff888116608084015287821660a0840152861660c08301529151918c16917f839844a256a87f87c9c835117d9a1c40be013954064c937072acb32d36db6a289181900360e00190a26040518215159061ffff8c16907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a350505050505050505050565b7fdcf4465aa60d92459eb361fac2489220ae3c524301cc0433c30a5d83e8fb0fa962000c2d81620020d3565b6001600160a01b038416158062000c4c5750836001600160a01b031916155b1562000c6b5760405163d43a15d160e01b815260040160405180910390fd5b62000cb08787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250620020df92505050565b50505050505050565b62000cc362001fce565b806001600160a01b031663d3b9fbe46040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562000cff57600080fd5b505af115801562000d14573d6000803e3d6000fd5b5050505050565b62000d2562001fce565b62000d36600561ffff84166200243b565b62000d5b57604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000d6e600561ffff851662002449565b905081151560ff82901c15150362000d99576040516311be38db60e11b815260040160405180910390fd5b62000dba61ffff841662000db0838560ff62002402565b600591906200242c565b506040518215159061ffff8516907f58a8b6a02b964cca2712e5a71d7b0d564a56b4a0f573b4c47f389341ade14cfd90600090a3505050565b62000dfd62001fce565b62000e0a60088262002457565b62000e34576040516303ce0ad960e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f84cc2115995684dcb0cd3d3a9565e3d32f075de81db70c8dc3a719b2a47af67e90600090a250565b606062000e7960056200246e565b905090565b600062000e91600561ffff84166200243b565b62000eb657604051637d9160bf60e11b815261ffff831660048201526024016200094c565b600062000ec9600561ffff851662002449565b9050600062000ed762001845565b6001600160a01b0316336001600160a01b031614905062000ef88262001fb3565b15801562000f04575080155b1562000f30576040516304fc2fe760e11b815233600482015261ffff851660248201526044016200094c565b62000f3d600887620020b0565b62000f6757604051638e888ef360e01b81526001600160a01b03871660048201526024016200094c565b856001600160a01b0316876001600160a01b03160362000fa657604051632f9b185360e01b81526001600160a01b03881660048201526024016200094c565b62000fb285856200247d565b5060008062000fc28989620024c3565b90925090506001600160a01b03821662000fef57604051632573cfb960e21b815260040160405180910390fd5b6001600160a01b0382811660009081526004602090815260408083208585168452825280832061ffff8b1684529091529020546201000090041615620010665760405163cb27a43560e01b81526001600160a01b03808b1660048301528916602482015261ffff871660448201526064016200094c565b6002546001600160a01b03168062001091576040516328b4fcf960e21b815260040160405180910390fd5b60006200109e86620024ed565b620010a987620024fa565b620010b4886200250b565b620010bf896200251c565b620010ca8a6200252d565b620010d58b6200253f565b620010e08c62002550565b60405161ffff978816602482015295871660448701529386166064860152918516608485015262ffffff90811660a4850152931660c4830152821660e4820152908a166101048201526101240160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166347973bff60e01b179052600b5490519192506001600160a01b0316908c908c908b908590620011919062002e38565b620011a195949392919062003545565b604051809103906000f080158015620011be573d6000803e3d6000fd5b509650505060405180608001604052808761ffff168152602001866001600160a01b0316815260200184151581526020016000151581525060046000846001600160a01b03166001600160a01b031681526020019081526020016000206000836001600160a01b03166001600160a01b0316815260200190815260200160002060008861ffff16815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160000160166101000a81548160ff02191690831515021790555060608201518160000160176101000a81548160ff0219169083151502179055509050506003859080600181540180825580915050600190039060005260206000200160009091909190916101000a8154816001600160a01b0302191690836001600160a01b031602179055506200138f8661ffff16600a6000856001600160a01b03166001600160a01b031681526020019081526020016000206000846001600160a01b03166001600160a01b031681526020019081526020016000206200256290919063ffffffff16565b508561ffff16886001600160a01b03168a6001600160a01b03167f2c8d104b27c6b7f4492017a6f5cf3803043688934ebcaa6a03540beeaf976aff886001600380549050620013df919062003590565b604080516001600160a01b03909316835260208301919091520160405180910390a450505050949350505050565b60606000806200141e8585620024c3565b6001600160a01b038083166000908152600a602090815260408083209385168352929052908120929450909250620014568262002570565b90508015620015ae578067ffffffffffffffff8111156200147b576200147b6200349f565b604051908082528060200260200182016040528015620014cf57816020015b6040805160808101825260008082526020808301829052928201819052606082015282526000199092019101816200149a5790505b506001600160a01b03808616600090815260046020908152604080832093881683529290529081209196505b82811015620015ab5760006200151c62001516868462001fc0565b6200257b565b6040805160808101825261ffff831680825260008181526020888152848220546001600160a01b03620100008204168286015260ff600160b01b8204811615159686019690965292909152879052600160b81b900490911615156060820152895191925090899084908110620015965762001596620034b5565b602090810291909101015250600101620014fb565b50505b5050505092915050565b620015c262001fce565b600080620015d18686620024c3565b6001600160a01b0380831660009081526004602090815260408083208486168452825280832061ffff808c1685529083529281902081516080810183529054938416815262010000840490941691840182905260ff600160b01b84048116151591850191909152600160b81b90920490911615156060830152929450909250906200168d5760405163102a919160e21b81526001600160a01b0380891660048301528716602482015261ffff861660448201526064016200094c565b8315158160600151151503620016b557604051626ee66560e11b815260040160405180910390fd5b6001600160a01b0380841660009081526004602090815260408083208685168452825280832061ffff8a1684528252918290208054881515600160b81b027fffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffff90911617905583015190519116907f44cf35361c9ff3c8c1397ec6410d5495cc481feaef35c9af11da1a637107de4f906200175490871515815260200190565b60405180910390a250505050505050565b6040805160808101825260008082526020820181905291810182905260608101919091526200179684848462002004565b949350505050565b620017a862001fce565b620017b46000620025a6565b565b3380620017c262001e16565b6001600160a01b031614620017f65760405163118cdaa760e01b81526001600160a01b03821660048201526024016200094c565b6200180181620025a6565b50565b6000600382815481106200181c576200181c620034b5565b6000918252602090912001546001600160a01b031692915050565b600062000e79600862002570565b6000807f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993005b546001600160a01b031692915050565b600082620018a8576200188c62001845565b6001600160a01b0316826001600160a01b0316149050620007e3565b60008381527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602090815260408083206001600160a01b038616845290915290205460ff165b9392505050565b6000808080808080806200190b60058a6200243b565b6200192d57604051637d9160bf60e11b8152600481018a90526024016200094c565b60006200193c60058b62002449565b90506200194981620024ed565b61ffff1698506200195a81620024fa565b61ffff1697506200196b816200250b565b61ffff1696506200197c816200251c565b61ffff1695506200198d816200252d565b62ffffff1694506200199f816200253f565b61ffff169350620019b08162002550565b62ffffff16925060ff81901c915050919395975091939597565b620019d462001fce565b306001600160a01b0316816001600160a01b03166388cc58e46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562001a1d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a439190620035a6565b6001600160a01b03161462001a7757604051630a3e70af60e11b81526001600160a01b03821660048201526024016200094c565b6002546001600160a01b03908116908216810362001ab457604051630ded3b9560e31b81526001600160a01b03831660048201526024016200094c565b600280546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f900d0e3d359f50e4f923ecdc06b401e07dbb9f485e17b07bcfc91a13000b277e91015b60405180910390a15050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff1660008115801562001b605750825b905060008267ffffffffffffffff16600114801562001b7e5750303b155b90508115801562001b8d575080155b1562001bac5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831562001be157845468ff00000000000000001916680100000000000000001785555b62001bec88620025e4565b67016345785d8a000087111562001c2857604051635e8988c160e01b81526004810188905267016345785d8a000060248201526044016200094c565b62001c3389620025f9565b6001879055600b80546001600160a01b0319166001600160a01b0388161790556040805160008152602081018990527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910160405180910390a1831562001cd957845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050505050565b60008281527f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800602052604090206001015462001d2081620020d3565b62000a51838362002260565b62001d3662001fce565b62001d43600882620026bb565b62001d6d57604051638e888ef360e01b81526001600160a01b03821660048201526024016200094c565b6040516001600160a01b038216907f0b767739217755d8af5a2ba75b181a19fa1750f8bb701f09311cb19a90140cb390600090a250565b62001dae62001fce565b62001dbf600561ffff8316620026d2565b62001de457604051637d9160bf60e11b815261ffff821660048201526024016200094c565b60405161ffff8216907fdd86b848bb56ff540caa68683fa467d0e7eb5f8b2d44e4ee435742eeeae9be1390600090a250565b6000807f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c006200186a565b62001e4a62001fce565b6200180181620025f9565b62001e5f62001fce565b60015481810362001e8757604051631baa31e960e21b8152600481018390526024016200094c565b67016345785d8a000082111562001ec357604051635e8988c160e01b81526004810183905267016345785d8a000060248201526044016200094c565b600182905560408051828152602081018490527f5c34e91c94c78b662a45d0bd4a25a4e32c584c54a45a76e4a4d43be27ba40e50910162001b08565b62001f0962001fce565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319166001600160a01b038316908117825562001f4f62001845565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a35050565b6000620007e382620026e0565b600080808062001fa68686620026ed565b9097909650945050505050565b600060ff82901c620007e3565b6000620018ee83836200271a565b3362001fd962001845565b6001600160a01b031614620017b45760405163118cdaa760e01b81523360048201526024016200094c565b604080516080810182526000808252602082018190529181018290526060810191909152620020348484620024c3565b6001600160a01b03918216600090815260046020908152604080832093851683529281528282209582529485528190208151608081018352905461ffff811682526201000081049093169481019490945260ff600160b01b83048116151591850191909152600160b81b90910416151560608301525092915050565b6001600160a01b03811660009081526001830160205260408120541515620018ee565b62001801813362002747565b6000620020f286868661ffff1662002004565b6020015190506001600160a01b0381166200213e5760405163b65ee95360e01b81526001600160a01b0380881660048301528616602482015261ffff851660448201526064016200094c565b82816001600160a01b031663781a89156040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200217e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620021a49190620035c6565b03620021c75760405163b70cd0db60e01b8152600481018490526024016200094c565b604051631b057f6d60e01b81526001600160a01b03821690631b057f6d90620021f79086908690600401620035e0565b600060405180830381600087803b1580156200221257600080fd5b505af115801562002227573d6000803e3d6000fd5b50505050505050505050565b6000826200225457604051633e3253cf60e11b815260040160405180910390fd5b620018ee838362002784565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b6268006200228f84846200187a565b15620022f2576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050620007e3565b6000915050620007e3565b60008561ffff168761ffff1611806200231b5750610fff8661ffff16115b806200232c57506127108561ffff16115b806200233d57506109c48361ffff16115b80620023505750620fffff8262ffffff16115b156200236f57604051631c07203f60e01b815260040160405180910390fd5b5060109590951b630fff00001661ffff9690961695909517601c9390931b64fff0000000169290921760289190911b663fff0000000000161760369190911b693fffffc00000000000001617604e9290921b6b0fffc00000000000000000001691909117605c9190911b6dfffff0000000000000000000000016176dffffffffffffffffffffffffffff19919091161790565b6000620017968484620024175760006200241a565b60015b600180861b19929092169116841b1790565b60006200179684848462002836565b6000620018ee838362002855565b6000620018ee838362002863565b6000620018ee836001600160a01b038416620028af565b60606000620018ee8362002901565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901620024ba82826200290e565b95945050505050565b600080826001600160a01b0316846001600160a01b03161115620024e5579192915b509192909150565b600061ffff8216620007e3565b6000620007e38260101c610fff1690565b6000620007e382601c1c610fff1690565b6000620007e38260281c613fff1690565b6000620007e38260361c62ffffff1690565b6000620007e382604e1c613fff1690565b6000620007e382605c1c620fffff1690565b6000620018ee8383620028af565b6000620007e3825490565b8061ffff81168114620025a1576040516364ae406d60e01b815260040160405180910390fd5b919050565b7f237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c0080546001600160a01b0319168155620025e08262002b96565b5050565b620025ee62002c07565b620018018162002c56565b6001600160a01b0381166200262157604051632573cfb960e21b815260040160405180910390fd5b6000546001600160a01b0390811690821681036200266257600054604051634fcea97160e01b81526001600160a01b0390911660048201526024016200094c565b600080546001600160a01b0319166001600160a01b0384811691821790925560408051928416835260208301919091527f15d80a013f22151bc7246e3bc132e12828cde19de98870475e3fa70840152721910162001b08565b6000620018ee836001600160a01b03841662002c8c565b6000620018ee838362002d85565b6000620007e38262002570565b60008080620026fd858562001fc0565b600081815260029690960160205260409095205494959350505050565b6000826000018281548110620027345762002734620034b5565b9060005260206000200154905092915050565b6200275382826200187a565b620025e05760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016200094c565b60007f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800620027b384846200187a565b620022f2576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055620027eb3390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050620007e3565b6000828152600284016020526040812082905562001796848462002562565b6000620018ee838362002da4565b6000818152600283016020526040812054801580156200288c57506200288a848462002855565b155b15620018ee5760405163015ab34360e11b8152600481018490526024016200094c565b6000818152600183016020526040812054620028f857508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620007e3565b506000620007e3565b6060620007e38262002dbd565b6000806000836000036200292c5750600160801b9150620007e39050565b508260008112156200293f579015906000035b6210000081101562002b4e57600160801b9250846fffffffffffffffffffffffffffffffff8111156200297457911591600019045b6001821615620029865792830260801c925b800260801c60028216156200299d5792830260801c925b800260801c6004821615620029b45792830260801c925b800260801c6008821615620029cb5792830260801c925b800260801c6010821615620029e25792830260801c925b800260801c6020821615620029f95792830260801c925b800260801c604082161562002a105792830260801c925b8002608090811c9082161562002a285792830260801c925b800260801c61010082161562002a405792830260801c925b800260801c61020082161562002a585792830260801c925b800260801c61040082161562002a705792830260801c925b800260801c61080082161562002a885792830260801c925b800260801c61100082161562002aa05792830260801c925b800260801c61200082161562002ab85792830260801c925b800260801c61400082161562002ad05792830260801c925b800260801c61800082161562002ae85792830260801c925b800260801c6201000082161562002b015792830260801c925b800260801c6202000082161562002b1a5792830260801c925b800260801c6204000082161562002b335792830260801c925b800260801c6208000082161562002b4c5792830260801c925b505b8260000362002b7b57604051631dba598d60e11b815260048101869052602481018590526044016200094c565b8162002b885782620024ba565b620024ba83600019620035fb565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005468010000000000000000900460ff16620017b457604051631afcd79f60e31b815260040160405180910390fd5b62002c6062002c07565b6001600160a01b038116620017f657604051631e4fbdf760e01b8152600060048201526024016200094c565b60008181526001830160205260408120548015620022f257600062002cb360018362003590565b855490915060009062002cc99060019062003590565b905080821462002d3557600086600001828154811062002ced5762002ced620034b5565b906000526020600020015490508087600001848154811062002d135762002d13620034b5565b6000918252602080832090910192909255918252600188019052604090208390555b855486908062002d495762002d496200361e565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050620007e3565b60008181526002830160205260408120819055620018ee838362002dcc565b60008181526001830160205260408120541515620018ee565b60606000620018ee8362002dda565b6000620018ee838362002c8c565b60608160000180548060200260200160405190810160405280929190818152602001828054801562002e2c57602002820191906000526020600020905b81548152602001906001019080831162002e17575b50505050509050919050565b610800806200363583390190565b60006020828403121562002e5957600080fd5b81356001600160e01b031981168114620018ee57600080fd5b6020808252825182820181905260009190848201906040850190845b8181101562002eac5783518352928401929184019160010162002e8e565b50909695505050505050565b60006020828403121562002ecb57600080fd5b5035919050565b6001600160a01b03811681146200180157600080fd5b803561ffff81168114620025a157600080fd5b803562ffffff81168114620025a157600080fd5b6000806000806000806000806000806101408b8d03121562002f3057600080fd5b8a3562002f3d8162002ed2565b995060208b013562002f4f8162002ed2565b985062002f5f60408c0162002ee8565b975062002f6f60608c0162002ee8565b965062002f7f60808c0162002ee8565b955062002f8f60a08c0162002ee8565b945062002f9f60c08c0162002ee8565b935062002faf60e08c0162002efb565b925062002fc06101008c0162002ee8565b915062002fd16101208c0162002efb565b90509295989b9194979a5092959850565b60006020828403121562002ff557600080fd5b8135620018ee8162002ed2565b6000806000606084860312156200301857600080fd5b8335620030258162002ed2565b92506020840135620030378162002ed2565b9150620030476040850162002ee8565b90509250925092565b600080604083850312156200306457600080fd5b823591506020830135620030788162002ed2565b809150509250929050565b80358015158114620025a157600080fd5b60008060008060008060008060006101208a8c031215620030b457600080fd5b620030bf8a62002ee8565b9850620030cf60208b0162002ee8565b9750620030df60408b0162002ee8565b9650620030ef60608b0162002ee8565b9550620030ff60808b0162002ee8565b94506200310f60a08b0162002efb565b93506200311f60c08b0162002ee8565b92506200312f60e08b0162002efb565b9150620031406101008b0162003083565b90509295985092959850929598565b60008060008060008060a087890312156200316957600080fd5b8635620031768162002ed2565b95506020870135620031888162002ed2565b9450620031986040880162002ee8565b935060608701359250608087013567ffffffffffffffff80821115620031bd57600080fd5b818901915089601f830112620031d257600080fd5b813581811115620031e257600080fd5b8a6020828501011115620031f557600080fd5b6020830194508093505050509295509295509295565b600080604083850312156200321f57600080fd5b6200322a8362002ee8565b91506200323a6020840162003083565b90509250929050565b600080600080608085870312156200325a57600080fd5b8435620032678162002ed2565b93506020850135620032798162002ed2565b9250620032896040860162002efb565b9150620032996060860162002ee8565b905092959194509250565b60008060408385031215620032b857600080fd5b8235620032c58162002ed2565b91506020830135620030788162002ed2565b6020808252825182820181905260009190848201906040850190845b8181101562002eac576200333a83855161ffff81511682526001600160a01b0360208201511660208301526040810151151560408301526060810151151560608301525050565b9284019260809290920191600101620032f3565b600080600080608085870312156200336557600080fd5b8435620033728162002ed2565b93506020850135620033848162002ed2565b9250620033946040860162002ee8565b9150620032996060860162003083565b600080600060608486031215620033ba57600080fd5b8335620033c78162002ed2565b92506020840135620033d98162002ed2565b929592945050506040919091013590565b815161ffff1681526020808301516001600160a01b03169082015260408083015115159082015260608083015115159082015260808101620007e3565b600080600080608085870312156200343e57600080fd5b84356200344b8162002ed2565b935060208501356200345d8162002ed2565b9250604085013591506060850135620034768162002ed2565b939692955090935050565b6000602082840312156200349457600080fd5b620018ee8262002ee8565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201620034f657620034f6620034cb565b5060010190565b6000815180845260005b81811015620035255760208185018101518683018201520162003507565b506000602082860101526020601f19601f83011685010191505092915050565b60006001600160a01b038088168352808716602084015280861660408401525061ffff8416606083015260a060808301526200358560a0830184620034fd565b979650505050505050565b81810381811115620007e357620007e3620034cb565b600060208284031215620035b957600080fd5b8151620018ee8162002ed2565b600060208284031215620035d957600080fd5b5051919050565b828152604060208201526000620017966040830184620034fd565b6000826200361957634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603160045260246000fdfe60a0604052604051610800380380610800833981016040819052610022916104c4565b604080516020810190915260008152859061003d8282610179565b506001600160a01b0316608052600061007760017f73ef95b1b141b4aeb11976757a225324c423bf4634f4361553b9b059a82050bb6105bf565b60405160200161008991815260200190565b60408051601f198184030181529190528051602090910120905060006100d060017f039c6157caeca9b57df712b1365b48c637c526ae0a75b2c95cd3622e6ffda4fd6105bf565b6040516020016100e291815260200190565b60408051601f1981840301815291905280516020909101209050600061012960017fd1a1c4c8365fed7323947e7cb6a7be46aba18d67bc4a4c5418b50b8bbf5a31856105bf565b60405160200161013b91815260200190565b60405160208183030381529060405280519060200120905086835585825584815561016c888561017960201b60201c565b5050505050505050610617565b61018282610239565b6040516001600160a01b038316907f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e90600090a280511561022d57610228826001600160a01b0316635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906105e0565b8261034c565b505050565b6102356103c5565b5050565b806001600160a01b03163b60000361027457604051631933b43b60e21b81526001600160a01b03821660048201526024015b60405180910390fd5b807fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080546001600160a01b0319166001600160a01b0392831617905560408051635c60da1b60e01b81529051600092841691635c60da1b9160048083019260209291908290030181865afa1580156102f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031491906105e0565b9050806001600160a01b03163b60000361023557604051634c9c8ce360e01b81526001600160a01b038216600482015260240161026b565b6060600080846001600160a01b03168460405161036991906105fb565b600060405180830381855af49150503d80600081146103a4576040519150601f19603f3d011682016040523d82523d6000602084013e6103a9565b606091505b5090925090506103ba8583836103e6565b925050505b92915050565b34156103e45760405163b398979f60e01b815260040160405180910390fd5b565b6060826103fb576103f682610445565b61043e565b815115801561041257506001600160a01b0384163b155b1561043b57604051639996b31560e01b81526001600160a01b038516600482015260240161026b565b50805b9392505050565b8051156104555780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b038116811461048557600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156104bb5781810151838201526020016104a3565b50506000910152565b600080600080600060a086880312156104dc57600080fd5b6104e58661046e565b94506104f36020870161046e565b93506105016040870161046e565b9250606086015161ffff8116811461051857600080fd5b60808701519092506001600160401b038082111561053557600080fd5b818801915088601f83011261054957600080fd5b81518181111561055b5761055b61048a565b604051601f8201601f19908116603f011681019083821181831017156105835761058361048a565b816040528281528b602084870101111561059c57600080fd5b6105ad8360208301602088016104a0565b80955050505050509295509295909350565b818103818111156103bf57634e487b7160e01b600052601160045260246000fd5b6000602082840312156105f257600080fd5b61043e8261046e565b6000825161060d8184602087016104a0565b9190910192915050565b6080516101c9610637600039600081816042015260a501526101c96000f3fe6080604052600436106100225760003560e01c8063a0a0ea391461003357610029565b3661002957005b61003161008a565b005b34801561003f57600080fd5b507f000000000000000000000000000000000000000000000000000000000000000060405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009a6100956100a1565b610132565b565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635c60da1b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009c9190610156565b3660008037600080366000845af43d6000803e808015610151573d6000f35b3d6000fd5b60006020828403121561016857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461018c57600080fd5b939250505056fea26469706673582212202f3820ba5b815a6459143880dd49910e4fbff5fbfaa6b8c2f3fb3d7ec3964eb064736f6c63430008140033a2646970667358221220f140b977106ff6d85e5d4f0ac895567f5d06196c8c3b023a07183d04e0a3b48f64736f6c6343000814003360a060405260405162000f1f38038062000f1f8339810160408190526200002691620003cd565b82816200003482826200009c565b505081604051620000459062000366565b6001600160a01b039091168152602001604051809103906000f08015801562000072573d6000803e3d6000fd5b506001600160a01b0316608052620000936200008d60805190565b62000102565b505050620004cb565b620000a78262000174565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115620000f457620000ef8282620001f4565b505050565b620000fe62000271565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6200014460008051602062000eff833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001718162000293565b50565b806001600160a01b03163b600003620001b057604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b031684604051620002139190620004ad565b600060405180830381855af49150503d806000811462000250576040519150601f19603f3d011682016040523d82523d6000602084013e62000255565b606091505b50909250905062000268858383620002d6565b95945050505050565b3415620002915760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b038116620002bf57604051633173bdd160e11b815260006004820152602401620001a7565b8060008051602062000eff833981519152620001d3565b606082620002ef57620002e9826200033c565b62000335565b81511580156200030757506001600160a01b0384163b155b156200033257604051639996b31560e01b81526001600160a01b0385166004820152602401620001a7565b50805b9392505050565b8051156200034d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b610562806200099d83390190565b80516001600160a01b03811681146200038c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620003c4578181015183820152602001620003aa565b50506000910152565b600080600060608486031215620003e357600080fd5b620003ee8462000374565b9250620003fe6020850162000374565b60408501519092506001600160401b03808211156200041c57600080fd5b818601915086601f8301126200043157600080fd5b81518181111562000446576200044662000391565b604051601f8201601f19908116603f0116810190838211818310171562000471576200047162000391565b816040528281528960208487010111156200048b57600080fd5b6200049e836020830160208801620003a7565b80955050505050509250925092565b60008251620004c1818460208701620003a7565b9190910192915050565b6080516104b7620004e66000396000601001526104b76000f3fe608060405261000c61000e565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610093576000357fffffffff000000000000000000000000000000000000000000000000000000001663278f794360e11b14610089576040516334ad5dbb60e21b815260040160405180910390fd5b61009161009b565b565b6100916100ca565b6000806100ab3660048184610342565b8101906100b89190610382565b915091506100c682826100da565b5050565b6100916100d5610135565b61016d565b6100e382610191565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561012d576101288282610225565b505050565b6100c661029b565b60006101687f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e80801561018c573d6000f35b3d6000fd5b806001600160a01b03163b6000036101cc57604051634c9c8ce360e01b81526001600160a01b03821660048201526024015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516102429190610452565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091506102928583836102ba565b95945050505050565b34156100915760405163b398979f60e01b815260040160405180910390fd5b6060826102cf576102ca82610319565b610312565b81511580156102e657506001600160a01b0384163b155b1561030f57604051639996b31560e01b81526001600160a01b03851660048201526024016101c3565b50805b9392505050565b8051156103295780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6000808585111561035257600080fd5b8386111561035f57600080fd5b5050820193919092039150565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561039557600080fd5b82356001600160a01b03811681146103ac57600080fd5b9150602083013567ffffffffffffffff808211156103c957600080fd5b818501915085601f8301126103dd57600080fd5b8135818111156103ef576103ef61036c565b604051601f8201601f19908116603f011681019083821181831017156104175761041761036c565b8160405282815288602084870101111561043057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000825160005b818110156104735760208186018101518583015201610459565b50600092019182525091905056fea2646970667358221220007cf27b93d4d99a0e50a460fd5dd9899916fcdfcfaa03803d2c821c78b19ad564736f6c63430008140033608060405234801561001057600080fd5b5060405161056238038061056283398101604081905261002f916100be565b806001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161006e565b50506100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610465806100fd6000396000f3fe60806040526004361061005a5760003560e01c80639623609d116100435780639623609d146100a3578063ad3cb1cc146100b6578063f2fde38b1461010c57600080fd5b8063715018a61461005f5780638da5cb5b14610076575b600080fd5b34801561006b57600080fd5b5061007461012c565b005b34801561008257600080fd5b506000546040516001600160a01b0390911681526020015b60405180910390f35b6100746100b13660046102b2565b610140565b3480156100c257600080fd5b506100ff6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b60405161009a91906103ce565b34801561011857600080fd5b506100746101273660046103e8565b6101af565b6101346101f2565b61013e600061021f565b565b6101486101f2565b60405163278f794360e11b81526001600160a01b03841690634f1ef2869034906101789086908690600401610405565b6000604051808303818588803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b5050505050505050565b6101b76101f2565b6001600160a01b0381166101e657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6101ef8161021f565b50565b6000546001600160a01b0316331461013e5760405163118cdaa760e01b81523360048201526024016101dd565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146101ef57600080fd5b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156102c757600080fd5b83356102d281610287565b925060208401356102e281610287565b9150604084013567ffffffffffffffff808211156102ff57600080fd5b818601915086601f83011261031357600080fd5b8135818111156103255761032561029c565b604051601f8201601f19908116603f0116810190838211818310171561034d5761034d61029c565b8160405282815289602084870101111561036657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b6000815180845260005b818110156103ae57602081850181015186830182015201610392565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006103e16020830184610388565b9392505050565b6000602082840312156103fa57600080fd5b81356103e181610287565b6001600160a01b03831681526040602082015260006104276040830184610388565b94935050505056fea264697066735822122009c44af5988384f46804759913ec6c7012105d278f0ccba385192cd92bf1dd6e64736f6c63430008140033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360e06040523480156200001157600080fd5b5060405162004e7238038062004e7283398101604081905262000034916200012a565b6001600160a01b0380841660805282811660a052811660c0526200005762000060565b5050506200017e565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff1615620000b15760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b0390811614620001115780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6001600160a01b03811681146200011157600080fd5b6000806000606084860312156200014057600080fd5b83516200014d8162000114565b6020850151909350620001608162000114565b6040850151909250620001738162000114565b809150509250925092565b60805160a05160c051614c31620002416000396000818161019f015281816102fe01528181610602015281816106e0015281816107bc015281816108ff01528181610c8c015281816113c20152818161145e015281816115c5015281816116480152818161198b01528181611c2001528181611f090152818161286201528181612c010152612c7f0152600081816104b00152613b8101526000818161037b0152818161104d015281816111fa01528181612103015261345d0152614c316000f3fe60806040526004361061018f5760003560e01c806392fe8e70116100d6578063bb558a9f1161007f578063e038e6dc11610059578063e038e6dc14610514578063e9361c0814610527578063f96fe9251461054757600080fd5b8063bb558a9f146104a1578063c22159b6146104d4578063d0e380f2146104f457600080fd5b8063a0d376cf116100b0578063a0d376cf1461044e578063a3c7271a1461046e578063b066ea7c1461048e57600080fd5b806392fe8e70146103c4578063964f987c146103e45780639ab6156b1461042e57600080fd5b8063659ac74b1161013857806381c2fdfb1161011257806381c2fdfb1461033757806388cc58e41461036c5780638efc2b2c1461039f57600080fd5b8063659ac74b146102b75780636c9c0078146102ef5780638129fc1c1461032257600080fd5b80633dc8f8ec116101695780633dc8f8ec146102575780634b8018701461027757806362c067671461029757600080fd5b80631a24f9a9146101e45780632075ad22146102175780632a443fae1461023757600080fd5b366101df57336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101dd57604051636c8cb79360e01b815260040160405180910390fd5b005b600080fd5b3480156101f057600080fd5b506102046101ff36600461414d565b61057b565b6040519081526020015b60405180910390f35b61022a6102253660046141b8565b61087d565b60405161020e9190614254565b34801561024357600080fd5b5061020461025236600461414d565b610add565b34801561026357600080fd5b5061022a61027236600461414d565b610c0a565b34801561028357600080fd5b5061020461029236600461414d565b610e10565b3480156102a357600080fd5b506101dd6102b2366004614267565b61104b565b3480156102c357600080fd5b506102d76102d23660046142d4565b6111bb565b6040516001600160a01b03909116815260200161020e565b3480156102fb57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b34801561032e57600080fd5b506101dd611272565b34801561034357600080fd5b50610357610352366004614330565b61138c565b6040805192835260208301919091520161020e565b34801561037857600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b6103b26103ad3660046143eb565b6114e5565b60405161020e9695949392919061442e565b3480156103d057600080fd5b5061022a6103df36600461414d565b611734565b3480156103f057600080fd5b506104046103ff36600461449b565b611879565b604080516001600160801b039485168152928416602084015292169181019190915260600161020e565b34801561043a57600080fd5b5061020461044936600461414d565b611909565b34801561045a57600080fd5b5061040461046936600461449b565b611a7d565b34801561047a57600080fd5b506103b26104893660046143eb565b611ac1565b61020461049c3660046141b8565b611b9e565b3480156104ad57600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102d7565b3480156104e057600080fd5b506103576104ef3660046144e6565b611d18565b34801561050057600080fd5b5061020461050f3660046145ae565b611e0e565b6102046105223660046141b8565b611e87565b34801561053357600080fd5b506101dd610542366004614633565b612101565b34801561055357600080fd5b506105676105623660046146c8565b612224565b60405162ffffff909116815260200161020e565b600081804211156105ad5760405163dae7ca7d60e01b8152600481018290524260248201526044015b60405180910390fd5b845151859015806105c5575080515160208201515114155b806105e257506040810151518151516105df90600161470a565b14155b156106005760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106106455761064561471d565b60200260200101516001600160a01b0316146106a4576040860151865151815181106106735761067361471d565b602002602001015160405163cfec0e0160e01b81526004016105a491906001600160a01b0391909116815260200190565b60006106bd876000015188602001518960400151612290565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610727573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074b9190614733565b905061079188604001516000815181106107675761076761471d565b602002602001015133846000815181106107835761078361471d565b60200260200101518d6123a0565b6107a58289602001518a60400151306123c1565b6040516370a0823160e01b815230600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561080b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082f9190614733565b610839919061474c565b945084891115610866576040516313fab00360e21b8152600481018a9052602481018690526044016105a4565b6108708786612840565b5050505095945050505050565b606081804211156108aa5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b845151859015806108c2575080515160208201515114155b806108df57506040810151518151516108dc90600161470a565b14155b156108fd5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015160008151811061093e5761093e61471d565b60200260200101516001600160a01b03161461096b5785604001516000815181106106735761067361471d565b6000610984876000015188602001518960400151612290565b905061099a87602001518289604001518b6128d4565b935034846000815181106109b0576109b061471d565b602002602001015111156109fe5734846000815181106109d2576109d261471d565b602002602001015160405163194ee21960e31b81526004016105a4929190918252602082015260400190565b610a3c81600081518110610a1457610a1461471d565b602002602001015185600081518110610a2f57610a2f61471d565b6020026020010151612bf3565b6000610a538289602001518a60400151888b612caa565b905088811015610a80576040516313fab00360e21b8152600481018a9052602481018290526044016105a4565b84600081518110610a9357610a9361471d565b6020026020010151341115610ad157610ad13386600081518110610ab957610ab961471d565b602002602001015134610acc919061474c565b612fc7565b50505050949350505050565b60008180421115610b0a5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610b22575080515160208201515114155b80610b3f5750604081015151815151610b3c90600161470a565b14155b15610b5d5760405163b91b4d4d60e01b815260040160405180910390fd5b6000610b76876000015188602001518960400151612290565b9050610bbc8760400151600081518110610b9257610b9261471d565b60200260200101513383600081518110610bae57610bae61471d565b60200260200101518c6123a0565b610bd1898289602001518a604001518a613059565b935083881115610bfe576040516313fab00360e21b815260048101899052602481018590526044016105a4565b50505095945050505050565b60608180421115610c375760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610c4f575080515160208201515114155b80610c6c5750604081015151815151610c6990600161470a565b14155b15610c8a5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866040015187600001515181518110610ccf57610ccf61471d565b60200260200101516001600160a01b031614610cfd576040860151865151815181106106735761067361471d565b6000610d16876000015188602001518960400151612290565b9050610d2c87602001518289604001518c6128d4565b93508784600081518110610d4257610d4261471d565b60200260200101511115610d645787846000815181106109d2576109d261471d565b610dc28760400151600081518110610d7e57610d7e61471d565b60200260200101513383600081518110610d9a57610d9a61471d565b602002602001015187600081518110610db557610db561471d565b60200260200101516123a0565b6000610dd98289602001518a604001518830612caa565b905089811015610e06576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b6108708782612840565b60008180421115610e3d5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580610e55575080515160208201515114155b80610e725750604081015151815151610e6f90600161470a565b14155b15610e905760405163b91b4d4d60e01b815260040160405180910390fd5b6000610ea9876000015188602001518960400151612290565b905060008760400151825181518110610ec457610ec461471d565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190614733565b9050610f858960400151600081518110610f5b57610f5b61471d565b60200260200101513385600081518110610f7757610f7761471d565b60200260200101518e6123a0565b610f99838a602001518b604001518b6123c1565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110069190614733565b611010919061474c565b9550858a111561103d576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b505050505095945050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110cd919061475f565b6001600160a01b0316336001600160a01b0316146110fe57604051635d9515b960e11b815260040160405180910390fd5b6001600160a01b03831661112e57600019811461111b578061111d565b475b90506111298282612fc7565b505050565b600019811461113d57806111a5565b6040516370a0823160e01b81523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa158015611181573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a59190614733565b90506111296001600160a01b03841683836133c6565b60405163659ac74b60e01b81526001600160a01b038581166004830152848116602483015262ffffff8416604483015261ffff831660648301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063659ac74b906084016020604051808303816000875af1158015611245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611269919061475f565b95945050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000810460ff16159067ffffffffffffffff166000811580156112bd5750825b905060008267ffffffffffffffff1660011480156112da5750303b155b9050811580156112e8575080155b156113065760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561133a57845468ff00000000000000001916680100000000000000001785555b831561138557845468ff000000000000000019168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b60008082804211156113ba5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b60006113ed8c7f00000000000000000000000000000000000000000000000000000000000000008d61ffff16600161342c565b90506000816001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561142f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611453919061475f565b6001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031614905080611492579899985b6000806114a3848e8e8e8e30613519565b91509150826114b35780826114b6565b81815b80975081985050505050506114cc8c878661367b565b6114d68684612840565b50509850989650505050505050565b60008080806060808261151a6114fe60208a018a61477c565b61150e60408b0160208c0161477c565b8a60400135600161342c565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561155a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061157e919061475f565b6001600160a01b031661159460208a018a61477c565b6001600160a01b0316146115bb5760405163b33f8ab960e01b815260040160405180910390fd5b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166115f260208a018a61477c565b6001600160a01b031614801561160b5750348860600135145b1561163e5761162f61162360408a0160208b0161477c565b33838b608001356123a0565b6116398134612bf3565b611715565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001661167860408a0160208b0161477c565b6001600160a01b03161480156116915750348860800135145b156116b25761162f6116a660208a018a61477c565b33838b606001356123a0565b6116bf602089018961477c565b6116cf60408a0160208b0161477c565b60405163d0a4f13b60e01b81526001600160a01b03928316600482015291166024820152606089013560448201526080890135606482015234608482015260a4016105a4565b61171f888261369c565b949d939c50919a509850965090945092505050565b606081804211156117615760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611779575080515160208201515114155b80611796575060408101515181515161179390600161470a565b14155b156117b45760405163b91b4d4d60e01b815260040160405180910390fd5b60006117cd876000015188602001518960400151612290565b90506117e387602001518289604001518c6128d4565b935087846000815181106117f9576117f961471d565b6020026020010151111561181b5787846000815181106109d2576109d261471d565b6118358760400151600081518110610d7e57610d7e61471d565b600061184c8289602001518a60400151888b612caa565b905089811015610870576040516313fab00360e21b8152600481018b9052602481018290526044016105a4565b604051630abcd78360e41b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063abcd7830906044015b606060405180830381865afa1580156118d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fa9190614799565b91989097509095509350505050565b600081804211156119365760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b8451518590158061194e575080515160208201515114155b8061196b575060408101515181515161196890600161470a565b14155b156119895760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151876000015151815181106119ce576119ce61471d565b60200260200101516001600160a01b0316146119fc576040860151865151815181106106735761067361471d565b6000611a15876000015188602001518960400151612290565b9050611a318760400151600081518110610b9257610b9261471d565b611a46898289602001518a6040015130613059565b935083881115611a73576040516313fab00360e21b815260048101899052602481018590526044016105a4565b610bfe8685612840565b604051631cee6cdf60e31b81526001600160801b03831660048201528115156024820152600090819081906001600160a01b0387169063e77366f8906044016118b9565b600080808060608082611ada6114fe60208a018a61477c565b9050806001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3e919061475f565b6001600160a01b0316611b5460208a018a61477c565b6001600160a01b031614611b7b5760405163b33f8ab960e01b815260040160405180910390fd5b611b8b6116a660208a018a61477c565b61171561162360408a0160208b0161477c565b60008180421115611bcb5760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611be3575080515160208201515114155b80611c005750604081015151815151611bfd90600161470a565b14155b15611c1e5760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611c5f57611c5f61471d565b60200260200101516001600160a01b031614611c8c5785604001516000815181106106735761067361471d565b6000611ca5876000015188602001518960400151612290565b9050611ccb81600081518110611cbd57611cbd61471d565b602002602001015134612bf3565b611ce0348289602001518a604001518a613059565b935083881115611d0d576040516313fab00360e21b815260048101899052602481018590526044016105a4565b505050949350505050565b6000808280421115611d465760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6000611d598d8d8d61ffff16600161342c565b90506000816001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbf919061475f565b6001600160a01b03168e6001600160a01b0316141590508015611de0579899985b611dee828c8c8c8c8c613519565b90955093508015611dfd579293925b505050995099975050505050505050565b604051634c7cffbd60e01b815262ffffff821660048201526000906001600160a01b03841690634c7cffbd90602401602060405180830381865afa158015611e5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190614733565b90505b92915050565b60008180421115611eb45760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b84515185901580611ecc575080515160208201515114155b80611ee95750604081015151815151611ee690600161470a565b14155b15611f075760405163b91b4d4d60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168660400151600081518110611f4857611f4861471d565b60200260200101516001600160a01b031614611f755785604001516000815181106106735761067361471d565b6000611f8e876000015188602001518960400151612290565b905060008760400151825181518110611fa957611fa961471d565b60209081029190910101516040516370a0823160e01b81526001600160a01b0389811660048301529192506000918316906370a0823190602401602060405180830381865afa158015612000573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120249190614733565b905061203c83600081518110611cbd57611cbd61471d565b612050838a602001518b604001518b6123c1565b6040516370a0823160e01b81526001600160a01b0389811660048301528291908416906370a0823190602401602060405180830381865afa158015612099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120bd9190614733565b6120c7919061474c565b9550858a11156120f4576040516313fab00360e21b8152600481018b9052602481018790526044016105a4565b5050505050949350505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561215f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612183919061475f565b6001600160a01b0316336001600160a01b0316146121b457604051635d9515b960e11b815260040160405180910390fd5b6040516305feb5ff60e21b81526001600160a01b038716906317fad7fc906121ea90309089908990899089908990600401614826565b600060405180830381600087803b15801561220457600080fd5b505af1158015612218573d6000803e3d6000fd5b50505050505050505050565b60405163f5e2932960e01b8152600481018290526000906001600160a01b0384169063f5e2932990602401602060405180830381865afa15801561226c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e7e9190614866565b6060835167ffffffffffffffff8111156122ac576122ac613ecb565b6040519080825280602002602001820160405280156122d5578160200160208202803683370190505b509050600080836000815181106122ee576122ee61471d565b6020026020010151905060005b83518110156123965781925084816001018151811061231c5761231c61471d565b60200260200101519150612364838389848151811061233d5761233d61471d565b60200260200101518985815181106123575761235761471d565b6020026020010151613b40565b8482815181106123765761237661471d565b6001600160a01b03909216602092830291909101909101526001016122fb565b5050509392505050565b80156123bb576123bb6001600160a01b038516848484613c40565b50505050565b6000806000806000866000815181106123dc576123dc61471d565b6020026020010151905060005b8951811015612218578981815181106124045761240461471d565b602002602001015192508881815181106124205761242061471d565b602002602001015194508195508781600101815181106124425761244261471d565b60200260200101519150895181600101146124795789816001018151811061246c5761246c61471d565b602002602001015161247b565b865b9350600085600181111561249157612491614883565b0361273757600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa1580156124d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124fb91906148b0565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015612630576040516370a0823160e01b81526001600160a01b03868116600483015260009184918b16906370a0823190602401602060405180830381865afa158015612577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061259b9190614733565b03905060006125ab828585613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561261157600080fd5b505af1158015612625573d6000803e3d6000fd5b505050505050612730565b6040516370a0823160e01b81526001600160a01b03868116600483015260009183918b16906370a0823190602401602060405180830381865afa15801561267b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061269f9190614733565b03905060006126af828486613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038b811660448401526080606484015260848301919091529192509088169063022c0d9f9060a401600060405180830381600087803b15801561271557600080fd5b505af1158015612729573d6000803e3d6000fd5b5050505050505b5050612838565b826001600160a01b03166353c059a0846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a8919061475f565b60405160e083901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b0391821686831614600482015290871660248201526044016020604051808303816000875af1158015612812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128369190614733565b505b6001016123e9565b8060000361284c575050565b604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156128ae57600080fd5b505af11580156128c2573d6000803e3d6000fd5b505050506128d08282612fc7565b5050565b6060825167ffffffffffffffff8111156128f0576128f0613ecb565b604051908082528060200260200182016040528015612919578160200160208202803683370190505b50905081818551815181106129305761293061471d565b602090810291909101015283515b8015612bea5760008461295260018461474c565b815181106129625761296261471d565b6020026020010151905060008760018461297c919061474c565b8151811061298c5761298c61471d565b602002602001015190506000876001856129a6919061474c565b815181106129b6576129b661471d565b60200260200101519050600060018111156129d3576129d3614883565b8260018111156129e5576129e5614883565b03612b0757600080826001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015612a2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a4f91906148b0565b506001600160701b031691506001600160701b03169150888681518110612a7857612a7861471d565b60200260200101516001600160a01b0316856001600160a01b03161115612a9b57905b6000878781518110612aaf57612aaf61471d565b60200260200101519050612ace838383613d489092919063ffffffff16565b6001600160801b031688612ae360018a61474c565b81518110612af357612af361471d565b602002602001018181525050505050612bd4565b612ba081868681518110612b1d57612b1d61471d565b6020026020010151856001600160a01b0316846001600160a01b03166305e8746d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b91919061475f565b6001600160a01b031614611879565b50506001600160801b031685612bb760018761474c565b81518110612bc757612bc761471d565b6020026020010181815250505b5050508080612be2906148f5565b91505061293e565b50949350505050565b80600003612bff575050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015612c5a57600080fd5b505af1158015612c6e573d6000803e3d6000fd5b506128d09350506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169150849050836133c6565b60008060008060008088600081518110612cc657612cc661471d565b6020026020010151905060005b8b51811015612fb8578b8181518110612cee57612cee61471d565b602002602001015193508a8181518110612d0a57612d0a61471d565b60200260200101519250819550898160010181518110612d2c57612d2c61471d565b602002602001015191508b518160010114612d63578b8160010181518110612d5657612d5661471d565b6020026020010151612d65565b875b94506000836001811115612d7b57612d7b614883565b03612e8657888160010181518110612d9557612d9561471d565b60200260200101519650816001600160a01b0316866001600160a01b03161015612e395760405163022c0d9f60e01b8152600060048201819052602482018990526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a4015b600060405180830381600087803b158015612e1c57600080fd5b505af1158015612e30573d6000803e3d6000fd5b50505050612fb0565b60405163022c0d9f60e01b8152600481018890526000602482018190526001600160a01b03878116604484015260806064840152608483019190915285169063022c0d9f9060a401612e02565b6000846001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ec6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612eea919061475f565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052888316602483015292506000918291612f84918916906353c059a0906044015b6020604051808303816000875af1158015612f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f709190614733565b6001600160801b0381169160809190911c90565b6001600160801b031691506001600160801b031691508215612fa857809950612fac565b8199505b5050505b600101612cd3565b50505050505095945050505050565b80600003612fd3575050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114613020576040519150601f19603f3d011682016040523d82523d6000602084013e613025565b606091505b50509050806111295760405163047b96f760e41b81526001600160a01b0384166004820152602481018390526044016105a4565b600080600080600080876000815181106130755761307561471d565b602002602001015190508a955060005b8a51811015612fb8578a81815181106130a0576130a061471d565b602002602001015192508981815181106130bc576130bc61471d565b602002602001015194508195508881600101815181106130de576130de61471d565b602002602001015191508a518160010114613115578a81600101815181106131085761310861471d565b6020026020010151613117565b875b9350600085600181111561312d5761312d614883565b036132e757600080846001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015613173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061319791906148b0565b506001600160701b031691506001600160701b03169150836001600160a01b0316886001600160a01b03161015613256576131d3898383613cae565b60405163022c0d9f60e01b8152600060048201819052602482018390526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b15801561323957600080fd5b505af115801561324d573d6000803e3d6000fd5b505050506132e0565b613261898284613cae565b60405163022c0d9f60e01b8152600481018290526000602482018190526001600160a01b038981166044840152608060648401526084830191909152919a509086169063022c0d9f9060a401600060405180830381600087803b1580156132c757600080fd5b505af11580156132db573d6000803e3d6000fd5b505050505b50506133be565b6000836001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061334b919061475f565b60405163029e02cd60e51b81526001600160a01b039182168583161460048201819052878316602483015292506000918291613392918816906353c059a090604401612f2d565b6001600160801b031691506001600160801b0316915082156133b6578099506133ba565b8199505b5050505b600101613085565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b1790526123bb8482613de7565b60405163704037bd60e01b81526001600160a01b0385811660048301528481166024830152604482018490526000917f00000000000000000000000000000000000000000000000000000000000000009091169063704037bd90606401608060405180830381865afa1580156134a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134ca919061490c565b6020015190506001600160a01b03811661351157604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b949350505050565b6000806000886001600160a01b031663c9939f5e338689896040518563ffffffff1660e01b81526004016135509493929190614991565b6000604051808303816000875af115801561356f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261359791908101906149cf565b905060005b815181101561362b576135ce8282815181106135ba576135ba61471d565b60200260200101516001600160801b031690565b6135e1906001600160801b03168561470a565b93506136068282815181106135f8576135f861471d565b602002602001015160801c90565b613619906001600160801b03168461470a565b925061362481614a55565b905061359c565b508783108061363957508682105b1561366f576040516318ccfb7760e11b8152600481018990526024810184905260448101889052606481018390526084016105a4565b50965096945050505050565b8060000361368857505050565b6111296001600160a01b03841683836133c6565b600080600080606080876101c00135804211156136d55760405163dae7ca7d60e01b8152600481018290524260248201526044016105a4565b6136e36101408a018a614a6e565b90506136f36101208b018b614a6e565b9050141580613720575061370b6101608a018a614a6e565b905061371b6101208b018b614a6e565b905014155b1561373e5760405163b91b4d4d60e01b815260040160405180910390fd5b62ffffff60e08a0135118061375a575062ffffff6101008a0135115b156137895760405163197a55c760e11b815260e08a013560048201526101008a013560248201526044016105a4565b60006137996101208b018b614a6e565b905067ffffffffffffffff8111156137b3576137b3613ecb565b6040519080825280602002602001820160405280156137dc578160200160208202803683370190505b5090506137ed6101208b018b614a6e565b905067ffffffffffffffff81111561380757613807613ecb565b604051908082528060200260200182016040528015613830578160200160208202803683370190505b5093506000896001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015613873573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138979190614866565b62ffffff169050808b61010001358c60e001350110806138c157508a60e001358b61010001358201105b156138f757604051637d50edab60e11b815260e08c013560048201526101008c01356024820152604481018290526064016105a4565b60005b82518110156139fa5760006139136101208e018e614a6e565b838181106139235761392361471d565b9050602002013583019050600081128061393f575062ffffff81115b15613960576040516370a82e6160e11b8152600481018290526024016105a4565b808783815181106139735761397361471d565b60209081029190910101526139d461398f6101408f018f614a6e565b8481811061399f5761399f61471d565b905060200201358e8061016001906139b79190614a6e565b858181106139c7576139c761471d565b9050602002013583613e57565b8483815181106139e6576139e661471d565b6020908102919091010152506001016138fa565b50506000808a6001600160a01b031663383d15c58d610180016020810190613a22919061477c565b858f6101a0016020810190613a37919061477c565b6040518463ffffffff1660e01b8152600401613a5593929190614ab8565b6000604051808303816000875af1158015613a74573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052613a9c9190810190614b1c565b965090925090506000613aaf8383613e91565b6001600160801b0381169b50608081901c9a50905060a08d01358b1080613ad957508c60c001358a105b15613b15576040516318ccfb7760e11b815260a08e01356004820152602481018c905260c08e01356044820152606481018b90526084016105a4565b6001600160801b0382169850608082901c6001600160801b0316975050505050509295509295509295565b600080826001811115613b5557613b55614883565b03613c345760405163e6a4390560e01b81526001600160a01b03868116600483015285811660248301527f0000000000000000000000000000000000000000000000000000000000000000169063e6a4390590604401602060405180830381865afa158015613bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613bec919061475f565b90506001600160a01b038116613c2f57604051636b2471d160e11b81526001600160a01b03808716600483015285166024820152604481018490526064016105a4565b613511565b6112698585858561342c565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b1790526113858582613de7565b600083600003613cd15760405163b937356b60e01b815260040160405180910390fd5b821580613cdc575081155b15613cfa57604051637b03555560e01b815260040160405180910390fd5b6000613d08856103e5614bc2565b90506000613d168483614bc2565b9050600082613d27876103e8614bc2565b613d31919061470a565b9050613d3d8183614bd9565b979650505050505050565b600083600003613d6b5760405163b937356b60e01b815260040160405180910390fd5b821580613d76575081155b15613d9457604051637b03555560e01b815260040160405180910390fd5b6000613da08585614bc2565b613dac906103e8614bc2565b90506000613dba868561474c565b613dc6906103e5614bc2565b9050613dd28183614bd9565b613ddd90600161470a565b9695505050505050565b600080600052602060008351602085016000875af19050808015613e28573d8015613e1b5760016000511483169250613e22565b843b151592505b50613e38565b3d15613e38573d6000803e3d6000fd5b50806111295760405163197138bd60e11b815260040160405180910390fd5b601882901b6affffffffffffffff00000016605884901b72ffffffffffffffff0000000000000000000000161762ffffff82168117613511565b80820382811180613ead57506001600160801b03808416908216115b15611e815760405163e599af5560e01b815260040160405180910390fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715613f0457613f04613ecb565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715613f3357613f33613ecb565b604052919050565b600067ffffffffffffffff821115613f5557613f55613ecb565b5060051b60200190565b600082601f830112613f7057600080fd5b81356020613f85613f8083613f3b565b613f0a565b82815260059290921b84018101918181019086841115613fa457600080fd5b8286015b84811015613fbf5780358352918301918301613fa8565b509695505050505050565b6001600160a01b0381168114613fdf57600080fd5b50565b8035613fed81613fca565b919050565b600082601f83011261400357600080fd5b81356020614013613f8083613f3b565b82815260059290921b8401810191818101908684111561403257600080fd5b8286015b84811015613fbf57803561404981613fca565b8352918301918301614036565b60006060828403121561406857600080fd5b614070613ee1565b9050813567ffffffffffffffff8082111561408a57600080fd5b61409685838601613f5f565b83526020915081840135818111156140ad57600080fd5b8401601f810186136140be57600080fd5b80356140cc613f8082613f3b565b81815260059190911b820184019084810190888311156140eb57600080fd5b928501925b82841015614117578335600281106141085760008081fd5b825292850192908501906140f0565b808688015250505050604084013591508082111561413457600080fd5b5061414184828501613ff2565b60408301525092915050565b600080600080600060a0868803121561416557600080fd5b8535945060208601359350604086013567ffffffffffffffff81111561418a57600080fd5b61419688828901614056565b93505060608601356141a781613fca565b949793965091946080013592915050565b600080600080608085870312156141ce57600080fd5b84359350602085013567ffffffffffffffff8111156141ec57600080fd5b6141f887828801614056565b935050604085013561420981613fca565b9396929550929360600135925050565b600081518084526020808501945080840160005b838110156142495781518752958201959082019060010161422d565b509495945050505050565b602081526000611e7e6020830184614219565b60008060006060848603121561427c57600080fd5b833561428781613fca565b9250602084013561429781613fca565b929592945050506040919091013590565b62ffffff81168114613fdf57600080fd5b61ffff81168114613fdf57600080fd5b8035613fed816142b9565b600080600080608085870312156142ea57600080fd5b84356142f581613fca565b9350602085013561430581613fca565b92506040850135614315816142a8565b91506060850135614325816142b9565b939692955090935050565b600080600080600080600080610100898b03121561434d57600080fd5b883561435881613fca565b97506020890135614368816142b9565b96506040890135955060608901359450608089013567ffffffffffffffff8082111561439357600080fd5b61439f8c838d01613f5f565b955060a08b01359150808211156143b557600080fd5b506143c28b828c01613f5f565b93505060c08901356143d381613fca565b8092505060e089013590509295985092959890939650565b6000602082840312156143fd57600080fd5b813567ffffffffffffffff81111561441457600080fd5b82016101e0818503121561442757600080fd5b9392505050565b86815285602082015284604082015283606082015260c06080820152600061445960c0830185614219565b82810360a084015261446b8185614219565b9998505050505050505050565b6001600160801b0381168114613fdf57600080fd5b8015158114613fdf57600080fd5b6000806000606084860312156144b057600080fd5b83356144bb81613fca565b925060208401356144cb81614478565b915060408401356144db8161448d565b809150509250925092565b60008060008060008060008060006101208a8c03121561450557600080fd5b893561451081613fca565b985060208a013561452081613fca565b975061452e60408b016142c9565b965060608a0135955060808a0135945060a08a013567ffffffffffffffff8082111561455957600080fd5b6145658d838e01613f5f565b955060c08c013591508082111561457b57600080fd5b506145888c828d01613f5f565b93505061459760e08b01613fe2565b91506101008a013590509295985092959850929598565b600080604083850312156145c157600080fd5b82356145cc81613fca565b915060208301356145dc816142a8565b809150509250929050565b60008083601f8401126145f957600080fd5b50813567ffffffffffffffff81111561461157600080fd5b6020830191508360208260051b850101111561462c57600080fd5b9250929050565b6000806000806000806080878903121561464c57600080fd5b863561465781613fca565b9550602087013561466781613fca565b9450604087013567ffffffffffffffff8082111561468457600080fd5b6146908a838b016145e7565b909650945060608901359150808211156146a957600080fd5b506146b689828a016145e7565b979a9699509497509295939492505050565b600080604083850312156146db57600080fd5b82356146e681613fca565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b80820180821115611e8157611e816146f4565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561474557600080fd5b5051919050565b81810381811115611e8157611e816146f4565b60006020828403121561477157600080fd5b815161442781613fca565b60006020828403121561478e57600080fd5b813561442781613fca565b6000806000606084860312156147ae57600080fd5b83516147b981614478565b60208501519093506147ca81614478565b60408501519092506144db81614478565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561480d57600080fd5b8260051b80836020870137939093016020019392505050565b60006001600160a01b038089168352808816602084015250608060408301526148536080830186886147db565b828103606084015261446b8185876147db565b60006020828403121561487857600080fd5b8151614427816142a8565b634e487b7160e01b600052602160045260246000fd5b80516001600160701b0381168114613fed57600080fd5b6000806000606084860312156148c557600080fd5b6148ce84614899565b92506148dc60208501614899565b9150604084015163ffffffff811681146144db57600080fd5b600081614904576149046146f4565b506000190190565b60006080828403121561491e57600080fd5b6040516080810181811067ffffffffffffffff8211171561494157614941613ecb565b604052825161494f816142b9565b8152602083015161495f81613fca565b602082015260408301516149728161448d565b604082015260608301516149858161448d565b60608201529392505050565b60006001600160a01b038087168352808616602084015250608060408301526149bd6080830185614219565b8281036060840152613d3d8185614219565b600060208083850312156149e257600080fd5b825167ffffffffffffffff8111156149f957600080fd5b8301601f81018513614a0a57600080fd5b8051614a18613f8082613f3b565b81815260059190911b82018301908381019087831115614a3757600080fd5b928401925b82841015613d3d57835182529284019290840190614a3c565b600060018201614a6757614a676146f4565b5060010190565b6000808335601e19843603018112614a8557600080fd5b83018035915067ffffffffffffffff821115614aa057600080fd5b6020019150600581901b360382131561462c57600080fd5b6000606082016001600160a01b0380871684526020606081860152828751808552608087019150828901945060005b81811015614b0357855183529483019491830191600101614ae7565b5050809450505080851660408501525050949350505050565b600080600060608486031215614b3157600080fd5b835192506020808501519250604085015167ffffffffffffffff811115614b5757600080fd5b8501601f81018713614b6857600080fd5b8051614b76613f8082613f3b565b81815260059190911b82018301908381019089831115614b9557600080fd5b928401925b82841015614bb357835182529284019290840190614b9a565b80955050505050509250925092565b8082028115828204841417611e8157611e816146f4565b600082614bf657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212207e9d01fc860e5f66611c55f5d328d5c94eed1101c3e84e9bdd64b7604c76cfab64736f6c6343000814003360e06040523480156200001157600080fd5b5060405162002c1338038062002c1383398101604081905262000034916200006f565b6001600160a01b0392831660805290821660a0521660c052620000b9565b80516001600160a01b03811681146200006a57600080fd5b919050565b6000806000606084860312156200008557600080fd5b620000908462000052565b9250620000a06020850162000052565b9150620000b06040850162000052565b90509250925092565b60805160a05160c051612ae66200012d6000396000818160cd0152818161065e01526113cf01526000818161010601528181610400015281816104310152818161117b01526111b4015260008181606e01528181610a8401528181610ab501528181611841015261187a0152612ae66000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806333141d3e1161005057806333141d3e146100cb57806359214226146100f1578063ca56fc721461010457600080fd5b806307da8f571461006c5780630f902a40146100ab575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000005b6040516001600160a01b0390911681526020015b60405180910390f35b6100be6100b936600461245f565b61012a565b6040516100a29190612601565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b6100be6100ff36600461245f565b610eb2565b7f000000000000000000000000000000000000000000000000000000000000000061008e565b61016a6040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600283101561018c57604051632973c80b60e01b815260040160405180910390fd5b8383808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552506101ce915060019050856126e4565b90508067ffffffffffffffff8111156101e9576101e96126f7565b604051908082528060200260200182016040528015610212578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610231576102316126f7565b60405190808252806020026020018201604052801561025a578160200160208202803683370190505b5060408301528067ffffffffffffffff811115610279576102796126f7565b6040519080825280602002602001820160405280156102a2578160200160208202803683370190505b5060608301528067ffffffffffffffff8111156102c1576102c16126f7565b6040519080825280602002602001820160405280156102ea578160200160208202803683370190505b5060c08301528367ffffffffffffffff811115610309576103096126f7565b604051908082528060200260200182016040528015610332578160200160208202803683370190505b5060808301528367ffffffffffffffff811115610351576103516126f7565b60405190808252806020026020018201604052801561037a578160200160208202803683370190505b508260a0018190525082826080015160008151811061039b5761039b61270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a001516000815181106103d3576103d361270d565b60200260200101906001600160801b031690816001600160801b03168152505060005b81811015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610a825760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636622e0d78888858181106104705761047061270d565b90506020020160208101906104859190612738565b898961049287600161275c565b8181106104a1576104a161270d565b90506020020160208101906104b69190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa158015610501573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261052991908101906127d9565b905060008151118015610562575060008460800151838151811061054f5761054f61270d565b60200260200101516001600160801b0316115b15610a805760005b8151811015610a7e578181815181106105855761058561270d565b602002602001015160600151610a6c57600088886105a486600161275c565b8181106105b3576105b361270d565b90506020020160208101906105c89190612738565b6001600160a01b03168383815181106105e3576105e361270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a0d376cf84848151811061069d5761069d61270d565b602002602001015160200151886080015187815181106106bf576106bf61270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa925050508015610740575060408051601f3d908101601f1916820190925261073d918101906128f5565b60015b15610a6a576001600160801b0383161580156107945750608089015161076788600161275c565b815181106107775761077761270d565b60200260200101516001600160801b0316826001600160801b0316115b15610a6657608089015182906107ab89600161275c565b815181106107bb576107bb61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106107ed576107ed61270d565b6020026020010151602001518960200151888151811061080f5761080f61270d565b60200260200101906001600160a01b031690816001600160a01b0316815250508585815181106108415761084161270d565b60200260200101516000015161ffff16896040015188815181106108675761086761270d565b60200260200101818152505060018960600151888151811061088b5761088b61270d565b602002602001019060018111156108a4576108a4612559565b908160018111156108b7576108b7612559565b8152505060008686815181106108cf576108cf61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610918573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093c9190612937565b9050610998828b60a001518a815181106109585761095861270d565b602002602001015161096a919061295c565b6001600160801b0316828c604001518b8151811061098a5761098a61270d565b602002602001015188611cc7565b60a08b01516109a88a600161275c565b815181106109b8576109b861270d565b60200260200101906001600160801b031690816001600160801b031681525050610a2e8a6080015189815181106109f1576109f161270d565b60200260200101516001600160801b0316836001600160801b0316670de0b6b3a7640000610a1f9190612983565b610a2991906129b0565b611d15565b8a60c001518981518110610a4457610a4461270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80610a76816129d2565b91505061056a565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615610e975760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663e6a43905888885818110610af457610af461270d565b9050602002016020810190610b099190612738565b8989610b1687600161275c565b818110610b2557610b2561270d565b9050602002016020810190610b3a9190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015610b85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba991906128d8565b90506001600160a01b03811615801590610be95750600084608001518381518110610bd657610bd661270d565b60200260200101516001600160801b0316115b15610e9557600080610c52838a8a87818110610c0757610c0761270d565b9050602002016020810190610c1c9190612738565b8b8b610c2989600161275c565b818110610c3857610c3861270d565b9050602002016020810190610c4d9190612738565b611d44565b91509150600082118015610c665750600081115b15610e92576000610c9e87608001518681518110610c8657610c8661270d565b60200260200101516001600160801b03168484611e12565b6080880151909150610cb186600161275c565b81518110610cc157610cc161270d565b60200260200101516001600160801b0316811115610e9057610ce281611d15565b6080880151610cf287600161275c565b81518110610d0257610d0261270d565b60200260200101906001600160801b031690816001600160801b0316815250508387602001518681518110610d3957610d3961270d565b60200260200101906001600160a01b031690816001600160a01b031681525050610da5610a298860a001518781518110610d7557610d7561270d565b60200260200101516103e5610d8a91906129eb565b6001600160801b0316610d9f866103e8612983565b85611eac565b60a0880151610db587600161275c565b81518110610dc557610dc561270d565b60200260200101906001600160801b031690816001600160801b031681525050660aa87bee5380008760c001518681518110610e0357610e0361270d565b60200260200101906001600160801b031690816001600160801b031681525050600087606001518681518110610e3b57610e3b61270d565b60200260200101906001811115610e5457610e54612559565b90816001811115610e6757610e67612559565b81525050600087604001518681518110610e8357610e8361270d565b6020026020010181815250505b505b50505b505b80610ea1816129d2565b9150506103f6565b50509392505050565b610ef26040518060e00160405280606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6002831015610f1457604051632973c80b60e01b815260040160405180910390fd5b838380806020026020016040519081016040528093929190818152602001838360200280828437600092018290525093855250610f56915060019050856126e4565b90508067ffffffffffffffff811115610f7157610f716126f7565b604051908082528060200260200182016040528015610f9a578160200160208202803683370190505b5060208301528067ffffffffffffffff811115610fb957610fb96126f7565b604051908082528060200260200182016040528015610fe2578160200160208202803683370190505b5060408301528067ffffffffffffffff811115611001576110016126f7565b60405190808252806020026020018201604052801561102a578160200160208202803683370190505b5060608301528367ffffffffffffffff811115611049576110496126f7565b604051908082528060200260200182016040528015611072578160200160208202803683370190505b5060808301528367ffffffffffffffff811115611091576110916126f7565b6040519080825280602002602001820160405280156110ba578160200160208202803683370190505b5060a08301528067ffffffffffffffff8111156110d9576110d96126f7565b604051908082528060200260200182016040528015611102578160200160208202803683370190505b508260c0018190525082826080015182815181106111225761112261270d565b60200260200101906001600160801b031690816001600160801b031681525050828260a0015182815181106111595761115961270d565b6001600160801b0390921660209283029190910190910152805b8015610ea9577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161561183f5760006001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016636622e0d788886111e66001876126e4565b8181106111f5576111f561270d565b905060200201602081019061120a9190612738565b89898681811061121c5761121c61270d565b90506020020160208101906112319190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401600060405180830381865afa15801561127c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526112a491908101906127d9565b9050600081511180156112dd57506000846080015183815181106112ca576112ca61270d565b60200260200101516001600160801b0316115b1561183d5760005b815181101561183b578181815181106113005761130061270d565b6020026020010151606001516118295760008888858181106113245761132461270d565b90506020020160208101906113399190612738565b6001600160a01b03168383815181106113545761135461270d565b6020026020010151602001516001600160a01b031663da10610c6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561139d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c191906128d8565b6001600160a01b03161490507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663964f987c84848151811061140e5761140e61270d565b602002602001015160200151886080015187815181106114305761143061270d565b60209081029190910101516040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526001600160801b031660248201528315156044820152606401606060405180830381865afa9250505080156114b1575060408051601f3d908101601f191682019092526114ae918101906128f5565b60015b15611827576001600160801b0382161580156114d557506001600160801b03831615155b8015611553575060808901516114ec6001896126e4565b815181106114fc576114fc61270d565b60200260200101516001600160801b0316836001600160801b031610806115535750608089015161152e6001896126e4565b8151811061153e5761153e61270d565b60200260200101516001600160801b03166000145b15611823576080890151839061156a60018a6126e4565b8151811061157a5761157a61270d565b60200260200101906001600160801b031690816001600160801b0316815250508585815181106115ac576115ac61270d565b60200260200101516020015189602001516001896115ca91906126e4565b815181106115da576115da61270d565b60200260200101906001600160a01b031690816001600160a01b03168152505085858151811061160c5761160c61270d565b60200260200101516000015161ffff16896040015160018961162e91906126e4565b8151811061163e5761163e61270d565b6020908102919091010152606089015160019061165b828a6126e4565b8151811061166b5761166b61270d565b6020026020010190600181111561168457611684612559565b9081600181111561169757611697612559565b8152505060008686815181106116af576116af61270d565b6020026020010151602001516001600160a01b031663dbe65edc6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171c9190612937565b90508161177b8b60a001518a815181106117385761173861270d565b60200260200101516001600160801b0316838d6040015160018d61175c91906126e4565b8151811061176c5761176c61270d565b60200260200101518915611cc7565b6117859190612a16565b60a08b015161179560018b6126e4565b815181106117a5576117a561270d565b6001600160801b039092166020928302919091019091015260808a01516117e1906117d160018b6126e4565b815181106109f1576109f161270d565b60c08b01516117f160018b6126e4565b815181106118015761180161270d565b60200260200101906001600160801b031690816001600160801b031681525050505b5050505b505b80611833816129d2565b9150506112e5565b505b505b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031615611cb55760006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663e6a4390588886118ac6001876126e4565b8181106118bb576118bb61270d565b90506020020160208101906118d09190612738565b8989868181106118e2576118e261270d565b90506020020160208101906118f79190612738565b6040516001600160e01b031960e085901b1681526001600160a01b03928316600482015291166024820152604401602060405180830381865afa158015611942573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061196691906128d8565b90506001600160a01b038116158015906119a657506000846080015183815181106119935761199361270d565b60200260200101516001600160801b0316115b15611cb3576000806119f5838a8a6119bf6001896126e4565b8181106119ce576119ce61270d565b90506020020160208101906119e39190612738565b8b8b88818110610c3857610c3861270d565b91509150600082118015611a2e575085608001518481518110611a1a57611a1a61270d565b60200260200101516001600160801b031681115b15611cb0576000611a6687608001518681518110611a4e57611a4e61270d565b60200260200101516001600160801b03168484611f0d565b6080880151909150611a796001876126e4565b81518110611a8957611a8961270d565b60200260200101516001600160801b0316811080611ad757506080870151611ab26001876126e4565b81518110611ac257611ac261270d565b60200260200101516001600160801b03166000145b15611cae57611ae581611d15565b6080880151611af56001886126e4565b81518110611b0557611b0561270d565b6001600160801b039092166020928302919091018201528701518490611b2c6001886126e4565b81518110611b3c57611b3c61270d565b60200260200101906001600160a01b031690816001600160a01b031681525050611bb3611ba88860a001518781518110611b7857611b7861270d565b60200260200101516103e8611b8d91906129eb565b6001600160801b0316611ba2856103e5612983565b86611eac565b610a2990600161275c565b60a0880151611bc36001886126e4565b81518110611bd357611bd361270d565b6001600160801b039092166020928302919091019091015260c0870151660aa87bee53800090611c046001886126e4565b81518110611c1457611c1461270d565b6001600160801b03909216602092830291909101909101526060870151600090611c3f6001886126e4565b81518110611c4f57611c4f61270d565b60200260200101906001811115611c6857611c68612559565b90816001811115611c7b57611c7b612559565b9052506040870151600090611c916001886126e4565b81518110611ca157611ca161270d565b6020026020010181815250505b505b50505b505b80611cbf81612a36565b915050611173565b60008115611cf057611ce9610a29866080611ce28888611fac565b9190611ff0565b9050611d0d565b611d0a610a296080611d028787611fac565b88919061205d565b90505b949350505050565b806001600160801b0381168114611d3f57604051632f45db3d60e21b815260040160405180910390fd5b919050565b6000806000611d538585612087565b509050600080876001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa158015611d97573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dbb9190612a6b565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff169150826001600160a01b0316876001600160a01b031614611e00578082611e03565b81815b90999098509650505050505050565b600083600003611e355760405163b937356b60e01b815260040160405180910390fd5b821580611e40575081155b15611e5e57604051637b03555560e01b815260040160405180910390fd5b6000611e6c856103e5612983565b90506000611e7a8483612983565b9050600082611e8b876103e8612983565b611e95919061275c565b9050611ea181836129b0565b979650505050505050565b600083600003611ecf5760405163b937356b60e01b815260040160405180910390fd5b821580611eda575081155b15611ef857604051637b03555560e01b815260040160405180910390fd5b82611f038386612983565b611d0d91906129b0565b600083600003611f305760405163b937356b60e01b815260040160405180910390fd5b821580611f3b575081155b15611f5957604051637b03555560e01b815260040160405180910390fd5b6000611f658585612983565b611f71906103e8612983565b90506000611f7f86856126e4565b611f8b906103e5612983565b9050611f9781836129b0565b611fa290600161275c565b9695505050505050565b600061271071ffff00000000000000000000000000000000608084901b1604600160801b0162ffffff8416627fffff1901611fe78282612112565b95945050505050565b6000806000611fff868661237c565b9150915081600014612015578360ff1682901c92505b8015610ea957600160ff85161b811061204157604051638e471a8960e01b815260040160405180910390fd5b8360ff166101000361ffff1681901b8301925050509392505050565b600060ff831684811b9061ffff6101008290031686901c90611fa29087906001901b86858561239b565b600080826001600160a01b0316846001600160a01b0316036120bc5760405163827524a360e01b815260040160405180910390fd5b826001600160a01b0316846001600160a01b0316106120dc5782846120df565b83835b90925090506001600160a01b03821661210b57604051632268279160e11b815260040160405180910390fd5b9250929050565b60008060008360000361212e5750600160801b91506123769050565b50826000811215612140579015906000035b6210000081101561233057600160801b9250846001600160801b0381111561216a57911591600019045b600182161561217b5792830260801c925b800260801c60028216156121915792830260801c925b800260801c60048216156121a75792830260801c925b800260801c60088216156121bd5792830260801c925b800260801c60108216156121d35792830260801c925b800260801c60208216156121e95792830260801c925b800260801c60408216156121ff5792830260801c925b8002608090811c908216156122165792830260801c925b800260801c61010082161561222d5792830260801c925b800260801c6102008216156122445792830260801c925b800260801c61040082161561225b5792830260801c925b800260801c6108008216156122725792830260801c925b800260801c6110008216156122895792830260801c925b800260801c6120008216156122a05792830260801c925b800260801c6140008216156122b75792830260801c925b800260801c6180008216156122ce5792830260801c925b800260801c620100008216156122e65792830260801c925b800260801c620200008216156122fe5792830260801c925b800260801c620400008216156123165792830260801c925b800260801c6208000082161561232e5792830260801c925b505b8260000361235f57604051631dba598d60e11b8152600481018690526024810185905260440160405180910390fd5b8161236a5782611fe7565b611fe7836000196129b0565b92915050565b6000806000198385098385029250828110838203039150509250929050565b6000816000036123bc578383816123b4576123b461299a565b049050611fe7565b8382106123dc576040516313eae71560e01b815260040160405180910390fd5b600084868809600186198101871660008190038190049091018683119095039490940294038390049390931760029290940460038102831880820284030280820284030280820284030280820284030280820284030290810290920390910292909202949350505050565b6001600160801b038116811461245c57600080fd5b50565b60008060006040848603121561247457600080fd5b833567ffffffffffffffff8082111561248c57600080fd5b818601915086601f8301126124a057600080fd5b8135818111156124af57600080fd5b8760208260051b85010111156124c457600080fd5b602092830195509350508401356124da81612447565b809150509250925092565b600081518084526020808501945080840160005b8381101561251e5781516001600160a01b0316875295820195908201906001016124f9565b509495945050505050565b600081518084526020808501945080840160005b8381101561251e5781518752958201959082019060010161253d565b634e487b7160e01b600052602160045260246000fd5b60008151808452602080850194508084016000805b848110156125bc578251600281106125aa57634e487b7160e01b83526021600452602483fd5b88529683019691830191600101612584565b50959695505050505050565b600081518084526020808501945080840160005b8381101561251e5781516001600160801b0316875295820195908201906001016125dc565b602081526000825160e0602084015261261e6101008401826124e5565b90506020840151601f198085840301604086015261263c83836124e5565b925060408601519150808584030160608601526126598383612529565b92506060860151915080858403016080860152612676838361256f565b925060808601519150808584030160a086015261269383836125c8565b925060a08601519150808584030160c08601526126b083836125c8565b925060c08601519150808584030160e086015250611fe782826125c8565b634e487b7160e01b600052601160045260246000fd5b81810381811115612376576123766126ce565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038116811461245c57600080fd5b60006020828403121561274a57600080fd5b813561275581612723565b9392505050565b80820180821115612376576123766126ce565b6040516080810167ffffffffffffffff81118282101715612792576127926126f7565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156127c1576127c16126f7565b604052919050565b80518015158114611d3f57600080fd5b600060208083850312156127ec57600080fd5b825167ffffffffffffffff8082111561280457600080fd5b818501915085601f83011261281857600080fd5b81518181111561282a5761282a6126f7565b612838848260051b01612798565b818152848101925060079190911b83018401908782111561285857600080fd5b928401925b81841015611ea157608084890312156128765760008081fd5b61287e61276f565b845161ffff811681146128915760008081fd5b8152848601516128a081612723565b8187015260406128b18682016127c9565b9082015260606128c28682016127c9565b908201528352608093909301929184019161285d565b6000602082840312156128ea57600080fd5b815161275581612723565b60008060006060848603121561290a57600080fd5b835161291581612447565b602085015190935061292681612447565b60408501519092506124da81612447565b60006020828403121561294957600080fd5b815162ffffff8116811461275557600080fd5b6001600160801b0382811682821603908082111561297c5761297c6126ce565b5092915050565b8082028115828204841417612376576123766126ce565b634e487b7160e01b600052601260045260246000fd5b6000826129cd57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016129e4576129e46126ce565b5060010190565b6001600160801b03818116838216028082169190828114612a0e57612a0e6126ce565b505092915050565b6001600160801b0381811683821601908082111561297c5761297c6126ce565b600081612a4557612a456126ce565b506000190190565b80516dffffffffffffffffffffffffffff81168114611d3f57600080fd5b600080600060608486031215612a8057600080fd5b612a8984612a4d565b9250612a9760208501612a4d565b9150604084015163ffffffff811681146124da57600080fdfea2646970667358221220280ce5c3a51df51d3532758a7092160825971fe28e518b459a6000be2ec6a44064736f6c63430008140033746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a31746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a32746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a31370000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a32746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a34746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3134746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a31746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a36746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a39746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a34746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3130746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3133746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a33746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a32746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a31746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3136746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a31746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a38746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a33746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a37746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a34746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3131746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3138746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a35746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a34746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a33746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a32746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3132746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a33746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3135a2646970667358221220e59d7b5d8d9a82f8af815662bd53ae83ae7a7622bf9e4343885090cc6beef6c464736f6c63430008140033",
    "sourceMap": "142:23215:128:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6366:149:140;;;;;;:::i;:::-;-1:-1:-1;;;;;;6467:41:140;-1:-1:-1;;;6467:41:140;;6366:149;;;;470:14:169;;463:22;445:41;;433:2;418:18;6366:149:140;;;;;;;;303:281:128;;;:::i;:::-;;11102:1226;;;:::i;2567:928::-;;;;;;:::i;:::-;;:::i;2907:134:6:-;;;:::i;:::-;;;;;;;:::i;9488:1608:128:-;;;;;;:::i;:::-;;:::i;16989:1030::-;;;:::i;3823:151:6:-;;;:::i;:::-;;;;;;;:::i;3684:133::-;;;:::i;3385:141::-;;;:::i;18025:1089:128:-;;;:::i;12786:168:140:-;;;;;;:::i;:::-;;:::i;:::-;;;4844:25:169;;;4832:2;4817:18;12786:168:140;4698:177:169;19120:3010:128;;;:::i;3193:186:6:-;;;:::i;:::-;;;;;;;:::i;7874:1608:128:-;;;;;;:::i;:::-;;:::i;3047:140:6:-;;;:::i;:::-;;;;;;;:::i;12960:205:140:-;;;;;;:::i;:::-;;:::i;:::-;;;8011:8:169;7999:21;;;7981:40;;7969:2;7954:18;12960:205:140;7837:190:169;1580:981:128;;;;;;:::i;:::-;;:::i;4432:1715::-;;;;;;:::i;:::-;;:::i;3532:146:6:-;;;:::i;:::-;;;;;;;:::i;3501:925:128:-;;;;;;:::i;:::-;;:::i;13540:2407::-;;;:::i;10811:1171:140:-;;;;;;:::i;:::-;;:::i;12334:1200:128:-;;;:::i;2754:147:6:-;;;:::i;2459:141::-;;;:::i;13171:134:140:-;;;;;;:::i;:::-;;:::i;15953:1030:128:-;;;:::i;1243:204:2:-;;;:::i;6153:1715:128:-;;;;;;:::i;:::-;;:::i;22136:1219::-;;;;;;:::i;:::-;;:::i;2606:142:6:-;;;:::i;590:984:128:-;;;;;;:::i;:::-;;:::i;1016:26:13:-;;;;;;;;;11988:792:140;;;;;;:::i;:::-;;:::i;303:281:128:-;346:13;:11;:13::i;:::-;397:7;;406:4;;384:27;;-1:-1:-1;;;;;397:7:128;;;;;;;406:4;384:12;:27::i;:::-;370:11;:41;;-1:-1:-1;;;;;;370:41:128;-1:-1:-1;;;;;370:41:128;;;;;;;;;422:69;;435:3;;;;1185:7:140;255:4:128;;484:2;;422:12;:69::i;:::-;509:7;;:22;;-1:-1:-1;;;509:22:128;;-1:-1:-1;;;;;527:3:128;12107:55:169;;509:22:128;;;12089:74:169;509:7:128;;;;;;;;:17;;12062:18:169;;509:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:27;:55;;;;-1:-1:-1;540:4:128;;:19;;-1:-1:-1;;;540:19:128;;-1:-1:-1;;;;;555:3:128;12107:55:169;;540:19:128;;;12089:74:169;540:4:128;;;;:14;;12062:18:169;;540:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:24;509:55;501:76;;;;-1:-1:-1;;;501:76:128;;12565:2:169;501:76:128;;;12547:21:169;12604:1;12584:18;;;12577:29;12642:10;12622:18;;;12615:38;12670:18;;501:76:128;;;;;;;;;303:281::o;11102:1226::-;11173:11;;11146:73;;11159:5;;;;-1:-1:-1;;;;;11173:11:128;1185:7:140;255:4:128;;11212:2;;11146:12;:73::i;:::-;11290:11;;:39;;-1:-1:-1;;;11290:39:128;;11250:4;11290:39;;;12867:66:169;;;11290:11:128;12949:18:169;;;12942:50;11250:4:128;11230:17;;-1:-1:-1;;;;;11290:11:128;;;;:22;;12840:18:169;;11290:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11353:7:128;;11264:65;;-1:-1:-1;11340:38:128;;-1:-1:-1;11353:7:128;;;-1:-1:-1;;;;;11353:7:128;11363:3;-1:-1:-1;;;;;11340:38:128;;:4;:38::i;:::-;11389:13;;-1:-1:-1;;;11389:13:128;;-1:-1:-1;;;;;11398:3:128;12107:55:169;11389:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;11389:8:128;;;12062:18:169;;11389:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11412:7:128;;11437:11;;11412:49;;-1:-1:-1;;;11412:49:128;;-1:-1:-1;;;;;11437:11:128;;;11412:49;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;11412:7:128;;;;;;-1:-1:-1;11412:16:128;;-1:-1:-1;13674:18:169;;11412:49:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11471:11:128;;:27;;-1:-1:-1;;;11471:27:128;;:11;:27;;;14422:41:169;-1:-1:-1;;;;;11494:3:128;14499:55:169;;14479:18;;;14472:83;11471:11:128;;;;:16;;14395:18:169;;11471:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11539:11:128;;11509:64;;11525:5;;;;-1:-1:-1;;;;;11539:11:128;1185:7:140;11560:4:128;11566:2;;11509:15;:64::i;:::-;11631:11;;:29;;;-1:-1:-1;;;11631:29:128;;;;11585:20;;;;-1:-1:-1;;;;;11631:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11702:7;;:33;;-1:-1:-1;;;11702:33:128;;-1:-1:-1;;;;;11728:5:128;12107:55:169;;11702:33:128;;;12089:74:169;11584:76:128;;-1:-1:-1;11584:76:128;;-1:-1:-1;11671:139:128;;11702:7;;;;;;:17;;12062:18:169;;11702:33:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11776:1;11748:24;11760:12;11748:9;:24;:::i;:::-;11747:30;;;;:::i;:::-;11737:40;;-1:-1:-1;;;;;11737:40:128;255:4;11737:40;:::i;:::-;11779:1;11671:139;;;;;;;;;;;;;;;;;:17;:139::i;:::-;11851:4;;:30;;-1:-1:-1;;;11851:30:128;;-1:-1:-1;;;;;11874:5:128;12107:55:169;;11851:30:128;;;12089:74:169;11820:137:128;;11851:4;;:14;;12062:18:169;;11851:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11923:1;11894:25;11907:12;11894:10;:25;:::i;:::-;11893:31;;;;:::i;:::-;11883:41;;-1:-1:-1;;;;;11883:41:128;292:4;11883:41;:::i;:::-;11926:1;11820:137;;;;;;;;;;;;;;;;;:17;:137::i;:::-;11994:11;;11968:60;;11984:3;;;;-1:-1:-1;;;;;11994:11:128;1185:7:140;12015:4:128;12021:2;;11968:15;:60::i;:::-;12070:7;;:31;;-1:-1:-1;;;12070:31:128;;-1:-1:-1;;;;;12096:3:128;12107:55:169;;12070:31:128;;;12089:74:169;12039:137:128;;12070:7;;;;;:17;;12062:18:169;;12070:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12142:1;12114:24;12126:12;12114:9;:24;:::i;:::-;12113:30;;;;:::i;:::-;12103:40;;-1:-1:-1;;;;;12103:40:128;255:4;12103:40;:::i;:::-;12145:1;12039:137;;;;;;;;;;;;;;;;;:17;:137::i;:::-;12217:4;;:28;;-1:-1:-1;;;12217:28:128;;-1:-1:-1;;;;;12240:3:128;12107:55:169;;12217:28:128;;;12089:74:169;12186:135:128;;12217:4;;:14;;12062:18:169;;12217:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12287:1;12258:25;12271:12;12258:10;:25;:::i;:::-;12257:31;;;;:::i;:::-;12247:41;;-1:-1:-1;;;;;12247:41:128;292:4;12247:41;:::i;:::-;12290:1;12186:135;;;;;;;;;;;;;;;;;:17;:135::i;:::-;11136:1192;;;;11102:1226::o;2567:928::-;2676:11;;:38;;-1:-1:-1;;;2676:38:128;;-1:-1:-1;;;;;12885:47:169;;2676:38:128;;;12867:66:169;2676:11:128;12949:18:169;;;12942:50;2632:20:128;;;;-1:-1:-1;;;;;2676:11:128;;;;:22;;12840:18:169;;2676:38:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2631:83:128;;-1:-1:-1;2631:83:128;-1:-1:-1;;;;;;;;;;;;2724:9:128;-1:-1:-1;;;;;2734:13:128;;;;;;:34;;-1:-1:-1;;;;;;2751:17:128;;;2734:34;2724:45;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;2724:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2793:7:128;;2780:39;;-1:-1:-1;2793:7:128;;;-1:-1:-1;;;;;2793:7:128;;-1:-1:-1;2803:5:128;-1:-1:-1;;;;;2780:39:128;;:4;:39::i;:::-;2830:15;;-1:-1:-1;;;2830:15:128;;-1:-1:-1;;;;;2839:5:128;12107:55:169;2830:15:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;2830:8:128;;;12062:18:169;;2830:15:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2855:7:128;;2880:11;;2855:48;;-1:-1:-1;;;2855:48:128;;-1:-1:-1;;;;;2880:11:128;;;2855:48;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;2855:7:128;;;;;;-1:-1:-1;2855:16:128;;-1:-1:-1;13674:18:169;;2855:48:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2913:11:128;;:29;;-1:-1:-1;;;2913:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;2936:5:128;14499:55:169;;14479:18;;;14472:83;2913:11:128;;;;:16;;14395:18:169;;2913:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2962:7:128;;:24;;-1:-1:-1;;;2962:24:128;;-1:-1:-1;;;;;2980:5:128;12107:55:169;;2962:24:128;;;12089:74:169;2953:61:128;;2962:7;;;;;:17;;12062:18:169;;2962:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2988:1;2953:61;;;;;;;;;;;;;;;;;:8;:61::i;:::-;3033:4;;:21;;-1:-1:-1;;;3033:21:128;;-1:-1:-1;;;;;3048:5:128;12107:55:169;;3033:21:128;;;12089:74:169;3024:66:128;;3033:4;;:14;;12062:18:169;;3033:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3056:9;-1:-1:-1;;;;;3024:66:128;;;;;;;;;;;;;;;;;;:8;:66::i;:::-;3127:11;;3101:60;;3117:3;;;;-1:-1:-1;;;;;3127:11:128;1185:7:140;3148:4:128;3154:2;;3101:15;:60::i;:::-;3198:11;;:29;;;-1:-1:-1;;;3198:29:128;;;;3173:20;;-1:-1:-1;;;;;3198:11:128;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3257:7:128;;:22;;-1:-1:-1;;;3257:22:128;;-1:-1:-1;;;;;3275:3:128;12107:55:169;;3257:22:128;;;12089:74:169;3172:55:128;;-1:-1:-1;;;3257:7:128;;;;;;;;:17;;12062:18:169;;3257:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3308:4;;:19;;-1:-1:-1;;;3308:19:128;;-1:-1:-1;;;;;3323:3:128;12107:55:169;;3308:19:128;;;12089:74:169;3238:41:128;;-1:-1:-1;;;3308:4:128;;;;:14;;12062:18:169;;3308:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3289:38;;3338:77;3347:8;3378:12;-1:-1:-1;;;;;3357:33:128;3367:8;-1:-1:-1;;;;;3357:18:128;255:4;3357:18;;;;:::i;:::-;:33;;;;:::i;:::-;3338:77;;;;;;;;;;;;;;;;;:8;:77::i;:::-;3425:63;3434:8;3444:19;-1:-1:-1;;;;;3444:19:128;;292:4;3444:19;:::i;:::-;3425:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;2621:874;;;;;2567:928;:::o;2907:134:6:-;2954:33;3018:16;2999:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2999:35:6;;;;;;;;;;;;;;;;;;;;;;;2907:134;:::o;9488:1608:128:-;9623:11;;:40;;-1:-1:-1;;;9623:40:128;;-1:-1:-1;;;;;12885:47:169;;9623:40:128;;;12867:66:169;9577:21:128;12949:18:169;;;12942:50;;;9577:21:128;;;-1:-1:-1;;;;;9623:11:128;;;;:22;;12840:18:169;;9623:40:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9576:87:128;;-1:-1:-1;9576:87:128;-1:-1:-1;;;;;;;;;;;;9673:9:128;-1:-1:-1;;;;;9683:18:128;;;:36;;;;;9718:1;9705:10;-1:-1:-1;;;;;9705:14:128;;9683:36;9673:47;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;9673:47:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9744:7:128;;9731:33;;-1:-1:-1;9744:7:128;;;-1:-1:-1;;;;;9744:7:128;;-1:-1:-1;9754:3:128;9759:4;9731;:33::i;:::-;9787:4;;9774:30;;-1:-1:-1;;;;;9787:4:128;9794:3;9799:4;9774;:30::i;:::-;9815:13;;-1:-1:-1;;;9815:13:128;;-1:-1:-1;;;;;9824:3:128;12107:55:169;9815:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;9815:8:128;;;12062:18:169;;9815:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9838:4:128;;9860:11;;9838:46;;-1:-1:-1;;;9838:46:128;;-1:-1:-1;;;;;9860:11:128;;;9838:46;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;9838:4:128;;;-1:-1:-1;9838:13:128;;-1:-1:-1;13674:18:169;;9838:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9894:11:128;;:30;;-1:-1:-1;;;9894:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;9918:5:128;14499:55:169;;14479:18;;;14472:83;9894:11:128;;;;:16;;14395:18:169;;9894:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9944:7:128;;:24;;-1:-1:-1;;;9944:24:128;;-1:-1:-1;;;;;9962:5:128;12107:55:169;;9944:24:128;;;12089:74:169;9935::128;;9944:7;;;;;:17;;12062:18:169;;9944:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9970:10;-1:-1:-1;;;;;9935:74:128;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;10067:11;;:39;;-1:-1:-1;;;10067:39:128;;-1:-1:-1;;;;;12885:47:169;;10067:39:128;;;12867:66:169;10067:11:128;12949:18:169;;;12942:50;10021:21:128;;;;-1:-1:-1;;;;;10067:11:128;;;;:22;;12840:18:169;;10067:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10020:86:128;;-1:-1:-1;10020:86:128;-1:-1:-1;;;;;;;;;;;;10116:9:128;-1:-1:-1;;;;;10126:18:128;;;:36;;;;;10161:1;10148:10;-1:-1:-1;;;;;10148:14:128;;10126:36;10116:47;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;10116:47:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10174:13:128;;-1:-1:-1;;;10174:13:128;;-1:-1:-1;;;;;10183:3:128;12107:55:169;10174:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;10174:8:128;-1:-1:-1;10174:8:128;;-1:-1:-1;12062:18:169;;10174:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;10197:7:128;;10222:11;;10197:49;;-1:-1:-1;;;10197:49:128;;-1:-1:-1;;;;;10222:11:128;;;10197:49;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;10197:7:128;;;;;;-1:-1:-1;10197:16:128;;-1:-1:-1;13674:18:169;;10197:49:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10256:11:128;;:29;;-1:-1:-1;;;10256:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;10279:5:128;14499:55:169;;14479:18;;;14472:83;10256:11:128;;;;:16;;14395:18:169;;10256:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10321:4:128;;:21;;-1:-1:-1;;;10321:21:128;;-1:-1:-1;;;;;10336:5:128;12107:55:169;;10321:21:128;;;12089:74:169;-1:-1:-1;;10321:4:128;;:14;;12062:18:169;;10321:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10296:46;;10352:64;10361:14;10377:10;-1:-1:-1;;;;;10352:64:128;;;;;;;;;;;;;;;;;;:8;:64::i;:::-;10453:11;;10427:60;;10443:3;;;;-1:-1:-1;;;;;10453:11:128;1185:7:140;10474:4:128;10480:2;;10427:15;:60::i;:::-;10545:11;;:29;;;-1:-1:-1;;;10545:29:128;;;;10499:20;;;;-1:-1:-1;;;;;10545:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10594:7;;10620:11;;10594:39;;-1:-1:-1;;;10594:39:128;;-1:-1:-1;;;;;10620:11:128;;;10594:39;;;12089:74:169;10498:76:128;;-1:-1:-1;10498:76:128;;-1:-1:-1;10585:91:128;;10594:7;;;;;;;;:17;;12062:18:169;;10594:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10635:12;-1:-1:-1;;;;;10585:91:128;;;;;;;;;;;;;;;;;;:8;:91::i;:::-;10695:4;;10718:11;;10695:36;;-1:-1:-1;;;10695:36:128;;-1:-1:-1;;;;;10718:11:128;;;10695:36;;;12089:74:169;10686:88:128;;10695:4;;;;;:14;;12062:18:169;;10695:36:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10733:12;-1:-1:-1;;;;;10686:88:128;;;;;;;;;;;;;;;;;;:8;:88::i;:::-;10804:7;;:22;;-1:-1:-1;;;10804:22:128;;-1:-1:-1;;;;;10822:3:128;12107:55:169;;10804:22:128;;;12089:74:169;-1:-1:-1;;10804:7:128;;;;;:17;;12062:18:169;;10804:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10855:4;;:19;;-1:-1:-1;;;10855:19:128;;-1:-1:-1;;;;;10870:3:128;12107:55:169;;10855:19:128;;;12089:74:169;10785:41:128;;-1:-1:-1;;;10855:4:128;;;;:14;;12062:18:169;;10855:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10836:38;;10885:95;10894:8;10939:12;-1:-1:-1;;;;;10904:47:128;10926:10;-1:-1:-1;;;;;10904:32:128;10914:9;-1:-1:-1;;;;;10904:19:128;255:4;10904:19;;;;:::i;:::-;:32;;;;:::i;:::-;:47;;;;:::i;:::-;10885:95;;;;;;;;;;;;;;;;;:8;:95::i;:::-;10990:99;10999:8;11048:12;-1:-1:-1;;;;;11009:51:128;11031:14;11019:9;-1:-1:-1;;;;;11009:19:128;292:4;11009:19;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;10990:99;;;;;;;;;;;;;;;;;:8;:99::i;:::-;9566:1530;;;;;;;;;9488:1608;;:::o;16989:1030::-;17094:11;;17076:30;;17051:22;;-1:-1:-1;;;;;17094:11:128;;17076:30;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;17076:30:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17130:7:128;;17051:55;;-1:-1:-1;17117:47:128;;17130:7;;;-1:-1:-1;;;;;17130:7:128;17051:55;17159:4;17117;:47::i;:::-;17187:4;;17174:44;;-1:-1:-1;;;;;17187:4:128;17202:8;17213:4;17174;:44::i;:::-;17229:27;;-1:-1:-1;;;17229:27:128;;-1:-1:-1;;;;;12107:55:169;;17229:27:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;17229:8:128;;;12062:18:169;;17229:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;17266:11:128;;17320:54;;;17331:1;17320:54;;;17046:36:169;;;17334:8:128;17098:18:169;;;17091:59;933:31:105;17166:18:169;;;17159:34;17209:18;;;;17202:45;;;;17320:54:128;;;;;;;;;;17018:19:169;;;17320:54:128;;;;-1:-1:-1;;;17266:109:128;;;-1:-1:-1;;;;;17266:11:128;;;;-1:-1:-1;17266:21:128;;-1:-1:-1;17266:109:128;;17288:8;;1057:15:118;;17266:109:128;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17387:20;17409;17433:11;;;;;;;;;-1:-1:-1;;;;;17433:11:128;-1:-1:-1;;;;;17433:27:128;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17386:76;;;;17473:20;17496:7;;;;;;;;;-1:-1:-1;;;;;17496:7:128;-1:-1:-1;;;;;17496:23:128;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17532:22;;-1:-1:-1;;;17532:22:128;;-1:-1:-1;;;;;12107:55:169;;17532:22:128;;;12089:74:169;17473:48:128;;-1:-1:-1;;;;;;;;;;;;17532:8:128;;;12062:18:169;;17532:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17564:11;;;;;;;;;-1:-1:-1;;;;;17564:11:128;-1:-1:-1;;;;;17564:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17617:7:128;;:31;;-1:-1:-1;;;17617:31:128;;-1:-1:-1;;;;;12107:55:169;;;17617:31:128;;;12089:74:169;17608:82:128;;17617:7;;;;;:17;;12062:18:169;;17617:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17650:1;17608:82;;;;;;;;;;;;;;;;;:8;:82::i;:::-;17709:4;;:28;;-1:-1:-1;;;17709:28:128;;-1:-1:-1;;;;;12107:55:169;;;17709:28:128;;;12089:74:169;17700:94:128;;17709:4;;:14;;12062:18:169;;17709:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17739:16;17754:1;17739:12;:16;:::i;:::-;-1:-1:-1;;;;;17700:94:128;;;;;;;;;;;;;;;;;;:8;:94::i;:::-;17836:11;;:29;;;-1:-1:-1;;;17836:29:128;;;;-1:-1:-1;;;;;17836:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17805:60;;;;;;;;17876:63;17885:12;-1:-1:-1;;;;;17876:63:128;17899:1;17876:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;17949;17958:12;-1:-1:-1;;;;;17949:63:128;17972:1;17949:63;;;;;;;;;;;;;;;;;:8;:63::i;3823:151:6:-;3872:42;3948:19;3926:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3926:41:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:151;:::o;3684:133::-;3730:33;3794:16;3775:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3775:35:6;;;;;;;;;;;;;;;;;;;;;;3684:133;:::o;3385:141::-;3433:35;3501:18;3480:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3480:39:6;;;;;;;;;;;;;;;;;;;;;;3385:141;:::o;18025:1089:128:-;18133:11;;18115:30;;18090:22;;-1:-1:-1;;;;;18133:11:128;;18115:30;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;18115:30:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18169:7:128;;18090:55;;-1:-1:-1;18156:47:128;;18169:7;;;-1:-1:-1;;;;;18169:7:128;18090:55;18198:4;18156;:47::i;:::-;18226:4;;18213:44;;-1:-1:-1;;;;;18226:4:128;18241:8;18252:4;18213;:44::i;:::-;18268:27;;-1:-1:-1;;;18268:27:128;;-1:-1:-1;;;;;12107:55:169;;18268:27:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;18268:8:128;;;12062:18:169;;18268:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;18305:11:128;;-1:-1:-1;;;;;18305:11:128;;-1:-1:-1;18305:21:128;;-1:-1:-1;18340:8:128;1035:38:118;18372:61:128;;;18383:8;18372:61;;;18661:34:169;;;18711:18;;;18704:43;;;;933:31:105;18763:18:169;;;18756:34;18431:1:128;18806:18:169;;;18799:45;18596:19;;18372:61:128;;;;;;;;;;;;18305:138;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18455:20;18477;18501:11;;;;;;;;;-1:-1:-1;;;;;18501:11:128;-1:-1:-1;;;;;18501:27:128;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18454:76;;;;18541:20;18564:7;;;;;;;;;-1:-1:-1;;;;;18564:7:128;-1:-1:-1;;;;;18564:23:128;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18600:22;;-1:-1:-1;;;18600:22:128;;-1:-1:-1;;;;;12107:55:169;;18600:22:128;;;12089:74:169;18541:48:128;;-1:-1:-1;;;;;;;;;;;;18600:8:128;;;12062:18:169;;18600:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18632:11;;;;;;;;;-1:-1:-1;;;;;18632:11:128;-1:-1:-1;;;;;18632:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;18685:7:128;;:31;;-1:-1:-1;;;18685:31:128;;-1:-1:-1;;;;;12107:55:169;;;18685:31:128;;;12089:74:169;18676:100:128;;18685:7;;;;;:17;;12062:18:169;;18685:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18718:16;18733:1;18718:12;:16;:::i;:::-;-1:-1:-1;;;;;18676:100:128;;;;;;;;;;;;;;;;;;:8;:100::i;:::-;18795:4;;:28;;-1:-1:-1;;;18795:28:128;;-1:-1:-1;;;;;12107:55:169;;;18795:28:128;;;12089:74:169;18786:97:128;;18795:4;;:14;;12062:18:169;;18795:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18825:16;18840:1;18825:12;:16;:::i;:::-;-1:-1:-1;;;;;18786:97:128;;;;;;;;;;;;;;;;;;:8;:97::i;:::-;18925:11;;:29;;;-1:-1:-1;;;18925:29:128;;;;-1:-1:-1;;;;;18925:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18894:60;;;;;;;;18965:66;18974:12;-1:-1:-1;;;;;18965:66:128;18988:1;18965:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;19041;19050:12;-1:-1:-1;;;;;19041:66:128;19064:1;19041:66;;;;;;;;;;;;;;;;;:8;:66::i;12786:168:140:-;12857:7;12892:1;12883:6;:10;;;:24;;;;;12906:1;12897:6;:10;;;12883:24;:64;;12932:15;12941:6;12932;:15;:::i;:::-;12883:64;;;12928:1;12910:15;12919:6;12910;:15;:::i;:::-;:19;;;;:::i;:::-;12876:71;;;;12786:168;;;;;:::o;19120:3010:128:-;19197:7;;19184:42;;19197:7;;;-1:-1:-1;;;;;19197:7:128;19215:3;19221:4;19184;:42::i;:::-;19237:13;;-1:-1:-1;;;19237:13:128;;-1:-1:-1;;;;;19246:3:128;12107:55:169;19237:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;19237:8:128;;;12062:18:169;;19237:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19260:7:128;;19285:11;;19260:44;;-1:-1:-1;;;19260:44:128;;-1:-1:-1;;;;;19285:11:128;;;19260:44;;;19364:74:169;19299:4:128;19454:18:169;;;19447:34;19260:7:128;;;;;;-1:-1:-1;19260:16:128;;-1:-1:-1;19337:18:169;;19260:44:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19314:11:128;;:27;;-1:-1:-1;;;19314:27:128;;:11;:27;;;14422:41:169;-1:-1:-1;;;;;19337:3:128;14499:55:169;;14479:18;;;14472:83;19314:11:128;;;;:16;;14395:18:169;;19314:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;19351:11;;;;;;;;;-1:-1:-1;;;;;19351:11:128;-1:-1:-1;;;;;19351:22:128;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19433:11:128;;:29;;;-1:-1:-1;;;19433:29:128;;;;19387:20;;;;-1:-1:-1;;;;;19433:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19386:76;;;;19472:28;19503:12;19472:43;;19526:65;19535:12;-1:-1:-1;;;;;19526:65:128;19549:1;19526:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;19601;19610:12;-1:-1:-1;;;;;19601:65:128;19624:1;19601:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;19716:11;;:25;;;-1:-1:-1;;;19716:25:128;;;;19678:16;;;;-1:-1:-1;;;;;19716:11:128;;;;:23;;:25;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19677:64;;;;19752:20;19775:7;;;;;;;;;-1:-1:-1;;;;;19775:7:128;-1:-1:-1;;;;;19775:23:128;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19811:22;;-1:-1:-1;;;19811:22:128;;-1:-1:-1;;;;;12107:55:169;;19811:22:128;;;12089:74:169;19752:48:128;;-1:-1:-1;;;;;;;;;;;;19811:8:128;;;12062:18:169;;19811:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19843:11;;;;;;;;;-1:-1:-1;;;;;19843:11:128;-1:-1:-1;;;;;19843:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19936:11:128;;:25;;;-1:-1:-1;;;19936:25:128;;;;19888:21;;;;-1:-1:-1;;;;;19936:11:128;;;;:23;;:25;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19887:74;;;;19972:73;19981:13;-1:-1:-1;;;;;19972:73:128;19996:8;-1:-1:-1;;;;;19972:73:128;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;20055;20064:13;-1:-1:-1;;;;;20055:73:128;20079:8;-1:-1:-1;;;;;20055:73:128;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;20148:7;;:31;;-1:-1:-1;;;20148:31:128;;-1:-1:-1;;;;;12107:55:169;;;20148:31:128;;;12089:74:169;20139:99:128;;20148:7;;;;;:17;;12062:18:169;;20148:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20181:16;20196:1;20181:12;:16;:::i;:::-;-1:-1:-1;;;;;20139:99:128;;;;;;;;;;;;;;;;;;:8;:99::i;:::-;20257:4;;:28;;-1:-1:-1;;;20257:28:128;;-1:-1:-1;;;;;12107:55:169;;;20257:28:128;;;12089:74:169;20248:81:128;;20257:4;;:14;;12062:18:169;;20257:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20287:1;20248:81;;;;;;;;;;;;;;;;;:8;:81::i;:::-;20371:11;;:29;;;-1:-1:-1;;;20371:29:128;;;;-1:-1:-1;;;;;20371:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20340:60;;;;;;;;20411:65;20420:12;-1:-1:-1;;;;;20411:65:128;20434:1;20411:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;20486;20495:12;-1:-1:-1;;;;;20486:65:128;20509:1;20486:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;20575:4;;20562:39;;-1:-1:-1;;;;;20575:4:128;20590:3;20596:4;20562;:39::i;:::-;20612:13;;-1:-1:-1;;;20612:13:128;;-1:-1:-1;;;;;20621:3:128;12107:55:169;20612:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;20612:8:128;;;12062:18:169;;20612:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20635:4:128;;20657:11;;20635:41;;-1:-1:-1;;;20635:41:128;;-1:-1:-1;;;;;20657:11:128;;;20635:41;;;19364:74:169;20671:4:128;19454:18:169;;;19447:34;20635:4:128;;;-1:-1:-1;20635:13:128;;-1:-1:-1;19337:18:169;;20635:41:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20686:11:128;;:28;;-1:-1:-1;;;20686:28:128;;:11;:28;;;14422:41:169;-1:-1:-1;;;;;20710:3:128;14499:55:169;;14479:18;;;14472:83;20686:11:128;;;;:16;;14395:18:169;;20686:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20756:11:128;;:29;;;-1:-1:-1;;;20756:29:128;;;;-1:-1:-1;;;;;20756:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20725:60;;;;;;;;20795:28;20826:12;20795:43;;20849:65;20858:12;-1:-1:-1;;;;;20849:65:128;20872:1;20849:65;;;;;;;;;;;;;;;;;:8;:65::i;:::-;20924:66;20933:12;-1:-1:-1;;;;;20924:66:128;20947:1;20924:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;21024:11;;:25;;;-1:-1:-1;;;21024:25:128;;;;-1:-1:-1;;;;;21024:11:128;;;;:23;;:25;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21060:22;;-1:-1:-1;;;21060:22:128;;-1:-1:-1;;;;;12107:55:169;;21060:22:128;;;12089:74:169;21001:48:128;;-1:-1:-1;21001:48:128;-1:-1:-1;;;;;;;;;;;;21060:8:128;;;12062:18:169;;21060:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21092:11;;;;;;;;;-1:-1:-1;;;;;21092:11:128;-1:-1:-1;;;;;21092:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21169:11:128;;:25;;;-1:-1:-1;;;21169:25:128;;;;-1:-1:-1;;;;;21169:11:128;;;;:23;;:25;;;;;;;;;;;;;:11;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21136:58;;;;;;;;21205:74;21214:13;-1:-1:-1;;;;;21205:74:128;21229:8;-1:-1:-1;;;;;21205:74:128;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;21289;21298:13;-1:-1:-1;;;;;21289:74:128;21313:8;-1:-1:-1;;;;;21289:74:128;;;;;;;;;;;;;;;;;;:8;:74::i;:::-;21383:7;;:31;;-1:-1:-1;;;21383:31:128;;-1:-1:-1;;;;;12107:55:169;;;21383:31:128;;;12089:74:169;21374:108:128;;21383:7;;;;;:17;;12062:18:169;;21383:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21416:24;21439:1;21416:20;:24;:::i;:::-;-1:-1:-1;;;;;21374:108:128;;;;;;;;;;;;;;;;;;:8;:108::i;:::-;21501:4;;:28;;-1:-1:-1;;;21501:28:128;;-1:-1:-1;;;;;12107:55:169;;;21501:28:128;;;12089:74:169;21492:97:128;;21501:4;;:14;;12062:18:169;;21501:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21531:16;21546:1;21531:12;:16;:::i;:::-;-1:-1:-1;;;;;21492:97:128;;;;;;;;;;;;;;;;;;:8;:97::i;:::-;21631:11;;:29;;;-1:-1:-1;;;21631:29:128;;;;-1:-1:-1;;;;;21631:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21600:60;;;;;;;;21671:66;21680:12;-1:-1:-1;;;;;21671:66:128;21694:1;21671:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;21747;21756:12;-1:-1:-1;;;;;21747:66:128;21770:1;21747:66;;;;;;;;;;;;;;;;;:8;:66::i;:::-;21824:22;;-1:-1:-1;;;21824:22:128;;-1:-1:-1;;;;;12107:55:169;;21824:22:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;21824:8:128;;;12062:18:169;;21824:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21856:11;;;;;;;;;-1:-1:-1;;;;;21856:11:128;-1:-1:-1;;;;;21856:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;21909:7:128;;:31;;-1:-1:-1;;;21909:31:128;;-1:-1:-1;;;;;12107:55:169;;;21909:31:128;;;12089:74:169;21900:108:128;;21909:7;;;;;:17;;12062:18:169;;21909:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21942:24;21965:1;21942:20;:24;:::i;:::-;-1:-1:-1;;;;;21900:108:128;;;;;;;;;;;;;;;;;;:8;:108::i;:::-;22027:4;;:28;;-1:-1:-1;;;22027:28:128;;-1:-1:-1;;;;;12107:55:169;;;22027:28:128;;;12089:74:169;22018:105:128;;22027:4;;:14;;12062:18:169;;22027:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22057:24;22080:1;22057:20;:24;:::i;:::-;-1:-1:-1;;;;;22018:105:128;;;;;;;;;;;;;;;;;;:8;:105::i;:::-;19174:2956;;;;;;;;;19120:3010::o;3193:186:6:-;3249:56;3346:26;3317:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3317:55:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7874:1608:128;8009:11;;:39;;-1:-1:-1;;;8009:39:128;;-1:-1:-1;;;;;12885:47:169;;8009:39:128;;;12867:66:169;8009:11:128;12949:18:169;;;12942:50;7963:21:128;;;;-1:-1:-1;;;;;8009:11:128;;;;:22;;12840:18:169;;8009:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7962:86:128;;-1:-1:-1;7962:86:128;-1:-1:-1;;;;;;;;;;;;8058:9:128;-1:-1:-1;;;;;8068:18:128;;;:36;;;;;8103:1;8090:10;-1:-1:-1;;;;;8090:14:128;;8068:36;8058:47;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;8058:47:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8129:7:128;;8116:33;;-1:-1:-1;8129:7:128;;;-1:-1:-1;;;;;8129:7:128;;-1:-1:-1;8139:3:128;8144:4;8116;:33::i;:::-;8172:4;;8159:30;;-1:-1:-1;;;;;8172:4:128;8179:3;8184:4;8159;:30::i;:::-;8200:13;;-1:-1:-1;;;8200:13:128;;-1:-1:-1;;;;;8209:3:128;12107:55:169;8200:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;8200:8:128;;;12062:18:169;;8200:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8223:7:128;;8248:11;;8223:49;;-1:-1:-1;;;8223:49:128;;-1:-1:-1;;;;;8248:11:128;;;8223:49;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;8223:7:128;;;;;;-1:-1:-1;8223:16:128;;-1:-1:-1;13674:18:169;;8223:49:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8282:11:128;;:29;;-1:-1:-1;;;8282:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;8305:5:128;14499:55:169;;14479:18;;;14472:83;8282:11:128;;;;:16;;14395:18:169;;8282:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8331:4:128;;:21;;-1:-1:-1;;;8331:21:128;;-1:-1:-1;;;;;8346:5:128;12107:55:169;;8331:21:128;;;12089:74:169;8322:71:128;;8331:4;;:14;;12062:18:169;;8331:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8354:10;-1:-1:-1;;;;;8322:71:128;;;;;;;;;;;;;;;;;;:8;:71::i;:::-;8451:11;;:40;;-1:-1:-1;;;8451:40:128;;-1:-1:-1;;;;;12885:47:169;;8451:40:128;;;12867:66:169;8405:21:128;12949:18:169;;;12942:50;;;8405:21:128;;;-1:-1:-1;;;;;8451:11:128;;;;:22;;12840:18:169;;8451:40:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8404:87:128;;-1:-1:-1;8404:87:128;-1:-1:-1;;;;;;;;;;;;8501:9:128;-1:-1:-1;;;;;8511:18:128;;;:36;;;;;8546:1;8533:10;-1:-1:-1;;;;;8533:14:128;;8511:36;8501:47;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;8501:47:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8559:13:128;;-1:-1:-1;;;8559:13:128;;-1:-1:-1;;;;;8568:3:128;12107:55:169;8559:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;8559:8:128;-1:-1:-1;8559:8:128;;-1:-1:-1;12062:18:169;;8559:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8582:4:128;;8604:11;;8582:46;;-1:-1:-1;;;8582:46:128;;-1:-1:-1;;;;;8604:11:128;;;8582:46;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;8582:4:128;;;-1:-1:-1;8582:13:128;;-1:-1:-1;13674:18:169;;8582:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8638:11:128;;:30;;-1:-1:-1;;;8638:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;8662:5:128;14499:55:169;;14479:18;;;14472:83;8638:11:128;;;;:16;;14395:18:169;;8638:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8704:7:128;;:24;;-1:-1:-1;;;8704:24:128;;-1:-1:-1;;;;;8722:5:128;12107:55:169;;8704:24:128;;;12089:74:169;-1:-1:-1;;8704:7:128;;;;;:17;;12062:18:169;;8704:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8679:49;;8738:64;8747:14;8763:10;-1:-1:-1;;;;;8738:64:128;;;;;;;;;;;;;;;;;;:8;:64::i;:::-;8839:11;;8813:60;;8829:3;;;;-1:-1:-1;;;;;8839:11:128;1185:7:140;8860:4:128;8866:2;;8813:15;:60::i;:::-;8931:11;;:29;;;-1:-1:-1;;;8931:29:128;;;;8885:20;;;;-1:-1:-1;;;;;8931:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8980:7;;9006:11;;8980:39;;-1:-1:-1;;;8980:39:128;;-1:-1:-1;;;;;9006:11:128;;;8980:39;;;12089:74:169;8884:76:128;;-1:-1:-1;8884:76:128;;-1:-1:-1;8971:91:128;;8980:7;;;;;;;;:17;;12062:18:169;;8980:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9021:12;-1:-1:-1;;;;;8971:91:128;;;;;;;;;;;;;;;;;;:8;:91::i;:::-;9081:4;;9104:11;;9081:36;;-1:-1:-1;;;9081:36:128;;-1:-1:-1;;;;;9104:11:128;;;9081:36;;;12089:74:169;9072:88:128;;9081:4;;;;;:14;;12062:18:169;;9081:36:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9119:12;-1:-1:-1;;;;;9072:88:128;;;;;;;;;;;;;;;;;;:8;:88::i;:::-;9190:7;;:22;;-1:-1:-1;;;9190:22:128;;-1:-1:-1;;;;;9208:3:128;12107:55:169;;9190:22:128;;;12089:74:169;-1:-1:-1;;9190:7:128;;;;;:17;;12062:18:169;;9190:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9241:4;;:19;;-1:-1:-1;;;9241:19:128;;-1:-1:-1;;;;;9256:3:128;12107:55:169;;9241:19:128;;;12089:74:169;9171:41:128;;-1:-1:-1;;;9241:4:128;;;;:14;;12062:18:169;;9241:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9222:38;;9271:99;9280:8;9329:12;-1:-1:-1;;;;;9290:51:128;9312:14;9300:9;-1:-1:-1;;;;;9290:19:128;255:4;9290:19;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;9271:99;;;;;;;;;;;;;;;;;:8;:99::i;:::-;9380:95;9389:8;9434:12;-1:-1:-1;;;;;9399:47:128;9421:10;-1:-1:-1;;;;;9399:32:128;9409:9;-1:-1:-1;;;;;9399:19:128;292:4;9399:19;;;;:::i;:::-;:32;;;;:::i;:::-;:47;;;;:::i;:::-;9380:95;;;;;;;;;;;;;;;;;:8;:95::i;3047:140:6:-;3095:34;3162:18;3141:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12960:205:140;13038:6;;13069:12;13080:1;13069:12;;;;:::i;:::-;13056:25;;13105:1;13096:6;:10;;;:33;;13127:2;13096:33;;;13109:11;;;;:2;:11;:::i;:::-;:15;;13123:1;13109:15;:::i;:::-;13091:38;;13147:11;:2;:9;:11::i;:::-;13140:18;12960:205;-1:-1:-1;;;;;12960:205:140:o;1580:981:128:-;-1:-1:-1;;;;;;;;;;;1644:9:128;-1:-1:-1;;;;;1654:13:128;;;;;;:34;;;1684:4;1671:9;-1:-1:-1;;;;;1671:17:128;;;1654:34;1644:45;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;1644:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1745:11:128;;:39;;-1:-1:-1;;;1745:39:128;;-1:-1:-1;;;;;12885:47:169;;1745:39:128;;;12867:66:169;1701:16:128;12949:18:169;;;12942:50;;;1701:16:128;-1:-1:-1;1701:16:128;;-1:-1:-1;;;;;;1745:11:128;;;;:21;;12840:18:169;;1745:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1700:84;;;;;1794:49;1803:13;-1:-1:-1;;;;;1794:49:128;1818:1;1794:49;;;;;;;;;;;;;;;;;:8;:49::i;:::-;1867:4;;1854:36;;-1:-1:-1;;;;;1867:4:128;1874:5;-1:-1:-1;;;;;1854:36:128;;:4;:36::i;:::-;1901:15;;-1:-1:-1;;;1901:15:128;;-1:-1:-1;;;;;1910:5:128;12107:55:169;1901:15:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;1901:8:128;;;12062:18:169;;1901:15:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1926:4:128;;1948:11;;1926:45;;-1:-1:-1;;;1926:45:128;;-1:-1:-1;;;;;1948:11:128;;;1926:45;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;1926:4:128;;;-1:-1:-1;1926:13:128;;-1:-1:-1;13674:18:169;;1926:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1981:11:128;;:30;;-1:-1:-1;;;1981:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;2005:5:128;14499:55:169;;14479:18;;;14472:83;1981:11:128;;;;:16;;14395:18:169;;1981:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2031:4:128;;:21;;-1:-1:-1;;;2031:21:128;;-1:-1:-1;;;;;2046:5:128;12107:55:169;;2031:21:128;;;12089:74:169;2022:57:128;;2031:4;;:14;;12062:18:169;;2031:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2054:1;2022:57;;;;;;;;;;;;;;;;;:8;:57::i;:::-;2098:7;;:24;;-1:-1:-1;;;2098:24:128;;-1:-1:-1;;;;;2116:5:128;12107:55:169;;2098:24:128;;;12089:74:169;2089:68:128;;2098:7;;;;;:17;;12062:18:169;;2098:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2124:9;-1:-1:-1;;;;;2089:68:128;;;;;;;;;;;;;;;;;;:8;:68::i;:::-;2194:11;;2168:60;;2184:3;;;;-1:-1:-1;;;;;2194:11:128;1185:7:140;2215:4:128;2221:2;;2168:15;:60::i;:::-;2266:11;;:29;;;-1:-1:-1;;;2266:29:128;;;;2242:20;;-1:-1:-1;;;;;2266:11:128;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2325:7;;:22;;-1:-1:-1;;;2325:22:128;;-1:-1:-1;;;;;2343:3:128;12107:55:169;;2325:22:128;;;12089:74:169;2239:56:128;;-1:-1:-1;;;;2325:7:128;;;;;;;;:17;;12062:18:169;;2325:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:4;;:19;;-1:-1:-1;;;2376:19:128;;-1:-1:-1;;;;;2391:3:128;12107:55:169;;2376:19:128;;;12089:74:169;2306:41:128;;-1:-1:-1;;;2376:4:128;;;;:14;;12062:18:169;;2376:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2357:38;-1:-1:-1;2406:62:128;2415:8;2425:19;-1:-1:-1;;;;;2425:19:128;;255:4;2425:19;:::i;:::-;2406:62;;;;;;;;;;;;;;;;;:8;:62::i;:::-;2478:76;2487:8;2518:12;-1:-1:-1;;;;;2497:33:128;2507:8;-1:-1:-1;;;;;2497:18:128;292:4;2497:18;;;;:::i;:::-;:33;;;;:::i;:::-;2478:76;;;;;;;;;;;;;;;;;:8;:76::i;4432:1715::-;-1:-1:-1;;;;;;;;;;;4521:9:128;-1:-1:-1;;;;;4531:14:128;;;;;;:36;;;4563:4;4549:10;-1:-1:-1;;;;;4549:18:128;;;4531:36;:54;;;;;4584:1;4571:10;-1:-1:-1;;;;;4571:14:128;;4531:54;:76;;;;;4603:4;4589:10;-1:-1:-1;;;;;4589:18:128;;;4531:76;4521:87;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;4521:87:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4666:11:128;;:39;;-1:-1:-1;;;4666:39:128;;-1:-1:-1;;;;;12885:47:169;;4666:39:128;;;12867:66:169;4666:11:128;12949:18:169;;;12942:50;4620:17:128;;-1:-1:-1;4620:17:128;;-1:-1:-1;;;;;;4666:11:128;;;;:21;;12840:18:169;;4666:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4619:86;;;;;4715:54;4724:14;-1:-1:-1;;;;;4715:54:128;4740:1;4715:54;;;;;;;;;;;;;;;;;:8;:54::i;:::-;4793:7;;4780:33;;4793:7;;;-1:-1:-1;;;;;4793:7:128;4803:3;4808:4;4780;:33::i;:::-;4836:4;;4823:30;;-1:-1:-1;;;;;4836:4:128;4843:3;4848:4;4823;:30::i;:::-;4864:13;;-1:-1:-1;;;4864:13:128;;-1:-1:-1;;;;;4873:3:128;12107:55:169;4864:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;4864:8:128;;;12062:18:169;;4864:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4887:7:128;;4912:11;;4887:49;;-1:-1:-1;;;4887:49:128;;-1:-1:-1;;;;;4912:11:128;;;4887:49;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;4887:7:128;;;;;;-1:-1:-1;4887:16:128;;-1:-1:-1;13674:18:169;;4887:49:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4946:11:128;;:29;;-1:-1:-1;;;4946:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;4969:5:128;14499:55:169;;14479:18;;;14472:83;4946:11:128;;;;:16;;14395:18:169;;4946:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4995:4:128;;:21;;-1:-1:-1;;;4995:21:128;;-1:-1:-1;;;;;5010:5:128;12107:55:169;;4995:21:128;;;12089:74:169;4986:70:128;;4995:4;;:14;;12062:18:169;;4995:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5018:10;-1:-1:-1;;;;;4986:70:128;;;;;;;;;;;;;;;;;;:8;:70::i;:::-;5114:11;;:40;;-1:-1:-1;;;5114:40:128;;-1:-1:-1;;;;;12885:47:169;;5114:40:128;;;12867:66:169;5068:17:128;12949:18:169;;;12942:50;;;5068:17:128;;;-1:-1:-1;;;;;5114:11:128;;;;:21;;12840:18:169;;5114:40:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5067:87;;;;;5164:54;5173:14;-1:-1:-1;;;;;5164:54:128;5189:1;5164:54;;;;;;;;;;;;;;;;;:8;:54::i;:::-;5229:13;;-1:-1:-1;;;5229:13:128;;-1:-1:-1;;;;;5238:3:128;12107:55:169;5229:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;5229:8:128;;;12062:18:169;;5229:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5252:4:128;;5274:11;;5252:46;;-1:-1:-1;;;5252:46:128;;-1:-1:-1;;;;;5274:11:128;;;5252:46;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;5252:4:128;;;-1:-1:-1;5252:13:128;;-1:-1:-1;13674:18:169;;5252:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5308:11:128;;:30;;-1:-1:-1;;;5308:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;5332:5:128;14499:55:169;;14479:18;;;14472:83;5308:11:128;;;;:16;;14395:18:169;;5308:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5374:7:128;;:24;;-1:-1:-1;;;5374:24:128;;-1:-1:-1;;;;;5392:5:128;12107:55:169;;5374:24:128;;;12089:74:169;-1:-1:-1;;5374:7:128;;;;;:17;;12062:18:169;;5374:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5349:49;;5408:63;5417:14;5433:10;-1:-1:-1;;;;;5408:63:128;;;;;;;;;;;;;;;;;;:8;:63::i;:::-;5508:11;;5482:60;;5498:3;;;;-1:-1:-1;;;;;5508:11:128;1185:7:140;5529:4:128;5535:2;;5482:15;:60::i;:::-;5600:11;;:29;;;-1:-1:-1;;;5600:29:128;;;;5554:20;;;;-1:-1:-1;;;;;5600:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5649:7;;5675:11;;5649:39;;-1:-1:-1;;;5649:39:128;;-1:-1:-1;;;;;5675:11:128;;;5649:39;;;12089:74:169;5553:76:128;;-1:-1:-1;5553:76:128;;-1:-1:-1;5640:90:128;;5649:7;;;;;;;;:17;;12062:18:169;;5649:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5690:12;-1:-1:-1;;;;;5640:90:128;;;;;;;;;;;;;;;;;;:8;:90::i;:::-;5749:4;;5772:11;;5749:36;;-1:-1:-1;;;5749:36:128;;-1:-1:-1;;;;;5772:11:128;;;5749:36;;;12089:74:169;5740:87:128;;5749:4;;;;;:14;;12062:18:169;;5749:36:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5787:12;-1:-1:-1;;;;;5740:87:128;;;;;;;;;;;;;;;;;;:8;:87::i;:::-;5857:7;;:22;;-1:-1:-1;;;5857:22:128;;-1:-1:-1;;;;;5875:3:128;12107:55:169;;5857:22:128;;;12089:74:169;-1:-1:-1;;5857:7:128;;;;;:17;;12062:18:169;;5857:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5908:4;;:19;;-1:-1:-1;;;5908:19:128;;-1:-1:-1;;;;;5923:3:128;12107:55:169;;5908:19:128;;;12089:74:169;5838:41:128;;-1:-1:-1;;;5908:4:128;;;;:14;;12062:18:169;;5908:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5889:38;;5938:98;5947:8;5996:12;-1:-1:-1;;;;;5957:51:128;5979:14;5967:9;-1:-1:-1;;;;;5957:19:128;255:4;5957:19;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;5938:98;;;;;;;;;;;;;;;;;:8;:98::i;:::-;6046:94;6055:8;6100:12;-1:-1:-1;;;;;6065:47:128;6087:10;-1:-1:-1;;;;;6065:32:128;6075:9;-1:-1:-1;;;;;6065:19:128;292:4;6065:19;;;;:::i;:::-;:32;;;;:::i;:::-;:47;;;;:::i;:::-;6046:94;;;;;;;;;;;;;;;;;:8;:94::i;3532:146:6:-;3580:40;3653:18;3632:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3632:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:925:128;3610:11;;:39;;-1:-1:-1;;;3610:39:128;;-1:-1:-1;;;;;12885:47:169;;3610:39:128;;;12867:66:169;3566:20:128;12949:18:169;;;12942:50;;;3566:20:128;;;-1:-1:-1;;;;;3610:11:128;;;;:22;;12840:18:169;;3610:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3565:84:128;;-1:-1:-1;3565:84:128;-1:-1:-1;;;;;;;;;;;;3659:9:128;-1:-1:-1;;;;;3669:13:128;;;;;;:34;;-1:-1:-1;;;;;;3686:17:128;;;3669:34;3659:45;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;3659:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3728:4:128;;3715:36;;-1:-1:-1;;;;;;3728:4:128;;-1:-1:-1;3735:5:128;-1:-1:-1;;;;;3715:36:128;;:4;:36::i;:::-;3762:15;;-1:-1:-1;;;3762:15:128;;-1:-1:-1;;;;;3771:5:128;12107:55:169;3762:15:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;3762:8:128;;;12062:18:169;;3762:15:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3787:4:128;;3809:11;;3787:45;;-1:-1:-1;;;3787:45:128;;-1:-1:-1;;;;;3809:11:128;;;3787:45;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;3787:4:128;;;-1:-1:-1;3787:13:128;;-1:-1:-1;13674:18:169;;3787:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3842:11:128;;:30;;-1:-1:-1;;;3842:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;3866:5:128;14499:55:169;;14479:18;;;14472:83;3842:11:128;;;;:16;;14395:18:169;;3842:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3892:4:128;;:21;;-1:-1:-1;;;3892:21:128;;-1:-1:-1;;;;;3907:5:128;12107:55:169;;3892:21:128;;;12089:74:169;3883:58:128;;3892:4;;:14;;12062:18:169;;3892:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3915:1;3883:58;;;;;;;;;;;;;;;;;:8;:58::i;:::-;3960:7;;:24;;-1:-1:-1;;;3960:24:128;;-1:-1:-1;;;;;3978:5:128;12107:55:169;;3960:24:128;;;12089:74:169;3951:69:128;;3960:7;;;;;:17;;12062:18:169;;3960:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3986:9;-1:-1:-1;;;;;3951:69:128;;;;;;;;;;;;;;;;;;:8;:69::i;:::-;4057:11;;4031:60;;4047:3;;;;-1:-1:-1;;;;;4057:11:128;1185:7:140;4078:4:128;4084:2;;4031:15;:60::i;:::-;4129:11;;:29;;;-1:-1:-1;;;4129:29:128;;;;4105:20;;-1:-1:-1;;;;;4129:11:128;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4188:7;;:22;;-1:-1:-1;;;4188:22:128;;-1:-1:-1;;;;;4206:3:128;12107:55:169;;4188:22:128;;;12089:74:169;4102:56:128;;-1:-1:-1;;;;4188:7:128;;;;;;;;:17;;12062:18:169;;4188:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4239:4;;:19;;-1:-1:-1;;;4239:19:128;;-1:-1:-1;;;;;4254:3:128;12107:55:169;;4239:19:128;;;12089:74:169;4169:41:128;;-1:-1:-1;;;4239:4:128;;;;:14;;12062:18:169;;4239:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4220:38;-1:-1:-1;4269:63:128;4278:8;4288:19;-1:-1:-1;;;;;4288:19:128;;255:4;4288:19;:::i;:::-;4269:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;4342:77;4351:8;4382:12;-1:-1:-1;;;;;4361:33:128;4371:8;-1:-1:-1;;;;;4361:18:128;292:4;4361:18;;;;:::i;:::-;:33;;;;:::i;:::-;4342:77;;;;;;;;;;;;;;;;;:8;:77::i;13540:2407::-;13618:11;;13592:60;;13608:3;;;;-1:-1:-1;;;;;13618:11:128;1185:7:140;13639:4:128;13645:2;;13592:15;:60::i;:::-;13685:11;;13662:67;;13675:3;;;;-1:-1:-1;;;;;13685:11:128;1185:7:140;255:4:128;;13685:11;;13662:12;:67::i;:::-;13783:11;;13765:30;;13740:22;;-1:-1:-1;;;;;13783:11:128;;13765:30;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;13765:30:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13819:7:128;;13740:55;;-1:-1:-1;13806:47:128;;13819:7;;;-1:-1:-1;;;;;13819:7:128;13740:55;13848:4;13806;:47::i;:::-;13876:4;;13863:44;;-1:-1:-1;;;;;13876:4:128;13891:8;13902:4;13863;:44::i;:::-;13978:27;;-1:-1:-1;;;13978:27:128;;-1:-1:-1;;;;;12107:55:169;;13978:27:128;;;12089:74:169;13952:8:128;;13962:4;;-1:-1:-1;;;;;;;;;;;13978:8:128;;;12062:18:169;;13978:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14015:11:128;;14068:55;;;-1:-1:-1;;;;;20054:15:169;;;14068:55:128;;;20036:34:169;20106:15;;20086:18;;;20079:43;933:31:105;20138:18:169;;;20131:34;-1:-1:-1;20181:18:169;;;;20174:45;;;;14068:55:128;;;;;;;;;;19955:19:169;;;14068:55:128;;;;-1:-1:-1;;;14015:109:128;;;-1:-1:-1;;;;;14015:11:128;;;;-1:-1:-1;14015:21:128;;-1:-1:-1;14015:109:128;;14037:8;;14015:11;;:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14136:21;14159;14184:11;;;;;;;;;-1:-1:-1;;;;;14184:11:128;-1:-1:-1;;;;;14184:27:128;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14135:78;;-1:-1:-1;14135:78:128;-1:-1:-1;14241:21:128;14135:78;14241:5;:21;:::i;:::-;14264;14272:13;14264:5;:21;:::i;:::-;14324:11;;14223:63;;-1:-1:-1;14223:63:128;-1:-1:-1;14297:71:128;;14310:5;;;;-1:-1:-1;;;;;14324:11:128;1185:7:140;255:4:128;;14324:11;;14297:12;:71::i;:::-;14439:27;;-1:-1:-1;;;14439:27:128;;-1:-1:-1;;;;;12107:55:169;;14439:27:128;;;12089:74:169;14413:8:128;;14423:4;;-1:-1:-1;;;;;;;;;;;14439:8:128;;;12062:18:169;;14439:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14476:11:128;;14529:55;;;-1:-1:-1;;;;;20054:15:169;;;14529:55:128;;;20036:34:169;20106:15;;20086:18;;;20079:43;933:31:105;20138:18:169;;;20131:34;-1:-1:-1;20181:18:169;;;;20174:45;;;;14529:55:128;;;;;;;;;;19955:19:169;;;14529:55:128;;;;-1:-1:-1;;;14476:109:128;;;-1:-1:-1;;;;;14476:11:128;;;;-1:-1:-1;14476:21:128;;-1:-1:-1;14476:109:128;;14498:8;;14476:11;;:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14611:21;14634;14659:11;;;;;;;;;-1:-1:-1;;;;;14659:11:128;-1:-1:-1;;;;;14659:27:128;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14610:78;;-1:-1:-1;14610:78:128;-1:-1:-1;14729:29:128;14745:13;14610:78;14729:29;:::i;:::-;14720:39;;:5;:39;:::i;:::-;14770:29;14786:13;14770;:29;:::i;:::-;14761:39;;:5;:39;:::i;:::-;14876:11;;:45;;-1:-1:-1;;;14876:45:128;;-1:-1:-1;;;;;14906:5:128;20421:55:169;;14876:45:128;;;20403:74:169;1185:7:140;20493:18:169;;;20486:49;14702:99:128;;-1:-1:-1;14702:99:128;;-1:-1:-1;;;;;;;14876:11:128;;;;;:21;;20376:18:169;;14876:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14923:11;;:43;;-1:-1:-1;;;14923:43:128;;-1:-1:-1;;;;;14953:3:128;20421:55:169;;14923:43:128;;;20403:74:169;1185:7:140;20493:18:169;;;20486:49;14923:11:128;;;;:21;;20376:18:169;;14923:43:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15008:11;;14822:145;;-1:-1:-1;14822:145:128;-1:-1:-1;14978:62:128;;14994:5;;;;-1:-1:-1;;;;;15008:11:128;1185:7:140;15029:4:128;15008:11;;14978:15;:62::i;:::-;15076:11;;15050:58;;15066:3;;;;-1:-1:-1;;;;;15076:11:128;1185:7:140;15097:4:128;15076:11;;15050:15;:58::i;:::-;15150:7;;:33;;-1:-1:-1;;;15150:33:128;;-1:-1:-1;;;;;15176:5:128;12107:55:169;;15150:33:128;;;12089:74:169;15119:197:128;;15150:7;;;;;:17;;12062:18:169;;15150:33:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15229:21;15242:8;15229:10;:21;:::i;:::-;15207:18;15215:10;-1:-1:-1;;;;;15207:18:128;;;:::i;:::-;:44;;;;:::i;:::-;15197:54;;255:4;15197:54;:::i;:::-;15265:1;15119:197;;;;;;;;;;;;;;;;;:17;:197::i;:::-;15357:4;;:30;;-1:-1:-1;;;15357:30:128;;-1:-1:-1;;;;;15380:5:128;12107:55:169;;15357:30:128;;;12089:74:169;15326:194:128;;15357:4;;:14;;12062:18:169;;15357:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15433:21;15446:8;15433:10;:21;:::i;:::-;15411:18;15419:10;-1:-1:-1;;;;;15411:18:128;;;:::i;:::-;:44;;;;:::i;:::-;15401:54;;292:4;15401:54;:::i;:::-;15469:1;15326:194;;;;;;;;;;;;;;;;;:17;:194::i;:::-;15562:7;;:31;;-1:-1:-1;;;15562:31:128;;-1:-1:-1;;;;;15588:3:128;12107:55:169;;15562:31:128;;;12089:74:169;15531:201:128;;15562:7;;;;;:17;;12062:18:169;;15562:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15645:21;15658:8;15645:10;:21;:::i;:::-;15625:16;15633:8;-1:-1:-1;;;;;15625:16:128;;;:::i;:::-;:42;;;;:::i;:::-;15607:15;-1:-1:-1;;;;;15607:15:128;;255:4;15607:15;:::i;:::-;:60;;;;:::i;:::-;15681:1;15531:201;;;;;;;;;;;;;;;;;:17;:201::i;:::-;15773:4;;:28;;-1:-1:-1;;;15773:28:128;;-1:-1:-1;;;;;15796:3:128;12107:55:169;;15773:28:128;;;12089:74:169;15742:198:128;;15773:4;;:14;;12062:18:169;;15773:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15853:21;15866:8;15853:10;:21;:::i;:::-;15833:16;15841:8;-1:-1:-1;;;;;15833:16:128;;;:::i;:::-;:42;;;;:::i;:::-;15815:15;-1:-1:-1;;;;;15815:15:128;;292:4;15815:15;:::i;:::-;:60;;;;:::i;:::-;15889:1;15742:198;;;;;;;;;;;;;;;;;:17;:198::i;10811:1171:140:-;11040:13;11056:6;-1:-1:-1;;;;;11056:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11040:34;;11084:13;11100:6;-1:-1:-1;;;;;11100:16:140;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11084:34;;11129:36;11142:6;11151:4;11157:7;11129:4;:36::i;:::-;11175;11188:6;11197:4;11203:7;11175:4;:36::i;:::-;11222:13;11238:28;11251:6;11259;11238:12;:28::i;:::-;11222:44;;11277:40;11334:5;11320:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11320:20:140;;11277:63;;11356:9;11351:412;11371:5;11367:1;:9;11351:412;;;11397:9;11409:26;11415:8;11425:1;11428:6;11409:5;:26::i;:::-;11397:38;;11450:15;11474:8;11468:14;;:2;:14;;;;:28;;;;;11495:1;11486:6;:10;;;11468:28;:74;;11541:1;11468:74;;;11499:39;11500:28;;;;363:4:105;11500:28:140;:::i;:::-;11499:37;:39::i;:::-;11450:92;;11556:15;11580:8;11574:14;;:2;:14;;;;:28;;;;;11601:1;11592:6;:10;;;11574:28;:74;;11647:1;11574:74;;;11605:39;11606:28;;;;363:4:105;11606:28:140;:::i;11605:39::-;11556:92;;11692:60;11729:8;11739;11749:2;11692:36;:60::i;:::-;11663:23;11687:1;11663:26;;;;;;;;:::i;:::-;;;;;;:89;;;;;11383:380;;;11378:3;;;;:::i;:::-;;;11351:412;;;-1:-1:-1;11773:19:140;;-1:-1:-1;;;11773:19:140;;-1:-1:-1;;;;;12107:55:169;;11773:19:140;;;12089:74:169;-1:-1:-1;;;;;;;;;;;11773:13:140;;;12062:18:169;;11773:19:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11802:41:140;;-1:-1:-1;;;11802:41:140;;-1:-1:-1;;;;;19382:55:169;;;11802:41:140;;;19364:74:169;19454:18;;;19447:34;;;11802:15:140;;;-1:-1:-1;11802:15:140;;-1:-1:-1;19337:18:169;;11802:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11853:41:140;;-1:-1:-1;;;11853:41:140;;-1:-1:-1;;;;;19382:55:169;;;11853:41:140;;;19364:74:169;19454:18;;;19447:34;;;11853:15:140;;;;;19337:18:169;;11853:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;317:28:0;309:37;;-1:-1:-1;;;;;11904:12:140;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11929:6;-1:-1:-1;;;;;11929:11:140;;11941:2;11945:23;11970:4;11929:46;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;11929:46:140;;;;;;;;;;;;:::i;:::-;;;;11030:952;;;;10811:1171;;;;;;;;:::o;12334:1200:128:-;12405:11;;12378:73;;12391:5;;;;-1:-1:-1;;;;;12405:11:128;1185:7:140;255:4:128;;12444:2;;12378:12;:73::i;:::-;12522:11;;:40;;-1:-1:-1;;;12522:40:128;;12482:4;12522:40;;;12867:66:169;;;12462:17:128;12949:18:169;;;12942:50;;;12482:4:128;;12462:17;;-1:-1:-1;;;;;12522:11:128;;;;:22;;12840:18:169;;12522:40:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12586:4:128;;12496:66;;-1:-1:-1;12573:35:128;;-1:-1:-1;;;;;;12586:4:128;12593:3;-1:-1:-1;;;;;12573:35:128;;:4;:35::i;:::-;12619:13;;-1:-1:-1;;;12619:13:128;;-1:-1:-1;;;;;12628:3:128;12107:55:169;12619:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;12619:8:128;;;12062:18:169;;12619:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12642:4:128;;12664:11;;12642:46;;-1:-1:-1;;;12642:46:128;;-1:-1:-1;;;;;12664:11:128;;;12642:46;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;12642:4:128;;;-1:-1:-1;12642:13:128;;-1:-1:-1;13674:18:169;;12642:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12698:11:128;;:28;;-1:-1:-1;;;12698:28:128;;:11;:28;;;14422:41:169;-1:-1:-1;;;;;12722:3:128;14499:55:169;;14479:18;;;14472:83;12698:11:128;;;;:16;;14395:18:169;;12698:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12767:11:128;;12737:64;;12753:5;;;;-1:-1:-1;;;;;12767:11:128;1185:7:140;12788:4:128;12794:2;;12737:15;:64::i;:::-;12859:11;;:29;;;-1:-1:-1;;;12859:29:128;;;;12813:20;;;;-1:-1:-1;;;;;12859:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12930:7;;:33;;-1:-1:-1;;;12930:33:128;;-1:-1:-1;;;;;12956:5:128;12107:55:169;;12930:33:128;;;12089:74:169;12812:76:128;;-1:-1:-1;12812:76:128;;-1:-1:-1;12899:140:128;;12930:7;;;;;;:17;;12062:18:169;;12930:33:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13005:1;12976:25;12989:12;12976:10;:25;:::i;:::-;12975:31;;;;:::i;:::-;12965:41;;-1:-1:-1;;;;;12965:41:128;255:4;12965:41;:::i;:::-;13008:1;12899:140;;;;;;;;;;;;;;;;;:17;:140::i;:::-;13080:4;;:30;;-1:-1:-1;;;13080:30:128;;-1:-1:-1;;;;;13103:5:128;12107:55:169;;13080:30:128;;;12089:74:169;13049:136:128;;13080:4;;:14;;12062:18:169;;13080:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13151:1;13123:24;13135:12;13123:9;:24;:::i;:::-;13122:30;;;;:::i;:::-;13112:40;;-1:-1:-1;;;;;13112:40:128;292:4;13112:40;:::i;:::-;13154:1;13049:136;;;;;;;;;;;;;;;;;:17;:136::i;:::-;13222:11;;13196:60;;13212:3;;;;-1:-1:-1;;;;;13222:11:128;1185:7:140;13243:4:128;13249:2;;13196:15;:60::i;:::-;13298:7;;:31;;-1:-1:-1;;;13298:31:128;;-1:-1:-1;;;;;13324:3:128;12107:55:169;;13298:31:128;;;12089:74:169;13267:138:128;;13298:7;;;;;:17;;12062:18:169;;13298:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13371:1;13342:25;13355:12;13342:10;:25;:::i;:::-;13341:31;;;;:::i;:::-;13331:41;;-1:-1:-1;;;;;13331:41:128;255:4;13331:41;:::i;:::-;13374:1;13267:138;;;;;;;;;;;;;;;;;:17;:138::i;:::-;13433:4;;:28;;-1:-1:-1;;;13433:28:128;;-1:-1:-1;;;;;13456:3:128;12107:55:169;;13433:28:128;;;12089:74:169;13415:112:128;;13433:4;;:14;;12062:18:169;;13433:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13502:1;13474:24;13486:12;13474:9;:24;:::i;:::-;13473:30;;;;:::i;:::-;13463:40;;-1:-1:-1;;;;;13463:40:128;292:4;13463:40;:::i;:::-;13505:1;13415:112;;;;;;;;;;;;;;;;;:17;:112::i;2754:147:6:-;2803:40;2876:18;2855:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2855:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2459:141;2508:34;2575:18;2554:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13171:134:140;13272:7;;:26;;-1:-1:-1;;;13272:26:140;;24332:6:169;24320:19;;13272:26:140;;;24302:38:169;13230:11:140;;-1:-1:-1;;;;;13272:7:140;;:17;;24275:18:169;;13272:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13253:45;13171:134;-1:-1:-1;;;;;;;;;13171:134:140:o;15953:1030:128:-;16058:11;;16040:30;;16015:22;;-1:-1:-1;;;;;16058:11:128;;16040:30;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;16040:30:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16094:7:128;;16015:55;;-1:-1:-1;16081:47:128;;16094:7;;;-1:-1:-1;;;;;16094:7:128;16015:55;16123:4;16081;:47::i;:::-;16151:4;;16138:44;;-1:-1:-1;;;;;16151:4:128;16166:8;16177:4;16138;:44::i;:::-;16193:27;;-1:-1:-1;;;16193:27:128;;-1:-1:-1;;;;;12107:55:169;;16193:27:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;16193:8:128;;;12062:18:169;;16193:27:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16230:11:128;;-1:-1:-1;;;;;16230:11:128;;-1:-1:-1;16230:21:128;;-1:-1:-1;16252:8:128;16230:11;16284:54;;;16295:8;16284:54;;;25258:50:169;16305:1:128;25324:18:169;;;25317:45;;;933:31:105;25378:18:169;;;25371:34;25421:18;;;25414:45;;;;25230:19;;16284:54:128;;;;;;;;;;;;16230:109;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16351:20;16373;16397:11;;;;;;;;;-1:-1:-1;;;;;16397:11:128;-1:-1:-1;;;;;16397:27:128;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16350:76;;;;16437:20;16460:7;;;;;;;;;-1:-1:-1;;;;;16460:7:128;-1:-1:-1;;;;;16460:23:128;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16496:22;;-1:-1:-1;;;16496:22:128;;-1:-1:-1;;;;;12107:55:169;;16496:22:128;;;12089:74:169;16437:48:128;;-1:-1:-1;;;;;;;;;;;;16496:8:128;;;12062:18:169;;16496:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16528:11;;;;;;;;;-1:-1:-1;;;;;16528:11:128;-1:-1:-1;;;;;16528:31:128;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;16581:7:128;;:31;;-1:-1:-1;;;16581:31:128;;-1:-1:-1;;;;;12107:55:169;;;16581:31:128;;;12089:74:169;16572:97:128;;16581:7;;;;;:17;;12062:18:169;;16581:31:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16614:16;16629:1;16614:12;:16;:::i;:::-;-1:-1:-1;;;;;16572:97:128;;;;;;;;;;;;;;;;;;:8;:97::i;:::-;16688:4;;:28;;-1:-1:-1;;;16688:28:128;;-1:-1:-1;;;;;12107:55:169;;;16688:28:128;;;12089:74:169;16679:79:128;;16688:4;;:14;;12062:18:169;;16688:28:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16718:1;16679:79;;;;;;;;;;;;;;;;;:8;:79::i;:::-;16800:11;;:29;;;-1:-1:-1;;;16800:29:128;;;;-1:-1:-1;;;;;16800:11:128;;;;:27;;:29;;;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16769:60;;;;;;;;16840:63;16849:12;-1:-1:-1;;;;;16840:63:128;16863:1;16840:63;;;;;;;;;;;;;;;;;:8;:63::i;:::-;16913;16922:12;-1:-1:-1;;;;;16913:63:128;16936:1;16913:63;;;;;;;;;;;;;;;;;:8;:63::i;1243:204:2:-;1302:7;;1282:4;;1302:7;;1298:143;;;-1:-1:-1;1332:7:2;;;;;1243:204::o;1298:143::-;1377:39;;-1:-1:-1;;;1377:39:2;;-1:-1:-1;;;;;;;;;;;1377:39:2;;;19364:74:169;;;1398:17:2;19454:18:169;;;19447:34;1428:1:2;;1377:7;;19337:18:169;;1377:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;1370:60;;1243:204;:::o;6153:1715:128:-;-1:-1:-1;;;;;;;;;;;6242:9:128;-1:-1:-1;;;;;6252:14:128;;;;;;:36;;;6284:4;6270:10;-1:-1:-1;;;;;6270:18:128;;;6252:36;:54;;;;;6305:1;6292:10;-1:-1:-1;;;;;6292:14:128;;6252:54;:76;;;;;6324:4;6310:10;-1:-1:-1;;;;;6310:18:128;;;6252:76;6242:87;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;6242:87:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6387:11:128;;:40;;-1:-1:-1;;;6387:40:128;;-1:-1:-1;;;;;12885:47:169;;6387:40:128;;;12867:66:169;6341:17:128;12949:18:169;;;12942:50;;;6341:17:128;-1:-1:-1;6341:17:128;;-1:-1:-1;;;;;;6387:11:128;;;;:21;;12840:18:169;;6387:40:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6340:87;;;;;6437:54;6446:14;-1:-1:-1;;;;;6437:54:128;6462:1;6437:54;;;;;;;;;;;;;;;;;:8;:54::i;:::-;6515:7;;6502:33;;6515:7;;;-1:-1:-1;;;;;6515:7:128;6525:3;6530:4;6502;:33::i;:::-;6558:4;;6545:30;;-1:-1:-1;;;;;6558:4:128;6565:3;6570:4;6545;:30::i;:::-;6586:13;;-1:-1:-1;;;6586:13:128;;-1:-1:-1;;;;;6595:3:128;12107:55:169;6586:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;6586:8:128;;;12062:18:169;;6586:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6609:4:128;;6631:11;;6609:46;;-1:-1:-1;;;6609:46:128;;-1:-1:-1;;;;;6631:11:128;;;6609:46;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;6609:4:128;;;-1:-1:-1;6609:13:128;;-1:-1:-1;13674:18:169;;6609:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6665:11:128;;:30;;-1:-1:-1;;;6665:30:128;;:11;:30;;;14422:41:169;-1:-1:-1;;;;;6689:5:128;14499:55:169;;14479:18;;;14472:83;6665:11:128;;;;:16;;14395:18:169;;6665:30:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6715:7:128;;:24;;-1:-1:-1;;;6715:24:128;;-1:-1:-1;;;;;6733:5:128;12107:55:169;;6715:24:128;;;12089:74:169;6706:73:128;;6715:7;;;;;:17;;12062:18:169;;6715:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6741:10;-1:-1:-1;;;;;6706:73:128;;;;;;;;;;;;;;;;;;:8;:73::i;:::-;6837:11;;:39;;-1:-1:-1;;;6837:39:128;;-1:-1:-1;;;;;12885:47:169;;6837:39:128;;;12867:66:169;6837:11:128;12949:18:169;;;12942:50;6791:17:128;;;;-1:-1:-1;;;;;6837:11:128;;;;:21;;12840:18:169;;6837:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6790:86;;;;;6886:54;6895:14;-1:-1:-1;;;;;6886:54:128;6911:1;6886:54;;;;;;;;;;;;;;;;;:8;:54::i;:::-;6951:13;;-1:-1:-1;;;6951:13:128;;-1:-1:-1;;;;;6960:3:128;12107:55:169;6951:13:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;6951:8:128;;;12062:18:169;;6951:13:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6974:7:128;;6999:11;;6974:49;;-1:-1:-1;;;6974:49:128;;-1:-1:-1;;;;;6999:11:128;;;6974:49;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;6974:7:128;;;;;;-1:-1:-1;6974:16:128;;-1:-1:-1;13674:18:169;;6974:49:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7033:11:128;;:29;;-1:-1:-1;;;7033:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;7056:5:128;14499:55:169;;14479:18;;;14472:83;7033:11:128;;;;:16;;14395:18:169;;7033:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7098:4:128;;:21;;-1:-1:-1;;;7098:21:128;;-1:-1:-1;;;;;7113:5:128;12107:55:169;;7098:21:128;;;12089:74:169;-1:-1:-1;;7098:4:128;;:14;;12062:18:169;;7098:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7073:46;;7129:63;7138:14;7154:10;-1:-1:-1;;;;;7129:63:128;;;;;;;;;;;;;;;;;;:8;:63::i;:::-;7229:11;;7203:60;;7219:3;;;;-1:-1:-1;;;;;7229:11:128;1185:7:140;7250:4:128;7256:2;;7203:15;:60::i;:::-;7321:11;;:29;;;-1:-1:-1;;;7321:29:128;;;;7275:20;;;;-1:-1:-1;;;;;7321:11:128;;;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7370:7;;7396:11;;7370:39;;-1:-1:-1;;;7370:39:128;;-1:-1:-1;;;;;7396:11:128;;;7370:39;;;12089:74:169;7274:76:128;;-1:-1:-1;7274:76:128;;-1:-1:-1;7361:90:128;;7370:7;;;;;;;;:17;;12062:18:169;;7370:39:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7411:12;-1:-1:-1;;;;;7361:90:128;;;;;;;;;;;;;;;;;;:8;:90::i;:::-;7470:4;;7493:11;;7470:36;;-1:-1:-1;;;7470:36:128;;-1:-1:-1;;;;;7493:11:128;;;7470:36;;;12089:74:169;7461:87:128;;7470:4;;;;;:14;;12062:18:169;;7470:36:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7508:12;-1:-1:-1;;;;;7461:87:128;;;;;;;;;;;;;;;;;;:8;:87::i;:::-;7578:7;;:22;;-1:-1:-1;;;7578:22:128;;-1:-1:-1;;;;;7596:3:128;12107:55:169;;7578:22:128;;;12089:74:169;-1:-1:-1;;7578:7:128;;;;;:17;;12062:18:169;;7578:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7629:4;;:19;;-1:-1:-1;;;7629:19:128;;-1:-1:-1;;;;;7644:3:128;12107:55:169;;7629:19:128;;;12089:74:169;7559:41:128;;-1:-1:-1;;;7629:4:128;;;;:14;;12062:18:169;;7629:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7610:38;;7659:94;7668:8;7713:12;-1:-1:-1;;;;;7678:47:128;7700:10;-1:-1:-1;;;;;7678:32:128;7688:9;-1:-1:-1;;;;;7678:19:128;255:4;7678:19;;;;:::i;:::-;:32;;;;:::i;:::-;:47;;;;:::i;:::-;7659:94;;;;;;;;;;;;;;;;;:8;:94::i;:::-;7763:98;7772:8;7821:12;-1:-1:-1;;;;;7782:51:128;7804:14;7792:9;-1:-1:-1;;;;;7782:19:128;292:4;7782:19;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;7763:98;;;;;;;;;;;;;;;;;:8;:98::i;22136:1219::-;22326:58;;-1:-1:-1;;;22326:58:128;;510:7:116;22336:47:128;;;;;22326:58;;;445:41:169;-1:-1:-1;;;;;;;;;;;22326:9:128;;;418:18:169;;22326:58:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22395:15;22435:7;22413:29;;22421:10;22413:19;;:29;;;;:::i;:::-;:36;;22445:4;22413:36;:::i;:::-;22395:54;;22459:14;22557:3;22530:18;22477:71;;22526:1;22497:24;22478:43;;22486:7;22478:16;;:43;;;;:::i;:::-;22477:50;;;;:::i;:::-;:71;;;;:::i;:::-;:76;;22551:2;22477:76;:::i;:::-;22476:84;;;;:::i;:::-;22459:101;-1:-1:-1;;;;;;;;;;;;22571:9:128;22600:4;22581:16;22459:101;22581:7;:16;:::i;:::-;22571:34;;-1:-1:-1;;;;;;22571:34:128;;;;;;;22581:23;-1:-1:-1;22571:34:128;;;445:41:169;418:18;;22571:34:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22676:7:128;;22646:40;;22616:27;;-1:-1:-1;;;;;;22676:7:128;;;;-1:-1:-1;22646:40:128;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;22646:40:128;;;;;;;;;;;;;;;;;;;;;;;22616:70;;22696:47;22782:20;22805:3;22818:7;;;;;;;;;-1:-1:-1;;;;;22818:7:128;22746:81;;;;;:::i;:::-;-1:-1:-1;;;;;27695:15:169;;;27677:34;;27747:15;;;27742:2;27727:18;;27720:43;27799:15;;;27794:2;27779:18;;27772:43;27604:2;27589:18;22746:81:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22938:7:128;;22956:4;;22874:101;;22696:131;;-1:-1:-1;22837:34:128;;22696:131;;-1:-1:-1;;;;;22938:7:128;;;;;;;22956:4;;22963:7;;22874:101;;;:::i;:::-;-1:-1:-1;;;;;28198:15:169;;;28180:34;;28250:15;;;28245:2;28230:18;;28223:43;28302:15;;28297:2;28282:18;;28275:43;28366:6;28354:19;;;28349:2;28334:18;;28327:47;28411:3;28405;28390:19;;28383:32;;;-1:-1:-1;28431:19:169;;;28424:30;28486:3;28471:19;22874:101:128;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;22986:11:128;:47;;-1:-1:-1;;;;;;22986:47:128;-1:-1:-1;;;;;22986:47:128;;;;;;;;;;23061:7;;23044:26;;-1:-1:-1;;;23044:26:128;;23061:7;;23044:26;;;12089:74:169;22986:47:128;;-1:-1:-1;;;;;;;;;;;;23044:8:128;;;12062:18:169;;23044:26:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23080:11:128;;:46;;-1:-1:-1;;;23080:46:128;;:11;:46;;;28925:34:169;;;28975:18;;;28968:43;;;29027:18;;;29020:43;;;29079:18;;;29072:43;;;29158:19;;;29151:44;;;29211:19;;;29204:44;;;29264:19;;;29257:44;;;29317:19;;;29310:44;-1:-1:-1;;;;;23080:11:128;;;;-1:-1:-1;23080:22:128;;-1:-1:-1;28872:19:169;;23080:46:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23137:61:128;;-1:-1:-1;;;23137:61:128;;-1:-1:-1;;;23137:61:128;;;29509:52:169;-1:-1:-1;;;;;;;;;;;23137:15:128;-1:-1:-1;23137:15:128;;-1:-1:-1;29482:18:169;;23137:61:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23225:7:128;;23208:26;;-1:-1:-1;;;23208:26:128;;-1:-1:-1;;;;;23225:7:128;;;23208:26;;;12089:74:169;-1:-1:-1;;;;;;;;;;;23208:8:128;-1:-1:-1;23208:8:128;;-1:-1:-1;12062:18:169;;23208:26:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23244:11:128;;:104;;-1:-1:-1;;;23244:104:128;;29919:6:169;29952:15;;23244:104:128;;;29934:34:169;23244:11:128;29984:18:169;;;29977:43;;;30036:18;;;30029:43;;;30088:18;;;30081:43;;;30143:8;30188:15;;;30167:19;;;30160:44;30220:19;;;30213:44;;;;30294:15;;30273:19;;;30266:44;-1:-1:-1;;;;;23244:11:128;;;;-1:-1:-1;23244:34:128;;-1:-1:-1;29881:19:169;;23244:104:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22316:1039;;;;;22136:1219;;;;:::o;2606:142:6:-;2655:35;2723:18;2702:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2702:39:6;;;;;;;;;;;;;;;;;;;;;;2606:142;:::o;590:984:128:-;-1:-1:-1;;;;;;;;;;;654:9:128;-1:-1:-1;;;;;664:13:128;;;;;;:34;;;694:4;681:9;-1:-1:-1;;;;;681:17:128;;;664:34;654:45;;;;;;;;;;;;;470:14:169;463:22;445:41;;433:2;418:18;;305:187;654:45:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;755:11:128;;:38;;-1:-1:-1;;;755:38:128;;-1:-1:-1;;;;;12885:47:169;;755:38:128;;;12867:66:169;755:11:128;12949:18:169;;;12942:50;711:16:128;;-1:-1:-1;711:16:128;;-1:-1:-1;;;;;;755:11:128;;;;:21;;12840:18:169;;755:38:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;710:83;;;;;803:49;812:13;-1:-1:-1;;;;;803:49:128;827:1;803:49;;;;;;;;;;;;;;;;;:8;:49::i;:::-;876:7;;863:39;;876:7;;;-1:-1:-1;;;;;876:7:128;886:5;-1:-1:-1;;;;;863:39:128;;:4;:39::i;:::-;913:15;;-1:-1:-1;;;913:15:128;;-1:-1:-1;;;;;922:5:128;12107:55:169;913:15:128;;;12089:74:169;-1:-1:-1;;;;;;;;;;;913:8:128;;;12062:18:169;;913:15:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;938:7:128;;963:11;;938:48;;-1:-1:-1;;;938:48:128;;-1:-1:-1;;;;;963:11:128;;;938:48;;;13701:74:169;-1:-1:-1;;;;;13811:47:169;;13791:18;;;13784:75;938:7:128;;;;;;-1:-1:-1;938:16:128;;-1:-1:-1;13674:18:169;;938:48:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;996:11:128;;:29;;-1:-1:-1;;;996:29:128;;:11;:29;;;14422:41:169;-1:-1:-1;;;;;1019:5:128;14499:55:169;;14479:18;;;14472:83;996:11:128;;;;:16;;14395:18:169;;996:29:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1045:7:128;;:24;;-1:-1:-1;;;1045:24:128;;-1:-1:-1;;;;;1063:5:128;12107:55:169;;1045:24:128;;;12089:74:169;1036:60:128;;1045:7;;;;;:17;;12062:18:169;;1045:24:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1071:1;1036:60;;;;;;;;;;;;;;;;;:8;:60::i;:::-;1115:4;;:21;;-1:-1:-1;;;1115:21:128;;-1:-1:-1;;;;;1130:5:128;12107:55:169;;1115:21:128;;;12089:74:169;1106:65:128;;1115:4;;:14;;12062:18:169;;1115:21:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1138:9;-1:-1:-1;;;;;1106:65:128;;;;;;;;;;;;;;;;;;:8;:65::i;:::-;1208:11;;1182:60;;1198:3;;;;-1:-1:-1;;;;;1208:11:128;1185:7:140;1229:4:128;1235:2;;1182:15;:60::i;:::-;1279:11;;:29;;;-1:-1:-1;;;1279:29:128;;;;1254:20;;-1:-1:-1;;;;;1279:11:128;;:27;;:29;;;;;;;;;;;:11;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1338:7:128;;:22;;-1:-1:-1;;;1338:22:128;;-1:-1:-1;;;;;1356:3:128;12107:55:169;;1338:22:128;;;12089:74:169;1253:55:128;;-1:-1:-1;;;1338:7:128;;;;;;;;:17;;12062:18:169;;1338:22:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1389:4;;:19;;-1:-1:-1;;;1389:19:128;;-1:-1:-1;;;;;1404:3:128;12107:55:169;;1389:19:128;;;12089:74:169;1319:41:128;;-1:-1:-1;;;1389:4:128;;;;:14;;12062:18:169;;1389:19:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1370:38;;1419:76;1428:8;1459:12;-1:-1:-1;;;;;1438:33:128;1448:8;-1:-1:-1;;;;;1438:18:128;255:4;1438:18;;;;:::i;:::-;:33;;;;:::i;:::-;1419:76;;;;;;;;;;;;;;;;;:8;:76::i;:::-;1505:62;1514:8;1524:19;-1:-1:-1;;;;;1524:19:128;;292:4;1524:19;:::i;:::-;1505:62;;;;;;;;;;;;;;;;;:8;:62::i;11988:792:140:-;363:4:105;12209:13:140;:36;;12201:73;;;;-1:-1:-1;;;12201:73:140;;30523:2:169;12201:73:140;;;30505:21:169;30562:2;30542:18;;;30535:30;30601:26;30581:18;;;30574:54;30645:18;;12201:73:140;30321:348:169;12201:73:140;12285:13;12301:28;12314:6;12322;12301:12;:28::i;:::-;12285:44;;12340:20;12377:5;12363:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12363:20:140;;12340:43;;12393:24;12434:5;12420:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12420:20:140;;12393:47;;12456:9;12451:253;12471:5;12467:1;:9;12451:253;;;12497:9;12509:26;12515:8;12525:1;12528:6;12509:5;:26::i;:::-;12561;;-1:-1:-1;;;12561:26:140;;-1:-1:-1;;;;;20421:55:169;;;12561:26:140;;;20403:74:169;20525:8;20513:21;;20493:18;;;20486:49;12497:38:140;;-1:-1:-1;12549:9:140;;12561:16;;;;;20376:18:169;;12561:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12549:38;;12611:2;12602:11;;:3;12606:1;12602:6;;;;;;;;:::i;:::-;;;;;;;;;;:11;12640:53;:1;12658:13;363:4:105;12640:17:140;:53::i;:::-;12627:7;12635:1;12627:10;;;;;;;;:::i;:::-;;;;;;:66;;;;;12483:221;;12478:3;;;;:::i;:::-;;;12451:253;;;-1:-1:-1;12714:14:140;;-1:-1:-1;;;12714:14:140;;-1:-1:-1;;;;;12107:55:169;;12714:14:140;;;12089:74:169;-1:-1:-1;;;;;;;;;;;12714:8:140;;;12062:18:169;;12714:14:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;-1:-1:-1;;;12738:35:140;;-1:-1:-1;;;;;12738:11:140;;;-1:-1:-1;12738:11:140;;-1:-1:-1;12738:35:140;;12750:4;;12756:2;;12760:3;;12765:7;;12738:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12738:35:140;;;;;;;;;;;;:::i;2759:3601::-;2801:7;:45;;;;;;;;;;-1:-1:-1;;;;;2801:45:140;2907:7;;;;2899:28;-1:-1:-1;2899:33:140;2895:118;;2964:7;;2982:13;;-1:-1:-1;;;;;;;;;;;2948:7:140;;;2964;;;;-1:-1:-1;;;;;2964:7:140;;2982:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2974:27:140;;;;;;;;;;;;;;;;;;;;;;;;2948:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2895:118;3068:1;3054:16;;;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3054:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3047:4:140;:23;;-1:-1:-1;;;;;;3047:23:140;-1:-1:-1;;;;;3047:23:140;;;;;;;;;;3087:16;;3101:1;;3087:16;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3087:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3080:4:140;:23;;-1:-1:-1;;;;;;3080:23:140;-1:-1:-1;;;;;3080:23:140;;;;;;;;;;3120:16;;3134:1;;3120:16;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3120:16:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3113:4:140;:23;;-1:-1:-1;;;;;;3113:23:140;-1:-1:-1;;;;;3113:23:140;;;;;;;;;;3153:17;;3167:2;;3153:17;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3153:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3146:4:140;:24;;-1:-1:-1;;;;;;3146:24:140;-1:-1:-1;;;;;3146:24:140;;;;;;;;;;3187:17;;3201:2;;3187:17;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3187:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3180:4:140;:24;;-1:-1:-1;;;;;;3180:24:140;-1:-1:-1;;;;;3180:24:140;;;;;;;;;;3220:17;;3234:2;;3220:17;;;:::i;:::-;33364:4:169;33352:17;;;33334:36;;33322:2;33307:18;3220:17:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3214:3:140;:23;;-1:-1:-1;;;;;;3214:23:140;-1:-1:-1;;;;;3214:23:140;;;;;;;;;;3258:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3247:8:140;:37;;-1:-1:-1;;;;;;3247:37:140;-1:-1:-1;;;;;3247:37:140;;;;;;3335:7;;3318:37;;;-1:-1:-1;;;3318:37:140;;3247;3335:7;;;;;;3318:37;;;33992:74:169;34082:18;;;34075:30;;;;34141:1;34121:18;;;34114:29;34179:9;34159:18;;;34152:37;-1:-1:-1;;;;;;;;;;;3318:8:140;;;34206:19:169;;3318:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3382:4:140;;3365:31;;;-1:-1:-1;;;3365:31:140;;-1:-1:-1;;;;;3382:4:140;;;3365:31;;;;34448:74:169;;;;34538:18;;;34531:30;;;;34577:18;;;34570:29;-1:-1:-1;;;34615:18:169;;;34608:34;-1:-1:-1;;;;;;;;;;;3365:8:140;-1:-1:-1;3365:8:140;;-1:-1:-1;34659:19:169;;3365:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3423:4:140;;3406:31;;;-1:-1:-1;;;3406:31:140;;-1:-1:-1;;;;;3423:4:140;;;3406:31;;;;34901:74:169;;;;34991:18;;;34984:30;;;;35030:18;;;35023:29;-1:-1:-1;;;35068:18:169;;;35061:34;-1:-1:-1;;;;;;;;;;;3406:8:140;-1:-1:-1;3406:8:140;;-1:-1:-1;35112:19:169;;3406:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3464:4:140;;3447:31;;;-1:-1:-1;;;3447:31:140;;-1:-1:-1;;;;;3464:4:140;;;3447:31;;;;35354:74:169;;;;35444:18;;;35437:30;;;;35483:18;;;35476:29;-1:-1:-1;;;35521:18:169;;;35514:34;-1:-1:-1;;;;;;;;;;;3447:8:140;-1:-1:-1;3447:8:140;;-1:-1:-1;35565:19:169;;3447:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3505:4:140;;3488:31;;;-1:-1:-1;;;3488:31:140;;-1:-1:-1;;;;;3505:4:140;;;3488:31;;;;35807:74:169;;;;35897:18;;;35890:30;;;;35936:18;;;35929:29;-1:-1:-1;;;35974:18:169;;;35967:34;-1:-1:-1;;;;;;;;;;;3488:8:140;-1:-1:-1;3488:8:140;;-1:-1:-1;36018:19:169;;3488:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3546:4:140;;3529:31;;;-1:-1:-1;;;3529:31:140;;-1:-1:-1;;;;;3546:4:140;;;3529:31;;;;36260:74:169;;;;36350:18;;;36343:30;;;;36389:18;;;36382:29;-1:-1:-1;;;36427:18:169;;;36420:34;-1:-1:-1;;;;;;;;;;;3529:8:140;-1:-1:-1;3529:8:140;;-1:-1:-1;36471:19:169;;3529:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3587:3:140;;;3570:29;;;-1:-1:-1;;;3570:29:140;;-1:-1:-1;;;;;3587:3:140;;;3570:29;;;36713:74:169;36803:18;;;36796:30;;;;36862:1;36842:18;;;36835:29;-1:-1:-1;;;36880:18:169;;;36873:33;-1:-1:-1;;;;;;;;;;;3570:8:140;-1:-1:-1;3570:8:140;;-1:-1:-1;36923:19:169;;3570:29:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3626:8:140;;3609:39;;;-1:-1:-1;;;3609:39:140;;-1:-1:-1;;;;;3626:8:140;;;3609:39;;;37165:74:169;37255:18;;;37248:30;37314:1;37294:18;;;37287:29;37352:10;37332:18;;;37325:38;-1:-1:-1;;;;;;;;;;;3609:8:140;-1:-1:-1;3609:8:140;;-1:-1:-1;37380:19:169;;3609:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3691:8:140;:67;;-1:-1:-1;;;;;;3691:67:140;;;335:42:142;3691:67:140;;;;3768:9;:70;;;;;240:42:142;3768:70:140;;;-1:-1:-1;;3899:15:140;;3691:8;;3899:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;3875:39;;3992:11;4006:3;3952:62;;;;;:::i;:::-;-1:-1:-1;;;;;37736:15:169;;;37718:34;;37788:15;;37783:2;37768:18;;37761:43;37840:2;37835;37820:18;;37813:30;;;-1:-1:-1;37859:18:169;;;37852:29;37913:3;37898:19;3952:62:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3924:7:140;:92;;-1:-1:-1;;;;;;3924:92:140;-1:-1:-1;;;;;3924:92:140;;;;;;;;;4056:40;;-1:-1:-1;;3924:92:140;4056:40;;;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;4056:40:140;;;;;;;;;;;;;;;;;;;;;;;4026:70;;4106:47;4192:20;4215:3;4228:7;;;;;;;;;-1:-1:-1;;;;;4228:7:140;4156:81;;;;;:::i;:::-;-1:-1:-1;;;;;27695:15:169;;;27677:34;;27747:15;;;27742:2;27727:18;;27720:43;27799:15;;;27794:2;27779:18;;27772:43;27604:2;27589:18;4156:81:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4247:7:140;;:85;;-1:-1:-1;;;4247:85:140;;-1:-1:-1;;;;;4266:3:140;38254:15:169;;4247:85:140;;;38236:34:169;;;38286:18;;;38279:43;1892:4:140;38338:18:169;;;38331:34;38401:15;;;38381:18;;;38374:43;38401:15;;-1:-1:-1;4247:7:140;;;:18;;38147:19:169;;4247:85:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4374:7:140;;4363:19;;-1:-1:-1;;;;;4374:7:140;;;;-1:-1:-1;4363:19:140;;-1:-1:-1;4363:19:140;:::i;:::-;-1:-1:-1;;;;;12107:55:169;;;12089:74;;12077:2;12062:18;4363:19:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4342:18:140;:40;;-1:-1:-1;;;;;;4342:40:140;-1:-1:-1;;;;;4342:40:140;;;;;;;;;4418:7;;:60;;-1:-1:-1;;;4418:60:140;;;;;12089:74:169;;;;4418:7:140;;;;:31;;12062:18:169;;4418:60:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4488:30;:28;:30::i;:::-;4528:42;1340:2;4528:24;:42::i;:::-;4641:7;;4650:9;;4678:7;;4628:60;;4606:19;;-1:-1:-1;;;;;4641:7:140;;;;4650:9;;;4641:7;4678;;;;4628:60;;;:::i;:::-;-1:-1:-1;;;;;27695:15:169;;;27677:34;;27747:15;;;27742:2;27727:18;;27720:43;27799:15;;;27794:2;27779:18;;27772:43;27604:2;27589:18;4628:60:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4790:39:140;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4790:39:140;-1:-1:-1;;;4790:39:140;;;4732:98;;4606:82;;-1:-1:-1;4606:82:140;;4785:3;;4790:39;4732:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4698:6:140;:135;;-1:-1:-1;;;;;;4698:135:140;-1:-1:-1;;;;;4698:135:140;;;;;;;;;4912:9;;4944:7;;4878:113;;4912:9;;;;4944:7;;4698:135;4878:113;;;:::i;:::-;-1:-1:-1;;;;;27695:15:169;;;27677:34;;27747:15;;;27742:2;27727:18;;27720:43;27799:15;;;27794:2;27779:18;;27772:43;27604:2;27589:18;4878:113:140;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4869:6:140;:122;;-1:-1:-1;;;;;;4869:122:140;-1:-1:-1;;;;;4869:122:140;;;;;;5055:6;;5038:35;;;-1:-1:-1;;;5038:35:140;;5055:6;;;;5038:35;;;40231:74:169;40321:18;;;40314:30;;;;40380:1;40360:18;;;40353:29;40418:8;40398:18;;;40391:36;-1:-1:-1;;;;;;;;;;;5038:8:140;;;40444:19:169;;5038:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5100:6:140;;5083:35;;;-1:-1:-1;;;5083:35:140;;-1:-1:-1;;;;;5100:6:140;;;5083:35;;;40686:74:169;40776:18;;;40769:30;40835:1;40815:18;;;40808:29;40873:8;40853:18;;;40846:36;-1:-1:-1;;;;;;;;;;;5083:8:140;-1:-1:-1;5083:8:140;;-1:-1:-1;40899:19:169;;5083:35:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5145:7:140;;5128:37;;;-1:-1:-1;;;5128:37:140;;-1:-1:-1;;;;;5145:7:140;;;5128:37;;;41141:74:169;41231:18;;;41224:30;41290:1;41270:18;;;41263:29;41328:9;41308:18;;;41301:37;-1:-1:-1;;;;;;;;;;;5128:8:140;-1:-1:-1;5128:8:140;;-1:-1:-1;41355:19:169;;5128:37:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5192:18:140;;5175:59;;;-1:-1:-1;;;5175:59:140;;-1:-1:-1;;;;;5192:18:140;;;5175:59;;;41597:74:169;41687:18;;;41680:30;41746:2;41726:18;;;41719:30;41785:20;41765:18;;;41758:48;-1:-1:-1;;;;;;;;;;;5175:8:140;-1:-1:-1;5175:8:140;;-1:-1:-1;41823:19:169;;5175:59:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5285:8:140;;5268:39;;;-1:-1:-1;;;5268:39:140;;-1:-1:-1;;;;;5285:8:140;;;5268:39;;;42065:74:169;42155:18;;;42148:30;42214:1;42194:18;;;42187:29;42252:10;42232:18;;;42225:38;-1:-1:-1;;;;;;;;;;;5268:8:140;-1:-1:-1;5268:8:140;;-1:-1:-1;42280:19:169;;5268:39:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5334:9:140;;5317:41;;;-1:-1:-1;;;5317:41:140;;-1:-1:-1;;;;;5334:9:140;;;5317:41;;;42522:74:169;42612:18;;;42605:30;42671:1;42651:18;;;42644:29;42709:11;42689:18;;;42682:39;-1:-1:-1;;;;;;;;;;;5317:8:140;-1:-1:-1;5317:8:140;;-1:-1:-1;42738:19:169;;5317:41:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5406:7:140;;5430:8;;5406:53;;-1:-1:-1;;;5406:53:140;;-1:-1:-1;;;;;5430:8:140;;;5406:53;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5406:7:140;;;;;;-1:-1:-1;5406:15:140;;-1:-1:-1;19337:18:169;;5406:53:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5469:4:140;;5490:8;;5469:50;;-1:-1:-1;;;5469:50:140;;-1:-1:-1;;;;;5490:8:140;;;5469:50;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5469:4:140;;;:12;;19337:18:169;;5469:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5529:4:140;;5550:8;;5529:50;;-1:-1:-1;;;5529:50:140;;-1:-1:-1;;;;;5550:8:140;;;5529:50;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5529:4:140;;;:12;;19337:18:169;;5529:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5589:4:140;;5610:8;;5589:50;;-1:-1:-1;;;5589:50:140;;-1:-1:-1;;;;;5610:8:140;;;5589:50;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5589:4:140;;;:12;;19337:18:169;;5589:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5649:4:140;;5670:8;;5649:50;;-1:-1:-1;;;5649:50:140;;-1:-1:-1;;;;;5670:8:140;;;5649:50;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5649:4:140;;;:12;;19337:18:169;;5649:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5709:4:140;;5730:8;;5709:50;;-1:-1:-1;;;5709:50:140;;-1:-1:-1;;;;;5730:8:140;;;5709:50;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5709:4:140;;;:12;;19337:18:169;;5709:50:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5769:3:140;;;5789:8;;5769:49;;-1:-1:-1;;;5769:49:140;;-1:-1:-1;;;;;5789:8:140;;;5769:49;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;;;;5769:3:140;;:11;;19337:18:169;;5769:49:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5828:8:140;;5853;;5828:54;;-1:-1:-1;;;5828:54:140;;-1:-1:-1;;;;;5853:8:140;;;5828:54;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5828:8:140;;;:16;;19337:18:169;;5828:54:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5893:7:140;;5917:6;;5893:51;;-1:-1:-1;;;5893:51:140;;-1:-1:-1;;;;;5917:6:140;;;5893:51;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5893:7:140;;;;;;:15;;19337:18:169;;5893:51:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5954:4:140;;5975:6;;5954:48;;-1:-1:-1;;;5954:48:140;;-1:-1:-1;;;;;5975:6:140;;;5954:48;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;5954:4:140;;;:12;;19337:18:169;;5954:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6012:4:140;;6033:6;;6012:48;;-1:-1:-1;;;6012:48:140;;-1:-1:-1;;;;;6033:6:140;;;6012:48;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;6012:4:140;;;:12;;19337:18:169;;6012:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6070:4:140;;6091:6;;6070:48;;-1:-1:-1;;;6070:48:140;;-1:-1:-1;;;;;6091:6:140;;;6070:48;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;6070:4:140;;;:12;;19337:18:169;;6070:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6128:4:140;;6149:6;;6128:48;;-1:-1:-1;;;6128:48:140;;-1:-1:-1;;;;;6149:6:140;;;6128:48;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;6128:4:140;;;:12;;19337:18:169;;6128:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6186:4:140;;6207:6;;6186:48;;-1:-1:-1;;;6186:48:140;;-1:-1:-1;;;;;6207:6:140;;;6186:48;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;6186:4:140;;;:12;;19337:18:169;;6186:48:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6244:3:140;;;6264:6;;6244:47;;-1:-1:-1;;;6244:47:140;;-1:-1:-1;;;;;6264:6:140;;;6244:47;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;;;;6244:3:140;;:11;;19337:18:169;;6244:47:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6301:8:140;;6326:6;;6301:52;;-1:-1:-1;;;6301:52:140;;-1:-1:-1;;;;;6326:6:140;;;6301:52;;;19364:74:169;-1:-1:-1;;19454:18:169;;;19447:34;6301:8:140;;;:16;;19337:18:169;;6301:52:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2791:3569;;;;2759:3601::o;7887:160::-;7957:14;7993:47;8017:6;8025;1185:7;7993:23;:47::i;:::-;7983:57;7887:160;-1:-1:-1;;;7887:160:140:o;26935:117:4:-;27017:28;27022:5;27029:2;27033:4;27039:5;27017:4;:28::i;:::-;26935:117;;;:::o;16826:208:2:-;16979:48;;-1:-1:-1;;;16979:48:2;;-1:-1:-1;;;;;;;;;;;16979:20:2;;;:48;;17000:4;;17006:5;;17013:8;;17023:3;;16979:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16826:208;;;;:::o;2386:134::-;2484:29;;-1:-1:-1;;;2484:29:2;;-1:-1:-1;;;;;;;;;;;2484:11:2;;;:29;;2496:4;;2502:5;;2509:3;;2484:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2386:134;;;:::o;15596:::-;15694:29;;-1:-1:-1;;;15694:29:2;;-1:-1:-1;;;;;;;;;;;15694:11:2;;;:29;;15706:4;;15712:5;;15719:3;;15694:29;;;:::i;13228:134::-;13326:29;;-1:-1:-1;;;13326:29:2;;-1:-1:-1;;;;;;;;;;;13326:11:2;;;:29;;13338:4;;13344:5;;13351:3;;13326:29;;;:::i;10236:135:119:-;10329:1;10310:20;;;;;10306:58;;10339:25;;-1:-1:-1;;;10339:25:119;;;;;;;;;;;10306:58;10236:135;;;:::o;8711:::-;8804:1;8785:20;;;;;8781:58;;8814:25;;-1:-1:-1;;;8814:25:119;;;;;;;;;;;1214:392:117;674:2;1398:29:116;;;;;731:2:117;1398:29:116;;;;;1383:45;1553:46:117;;;1383:45:116;;1553:46:117;1544:55;1214:392;-1:-1:-1;;;;1214:392:117:o;956:247:123:-;1047:14;1074:13;1089;1106:18;1119:1;1122;1106:12;:18::i;:::-;1073:51;;;;1142:54;1164:1;1167;1170:11;1183:5;1190;1142:21;:54::i;:::-;1135:61;956:247;-1:-1:-1;;;;;;956:247:123:o;6825:628:140:-;6896:7;;;;;-1:-1:-1;;;;;6896:7:140;6888:30;6884:66;;6920:7;;6942;;6920:30;;-1:-1:-1;;;6920:30:140;;-1:-1:-1;;;;;6920:7:140;6942;;;;;6920:30;;;12089:74:169;6920:7:140;;;:21;;12062:18:169;;6920:30:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6884:66;6972:4;;-1:-1:-1;;;;;6972:4:140;6964:27;6960:60;;6993:7;;7015:4;;6993:27;;-1:-1:-1;;;6993:27:140;;-1:-1:-1;;;;;7015:4:140;;;6993:27;;;12089:74:169;6993:7:140;;;:21;;12062:18:169;;6993:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6960:60;7042:4;;-1:-1:-1;;;;;7042:4:140;7034:27;7030:60;;7063:7;;7085:4;;7063:27;;-1:-1:-1;;;7063:27:140;;-1:-1:-1;;;;;7085:4:140;;;7063:27;;;12089:74:169;7063:7:140;;;:21;;12062:18:169;;7063:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7030:60;7112:4;;-1:-1:-1;;;;;7112:4:140;7104:27;7100:60;;7133:7;;7155:4;;7133:27;;-1:-1:-1;;;7133:27:140;;-1:-1:-1;;;;;7155:4:140;;;7133:27;;;12089:74:169;7133:7:140;;;:21;;12062:18:169;;7133:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7100:60;7182:4;;-1:-1:-1;;;;;7182:4:140;7174:27;7170:60;;7203:7;;7225:4;;7203:27;;-1:-1:-1;;;7203:27:140;;-1:-1:-1;;;;;7225:4:140;;;7203:27;;;12089:74:169;7203:7:140;;;:21;;12062:18:169;;7203:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:60;7252:4;;-1:-1:-1;;;;;7252:4:140;7244:27;7240:60;;7273:7;;7295:4;;7273:27;;-1:-1:-1;;;7273:27:140;;-1:-1:-1;;;;;7295:4:140;;;7273:27;;;12089:74:169;7273:7:140;;;:21;;12062:18:169;;7273:27:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:60;7322:3;;-1:-1:-1;;;;;7322:3:140;7314:26;7310:58;;7342:7;;7364:3;;;7342:26;;-1:-1:-1;;;7342:26:140;;-1:-1:-1;;;;;7364:3:140;;;7342:26;;;12089:74:169;7342:7:140;;;:21;;12062:18:169;7342:26:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7310:58;7390:8;;-1:-1:-1;;;;;7390:8:140;7382:31;7378:68;;7415:7;;7437:8;;7415:31;;-1:-1:-1;;;7415:31:140;;-1:-1:-1;;;;;7437:8:140;;;7415:31;;;12089:74:169;7415:7:140;;;:21;;12062:18:169;;7415:31:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7459:422;7528:7;;:346;;-1:-1:-1;;;7528:346:140;;44696:6:169;44729:15;;7528:346:140;;;44711:34:169;1395:5:140;44761:18:169;;;44754:43;;;1455:2:140;44813:18:169;;;44806:43;1511:3:140;44865:18:169;;;44858:43;44917:19;;;44910:44;1639:6:140;44997:19:169;;;44990:44;1701:5:140;45050:19:169;;;45043:44;1774:7:140;45103:19:169;;;45096:44;7528:7:140;45156:19:169;;;45149:51;-1:-1:-1;;;;;7528:7:140;;;;:17;;44658:19:169;;7528:346:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8053:216;8150:14;8186:76;8220:6;8228;8236:7;1340:2;8186:33;:76::i;27331:837:4:-;27501:38;;;-1:-1:-1;;;;;12107:55:169;;;27501:38:4;;;;12089:74:169;;;;27501:38:4;;;;;;;;;;12062:18:169;;;;27501:38:4;;;;;;;-1:-1:-1;;;;;27501:38:4;-1:-1:-1;;;27501:38:4;;;27484:56;;27460:20;;27484:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27457:83;;;27550:15;27579:7;27568:30;;;;;;;;;;;;:::i;:::-;27550:48;-1:-1:-1;27635:71:4;27701:4;27635:51;27683:2;27635:38;-1:-1:-1;;;27635:22:4;:8;27651:5;27635:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;27752:6;27748:414;;;27821:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27821:34:4;-1:-1:-1;;;27821:34:4;;;27804:52;;27777:23;;-1:-1:-1;;;;;27804:16:4;;;:52;;27821:34;27804:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27774:82;;;27870:14;27898:10;27887:33;;;;;;;;;;;;:::i;:::-;27870:50;;27945:7;27938:4;:14;27934:144;;;27983:14;27993:4;27983:7;:14;:::i;:::-;27972:26;;;;:::i;:::-;;;27934:144;;;28048:14;28055:7;28048:4;:14;:::i;:::-;28037:26;;;;:::i;:::-;;;27934:144;28091:60;28144:6;28091:38;-1:-1:-1;;;28091:22:4;:8;28107:5;28091:15;:22::i;6220:547:123:-;6286:13;;-1:-1:-1;;6654:1:123;6651;6644:20;6693:1;6690;6686:9;6677:18;;6744:5;6740:2;6737:13;6729:5;6725:2;6721:14;6717:34;6708:43;;;6220:547;;;;;:::o;7208:3395::-;7358:14;7450:5;7459:1;7450:10;7446:3151;;7521:11;7513:5;:19;;;;;:::i;:::-;;7504:28;;7446:3151;;;7677:11;7668:5;:20;7664:66;;7697:33;;-1:-1:-1;;;7697:33:123;;;;;;;;;;;7664:66;7829:17;7964:11;7961:1;7958;7951:25;8543:1;8528:12;;:16;;8513:32;;8495:15;8944;;;8940:29;;;8936:37;;;8078:20;;;8067:32;;;9073:15;;;;8125:21;;8775:19;;;9064:24;;;;9459:1;8663:25;;;;9440:1;:15;;9439:21;;9703;;;9699:25;;9688:36;9776:21;;;9772:25;;9761:36;9850:21;;;9846:25;;9835:36;9924:21;;;9920:25;;9909:36;9998:21;;;9994:25;;9983:36;10073:21;;;10069:25;;;10058:36;;;10557:15;;;;;;-1:-1:-1;;;;7208:3395:123:o;8275:257:140:-;8469:7;;:54;;-1:-1:-1;;;8469:54:140;;-1:-1:-1;;;;;45841:15:169;;;8469:54:140;;;45823:34:169;45893:15;;;45873:18;;;45866:43;45957:8;45945:21;;45925:18;;;45918:49;46015:6;46003:19;;45983:18;;;45976:47;8414:14:140;;8469:7;;:20;;45734:19:169;;8469:54:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13259:156:9:-;6854:12;;;:22;;-1:-1:-1;;;;;;6854:22:9;-1:-1:-1;;;;;6854:22:9;;;;;-1:-1:-1;6854:12:9;13372:36;6748:156;13421:143;7009:9;;;:16;;-1:-1:-1;;7009:16:9;;;;;;;;-1:-1:-1;7009:9:9;13527:30;6910:143;13726:152;7505:10;;;;:47;;;;;;;13800:18;7505:47;;;;;;-1:-1:-1;;;;;7529:21:9;;7505:47;;;;;;13861:4;13837:34;7401:179;14947:120;15027:33;15041:4;15055:3;15027:13;:33::i;:::-;14947:120;;:::o;15439:1484::-;15533:12;;;;15569:9;;;;15610:11;;;;-1:-1:-1;;;;;15533:12:9;;;;15569:9;;;;;;15519:11;15653:34;15533:4;15653:28;:34::i;:::-;-1:-1:-1;;;;;15703:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;15703:21:9;;;;;;;;;15735:37;;15631:56;;-1:-1:-1;15703:21:9;15735:37;;15631:56;;15760:11;;15735:37;;:::i;:::-;;;;-1:-1:-1;;15735:37:9;;;;;;;;;15725:48;;15735:37;15725:48;;;;15703:71;;;;;;;;;;-1:-1:-1;15703:71:9;:77;;;;;15698:126;;15796:17;15801:4;15807:5;15796:4;:17::i;:::-;;15698:126;-1:-1:-1;;;;;15857:15:9;;15833:21;15857:15;;;;;;;;;;;-1:-1:-1;;;;;;15857:21:9;;;;;;;;;15889:37;;15857:21;;15833;;15889:37;;15906:6;;15914:11;;15889:37;;:::i;:::-;;;;;;;;;;;;;15879:48;;;;;;15857:71;;;;;;;;;;;15833:95;;15981:1;15961:4;:16;;;15943:4;:15;;;:34;;;;:::i;:::-;15942:40;15938:460;;;15998:14;16046:4;:16;;;16028:4;:15;;;:34;;;;:::i;:::-;16021:42;;:3;:42;:::i;:::-;16015:49;;:1;:49;:::i;:::-;16314:19;;-1:-1:-1;;;16314:19:9;;;;;4844:25:169;;;15998:66:9;;-1:-1:-1;16103:21:9;;;;-1:-1:-1;;;;;;;;;;;16314:11:9;;;4817:18:169;;16314:19:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16314:19:9;;;;;;;;;;;;:::i;:::-;16170:185;;;;;;;;:::i;:::-;;;;;;;;;;;;;16078:309;;;;;-1:-1:-1;;;16078:309:9;;;;;;;;:::i;:::-;;15984:414;15938:460;16445:9;;16424:32;;-1:-1:-1;;;16424:32:9;;-1:-1:-1;;;;;19382:55:169;;16424:32:9;;;19364:74:169;19454:18;;;19447:34;;;;16407:14:9;;-1:-1:-1;;;;;;;;;;;16424:7:9;;;19337:18:169;;16424:32:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16542:15;;;;;16559:16;;;;16407:49;;-1:-1:-1;16466:16:9;;12340:28;;;12335:3;12331:38;12327:46;;;;-1:-1:-1;;12323:54:9;12306:72;;12677:42;12657:62;;12724:23;;;;12656:92;16609:9;;16587:43;;-1:-1:-1;;;16587:43:9;;-1:-1:-1;;;;;48575:55:169;;16587:43:9;;;48557:74:169;48647:18;;;48640:34;;;;48690:18;;;48683:34;;;16466:110:9;;-1:-1:-1;;;;;;;;;;;;16587:8:9;;;48530:18:169;;16587:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16642:12;16656:18;16678:31;16704:4;16678:25;:31::i;:::-;16641:68;;;;16725:7;16724:8;:29;;;;16750:3;16736:10;:17;;16724:29;16720:176;;;16791:9;;16769:41;;-1:-1:-1;;;16769:41:9;;-1:-1:-1;;;;;48575:55:169;;16769:41:9;;;48557:74:169;48647:18;;;48640:34;;;;48690:18;;;48683:34;;;-1:-1:-1;;;;;;;;;;;16769:8:9;;;48530:18:169;;16769:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;16824:61:9;;-1:-1:-1;;;16824:61:9;;48930:2:169;16824:61:9;;;48912:21:169;48969:2;48949:18;;;48942:30;49008:34;48988:18;;;48981:62;49079:21;49059:18;;;49052:49;49118:19;;;-1:-1:-1;16824:61:9;;-1:-1:-1;48728:415:169;16720:176:9;16905:11;16911:4;16905:5;:11::i;953:236::-;1024:12;1052:4;:14;;:21;;;;;:::i;:::-;;;1077:1;1052:26;1048:135;;1101:19;1109:4;:10;;1101:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;:19::i;1048:135::-;1158:4;:14;;1151:21;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:236;;;:::o;13112:141::-;13182:7;13208:33;13228:4;13234:6;13208:19;:33::i;:::-;:38;;13112:141;-1:-1:-1;;;13112:141:9:o;1251:343::-;1381:9;;;;1319:4;;;;;;1381:9;;1392:19;1381:4;1392:13;:19::i;:::-;1364:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1364:48:9;;;;;;;;;;1458:12;;;;1364:48;;-1:-1:-1;1423:12:9;;;;-1:-1:-1;;;;;1458:12:9;;:29;;1364:48;;1458:29;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:65;;;;1497:14;1514:38;1529:4;1540;:11;;;1535:2;:16;;;;:::i;:::-;1514:14;:38::i;:::-;1571:7;;1497:55;;-1:-1:-1;1251:343:9;;-1:-1:-1;;;;;1251:343:9:o;14705:92::-;14764:26;14785:4;14764:20;:26::i;:::-;14705:92;:::o;11187:393::-;11246:12;11270:19;11302:1;:8;11313:2;11302:13;;;;:::i;:::-;11292:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11292:24:9;;11270:46;;11331:9;11326:224;11350:1;:8;11346:1;:12;11326:224;;;11379:9;11391:1;11393;11391:4;;;;;;;;:::i;:::-;;;;;;;11379:16;;11524:1;11518;11514:2;11510:10;11506:2;11502:19;11494:6;11490:32;11483:43;11465:75;11360:3;;;;;:::i;:::-;;;;11326:224;;;-1:-1:-1;11567:6:9;11187:393;-1:-1:-1;;11187:393:9:o;4249:2493::-;4361:12;;;;4397:9;;;;4438:11;;;;4319:16;;-1:-1:-1;;;;;4361:12:9;;4397:9;;;4319:16;4481:19;4361:4;4481:13;:19::i;:::-;-1:-1:-1;;;;;4551:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4551:21:9;;;;;;;;;4583:37;;4459:41;;-1:-1:-1;4551:21:9;4583:37;;4459:41;;4608:11;;4583:37;;:::i;:::-;;;;-1:-1:-1;;4583:37:9;;;;;;;;;4573:48;;4583:37;4573:48;;;;4551:71;;;;;;;;;;-1:-1:-1;4551:71:9;:77;;;;;4547:255;;;4648:6;4644:56;;;4674:11;4680:4;4674:5;:11::i;:::-;-1:-1:-1;;;;;4720:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;4720:21:9;;;;;;;;;4752:37;;4720:21;;:10;4752:37;;4769:6;;4777:11;;4752:37;;:::i;:::-;;;;;;;;;;;;;4742:48;;;;;;4720:71;;;;;;;;;;;4713:78;;;;;;;;4547:255;670:28;662:37;;-1:-1:-1;;;;;4811:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4835:18;4857:16;4868:4;4857:10;:16::i;:::-;4911:25;;-1:-1:-1;;;4911:25:9;;-1:-1:-1;;;;;12107:55:169;;4911:25:9;;;12089:74:169;4832:41:9;;-1:-1:-1;4884:22:9;;-1:-1:-1;;;;;;;;;;;;4911:11:9;;;12062:18:169;;4911:25:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4911:25:9;;;;;;;;;;;;:::i;:::-;4883:53;;;4951:5;:12;4967:1;4951:17;4947:1461;;4984:74;;;-1:-1:-1;;;4984:74:9;;50358:2:169;4984:74:9;;;50340:21:169;50377:18;;;50370:30;;;;50436:34;50416:18;;;50409:62;50507:34;50487:18;;;50480:62;50559:19;;4984:74:9;50156:428:169;4947:1461:9;5094:9;5089:1309;5113:5;:12;5109:1;:16;5089:1309;;;5150:12;670:28;662:37;;-1:-1:-1;;;;;5165:7:9;;5173:3;5178:5;5184:1;5178:8;;;;;;;;:::i;:::-;;;;;;;5165:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;19382:55:169;;;;19364:74;;19469:2;19454:18;;19447:34;19352:2;19337:18;;19164:323;5165:22:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5150:37;-1:-1:-1;5150:37:9;5205:114;;5256:44;5277:3;5290:5;5296:1;5290:8;;;;;;;;:::i;:::-;;;;;;;;;;;;5256:44;;;-1:-1:-1;;;;;19382:55:169;;;19364:74;;19454:18;;;19447:34;19337:18;5256:44:9;;;;;;;5205:114;5342:36;5363:4;5369:5;5375:1;5369:8;;;;;;;;:::i;:::-;;;;;;;5342:20;:36::i;:::-;5337:92;;5402:8;;;5337:92;5520:25;;;;5448:18;;;;5520:25;;5516:256;;;5569:10;5636:27;5648:4;5654:5;5660:1;5654:8;;;;;;;;:::i;:::-;;;;;;;5636:11;:27::i;:::-;5601:62;;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;-1:-1:-1;5601:62:9;5685:69;;5723:8;;;;;;5685:69;5547:225;5516:256;12375:1;12340:28;;;12335:3;12331:38;12327:46;-1:-1:-1;;12323:54:9;12306:72;;5902:57;;5901:74;;5998:29;;;5994:84;;6051:8;;;;;;5994:84;6101:89;6111:3;6116:4;6149:6;6157:11;6132:37;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6122:48;;;;;;6180:5;6186:1;6180:8;;;;;;;;:::i;:::-;;;;;;;;;;;;6101:89;;;-1:-1:-1;;;;;50836:55:169;;;50818:74;;-1:-1:-1;;;;;;50928:33:169;;;50908:18;;;50901:61;;;;50978:18;;;50971:34;51036:2;51021:18;;51014:34;50805:3;50790:19;6101:89:9;;;;;;;6302:58;;;;;;;;6319:5;6325:1;6319:8;;;;;;;;:::i;:::-;;;;;;;6311:17;;6302:58;;;;6330:10;6302:58;;;;6342:11;6302:58;;;;6355:4;6302:58;;;;;6208:4;:10;;:15;6219:3;-1:-1:-1;;;;;6208:15:9;-1:-1:-1;;;;;6208:15:9;;;;;;;;;;;;:21;6224:4;-1:-1:-1;;;;;6208:21:9;;-1:-1:-1;;;;;6208:21:9;;;;;;;;;;;;;:71;6257:6;6265:11;6240:37;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;6240:37:9;;;;;;6230:48;;6240:37;6230:48;;;;6208:71;;;;;;;;;;;;-1:-1:-1;6208:71:9;:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6208:152:9;;;;;;;;;;-1:-1:-1;6378:5:9;;-1:-1:-1;;;6378:5:9;5089:1309;5127:3;;;;:::i;:::-;;;;5089:1309;;;;-1:-1:-1;;;;;6439:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6439:21:9;;;;;;;;;6471:37;;6439:21;;:10;6471:37;;6488:6;;6496:11;;6471:37;;:::i;:::-;;;;-1:-1:-1;;6471:37:9;;;;;;;;;6461:48;;6471:37;6461:48;;;;6439:71;;;;;;;;;;-1:-1:-1;6439:71:9;:77;;;;;6418:171;;;;-1:-1:-1;;;6418:171:9;;51261:2:169;6418:171:9;;;51243:21:169;51300:2;51280:18;;;51273:30;51339:34;51319:18;;;51312:62;51410:17;51390:18;;;51383:45;51445:19;;6418:171:9;51059:411:169;6418:171:9;6604:6;6600:48;;;6626:11;6632:4;6626:5;:11::i;:::-;-1:-1:-1;;;;;6664:15:9;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;6664:21:9;;;;;;;;;6696:37;;6664:21;;:10;6696:37;;6713:6;;6721:11;;6696:37;;:::i;:::-;;;;;;;;;;;;;6686:48;;;;;;6664:71;;;;;;;;;;;6657:78;;;;;;;;4249:2493;;;;:::o;10877:304::-;10955:7;10974:11;10996;11021:2;11010:1;:8;:13;:29;;11031:1;:8;11010:29;;;11026:2;11010:29;10996:43;;11054:9;11049:106;11073:3;11069:1;:7;11049:106;;;11138:5;:1;11142;11138:5;:::i;:::-;11112:1;11114:10;11123:1;11114:6;:10;:::i;:::-;11112:13;;;;;;;;:::i;:::-;;;;;;;11104:40;;11097:47;;;;;11078:3;;;;:::i;:::-;;;;11049:106;;;-1:-1:-1;11171:3:9;;10877:304;-1:-1:-1;;;;10877:304:9:o;11586:239::-;11652:12;;;11645:19;;-1:-1:-1;;;;;;11645:19:9;;;11681:9;;;11674:16;;-1:-1:-1;;11674:16:9;;;11700:17;11645:19;11707:10;;11652:12;11700:17;:::i;:::-;11727:18;11734:11;;;11727:18;;;11762:25;;;11755:32;;-1:-1:-1;;11755:32:9;;;11797:21;;11804:14;;;;11797:21;:::i;1851:546::-;1986:12;;;;;1978:27;;-1:-1:-1;;;1978:27:9;;-1:-1:-1;;;;;1986:12:9;;;1978:27;;;19364:74:169;;;;19454:18;;;19447:34;;;1938:4:9;;;;-1:-1:-1;;;;;;;;;;;1978:7:9;;;19337:18:169;;1978:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1954:51;;2016:12;2030:23;2057:16;2068:4;2057:10;:16::i;:::-;2015:58;;-1:-1:-1;2015:58:9;-1:-1:-1;2084:15:9;2102:29;;:65;;2165:1;2102:65;;;-1:-1:-1;;2102:65:9;2186:12;;;;;2177:37;;-1:-1:-1;;;2177:37:9;;-1:-1:-1;;;;;2186:12:9;;;2177:37;;;48557:74:169;;;;48647:18;;;48640:34;;;48690:18;;;48683:34;;;2084:83:9;;-1:-1:-1;;;;;;;;;;;;2177:8:9;;;48530:18:169;;2177:37:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2228:22;2254:16;2265:4;2254:10;:16::i;:::-;2290:12;;;;;2281:43;;-1:-1:-1;;;2281:43:9;;-1:-1:-1;;;;;2290:12:9;;;2281:43;;;48557:74:169;;;;48647:18;;;48640:34;;;48690:18;;;48683:34;;;2225:45:9;;-1:-1:-1;;;;;;;;;;;;2281:8:9;-1:-1:-1;2281:8:9;;48530:18:169;;2281:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2343:7;:46;;;;;2374:14;2355:15;:33;;2343:46;2335:55;1851:546;-1:-1:-1;;;;;;;;1851:546:9:o;3080:534::-;3224:12;;;;;3216:27;;-1:-1:-1;;;3216:27:9;;-1:-1:-1;;;;;3224:12:9;;;3216:27;;;19364:74:169;;;;19454:18;;;19447:34;;;3158:4:9;;;;;;;;-1:-1:-1;;;;;;;;;;;3216:7:9;;;19337:18:169;;3216:27:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3192:51;;3255:14;3271:18;3293:28;3304:4;3310;3316;3293:10;:28::i;:::-;3254:67;;;;3332:15;3349:19;3372:29;3383:4;3389;3395:5;3372:10;:29::i;:::-;3506:12;;;;;3497:43;;-1:-1:-1;;;3497:43:9;;-1:-1:-1;;;;;3506:12:9;;;3497:43;;;48557:74:169;;;;48647:18;;;48640:34;;;48690:18;;;48683:34;;;3331:70:9;;-1:-1:-1;3331:70:9;-1:-1:-1;;;;;;;;;;;;3497:8:9;;;48530:18:169;;3497:43:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3558:9;:23;;;;;3571:10;3558:23;3550:57;3583:10;;-1:-1:-1;3583:10:9;-1:-1:-1;3080:534:9;;-1:-1:-1;;;;;;3080:534:9:o;2560:514::-;2648:4;2654:7;2678:14;2673:368;2707:3;2698:6;:12;2673:368;;;2736:18;2757:4;:44;;2789:1;:11;;2757:44;;;2771:12;2777:6;2771:3;:12;:::i;:::-;2765:1;:19;;2757:44;2824:12;;;;;2815:49;;-1:-1:-1;;;2815:49:9;;-1:-1:-1;;;;;2824:12:9;;;2815:49;;;48557:74:169;;;;48647:18;;;48640:34;;;48690:18;;;48683:34;;;2736:65:9;;-1:-1:-1;;;;;;;;;;;;2815:8:9;;;48530:18:169;;2815:49:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2880:12;2894;2910:16;2921:4;2910:10;:16::i;:::-;2879:47;;;;2945:7;:30;;;;-1:-1:-1;2957:17:9;;;2945:30;2941:90;;;3003:4;3009:6;2995:21;;;;;;;;;;2941:90;2722:319;;;2712:8;;;;;:::i;:::-;;;;2673:368;;;;3058:5;3065:1;3050:17;;;;2560:514;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:169:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:169;;209:43;;199:71;;266:1;263;256:12;497:146;-1:-1:-1;;;;;576:5:169;572:46;565:5;562:57;552:85;;633:1;630;623:12;648:247;707:6;760:2;748:9;739:7;735:23;731:32;728:52;;;776:1;773;766:12;728:52;815:9;802:23;834:31;859:5;834:31;:::i;900:681::-;1071:2;1123:21;;;1193:13;;1096:18;;;1215:22;;;1042:4;;1071:2;1294:15;;;;1268:2;1253:18;;;1042:4;1337:218;1351:6;1348:1;1345:13;1337:218;;;1416:13;;-1:-1:-1;;;;;1412:62:169;1400:75;;1530:15;;;;1495:12;;;;1373:1;1366:9;1337:218;;;-1:-1:-1;1572:3:169;;900:681;-1:-1:-1;;;;;;900:681:169:o;1586:388::-;1654:6;1662;1715:2;1703:9;1694:7;1690:23;1686:32;1683:52;;;1731:1;1728;1721:12;1683:52;1770:9;1757:23;1789:31;1814:5;1789:31;:::i;:::-;1839:5;-1:-1:-1;1896:2:169;1881:18;;1868:32;1909:33;1868:32;1909:33;:::i;:::-;1961:7;1951:17;;;1586:388;;;;;:::o;1979:250::-;2064:1;2074:113;2088:6;2085:1;2082:13;2074:113;;;2164:11;;;2158:18;2145:11;;;2138:39;2110:2;2103:10;2074:113;;;-1:-1:-1;;2221:1:169;2203:16;;2196:27;1979:250::o;2234:271::-;2276:3;2314:5;2308:12;2341:6;2336:3;2329:19;2357:76;2426:6;2419:4;2414:3;2410:14;2403:4;2396:5;2392:16;2357:76;:::i;:::-;2487:2;2466:15;-1:-1:-1;;2462:29:169;2453:39;;;;2494:4;2449:50;;2234:271;-1:-1:-1;;2234:271:169:o;2510:1765::-;2743:2;2795:21;;;2865:13;;2768:18;;;2887:22;;;2714:4;;2743:2;2928;;2946:18;;;;2983:1;3026:15;;;3011:31;;3007:40;;3070:15;;;2714:4;;3134:1112;3150:6;3145:3;3142:15;3134:1112;;;-1:-1:-1;;3219:22:169;;;3215:36;3203:49;;3275:13;;3362:9;;-1:-1:-1;;;;;3358:58:169;3343:74;;3456:11;;3450:18;3488:15;;;3481:27;;;3569:19;;3315:15;;;3601:24;;;3782:21;;;;3648:2;3730:17;;;3718:30;;3714:39;;;3672:15;;;;3827:1;3841:296;3857:8;3852:3;3849:17;3841:296;;;3963:2;3959:7;3950:6;3942;3938:19;3934:33;3927:5;3920:48;3995:42;4030:6;4019:8;4013:15;3995:42;:::i;:::-;4066:17;;;;3985:52;-1:-1:-1;4109:14:169;;;;3885:1;3876:11;3841:296;;;-1:-1:-1;;;4224:12:169;;;;4160:6;-1:-1:-1;;4189:15:169;;;;3176:1;3167:11;3134:1112;;;-1:-1:-1;4263:6:169;;2510:1765;-1:-1:-1;;;;;;;;;;2510:1765:169:o;4280:156::-;4346:20;;4406:4;4395:16;;4385:27;;4375:55;;4426:1;4423;4416:12;4441:252;4505:6;4513;4566:2;4554:9;4545:7;4541:23;4537:32;4534:52;;;4582:1;4579;4572:12;4534:52;4605:27;4622:9;4605:27;:::i;:::-;4595:37;;4651:36;4683:2;4672:9;4668:18;4651:36;:::i;:::-;4641:46;;4441:252;;;;;:::o;4880:461::-;4932:3;4970:5;4964:12;4997:6;4992:3;4985:19;5023:4;5052:2;5047:3;5043:12;5036:19;;5089:2;5082:5;5078:14;5110:1;5120:196;5134:6;5131:1;5128:13;5120:196;;;5199:13;;-1:-1:-1;;;;;;5195:40:169;5183:53;;5256:12;;;;5291:15;;;;5156:1;5149:9;5120:196;;;-1:-1:-1;5332:3:169;;4880:461;-1:-1:-1;;;;;4880:461:169:o;5346:1185::-;5564:4;5593:2;5633;5622:9;5618:18;5663:2;5652:9;5645:21;5686:6;5721;5715:13;5752:6;5744;5737:22;5778:2;5768:12;;5811:2;5800:9;5796:18;5789:25;;5873:2;5863:6;5860:1;5856:14;5845:9;5841:30;5837:39;5911:2;5903:6;5899:15;5932:1;5942:560;5956:6;5953:1;5950:13;5942:560;;;6021:22;;;-1:-1:-1;;6017:36:169;6005:49;;6077:13;;6123:9;;6145:18;;;6190:48;6222:15;;;6123:9;6190:48;:::i;:::-;6279:11;;;6273:18;6328:19;;;6311:15;;;6304:44;6273:18;6176:62;-1:-1:-1;6371:51:169;6176:62;6273:18;6371:51;:::i;:::-;6480:12;;;;6361:61;-1:-1:-1;;;6445:15:169;;;;5978:1;5971:9;5942:560;;;-1:-1:-1;6519:6:169;;5346:1185;-1:-1:-1;;;;;;;;5346:1185:169:o;6536:803::-;6698:4;6727:2;6767;6756:9;6752:18;6797:2;6786:9;6779:21;6820:6;6855;6849:13;6886:6;6878;6871:22;6924:2;6913:9;6909:18;6902:25;;6986:2;6976:6;6973:1;6969:14;6958:9;6954:30;6950:39;6936:53;;7024:2;7016:6;7012:15;7045:1;7055:255;7069:6;7066:1;7063:13;7055:255;;;7162:2;7158:7;7146:9;7138:6;7134:22;7130:36;7125:3;7118:49;7190:40;7223:6;7214;7208:13;7190:40;:::i;:::-;7180:50;-1:-1:-1;7288:12:169;;;;7253:15;;;;7091:1;7084:9;7055:255;;;-1:-1:-1;7327:6:169;;6536:803;-1:-1:-1;;;;;;;6536:803:169:o;7344:161::-;7411:20;;7471:8;7460:20;;7450:31;;7440:59;;7495:1;7492;7485:12;7510:322;7584:6;7592;7600;7653:2;7641:9;7632:7;7628:23;7624:32;7621:52;;;7669:1;7666;7659:12;7621:52;7692:28;7710:9;7692:28;:::i;:::-;7682:38;;7767:2;7756:9;7752:18;7739:32;7729:42;;7790:36;7822:2;7811:9;7807:18;7790:36;:::i;:::-;7780:46;;7510:322;;;;;:::o;8032:1096::-;8234:4;8263:2;8303;8292:9;8288:18;8333:2;8322:9;8315:21;8356:6;8391;8385:13;8422:6;8414;8407:22;8448:2;8438:12;;8481:2;8470:9;8466:18;8459:25;;8543:2;8533:6;8530:1;8526:14;8515:9;8511:30;8507:39;8581:2;8573:6;8569:15;8602:1;8612:487;8626:6;8623:1;8620:13;8612:487;;;8691:22;;;-1:-1:-1;;8687:36:169;8675:49;;8747:13;;8792:9;;-1:-1:-1;;;;;8788:58:169;8773:74;;8886:11;;8880:18;8918:15;;;8911:27;;;8961:58;9003:15;;;8880:18;8961:58;:::i;:::-;9077:12;;;;8951:68;-1:-1:-1;;9042:15:169;;;;8648:1;8641:9;8612:487;;9133:154;-1:-1:-1;;;;;9212:5:169;9208:54;9201:5;9198:65;9188:93;;9277:1;9274;9267:12;9292:898;9425:6;9433;9441;9449;9457;9465;9473;9481;9534:3;9522:9;9513:7;9509:23;9505:33;9502:53;;;9551:1;9548;9541:12;9502:53;9590:9;9577:23;9609:31;9634:5;9609:31;:::i;:::-;9659:5;-1:-1:-1;9716:2:169;9701:18;;9688:32;9729:33;9688:32;9729:33;:::i;:::-;9781:7;-1:-1:-1;9840:2:169;9825:18;;9812:32;9853:33;9812:32;9853:33;:::i;:::-;9905:7;-1:-1:-1;9931:37:169;9964:2;9949:18;;9931:37;:::i;:::-;9921:47;;10015:3;10004:9;10000:19;9987:33;9977:43;;10067:3;10056:9;10052:19;10039:33;10029:43;;10091:37;10123:3;10112:9;10108:19;10091:37;:::i;:::-;10081:47;;10147:37;10179:3;10168:9;10164:19;10147:37;:::i;:::-;10137:47;;9292:898;;;;;;;;;;;:::o;10195:117::-;10280:6;10273:5;10269:18;10262:5;10259:29;10249:57;;10302:1;10299;10292:12;10317:245;10375:6;10428:2;10416:9;10407:7;10403:23;10399:32;10396:52;;;10444:1;10441;10434:12;10396:52;10483:9;10470:23;10502:30;10526:5;10502:30;:::i;10567:529::-;10649:6;10657;10665;10673;10726:3;10714:9;10705:7;10701:23;10697:33;10694:53;;;10743:1;10740;10733:12;10694:53;10782:9;10769:23;10801:30;10825:5;10801:30;:::i;:::-;10850:5;-1:-1:-1;10907:2:169;10892:18;;10879:32;10920;10879;10920;:::i;:::-;10971:7;-1:-1:-1;10997:37:169;11030:2;11015:18;;10997:37;:::i;:::-;10987:47;;11053:37;11086:2;11075:9;11071:18;11053:37;:::i;:::-;11043:47;;10567:529;;;;;;;:::o;11101:829::-;11225:6;11233;11241;11249;11257;11265;11273;11326:3;11314:9;11305:7;11301:23;11297:33;11294:53;;;11343:1;11340;11333:12;11294:53;11382:9;11369:23;11401:31;11426:5;11401:31;:::i;:::-;11451:5;-1:-1:-1;11508:2:169;11493:18;;11480:32;11521:33;11480:32;11521:33;:::i;:::-;11573:7;-1:-1:-1;11632:2:169;11617:18;;11604:32;11645:33;11604:32;11645:33;:::i;:::-;11697:7;-1:-1:-1;11723:37:169;11756:2;11741:18;;11723:37;:::i;:::-;11713:47;;11807:3;11796:9;11792:19;11779:33;11769:43;;11831:37;11863:3;11852:9;11848:19;11831:37;:::i;:::-;11821:47;;11887:37;11919:3;11908:9;11904:19;11887:37;:::i;:::-;11877:47;;11101:829;;;;;;;;;;:::o;12174:184::-;12244:6;12297:2;12285:9;12276:7;12272:23;12268:32;12265:52;;;12313:1;12310;12303:12;12265:52;-1:-1:-1;12336:16:169;;12174:184;-1:-1:-1;12174:184:169:o;13003:519::-;13091:6;13099;13107;13160:2;13148:9;13139:7;13135:23;13131:32;13128:52;;;13176:1;13173;13166:12;13128:52;13208:9;13202:16;13227:31;13252:5;13227:31;:::i;:::-;13327:2;13312:18;;13306:25;13277:5;;-1:-1:-1;13340:33:169;13306:25;13340:33;:::i;:::-;13444:2;13429:18;;13423:25;13392:7;;-1:-1:-1;13457:33:169;13423:25;13457:33;:::i;:::-;13509:7;13499:17;;;13003:519;;;;;:::o;13870:164::-;13946:13;;13995;;13988:21;13978:32;;13968:60;;14024:1;14021;14014:12;14039:202;14106:6;14159:2;14147:9;14138:7;14134:23;14130:32;14127:52;;;14175:1;14172;14165:12;14127:52;14198:37;14225:9;14198:37;:::i;14755:385::-;14834:6;14842;14895:2;14883:9;14874:7;14870:23;14866:32;14863:52;;;14911:1;14908;14901:12;14863:52;14943:9;14937:16;14962:31;14987:5;14962:31;:::i;:::-;15062:2;15047:18;;15041:25;15012:5;;-1:-1:-1;15075:33:169;15041:25;15075:33;:::i;15376:127::-;15437:10;15432:3;15428:20;15425:1;15418:31;15468:4;15465:1;15458:15;15492:4;15489:1;15482:15;15508:200;-1:-1:-1;;;;;15644:10:169;;;15632;;;15628:27;;15667:12;;;15664:38;;;15682:18;;:::i;15713:127::-;15774:10;15769:3;15765:20;15762:1;15755:31;15805:4;15802:1;15795:15;15829:4;15826:1;15819:15;15845:216;15885:1;-1:-1:-1;;;;;15972:2:169;15969:1;15965:10;15994:3;15984:37;;16001:18;;:::i;:::-;16039:10;;16035:20;;;;;15845:216;-1:-1:-1;;15845:216:169:o;16066:125::-;16131:9;;;16152:10;;;16149:36;;;16165:18;;:::i;16196:197::-;-1:-1:-1;;;;;16318:10:169;;;16330;;;16314:27;;16353:11;;;16350:37;;;16367:18;;:::i;16398:128::-;16465:9;;;16486:11;;;16483:37;;;16500:18;;:::i;17258:433::-;-1:-1:-1;;;;;17489:6:169;17485:55;17474:9;17467:74;17577:6;17572:2;17561:9;17557:18;17550:34;17620:2;17615;17604:9;17600:18;17593:30;17448:4;17640:45;17681:2;17670:9;17666:18;17658:6;17640:45;:::i;17696:251::-;17766:6;17819:2;17807:9;17798:7;17794:23;17790:32;17787:52;;;17835:1;17832;17825:12;17787:52;17867:9;17861:16;17886:31;17911:5;17886:31;:::i;17952:380::-;18031:1;18027:12;;;;18074;;;18095:61;;18149:4;18141:6;18137:17;18127:27;;18095:61;18202:2;18194:6;18191:14;18171:18;18168:38;18165:161;;18248:10;18243:3;18239:20;18236:1;18229:31;18283:4;18280:1;18273:15;18311:4;18308:1;18301:15;18165:161;;17952:380;;;:::o;18855:148::-;18943:4;18922:12;;;18936;;;18918:31;;18961:13;;18958:39;;;18977:18;;:::i;19008:151::-;19098:4;19091:12;;;19077;;;19073:31;;19116:14;;19113:40;;;19133:18;;:::i;19492:249::-;19561:6;19614:2;19602:9;19593:7;19589:23;19585:32;19582:52;;;19630:1;19627;19620:12;19582:52;19662:9;19656:16;19681:30;19705:5;19681:30;:::i;20546:168::-;20619:9;;;20650;;20667:15;;;20661:22;;20647:37;20637:71;;20688:18;;:::i;20719:120::-;20759:1;20785;20775:35;;20790:18;;:::i;:::-;-1:-1:-1;20824:9:169;;20719:120::o;21116:127::-;21177:10;21172:3;21168:20;21165:1;21158:31;21208:4;21205:1;21198:15;21232:4;21229:1;21222:15;21248:127;21309:10;21304:3;21300:20;21297:1;21290:31;21340:4;21337:1;21330:15;21364:4;21361:1;21354:15;21380:135;21419:3;21440:17;;;21437:43;;21460:18;;:::i;:::-;-1:-1:-1;21507:1:169;21496:13;;21380:135::o;21822:854::-;22020:4;22068:2;22057:9;22053:18;-1:-1:-1;;;;;22171:2:169;22163:6;22159:15;22148:9;22141:34;22194:2;22232;22227;22216:9;22212:18;22205:30;22255:6;22290;22284:13;22321:6;22313;22306:22;22359:3;22348:9;22344:19;22337:26;;22398:2;22390:6;22386:15;22372:29;;22419:1;22429:169;22443:6;22440:1;22437:13;22429:169;;;22504:13;;22492:26;;22573:15;;;;22538:12;;;;22465:1;22458:9;22429:169;;;22433:3;;22615;22607:11;;;;22666:2;22658:6;22654:15;22649:2;22638:9;22634:18;22627:43;;;21822:854;;;;;;:::o;22681:275::-;22752:2;22746:9;22817:2;22798:13;;-1:-1:-1;;22794:27:169;22782:40;;22852:18;22837:34;;22873:22;;;22834:62;22831:88;;;22899:18;;:::i;:::-;22935:2;22928:22;22681:275;;-1:-1:-1;22681:275:169:o;22961:183::-;23021:4;23054:18;23046:6;23043:30;23040:56;;;23076:18;;:::i;:::-;-1:-1:-1;23121:1:169;23117:14;23133:4;23113:25;;22961:183::o;23149:1003::-;23262:6;23270;23278;23331:2;23319:9;23310:7;23306:23;23302:32;23299:52;;;23347:1;23344;23337:12;23299:52;23376:9;23370:16;23360:26;;23405:2;23447;23436:9;23432:18;23426:25;23416:35;;23495:2;23484:9;23480:18;23474:25;23522:18;23514:6;23511:30;23508:50;;;23554:1;23551;23544:12;23508:50;23577:22;;23630:4;23622:13;;23618:27;-1:-1:-1;23608:55:169;;23659:1;23656;23649:12;23608:55;23688:2;23682:9;23711:60;23727:43;23767:2;23727:43;:::i;:::-;23711:60;:::i;:::-;23805:15;;;23887:1;23883:10;;;;23875:19;;23871:28;;;23836:12;;;;23911:19;;;23908:39;;;23943:1;23940;23933:12;23908:39;23967:11;;;;23987:135;24003:6;23998:3;23995:15;23987:135;;;24069:10;;24057:23;;24020:12;;;;24100;;;;23987:135;;;24141:5;24131:15;;;;;;;23149:1003;;;;;:::o;24351:634::-;24481:6;24489;24497;24505;24513;24521;24529;24537;24590:3;24578:9;24569:7;24565:23;24561:33;24558:53;;;24607:1;24604;24597:12;24558:53;24636:9;24630:16;24620:26;;24686:2;24675:9;24671:18;24665:25;24655:35;;24730:2;24719:9;24715:18;24709:25;24699:35;;24774:2;24763:9;24759:18;24753:25;24743:35;;24818:3;24807:9;24803:19;24797:26;24787:36;;24863:3;24852:9;24848:19;24842:26;24832:36;;24908:3;24897:9;24893:19;24887:26;24877:36;;24932:47;24974:3;24963:9;24959:19;24932:47;:::i;25772:422::-;25861:1;25904:5;25861:1;25918:270;25939:7;25929:8;25926:21;25918:270;;;25998:4;25994:1;25990:6;25986:17;25980:4;25977:27;25974:53;;;26007:18;;:::i;:::-;26057:7;26047:8;26043:22;26040:55;;;26077:16;;;;26040:55;26156:22;;;;26116:15;;;;25918:270;;;25922:3;25772:422;;;;;:::o;26199:806::-;26248:5;26278:8;26268:80;;-1:-1:-1;26319:1:169;26333:5;;26268:80;26367:4;26357:76;;-1:-1:-1;26404:1:169;26418:5;;26357:76;26449:4;26467:1;26462:59;;;;26535:1;26530:130;;;;26442:218;;26462:59;26492:1;26483:10;;26506:5;;;26530:130;26567:3;26557:8;26554:17;26551:43;;;26574:18;;:::i;:::-;-1:-1:-1;;26630:1:169;26616:16;;26645:5;;26442:218;;26744:2;26734:8;26731:16;26725:3;26719:4;26716:13;26712:36;26706:2;26696:8;26693:16;26688:2;26682:4;26679:12;26675:35;26672:77;26669:159;;;-1:-1:-1;26781:19:169;;;26813:5;;26669:159;26860:34;26885:8;26879:4;26860:34;:::i;:::-;26930:6;26926:1;26922:6;26918:19;26909:7;26906:32;26903:58;;;26941:18;;:::i;:::-;26979:20;;26199:806;-1:-1:-1;;;26199:806:169:o;27010:140::-;27068:5;27097:47;27138:4;27128:8;27124:19;27118:4;27097:47;:::i;30674:435::-;30727:3;30765:5;30759:12;30792:6;30787:3;30780:19;30818:4;30847:2;30842:3;30838:12;30831:19;;30884:2;30877:5;30873:14;30905:1;30915:169;30929:6;30926:1;30923:13;30915:169;;;30990:13;;30978:26;;31024:12;;;;31059:15;;;;30951:1;30944:9;30915:169;;31114:688;31390:4;-1:-1:-1;;;;;31500:2:169;31492:6;31488:15;31477:9;31470:34;31552:2;31544:6;31540:15;31535:2;31524:9;31520:18;31513:43;;31592:3;31587:2;31576:9;31572:18;31565:31;31619:57;31671:3;31660:9;31656:19;31648:6;31619:57;:::i;:::-;31724:9;31716:6;31712:22;31707:2;31696:9;31692:18;31685:50;31752:44;31789:6;31781;31752:44;:::i;:::-;31744:52;31114:688;-1:-1:-1;;;;;;;31114:688:169:o;31807:659::-;31872:5;31925:3;31918:4;31910:6;31906:17;31902:27;31892:55;;31943:1;31940;31933:12;31892:55;31972:6;31966:13;31998:4;32022:60;32038:43;32078:2;32038:43;:::i;32022:60::-;32116:15;;;32202:1;32198:10;;;;32186:23;;32182:32;;;32147:12;;;;32226:15;;;32223:35;;;32254:1;32251;32244:12;32223:35;32290:2;32282:6;32278:15;32302:135;32318:6;32313:3;32310:15;32302:135;;;32384:10;;32372:23;;32415:12;;;;32335;;32302:135;;;-1:-1:-1;32455:5:169;31807:659;-1:-1:-1;;;;;;31807:659:169:o;32471:363::-;32566:6;32619:2;32607:9;32598:7;32594:23;32590:32;32587:52;;;32635:1;32632;32625:12;32587:52;32668:9;32662:16;32701:18;32693:6;32690:30;32687:50;;;32733:1;32730;32723:12;32687:50;32756:72;32820:7;32811:6;32800:9;32796:22;32756:72;:::i;32839:338::-;-1:-1:-1;;;;;33018:6:169;33014:55;33003:9;32996:74;33106:2;33101;33090:9;33086:18;33079:30;32977:4;33126:45;33167:2;33156:9;33152:18;33144:6;33126:45;:::i;39155:447::-;39329:4;-1:-1:-1;;;;;39439:2:169;39431:6;39427:15;39416:9;39409:34;39491:2;39483:6;39479:15;39474:2;39463:9;39459:18;39452:43;;39531:2;39526;39515:9;39511:18;39504:30;39551:45;39592:2;39581:9;39577:18;39569:6;39551:45;:::i;42768:435::-;43001:6;42990:9;42983:25;43044:6;43039:2;43028:9;43024:18;43017:34;43087:6;43082:2;43071:9;43067:18;43060:34;43130:3;43125:2;43114:9;43110:18;43103:31;42964:4;43151:46;43192:3;43181:9;43177:19;43169:6;43151:46;:::i;43208:362::-;43413:6;43402:9;43395:25;43456:6;43451:2;43440:9;43436:18;43429:34;43499:2;43494;43483:9;43479:18;43472:30;43376:4;43519:45;43560:2;43549:9;43545:18;43537:6;43519:45;:::i;45211:287::-;45340:3;45378:6;45372:13;45394:66;45453:6;45448:3;45441:4;45433:6;45429:17;45394:66;:::i;:::-;45476:16;;;;;45211:287;-1:-1:-1;;45211:287:169:o;46307:383::-;46464:3;46502:6;46496:13;46518:66;46577:6;46572:3;46565:4;46557:6;46553:17;46518:66;:::i;:::-;46606:16;;;;46631:21;;;-1:-1:-1;46679:4:169;46668:16;;46307:383;-1:-1:-1;46307:383:169:o;46695:131::-;46755:5;46784:36;46811:8;46805:4;46784:36;:::i;46831:719::-;46911:6;46964:2;46952:9;46943:7;46939:23;46935:32;46932:52;;;46980:1;46977;46970:12;46932:52;47013:9;47007:16;47042:18;47083:2;47075:6;47072:14;47069:34;;;47099:1;47096;47089:12;47069:34;47137:6;47126:9;47122:22;47112:32;;47182:7;47175:4;47171:2;47167:13;47163:27;47153:55;;47204:1;47201;47194:12;47153:55;47233:2;47227:9;47255:2;47251;47248:10;47245:36;;;47261:18;;:::i;:::-;47303:53;47346:2;47327:13;;-1:-1:-1;;47323:27:169;47352:2;47319:36;47303:53;:::i;:::-;47290:66;;47379:2;47372:5;47365:17;47419:7;47414:2;47409;47405;47401:11;47397:20;47394:33;47391:53;;;47440:1;47437;47430:12;47391:53;47453:67;47517:2;47512;47505:5;47501:14;47496:2;47492;47488:11;47453:67;:::i;:::-;-1:-1:-1;47539:5:169;46831:719;-1:-1:-1;;;;46831:719:169:o;47555:570::-;47817:34;47812:3;47805:47;47882:34;47877:2;47872:3;47868:12;47861:56;47947:12;47942:2;47937:3;47933:12;47926:34;47787:3;47989:6;47983:13;48005:73;48071:6;48066:2;48061:3;48057:12;48052:2;48044:6;48040:15;48005:73;:::i;:::-;48098:16;;;;48116:2;48094:25;;47555:570;-1:-1:-1;;47555:570:169:o;48130:220::-;48279:2;48268:9;48261:21;48242:4;48299:45;48340:2;48329:9;48325:18;48317:6;48299:45;:::i;49148:384::-;-1:-1:-1;;;;;;49333:33:169;;49321:46;;49390:13;;49303:3;;49412:74;49390:13;49475:1;49466:11;;49459:4;49447:17;;49412:74;:::i;:::-;49506:16;;;;49524:1;49502:24;;49148:384;-1:-1:-1;;;49148:384:169:o;49537:614::-;49666:6;49674;49727:2;49715:9;49706:7;49702:23;49698:32;49695:52;;;49743:1;49740;49733:12;49695:52;49776:9;49770:16;49805:18;49846:2;49838:6;49835:14;49832:34;;;49862:1;49859;49852:12;49832:34;49885:72;49949:7;49940:6;49929:9;49925:22;49885:72;:::i;:::-;49875:82;;50003:2;49992:9;49988:18;49982:25;49966:41;;50032:2;50022:8;50019:16;50016:36;;;50048:1;50045;50038:12;50016:36;;50071:74;50137:7;50126:8;50115:9;50111:24;50071:74;:::i;:::-;50061:84;;;49537:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "105060": [
        {
          "start": 1411,
          "length": 32
        },
        {
          "start": 1494,
          "length": 32
        },
        {
          "start": 1654,
          "length": 32
        },
        {
          "start": 3314,
          "length": 32
        },
        {
          "start": 3405,
          "length": 32
        },
        {
          "start": 3675,
          "length": 32
        },
        {
          "start": 5140,
          "length": 32
        },
        {
          "start": 5341,
          "length": 32
        },
        {
          "start": 5498,
          "length": 32
        },
        {
          "start": 7958,
          "length": 32
        },
        {
          "start": 8557,
          "length": 32
        },
        {
          "start": 8708,
          "length": 32
        },
        {
          "start": 19671,
          "length": 32
        },
        {
          "start": 20270,
          "length": 32
        },
        {
          "start": 20421,
          "length": 32
        },
        {
          "start": 22422,
          "length": 32
        },
        {
          "start": 22622,
          "length": 32
        },
        {
          "start": 22780,
          "length": 32
        },
        {
          "start": 25205,
          "length": 32
        },
        {
          "start": 25804,
          "length": 32
        },
        {
          "start": 25955,
          "length": 32
        },
        {
          "start": 27797,
          "length": 32
        },
        {
          "start": 27997,
          "length": 32
        },
        {
          "start": 28155,
          "length": 32
        },
        {
          "start": 28504,
          "length": 32
        },
        {
          "start": 28579,
          "length": 32
        },
        {
          "start": 30041,
          "length": 32
        },
        {
          "start": 30258,
          "length": 32
        },
        {
          "start": 30904,
          "length": 32
        },
        {
          "start": 31205,
          "length": 32
        },
        {
          "start": 34107,
          "length": 32
        },
        {
          "start": 34198,
          "length": 32
        },
        {
          "start": 34468,
          "length": 32
        },
        {
          "start": 39052,
          "length": 32
        },
        {
          "start": 39651,
          "length": 32
        },
        {
          "start": 39802,
          "length": 32
        },
        {
          "start": 40642,
          "length": 32
        },
        {
          "start": 42965,
          "length": 32
        },
        {
          "start": 43166,
          "length": 32
        },
        {
          "start": 43323,
          "length": 32
        },
        {
          "start": 46609,
          "length": 32
        },
        {
          "start": 46824,
          "length": 32
        },
        {
          "start": 46979,
          "length": 32
        },
        {
          "start": 47488,
          "length": 32
        }
      ],
      "105068": [
        {
          "start": 1869,
          "length": 32
        },
        {
          "start": 2584,
          "length": 32
        },
        {
          "start": 2788,
          "length": 32
        },
        {
          "start": 3065,
          "length": 32
        },
        {
          "start": 4219,
          "length": 32
        },
        {
          "start": 4289,
          "length": 32
        },
        {
          "start": 4575,
          "length": 32
        },
        {
          "start": 4723,
          "length": 32
        },
        {
          "start": 4938,
          "length": 32
        },
        {
          "start": 6674,
          "length": 32
        },
        {
          "start": 6822,
          "length": 32
        },
        {
          "start": 7603,
          "length": 32
        },
        {
          "start": 7751,
          "length": 32
        },
        {
          "start": 18392,
          "length": 32
        },
        {
          "start": 18540,
          "length": 32
        },
        {
          "start": 19311,
          "length": 32
        },
        {
          "start": 19459,
          "length": 32
        },
        {
          "start": 21506,
          "length": 32
        },
        {
          "start": 21576,
          "length": 32
        },
        {
          "start": 21857,
          "length": 32
        },
        {
          "start": 22005,
          "length": 32
        },
        {
          "start": 22215,
          "length": 32
        },
        {
          "start": 23988,
          "length": 32
        },
        {
          "start": 24136,
          "length": 32
        },
        {
          "start": 24845,
          "length": 32
        },
        {
          "start": 24993,
          "length": 32
        },
        {
          "start": 26881,
          "length": 32
        },
        {
          "start": 26951,
          "length": 32
        },
        {
          "start": 27232,
          "length": 32
        },
        {
          "start": 27380,
          "length": 32
        },
        {
          "start": 27590,
          "length": 32
        },
        {
          "start": 29285,
          "length": 32
        },
        {
          "start": 29875,
          "length": 32
        },
        {
          "start": 30183,
          "length": 32
        },
        {
          "start": 30349,
          "length": 32
        },
        {
          "start": 30629,
          "length": 32
        },
        {
          "start": 32670,
          "length": 32
        },
        {
          "start": 33377,
          "length": 32
        },
        {
          "start": 33581,
          "length": 32
        },
        {
          "start": 33858,
          "length": 32
        },
        {
          "start": 37830,
          "length": 32
        },
        {
          "start": 37978,
          "length": 32
        },
        {
          "start": 38697,
          "length": 32
        },
        {
          "start": 38845,
          "length": 32
        },
        {
          "start": 42044,
          "length": 32
        },
        {
          "start": 42114,
          "length": 32
        },
        {
          "start": 42400,
          "length": 32
        },
        {
          "start": 42548,
          "length": 32
        },
        {
          "start": 42763,
          "length": 32
        }
      ],
      "105076": [
        {
          "start": 2096,
          "length": 32
        },
        {
          "start": 2166,
          "length": 32
        },
        {
          "start": 2452,
          "length": 32
        },
        {
          "start": 6245,
          "length": 32
        },
        {
          "start": 6317,
          "length": 32
        },
        {
          "start": 6393,
          "length": 32
        },
        {
          "start": 7315,
          "length": 32
        },
        {
          "start": 12790,
          "length": 32
        },
        {
          "start": 12859,
          "length": 32
        },
        {
          "start": 13144,
          "length": 32
        },
        {
          "start": 14869,
          "length": 32
        },
        {
          "start": 14938,
          "length": 32
        },
        {
          "start": 15218,
          "length": 32
        },
        {
          "start": 17958,
          "length": 32
        },
        {
          "start": 18030,
          "length": 32
        },
        {
          "start": 18106,
          "length": 32
        },
        {
          "start": 19028,
          "length": 32
        },
        {
          "start": 23554,
          "length": 32
        },
        {
          "start": 23626,
          "length": 32
        },
        {
          "start": 23702,
          "length": 32
        },
        {
          "start": 24564,
          "length": 32
        },
        {
          "start": 32894,
          "length": 32
        },
        {
          "start": 32964,
          "length": 32
        },
        {
          "start": 33245,
          "length": 32
        },
        {
          "start": 37401,
          "length": 32
        },
        {
          "start": 37473,
          "length": 32
        },
        {
          "start": 37549,
          "length": 32
        },
        {
          "start": 38411,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "addLiquidity(address,address,address,uint24,uint256,uint256,uint8,uint8)": "a7aa85e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSelectors()": "b0464fdc",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getId(uint24,uint256,uint8)": "889be5b7",
    "getTotalBins(uint8,uint8)": "49789ef9",
    "isPresetOpen(uint16)": "b89e0233",
    "removeLiquidity(address,address,address,uint24,uint256,uint8,uint8)": "fecaa223",
    "setUp()": "0a9254e4",
    "supportsInterface(bytes4)": "01ffc9a7",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetInterfaces()": "2ade3880",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFuzz_SwapInX(uint128)": "ee2a4a05",
    "testFuzz_SwapInXAndY(uint128,uint128)": "8eafd734",
    "testFuzz_SwapInY(uint128)": "891432ed",
    "testFuzz_SwapInYandX(uint128,uint128)": "befbe28b",
    "testFuzz_SwapOutX(uint128)": "17e5786d",
    "testFuzz_SwapOutXAndY(uint128,uint128)": "7b921e8f",
    "testFuzz_SwapOutY(uint128)": "958493b8",
    "testFuzz_SwapOutYAndX(uint128,uint128)": "20c2ff2c",
    "test_CollectProtocolFeesAfterSwap()": "4ab64e48",
    "test_CollectProtocolFeesBothTokens()": "45fc1e89",
    "test_CollectProtocolFeesXTokens()": "b9651243",
    "test_CollectProtocolFeesYTokens()": "257fbfef",
    "test_Fees2LPFlashloan()": "9cac290a",
    "test_FeesX2LP()": "13f1994a",
    "test_FeesY2LP()": "aabdebad",
    "test_revert_TotalFeeExceeded(uint16,uint16,uint24,uint24)": "d7f975b4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"SafeCast__Exceeds24Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SafeCast__Exceeds64Bits\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Uint256x256Math__MulDivOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"fsig\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keysHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"SlotFound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slot\",\"type\":\"uint256\"}],\"name\":\"WARNING_UninitedSlot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"excludedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getId\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"getTotalBins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"}],\"name\":\"isPresetOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOpen\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"contract LBPair\",\"name\":\"lbPair\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"activeId\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"percentToBurn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"nbBinX\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"nbBinY\",\"type\":\"uint8\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"artifact\",\"type\":\"string\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzArtifactSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetInterfaces\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"artifacts\",\"type\":\"string[]\"}],\"internalType\":\"struct StdInvariant.FuzzInterface[]\",\"name\":\"targetedInterfaces_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountOut\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapInX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountXOut\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountYOut\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapInXAndY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountOut\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapInY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountYOut\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountXOut\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapInYandX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountIn\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapOutX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountXIn\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountYIn\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapOutXAndY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountIn\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapOutY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"amountXIn\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amountYIn\",\"type\":\"uint128\"}],\"name\":\"testFuzz_SwapOutYAndX\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CollectProtocolFeesAfterSwap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CollectProtocolFeesBothTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CollectProtocolFeesXTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_CollectProtocolFeesYTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Fees2LPFlashloan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_FeesX2LP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_FeesY2LP\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"binStep\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"baseFactor\",\"type\":\"uint16\"},{\"internalType\":\"uint24\",\"name\":\"variableFeeControl\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"maxVolatilityAccumulator\",\"type\":\"uint24\"}],\"name\":\"test_revert_TotalFeeExceeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/LBPairFees.t.sol\":\"LBPairFeesTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe\",\"dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db\",\"dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2\",\"dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391\",\"dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54\",\"dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678\",\"dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8\",\"dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK\"]},\"lib/forge-std/src/StdToml.sol\":{\"keccak256\":\"0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d\",\"dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa\",\"dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e\",\"dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8\",\"dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194\",\"dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d\",\"dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ\"]},\"lib/forge-std/src/interfaces/IERC165.sol\":{\"keccak256\":\"0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc\",\"dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT\"]},\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/interfaces/IERC721.sol\":{\"keccak256\":\"0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f\",\"dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]},\"lib/forge-std/src/mocks/MockERC721.sol\":{\"keccak256\":\"0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87\",\"dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv\"]},\"lib/forge-std/src/safeconsole.sol\":{\"keccak256\":\"0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae\",\"dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22\",\"dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded\",\"dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f\",\"dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155\",\"dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5\",\"dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a\",\"dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol\":{\"keccak256\":\"0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88\",\"dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299\",\"dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol\":{\"keccak256\":\"0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb\",\"dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi\"]},\"lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5\",\"dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc\",\"dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323\",\"dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7\",\"dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4\",\"dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"src/BaseUpgradeableBeacon.sol\":{\"keccak256\":\"0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17\",\"dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg\"]},\"src/LBFactory.sol\":{\"keccak256\":\"0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126\",\"dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N\"]},\"src/LBPair.sol\":{\"keccak256\":\"0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96\",\"dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a\"]},\"src/LBPairBeaconProxy.sol\":{\"keccak256\":\"0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156\",\"dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn\"]},\"src/LBPairUpgradeableBeacon.sol\":{\"keccak256\":\"0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495\",\"license\":\"GPL-3\",\"urls\":[\"bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe\",\"dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL\"]},\"src/LBQuoter.sol\":{\"keccak256\":\"0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980\",\"dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8\"]},\"src/LBRouter.sol\":{\"keccak256\":\"0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d\",\"dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte\"]},\"src/LBToken.sol\":{\"keccak256\":\"0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11\",\"dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma\"]},\"src/interfaces/ILBFactory.sol\":{\"keccak256\":\"0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246\",\"dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN\"]},\"src/interfaces/ILBFlashLoanCallback.sol\":{\"keccak256\":\"0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56\",\"dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc\"]},\"src/interfaces/ILBHooks.sol\":{\"keccak256\":\"0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109\",\"dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n\"]},\"src/interfaces/ILBLegacyFactory.sol\":{\"keccak256\":\"0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc\",\"dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy\"]},\"src/interfaces/ILBLegacyPair.sol\":{\"keccak256\":\"0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf\",\"dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob\"]},\"src/interfaces/ILBLegacyRouter.sol\":{\"keccak256\":\"0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c\",\"dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q\"]},\"src/interfaces/ILBLegacyToken.sol\":{\"keccak256\":\"0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15\",\"dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY\"]},\"src/interfaces/ILBPair.sol\":{\"keccak256\":\"0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d\",\"dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW\"]},\"src/interfaces/ILBRouter.sol\":{\"keccak256\":\"0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561\",\"dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7\"]},\"src/interfaces/ILBToken.sol\":{\"keccak256\":\"0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f\",\"dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz\"]},\"src/interfaces/ISovrynLBFactoryV1.sol\":{\"keccak256\":\"0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9\",\"dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd\"]},\"src/interfaces/ISovrynLBPairV1.sol\":{\"keccak256\":\"0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0\",\"dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc\"]},\"src/interfaces/ISovrynLBRouter01.sol\":{\"keccak256\":\"0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a\",\"dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh\"]},\"src/interfaces/ISovrynLBRouter02.sol\":{\"keccak256\":\"0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65\",\"dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx\"]},\"src/interfaces/IWNATIVE.sol\":{\"keccak256\":\"0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa\",\"dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74\"]},\"src/libraries/BinHelper.sol\":{\"keccak256\":\"0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f\",\"dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009\",\"dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD\"]},\"src/libraries/FeeHelper.sol\":{\"keccak256\":\"0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee\",\"dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra\"]},\"src/libraries/Hooks.sol\":{\"keccak256\":\"0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a\",\"dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop\"]},\"src/libraries/ImmutableClone.sol\":{\"keccak256\":\"0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156\",\"dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr\"]},\"src/libraries/OracleHelper.sol\":{\"keccak256\":\"0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5\",\"dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj\"]},\"src/libraries/PairParameterHelper.sol\":{\"keccak256\":\"0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1\",\"dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f\"]},\"src/libraries/PriceHelper.sol\":{\"keccak256\":\"0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e\",\"dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft\"]},\"src/libraries/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9\",\"dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv\"]},\"src/libraries/SovrynLBLibrary.sol\":{\"keccak256\":\"0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3\",\"dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric\"]},\"src/libraries/TokenHelper.sol\":{\"keccak256\":\"0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8\",\"dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu\"]},\"src/libraries/math/BitMath.sol\":{\"keccak256\":\"0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de\",\"dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV\"]},\"src/libraries/math/Encoded.sol\":{\"keccak256\":\"0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8\",\"dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY\"]},\"src/libraries/math/LiquidityConfigurations.sol\":{\"keccak256\":\"0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5\",\"dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG\"]},\"src/libraries/math/PackedUint128Math.sol\":{\"keccak256\":\"0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4\",\"dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf\"]},\"src/libraries/math/SafeCast.sol\":{\"keccak256\":\"0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e\",\"dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva\"]},\"src/libraries/math/SampleMath.sol\":{\"keccak256\":\"0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20\",\"dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr\"]},\"src/libraries/math/TreeMath.sol\":{\"keccak256\":\"0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1\",\"dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE\"]},\"src/libraries/math/Uint128x128Math.sol\":{\"keccak256\":\"0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f\",\"dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb\"]},\"src/libraries/math/Uint256x256Math.sol\":{\"keccak256\":\"0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242\",\"dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY\"]},\"test/LBPairFees.t.sol\":{\"keccak256\":\"0x3572a820d0800694cc35135768260fddf392b2e007e036599c7a3c25b35e2adb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://215fdcbb909ffca402827680cee60ff5eb6ff32bd9aa533cbc283fc0156b0a3e\",\"dweb:/ipfs/QmbrQpYUcJuE864JUS47TjZmaC8aCq3b9V7exkYDtA3XhZ\"]},\"test/helpers/TestHelper.sol\":{\"keccak256\":\"0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937\",\"dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto\"]},\"test/helpers/Utils.sol\":{\"keccak256\":\"0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0\",\"dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW\"]},\"test/integration/Addresses.sol\":{\"keccak256\":\"0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac\",\"dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7\"]},\"test/mocks/ERC20.sol\":{\"keccak256\":\"0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f\",\"dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y\"]},\"test/mocks/ERC20TransferTax.sol\":{\"keccak256\":\"0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170\",\"dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu\"]},\"test/mocks/FlashBorrower.sol\":{\"keccak256\":\"0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b\",\"dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs\"]},\"test/mocks/WNATIVE.sol\":{\"keccak256\":\"0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5\",\"dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds24Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SafeCast__Exceeds64Bits"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Uint256x256Math__MulDivOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes4",
              "name": "fsig",
              "type": "bytes4",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "keysHash",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SlotFound",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "slot",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WARNING_UninitedSlot",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "amountX",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountY",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "excludedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getId",
          "outputs": [
            {
              "internalType": "uint24",
              "name": "",
              "type": "uint24"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getTotalBins",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isPresetOpen",
          "outputs": [
            {
              "internalType": "bool",
              "name": "isOpen",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "contract LBPair",
              "name": "lbPair",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "activeId",
              "type": "uint24"
            },
            {
              "internalType": "uint256",
              "name": "percentToBurn",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "nbBinX",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "nbBinY",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeLiquidity"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzArtifactSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "string",
                  "name": "artifact",
                  "type": "string"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetInterfaces",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzInterface[]",
              "name": "targetedInterfaces_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "string[]",
                  "name": "artifacts",
                  "type": "string[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountOut",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapInX"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountXOut",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amountYOut",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapInXAndY"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountOut",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapInY"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountYOut",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amountXOut",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapInYandX"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapOutX"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountXIn",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amountYIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapOutXAndY"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapOutY"
        },
        {
          "inputs": [
            {
              "internalType": "uint128",
              "name": "amountXIn",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "amountYIn",
              "type": "uint128"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_SwapOutYAndX"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_CollectProtocolFeesAfterSwap"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_CollectProtocolFeesBothTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_CollectProtocolFeesXTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_CollectProtocolFeesYTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_Fees2LPFlashloan"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_FeesX2LP"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_FeesY2LP"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "binStep",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "baseFactor",
              "type": "uint16"
            },
            {
              "internalType": "uint24",
              "name": "variableFeeControl",
              "type": "uint24"
            },
            {
              "internalType": "uint24",
              "name": "maxVolatilityAccumulator",
              "type": "uint24"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_revert_TotalFeeExceeded"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/LBPairFees.t.sol": "LBPairFeesTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x4584f551c3a875c26423c1e50a77179bc2f9c9c1ee6d0f0c6be0f89ca5ee8270",
        "urls": [
          "bzz-raw://ef118876a862b60ba8a6612b8b3f3a6c226e11a0071a2e9695f021586d1bfdbe",
          "dweb:/ipfs/QmXd2vD91PkvoFWasFkgbDi89PctmgsHVxGvGNyhjmRK2b"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x1e2c73d51d6b0d1101f3a4cf0e6def9818a891d6aa8d306f2b127943a69dca2d",
        "urls": [
          "bzz-raw://0ab436d74b405f890e2634c6077df15cc196b4032ec1bdabaaf021ef209e68db",
          "dweb:/ipfs/Qmbb1Qgtdn6S4aqrnpg3y9TDX7erFFcRir9GN62Y7QazaY"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb72f3519e0bf7d31df5d68557525f4fc55d861c3fb3b0f7793144ef7c94cbeb7",
        "urls": [
          "bzz-raw://f3456d0f78e6f61203fa7871ba2df0d35925f10db3baee14be623ce2a35b84e2",
          "dweb:/ipfs/QmWE6QQSBvJifHMraisBTrf1x4WCwrDoTPLX8UKajTiApc"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0x4dab3021edfa9511bbdd80c48f060ef62eaf457f99eaf841f561fc2557d9a08d",
        "urls": [
          "bzz-raw://07668628673174cf8f27f8f4e1f862bab775013ec247eb34f698c5005f229391",
          "dweb:/ipfs/QmPJsiiYwmCZXMsHmQv5tg8VF3CAhNdat7WnKLTWZZH2v5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x62bed173cb126f6d5006706cf249bac8a2d51bfa18f773f314784ff18adc622d",
        "urls": [
          "bzz-raw://5acc33dddbf2492e37dc32e89cd56ce917272d303a6874805f3a5768a6bfbf54",
          "dweb:/ipfs/QmTsgFhcpUf16gAVazUXU3WspgX8nHke2hzVCvoqS25WEp"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0x651d84d948832f0ef45686417aa68ffb871378fa788a4123dbf37844903c66f3",
        "urls": [
          "bzz-raw://ff20f5ac9de3dc3ba86b1bf1f2723174e82ce3499ad67cb0ccfa7d28baeee678",
          "dweb:/ipfs/QmRZkUFKz7AmF7yk6o317sk822HHhGVPXZQgX8G4LfYfft"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x43e2a8a9b9c2574dabe74f11adf6f782df218f463540e3b5b563609fe108597d",
        "urls": [
          "bzz-raw://51363ca97404cf4128e1141428949768c31929e75e014b02c85e887fbbb4f1b8",
          "dweb:/ipfs/QmVhtbQc2fU4rRmbcfBtz34mAgG4BAZBsbna1Ca4SkoPsK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdToml.sol": {
        "keccak256": "0xc8a57915ace96f5b6a85b57e57690fc038cad9034a3dc368c11828a3707c61ab",
        "urls": [
          "bzz-raw://fa880a1a6e5d94005dcf4811b4c0df8d9c06407017ae111bd351483e2b76a72d",
          "dweb:/ipfs/QmcxkEE58gE1vDcZofTr8QpvdjXjgR72yYg7o4vTPSLCsy"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x4a5853bb9688c4e1c65626036cddd8ea2af84ef1046b704ddc3782d84a892410",
        "urls": [
          "bzz-raw://09c1024e6aac9657312fcfcf5c3dee62c22edf9f74a1065e6924c4ec710ecafa",
          "dweb:/ipfs/QmRNURoTUkd6DiZnf8yY8o3stJpVQBifopdSpQgP9RhvRr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x3b4bb409a156dee9ce261458117fe9f81080ca844a8a26c07c857c46d155effe",
        "urls": [
          "bzz-raw://5792c69fe24bdc063a14e08fe68275007fdb1e5e7e343840a77938cb7e95a64e",
          "dweb:/ipfs/QmcAMhaurUwzhytJFYix4vRNeZeV8g27b8LnV3t7dvYtiK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd9e719ff0673fdd8ff83bbe72ee8cae0273d61937d27fde5d9159d9849233f4",
        "urls": [
          "bzz-raw://b14aaef0d76f2e5257e4e3ab33895d5260d4c7707ff4d37fea1f31d25c8684a8",
          "dweb:/ipfs/QmRd6BMh4FNDPW8Niy4TU2XrtKqAc6GRTfw8xjSwpQ42Gy"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0xf61cb43a94d8318049d0a7f567af8c0aa952b5762a43851b130b90b3fcde0c6a",
        "urls": [
          "bzz-raw://53a52c6c3aeb22f7a18f53fca16af590308a8e3e5507e74df9b8e2561c932194",
          "dweb:/ipfs/QmaaXuY8mC66YoE2xyZdWuLHXqAxLjbnNxiofx8BTP1MRn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x3b8fe79f48f065a4e4d35362171304a33784c3a90febae5f2787805a438de12f",
        "urls": [
          "bzz-raw://61de63af08803549299e68b6e6e88d40f3c5afac450e4ee0a228c66a61ba003d",
          "dweb:/ipfs/QmWVoQ5rrVxnczD4ZZoPbD4PC9Z3uExJtzjD4awTqd14MZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC165.sol": {
        "keccak256": "0x414b2861b1acbf816ccb7346d3f16cf6c1e002e9e5e40d2f1f26fa5ddc2ea600",
        "urls": [
          "bzz-raw://698352fb240868ea8f1d1fe389993035eeab930f10d06934f80ccfb2b6ccbfbc",
          "dweb:/ipfs/QmT6WLHAgXxFhh12kWym895oTzXid1326iZiwT3pyfggoT"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947",
        "urls": [
          "bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7",
          "dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IERC721.sol": {
        "keccak256": "0xf069262a264fdb69f8f37a10d2df7374649e9ba73f8414c9c8a3b51184625f15",
        "urls": [
          "bzz-raw://924a41ca82a68ffbd503a5faf2f76d13e9938f10501a71094716f12bb64b4b7f",
          "dweb:/ipfs/QmdWnqfKc5ZGhmxNPTde4zrFchnv9Yk9MpCMb2rdhXE5gm"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC20.sol": {
        "keccak256": "0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b",
        "urls": [
          "bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f",
          "dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/mocks/MockERC721.sol": {
        "keccak256": "0xbfbb755bb379f58b97699f7cda0e9a2b9113daaa072e41b280a5ce6a3bff44c9",
        "urls": [
          "bzz-raw://5ae0c31d29db14d6a0e9b62d33d550feb307f48a6f45068901a013321f337f87",
          "dweb:/ipfs/QmX25DVXW6XZDvRm6SNBGCWrZQ6oNhdq5CmgtVocvsUdwv"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/safeconsole.sol": {
        "keccak256": "0xbaf41fdc6c54297e7cd8250e48b0f20eaac918e342a1028cef3f9a52ac086381",
        "urls": [
          "bzz-raw://a500ad81dea226f9910e6b50f99a9ff930105e393a692cbfb2185e4cdb4424ae",
          "dweb:/ipfs/QmVbUQpXNMmMWRiy4FvBNczzq46BMGfUoBikvSHNiCxVTq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
        "keccak256": "0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225",
        "urls": [
          "bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45",
          "dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/Ownable2StepUpgradeable.sol": {
        "keccak256": "0x72a2cb65884e565b059fdf43b1c8e074a2128d4456c467cabfcebd28f2f4c336",
        "urls": [
          "bzz-raw://6ed917865e6ddc26ddefbd9376bb36a258e40dac98ed4836e54c8920c8982d22",
          "dweb:/ipfs/QmNonmf4PWnH2CzyTGmrgDkfzRz1uQaZdCQYQRaMpX3YNB"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0xddfe0afa85367153020524d383fe0bc9a1545f343019ddf33f98f392887047f0",
        "urls": [
          "bzz-raw://62f3df350ce83190e81673e424dd47d9ee8ffb121a6f72994c75c8ae3fc9dded",
          "dweb:/ipfs/QmaA2CMuqESmdgVao4XzCL4aRwcZW1xjUXpY7RqHZfQoAV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x65ca47513b279410048d29579aa4b32d8a7faf4ee8264f22ae4ac51117e733d9",
        "urls": [
          "bzz-raw://c9a84d41cb877bf31c3db9a3dd917d5d94509834604722e7b972b112e4af705f",
          "dweb:/ipfs/QmYEZBWxWDkdbqqDTUmDpCD7txYMuS2ykcrCH3D5HAJ1J1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486",
        "urls": [
          "bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d",
          "dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x9cac1f97ecc92043dd19235d6677e40cf6bac382886a94f7a80a957846b24229",
        "urls": [
          "bzz-raw://a1e0c924e0edfdfd4abceeb552d99f1cd95c0d387b38ccb1f67c583607e3d155",
          "dweb:/ipfs/QmZAi6qKa66zuS3jyEhsQR9bBNnZe1wSognYqw9nvseyUz"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0x31b7f755099238afdf101d132e356ca59a2f5aa3c9d6957bc320c3a89c6b29a8",
        "urls": [
          "bzz-raw://6c1ef7fce6c908e6912cbea81d4655489fb29e328b03502b6dc680a4eda65ae5",
          "dweb:/ipfs/QmQMasWF2fg4DvwYuXto8qvkDYVsrTDmBCgjRPTvn6PgpD"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06bd04b0d6af06424c58c24ad861ac4fbe68ae729c199127f4b64361a0629510",
        "urls": [
          "bzz-raw://8a9228dd927facb9a400333848e8cf616c7a7f30693563d98a963266dc8ae28a",
          "dweb:/ipfs/Qmehe5JAWCK7g8A9VkS9LpfiNkYzXkrxnXfpvtuqbrA9BA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd",
        "urls": [
          "bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac",
          "dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/BeaconProxy.sol": {
        "keccak256": "0x25052a8e6c783ab01f98a9ac7f521649be60b9963f352e2453997ba8fbc2d285",
        "urls": [
          "bzz-raw://94ba3d98053a310582febe79742e566a36073f1f2645ddc772c638c84ae93b88",
          "dweb:/ipfs/QmTHUMHniPNJ9H2Ui2zgk35CZDSThg2nQ8j5sNXaNarL9D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/UpgradeableBeacon.sol": {
        "keccak256": "0x5920bac7215d12961e23b207f6e81a1d64aa4935a4469abe95b64a96a3c3007b",
        "urls": [
          "bzz-raw://b34bb828c45c3a4ebf6c2c585971abf5089e61357a3818a2900c7e85b74a1299",
          "dweb:/ipfs/QmewGAzKsPXYfSjCKxuH1SekKxtdyzhdbdyxjF5gohLigt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/ProxyAdmin.sol": {
        "keccak256": "0x371c3467dccfbb2ac03b0edb4fadaacb9ad382772cee7850a3e73f39a56d102c",
        "urls": [
          "bzz-raw://3574f1cc3ff2cb985a1385949bd3c76888e8dcf59e6a770ccb15c79b145b39bb",
          "dweb:/ipfs/QmXZDrFibUAMqjoRrpKxV3ma5RR9YfJXZyMrLWJ3bix9gi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/transparent/TransparentUpgradeableProxy.sol": {
        "keccak256": "0x11e3f4156c76feda27ffa117c3f624972471124411067e8f02c9a6909f35d035",
        "urls": [
          "bzz-raw://beb0d9fe2c5fae15f1ca8a22b2c8cfaaa75984f6c8a94534ba85f98366caa6a5",
          "dweb:/ipfs/QmQEFQtyLACb6j7XajAT7Z1KzANE6JzqDYMEQeG8yzrfqP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xca12be071e48f0378179113989f057819c3c1fe70e73e778fb00c9441768cb61",
        "urls": [
          "bzz-raw://60e10ff5a0dd6e15a89cd7e1c0190ba139772efeb696994933d2e54a23fab6cc",
          "dweb:/ipfs/QmVt9Ndx7AiWq1qtzjS5NXsqzfhfUeEQ7XXcLLQJXFvJtK"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x88f7b6f070ad1de2bf899da6978ed74b5038eac78c01b7359b92b60c3d965c28",
        "urls": [
          "bzz-raw://c436edb6733a036607c6f17cc590e8ee351363a8cb4c564a98d9a66392c89323",
          "dweb:/ipfs/QmcJvJR2K3EtYcKEXVpQ1WqT6TvAbVem5HR1FirAsqEXFR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x70d9a9cf8d5cc830d7396505ef8eb9686bd0c60a29c6644bd6cc278f9bab8ebe",
        "urls": [
          "bzz-raw://719abb402c11be12355088da587ffd971fee1b035b5aa6b1ba3b1a9493d3c1d7",
          "dweb:/ipfs/QmanHMFVDqVtZAFFaH1CeGQWoHWsFnWHH75fCrguwi77Hq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableMap.sol": {
        "keccak256": "0xd54305a00b75f1d580747bc916257a6a53d5c0c699d65f947988ef9c1d95a2b5",
        "urls": [
          "bzz-raw://e687cd2e6ce64ed9829557eef8b542dd5ef3829ecd1b00a07ff5bfd7dc0c59c4",
          "dweb:/ipfs/QmaX3mE3HbH5cUbyj9RszWEXsjjMJ6LtuovebEYhxjUMvw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
        "urls": [
          "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
          "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
        ],
        "license": "MIT"
      },
      "src/BaseUpgradeableBeacon.sol": {
        "keccak256": "0x169ad5b4be4cfc0366252ccb818f787b26ef113c9f0675d8b53154fede8f0b82",
        "urls": [
          "bzz-raw://dbe8c26f6f92c4d12933a10a2bc99cdc4ecc18508192fa3c16f835b9e53c0e17",
          "dweb:/ipfs/QmdgzeriXudxB7L3bZGHr4m6y7gFvjovdynuiiyv3yP8Yg"
        ],
        "license": "MIT"
      },
      "src/LBFactory.sol": {
        "keccak256": "0xa2f1d0314a64f52f937ab42405ba3b89df213d723e461d2025370dd192a98f44",
        "urls": [
          "bzz-raw://da05a78fa2ec3ae26d8e815d0ba563739a297e34c84522c6dbf9c0e68eeff126",
          "dweb:/ipfs/QmVLhQtbKAprb4iLM7CfCgmEajbhxB88C9NkS9dFG8Pc3N"
        ],
        "license": "MIT"
      },
      "src/LBPair.sol": {
        "keccak256": "0x22921f54d3ba91e274b413441192496516c90fad2ac4d3850073429eacb7ff01",
        "urls": [
          "bzz-raw://9f777c1f58e84fd9c1281b250750ba483b769b21caed74a37c5d3a5f3be6ca96",
          "dweb:/ipfs/QmTE6PuKDQUAL4rQWaJV6KZAu1SBsaWaHV7zUe9xkFbH5a"
        ],
        "license": "MIT"
      },
      "src/LBPairBeaconProxy.sol": {
        "keccak256": "0xd2ca988c7ea48011ee172b5390ce9a33ad2b2f71da70b7d9d8ceb57b637bd3c4",
        "urls": [
          "bzz-raw://cb7c1c2f9f52b768e4122a45c0ec7aa8713337cb25d4e2a2ec73ccc1190f4156",
          "dweb:/ipfs/QmUuPzVPv6BFyVpRzZ9jiA7CLr6shpaABC23SedK9RQwBn"
        ],
        "license": "GPL-3"
      },
      "src/LBPairUpgradeableBeacon.sol": {
        "keccak256": "0x77d590d69348897b336f4bfae2e671c2f212b912902045371925143c339bc495",
        "urls": [
          "bzz-raw://548bdcfba54db867317fab2f3dd9f66828c82822baac629df150ebe096d3c8fe",
          "dweb:/ipfs/QmfU8oe7XxA9hh1qZJeFwyz3EGxbgYnsYpSpn4r8f8xPBL"
        ],
        "license": "GPL-3"
      },
      "src/LBQuoter.sol": {
        "keccak256": "0xab8b305e366d2d0a9dd64e14488a4029ae6527762fca9b571874b8521a7c73c2",
        "urls": [
          "bzz-raw://9ae36b4d32bbcb0bb69b76ed09687affd246cffcff3889e9fd0a3a5a7ab7e980",
          "dweb:/ipfs/QmRbf3vyMrMia4LNJeuVJmqJKMsNBhqiYT2TuJ55CGD5k8"
        ],
        "license": "MIT"
      },
      "src/LBRouter.sol": {
        "keccak256": "0xa5a8366ad540d9cc660c415ea9a199e667e0f984e8e12b8a972c16146e7a327b",
        "urls": [
          "bzz-raw://7b461020c970f09ac199ad6127abd48015646ea2c6bc6d50c22970148174285d",
          "dweb:/ipfs/QmNTTg5jDzAb6sVgFPPB5MLyp9MqiSwVsiVYNtWR7AYLte"
        ],
        "license": "MIT"
      },
      "src/LBToken.sol": {
        "keccak256": "0xb8d572e46a584a5fd98b079a2893ff11c010c8d49e0c580fd9f71b483b8c3bb3",
        "urls": [
          "bzz-raw://c14c154d7e56becf8f9de568d0bd6be351ceec8e35541578fd44b4dae8d7ff11",
          "dweb:/ipfs/QmcDUyQZ9m4ZsubKDmZgrEvVTeyUaqvySDHNVXt7XCx4Ma"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFactory.sol": {
        "keccak256": "0xde4ea8d9e4ce0cb6c37b56a34ce6a9da6ee99ea75877ef81f182411b84230ab9",
        "urls": [
          "bzz-raw://0a9e17bf38a6c3943855e879943069eed3f1b3a377a7b91e81e15fc0cb9fc246",
          "dweb:/ipfs/QmWTLMKH4zVwBBku7s3mXnXL2Ke4ncrZAQx6CQDwk3NHbN"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBFlashLoanCallback.sol": {
        "keccak256": "0x8f02c16e8d7ae8a27693bc23fbe35d29b92c6db3c9238a22aca13e1add39eb62",
        "urls": [
          "bzz-raw://b4fd65c9d683258d32dcd3f467634d88b2d1114394a9d9d140e7bb2d41523e56",
          "dweb:/ipfs/QmdhmzvoUoxzXcFJFeM5PxGWNNBWbEDM3B8NqGF8qJ3QCc"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBHooks.sol": {
        "keccak256": "0xad32a000f052e48266932bc3eb9818de0a80b77235ae5d44d9a5286264992f1a",
        "urls": [
          "bzz-raw://044044be7373a509f946ede2ee05580f55438ce317e3c538a888208f18f39109",
          "dweb:/ipfs/QmWK93hkd91t7LQRnVN1QZXUniCLh5HifXrww5BhRxaD9n"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyFactory.sol": {
        "keccak256": "0x72bf0439b140b32237443d340ddee595fd2b063b5f65657389c72520cf20f2ca",
        "urls": [
          "bzz-raw://9248e33a1888202df90dbbc1b9616fd84cf44f509b37717e19cb7bb54254eadc",
          "dweb:/ipfs/QmVa1FUaxUya5JYHAr8z25365qtCnrMSz3q8uz1RdA19Wy"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyPair.sol": {
        "keccak256": "0x006a101cb88f36ad81a7dcc17dae3c7e9b336ecc8e8897981c2ea6739dcc772a",
        "urls": [
          "bzz-raw://37ef9214a00f4858934883c5692b4a23dddb0db3852c049b1f61630b2ec457bf",
          "dweb:/ipfs/Qmc76ii9U4G7uqQ6GdgW4XBvBHm6qyCRmor4Zx6uBZBTob"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyRouter.sol": {
        "keccak256": "0x40e85983bfb9dc4681672c2b8dc965c8f973a9db2e85f54120934c8cda84acf2",
        "urls": [
          "bzz-raw://6509125a21ee317d989a0c3e5c7821e221ed4b1d2cef0fe0518eaa277a4e102c",
          "dweb:/ipfs/QmPVtyhp5Ekcz86i3bAk8ypaT8jN4R11iuux7TQ8fT7N4Q"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBLegacyToken.sol": {
        "keccak256": "0xe8eda8ede95bfedf01e1cbef81ba7958abcdd41990cf007957eb1a83766eb727",
        "urls": [
          "bzz-raw://f088b7dee0db1d1a1184ae37167d2e381729c9f5c5a495f50189848ff5961a15",
          "dweb:/ipfs/QmRCV1fzfQfMPov7UezumRQkTyfUdsdYaT7Scex1PqQgYY"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBPair.sol": {
        "keccak256": "0xf020988a240ecda054cadf92745ef85dadcf1df00a86cef5eb2b5e175f3e401d",
        "urls": [
          "bzz-raw://c5df1a78f215bc8c00032aa9d52f07ea396495e2a20a69041552001cf72c939d",
          "dweb:/ipfs/Qma6t4CfwRftoAUvsLLVpk9HZ2FwNjCisfHZGnnw7aR8dW"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBRouter.sol": {
        "keccak256": "0x2520a5414d86497b9c48035de29937b29f144b18dddbf4e52f0b52adad9cfb47",
        "urls": [
          "bzz-raw://28d23c73a3572872deaa65e872838600417949c1328f75ae5c34ed95663ed561",
          "dweb:/ipfs/QmWwfJqGsjvtdoci4MuHXnqkPw1ctBCmAikkB1LwCr4Qf7"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILBToken.sol": {
        "keccak256": "0xb7d67955bf66ab1d822fccf69e26810c04ef2cd0870c6decb4e4cdc52994dce9",
        "urls": [
          "bzz-raw://6c0d53748545af906962f17c1b1904e430ebd928984caa3e259cefcbb752349f",
          "dweb:/ipfs/QmY9k3mYJRbbaX5G6xuwRnP4zKpPL1g8PC4VPFxLPJC5fz"
        ],
        "license": "MIT"
      },
      "src/interfaces/ISovrynLBFactoryV1.sol": {
        "keccak256": "0x7cc6e501d10d5982b0bc18c4f6396e1d53606cc4161d0c01aec6480a7fefbcce",
        "urls": [
          "bzz-raw://dd48d3a9c381f3b9a7197dfdffac3521c10241f751101f3ee86fae1b1dc676d9",
          "dweb:/ipfs/Qma4kuNgRAm1v6LxSUFo384k5yvXnZ4wdE5cGU4GijyTSd"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBPairV1.sol": {
        "keccak256": "0x71be4746f20a76c33bffe7a18b0b23bb17f2a89035b8b9be0a58c8e3c973a855",
        "urls": [
          "bzz-raw://be2ea1f8fcb9812951eaa5f8278ad15ea3e90105f5159e0e9ca2ed22e566dec0",
          "dweb:/ipfs/QmTpNEmrxLEd1c9VAtXgwNt6xaWxtyVWrW4LyqrThKDMmc"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter01.sol": {
        "keccak256": "0x9ad039ba618a184dd194cce6b446b8bed87e47edecda8a6d6725bdb9f5f4ad8b",
        "urls": [
          "bzz-raw://7fab92cdc2cd26607822cea29d40a9d811e3eda35b06df063780301fefe3a16a",
          "dweb:/ipfs/QmaPChQiN11ecmdeUNRSEXrAshqsB14txix5gBBLGEeNqh"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/ISovrynLBRouter02.sol": {
        "keccak256": "0x4550e4eb5ab8b232afb0b1e240239bdcc215d3dc1606e9ff34f85cf442970fa7",
        "urls": [
          "bzz-raw://c6a78c9b9200457b13fbe6a9c2435cc9d0e1f43ec65469c226880230962c1d65",
          "dweb:/ipfs/QmcWcVdQdzbCC6x6uYsKwhiZr3guoN7kG7D57nqfkcaBDx"
        ],
        "license": "GPL-3.0"
      },
      "src/interfaces/IWNATIVE.sol": {
        "keccak256": "0x60ffbeb68bc35b80c5a8046854ac095c73cdffbe0f293091f69f0adaf31543e3",
        "urls": [
          "bzz-raw://8c9d73dffc2c51210a0591c11483e2d8cdfdfc95dbc2d561f6b27b3b918d47aa",
          "dweb:/ipfs/QmZPd81xzm6HaLvu9i1pK7wu8agvRyQFrTyugybtLCYB74"
        ],
        "license": "MIT"
      },
      "src/libraries/BinHelper.sol": {
        "keccak256": "0x799d219605a3f08df9ba0e7d4aee6a6a7f0ee2e64eed09e2e3f710e99da40b49",
        "urls": [
          "bzz-raw://dda5893016c8b7057b4eb55c5c623ca501863bb9f3297d8e107b5c859fea1b7f",
          "dweb:/ipfs/Qmdvi9YhQ5JLyMC6Qx3zHn7NNKVt5DvFYEstDnHjP5xJJ6"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0x9e8f98ab393cf7f0a7a0774b9f0f912ec5dd86fdfdd041423978f3d6acce21e2",
        "urls": [
          "bzz-raw://82b49fa2c74c482822957cc7bd9ba693e077c9024451be40f4a1037e2d5cf009",
          "dweb:/ipfs/QmbMP3LSYQttZhiPb2hpM7k1697HBo93Bi6DgQGoZZZ3ZD"
        ],
        "license": "MIT"
      },
      "src/libraries/FeeHelper.sol": {
        "keccak256": "0xe8705347313b3e3fa998bd3e4b9585ff4a2e7c698dc5d8bc48e1a0f99dd8a084",
        "urls": [
          "bzz-raw://f148c2d49352330df0d8c51941a07035b9b73938a82bf797b2872c6872d687ee",
          "dweb:/ipfs/QmRuhLphH6joRyuryx322PvZjxtA3J122G86APyg4mjMra"
        ],
        "license": "MIT"
      },
      "src/libraries/Hooks.sol": {
        "keccak256": "0xa68b3308bf297c2cd03f2e4f28a6a5e0e68c415d617672bf356aadff56c53959",
        "urls": [
          "bzz-raw://b9a6b20fd8aeefacb64dbf3b463b0c10cb8848fd61f4f3344ed53731ffaf686a",
          "dweb:/ipfs/QmRvcBNazvsKvfDXQtdQj3GczaNLbFcqVYdcJCoRA6MDop"
        ],
        "license": "MIT"
      },
      "src/libraries/ImmutableClone.sol": {
        "keccak256": "0x1d51266d73063eaac933dcfd5a26b2899f7a41df68fd6560c5e2d22bafc12151",
        "urls": [
          "bzz-raw://9c1b3135eea3d13dad1ff29d66cac99b0a2716b299d1a6294eed2b50763ac156",
          "dweb:/ipfs/QmVBxfcVUX9zjEa29WGrJRsJhCKp6gbMyBimbeiRWeKwEr"
        ],
        "license": "MIT"
      },
      "src/libraries/OracleHelper.sol": {
        "keccak256": "0xbc5a289b8a931f42d02af2d68fdedcb5a9cb847a5927f170b02551c5e65bf2f9",
        "urls": [
          "bzz-raw://773c0b6b1e6ab9a33e81a9b55f4a76082bb88501e75dad73b9a4e18fa8f302f5",
          "dweb:/ipfs/QmeSDqPcduZpSdUGn49v19Uhc8fZFgg7Sv3Lw5N9rRqWTj"
        ],
        "license": "MIT"
      },
      "src/libraries/PairParameterHelper.sol": {
        "keccak256": "0xcc632c91ba3c5d4f749fe7ed78fdb19e3bde4fc8948aa46060cd8995474dd0d3",
        "urls": [
          "bzz-raw://eedc0239528182198ea0d407383013bbccbf6532bb27c5066ff0776b02fd65e1",
          "dweb:/ipfs/QmR5yYS9ferSWq3VGb6Qw6v1cQeZKXgeQCzP4wvDNekx4f"
        ],
        "license": "MIT"
      },
      "src/libraries/PriceHelper.sol": {
        "keccak256": "0x7a5ddde1ce4627d417c3c9a79d2259a77a82d72b222fb4fc2aafeb6eb98fa25a",
        "urls": [
          "bzz-raw://9ef81235ab850bbefe635b8556bc97f7e2103e95eca4a62e6588976f9c529d9e",
          "dweb:/ipfs/Qmcwf3Sg3Awm7wHxZG56YkPwh5ghrp36jximk3ZKmvxCft"
        ],
        "license": "MIT"
      },
      "src/libraries/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x328992de02832ed293994eaea742f5e06412ac3d1da53a75306e40332c214df7",
        "urls": [
          "bzz-raw://d4bf9d254d71f805b7b33f8f06382ac6fec1e43c9b099310b82b5130ea6b17f9",
          "dweb:/ipfs/QmYe968s6TQD666FJnP3FVByWPfTMXH6fWDbGV3S95jzJv"
        ],
        "license": "MIT"
      },
      "src/libraries/SovrynLBLibrary.sol": {
        "keccak256": "0xe696339e45b0da06dde7d7a0fe0cdfb3c22a86ebd35307cdf48a4cc83fcff658",
        "urls": [
          "bzz-raw://4341c4415e52e8376db9a69f2a4bbbd608ec4b7ee0abeee4c032105ca70a81d3",
          "dweb:/ipfs/QmdMCXCagQK1CmgzGuy8hMv4HJjUBZufUxnQeWmHEX2Ric"
        ],
        "license": "GPL-3.0"
      },
      "src/libraries/TokenHelper.sol": {
        "keccak256": "0x5d1f5984b6c6bc9cfb4cad89e754ede3b01e9430f0572819f8ba18d8c7c2e154",
        "urls": [
          "bzz-raw://382a71322e45e66df0fdc85e6a2f6dd968b4a7d1bee0dea02ea8525b1bf433e8",
          "dweb:/ipfs/QmW5SpmmmdjNPRAjfBEABV953nqgzmY8Tkays6wn8xL1wu"
        ],
        "license": "MIT"
      },
      "src/libraries/math/BitMath.sol": {
        "keccak256": "0x58abecbbb2ae9860495bb1758ce2b9dd35c9f2881398c03a33b720771a7d2994",
        "urls": [
          "bzz-raw://791a314f4187199412daf5240dc9ab449dff3780b60316b8b1c6d7ba1bd561de",
          "dweb:/ipfs/QmNQUg6wPr8YrifjvW5MtG1QstE7Gkxy5A7FTGqcGSxGFV"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Encoded.sol": {
        "keccak256": "0xa6752b1d81568f242adc2bbeb45fbc143c08dade1910ce5d27ff97067c4029ba",
        "urls": [
          "bzz-raw://a1adf21fef72586d0b057fe6cbabb1e928fdbb54bf89b9fa9bcf798dfeb533d8",
          "dweb:/ipfs/QmQr8MgwAdZoVM4LCdXgWTtCcw8HkR6Sp9huc7U45tELwY"
        ],
        "license": "MIT"
      },
      "src/libraries/math/LiquidityConfigurations.sol": {
        "keccak256": "0x301fcfba5f0ba64d7206c57082b6adc1650aca3432a20b9f23bb2931d2d4cef1",
        "urls": [
          "bzz-raw://af9cbf518b32b22e5225af0c97d729a3786604cb94fc6de6fbadb29a345f48d5",
          "dweb:/ipfs/QmVrfsK4od7ew4kREYuxTEnt64LDpqMjAaLRr9HSxhqWnG"
        ],
        "license": "MIT"
      },
      "src/libraries/math/PackedUint128Math.sol": {
        "keccak256": "0xb17b0f32ed8b0388cfd76d4d2d902ab125b87e63614e1e42d8f1d628aaaa7901",
        "urls": [
          "bzz-raw://86cc6eed7dfbef7d32d703840698a6b2d0d603a20125cdf327dfe3d78f77c3b4",
          "dweb:/ipfs/QmaVh32AHevqAsWe75xNfog2b2Y5hGg7ksuvMnrYKhkXSf"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SafeCast.sol": {
        "keccak256": "0x6f11de18a77cf44364a598890c634a59d995dfa7a3fdea360d98e4549f6727ed",
        "urls": [
          "bzz-raw://d8a4477235fd194ab6464025148d1c2ff51088b0ffba4013e25a10d01c11722e",
          "dweb:/ipfs/QmVNf6Psg6QXFcWa3CMmUxJkvGaN8Z2SqFafsyJukgfZva"
        ],
        "license": "MIT"
      },
      "src/libraries/math/SampleMath.sol": {
        "keccak256": "0x4fc4700a17265e56bd5f90e45ca0ed1cc1b7dec111d5957fb288265434979b63",
        "urls": [
          "bzz-raw://d34922932117cbd01dd8a10d9efbc9a9ebd2ae321425ea0fe00b6a2661224f20",
          "dweb:/ipfs/QmQDvaxoYCupk6fuDxicxZLmWzudTdw6fRj7i2g6Lxstfr"
        ],
        "license": "MIT"
      },
      "src/libraries/math/TreeMath.sol": {
        "keccak256": "0x0a8209a43df04fe4aec23bf55ebc3205584db66d1d09edc8475af20fa6ff0f3b",
        "urls": [
          "bzz-raw://2d79b602a33078d3115803d469e75a49dec268739898fcc9934ef0489708bcf1",
          "dweb:/ipfs/QmbS2TvsnMvkYnT2UtPuEPtNWYgupFptr6y3MMfGJp23dE"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint128x128Math.sol": {
        "keccak256": "0x580596dfca3fc3ec8f058e8832fdc063f276f8c5d1232c8ba1f134d6542d24ba",
        "urls": [
          "bzz-raw://5fc1bab07db13bd6bc4f76049507554a70489a9c1316994f51e481276dcd7a7f",
          "dweb:/ipfs/QmaStcfFRCeLscGisCgzKpMc1tmJufgL61PRvtV9TCR5zb"
        ],
        "license": "MIT"
      },
      "src/libraries/math/Uint256x256Math.sol": {
        "keccak256": "0x7d0e41d55d3f70d45e04cb082c0a4832af2bda49ed76116b49256521bfd22cf2",
        "urls": [
          "bzz-raw://01de3aa321eb2eb4e0f6098d6093ca03220156dd42c699b00f347d524f295242",
          "dweb:/ipfs/QmYbm5mMWBmv7v2jzDb9vxRqTp9BaFvZk9Jhi3MLv5FcwY"
        ],
        "license": "MIT"
      },
      "test/LBPairFees.t.sol": {
        "keccak256": "0x3572a820d0800694cc35135768260fddf392b2e007e036599c7a3c25b35e2adb",
        "urls": [
          "bzz-raw://215fdcbb909ffca402827680cee60ff5eb6ff32bd9aa533cbc283fc0156b0a3e",
          "dweb:/ipfs/QmbrQpYUcJuE864JUS47TjZmaC8aCq3b9V7exkYDtA3XhZ"
        ],
        "license": "MIT"
      },
      "test/helpers/TestHelper.sol": {
        "keccak256": "0x1356f58e0f85b6d20fe2f7e40c4f3a92f74705ab57570f6583f96c67aae49f00",
        "urls": [
          "bzz-raw://92f446a5996f6feb24d8f40deb3d3a2671808d5b3df091d073374f932efae937",
          "dweb:/ipfs/QmZjqbtg6yRkDANRkEhxV5LJ3GRuK4CWFKDE7wGwBQCdto"
        ],
        "license": "MIT"
      },
      "test/helpers/Utils.sol": {
        "keccak256": "0xbcc7f0711ad4c778c8e231fd6405966755216043c29bfab4148c13f7f0d3946d",
        "urls": [
          "bzz-raw://ce638a27981ff0cfcc7bc2caf166cb0a98aa41dc1e5b93598112d7f4f7e081c0",
          "dweb:/ipfs/QmdcGa7x1vRyBdqkqyUwh3FRWGJsMgTAokje2RWGzbZYkW"
        ],
        "license": "MIT"
      },
      "test/integration/Addresses.sol": {
        "keccak256": "0x9b2c106aca109afe2010e149996e4ee30bc4565f4a829bf0ee6911beb5dfa729",
        "urls": [
          "bzz-raw://7e50b16435a52c512134f2be4c30770af4f7338ded0c0d605ba414a50c0018ac",
          "dweb:/ipfs/QmUcbs2dDcbQDnikmyQyfRHWRTZtUEEc26BGhsr3psqTs7"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/ERC20.sol": {
        "keccak256": "0xdc98ca12557b76dfe4bef0cb90aefd9ca9bae37617a4b4d690ea8cd9038c43e6",
        "urls": [
          "bzz-raw://24693ef966d775c91c2327f6f597e61a0938deaa99c24638aacf9902d673d86f",
          "dweb:/ipfs/QmUnujVqr6kXE7AP12x88dgnjv4NDMQ9mFmAPrV3f2Pv4Y"
        ],
        "license": "MIT"
      },
      "test/mocks/ERC20TransferTax.sol": {
        "keccak256": "0xd7bbca08dc51e7ccf0510e410465020558e63d344d1eab411bf71e070aa63bfb",
        "urls": [
          "bzz-raw://90742dc79873f1ac1dfd97fe84b24dec5daea34ff9874017064c0d29fcb03170",
          "dweb:/ipfs/Qmcm6HHqxYxKBzUFWCEY2fZX4gm5nUj4iier31Movni8bu"
        ],
        "license": "MIT"
      },
      "test/mocks/FlashBorrower.sol": {
        "keccak256": "0x7c1b5a46250d67004dcf49f85195420c308f207470164a926fb34bf4cbbc1b0c",
        "urls": [
          "bzz-raw://fc3e2cce34d794c7290a89a2a6a1be808a484d3f05c2ec9694f383f14cde522b",
          "dweb:/ipfs/QmRNfrw1fmDe8XHkuP9bX6Wf8B75Yae7cSUfAD7vKdYSgs"
        ],
        "license": "MIT"
      },
      "test/mocks/WNATIVE.sol": {
        "keccak256": "0xdbbba0868467f98b7d4f1d14f87768c15bc083137d09a1c1d992e2305f7fc770",
        "urls": [
          "bzz-raw://72ac6f8d4220296943d4f184c921e80572a0bf71552c337d67d841aacb5313b5",
          "dweb:/ipfs/QmVWHfdXT24TYBmEoQHZip1xJVHnpwTG41fVHCjJtNUFhK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/LBPairFees.t.sol",
    "id": 89286,
    "exportedSymbols": {
      "AccessControlUpgradeable": [
        39192
      ],
      "AvalancheAddresses": [
        106823
      ],
      "BinHelper": [
        72278
      ],
      "BitMath": [
        75786
      ],
      "Constants": [
        72438
      ],
      "ERC20": [
        42210
      ],
      "ERC20Mock": [
        122897
      ],
      "ERC20TransferTaxMock": [
        122951
      ],
      "Encoded": [
        75993
      ],
      "EnumerableMap": [
        48826
      ],
      "EnumerableSet": [
        49439
      ],
      "FeeHelper": [
        72631
      ],
      "FlashBorrower": [
        123680
      ],
      "Hooks": [
        73505
      ],
      "IERC20": [
        42288
      ],
      "IERC20Metadata": [
        42314
      ],
      "ILBFactory": [
        67981
      ],
      "ILBFlashLoanCallback": [
        68006
      ],
      "ILBHooks": [
        68179
      ],
      "ILBLegacyFactory": [
        68545
      ],
      "ILBLegacyPair": [
        68961
      ],
      "ILBLegacyRouter": [
        69370
      ],
      "ILBPair": [
        69932
      ],
      "ILBRouter": [
        70464
      ],
      "ILBToken": [
        70587
      ],
      "ISovrynLBFactoryV1": [
        70661
      ],
      "ISovrynLBPairV1": [
        70904
      ],
      "ISovrynLBRouter01": [
        71213
      ],
      "ISovrynLBRouter02": [
        71303
      ],
      "IWNATIVE": [
        71319
      ],
      "ImmutableClone": [
        73583
      ],
      "Initializable": [
        41695
      ],
      "LBFactory": [
        59243
      ],
      "LBPair": [
        62123
      ],
      "LBPairBeaconProxy": [
        62222
      ],
      "LBPairFeesTest": [
        89285
      ],
      "LBPairUpgradeableBeacon": [
        62426
      ],
      "LBQuoter": [
        63714
      ],
      "LBRouter": [
        66964
      ],
      "LBToken": [
        67483
      ],
      "LiquidityConfigurations": [
        76163
      ],
      "OracleHelper": [
        74240
      ],
      "Ownable": [
        40391
      ],
      "Ownable2StepUpgradeable": [
        39329
      ],
      "OwnableUpgradeable": [
        39524
      ],
      "PackedUint128Math": [
        76517
      ],
      "PairParameterHelper": [
        75097
      ],
      "PriceHelper": [
        75271
      ],
      "ReentrancyGuardUpgradeable": [
        75400
      ],
      "SafeCast": [
        77265
      ],
      "SafeERC20": [
        42737
      ],
      "SampleMath": [
        77690
      ],
      "SovrynLBLibrary": [
        75606
      ],
      "StdAssertions": [
        2734
      ],
      "StdChains": [
        3561
      ],
      "StdCheats": [
        6414
      ],
      "StdInvariant": [
        6774
      ],
      "StdStorage": [
        7546
      ],
      "StdStyle": [
        10716
      ],
      "StdUtils": [
        12094
      ],
      "Test": [
        12146
      ],
      "TestBase": [
        65
      ],
      "TestHelper": [
        106622
      ],
      "TokenHelper": [
        75692
      ],
      "TransparentUpgradeableProxy": [
        41441
      ],
      "TreeMath": [
        78622
      ],
      "Uint256x256Math": [
        79258
      ],
      "UpgradeableBeacon": [
        41258
      ],
      "Utils": [
        106790
      ],
      "Vm": [
        15989
      ],
      "WNATIVE": [
        123990
      ],
      "console": [
        24113
      ],
      "console2": [
        24113
      ],
      "safeconsole": [
        38829
      ],
      "stdError": [
        6480
      ],
      "stdJson": [
        7366
      ],
      "stdMath": [
        7508
      ],
      "stdStorage": [
        9505
      ],
      "stdToml": [
        11308
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:23325:128",
    "nodes": [
      {
        "id": 86252,
        "nodeType": "PragmaDirective",
        "src": "33:24:128",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 86253,
        "nodeType": "ImportDirective",
        "src": "59:34:128",
        "nodes": [],
        "absolutePath": "test/helpers/TestHelper.sol",
        "file": "./helpers/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89286,
        "sourceUnit": 106623,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 86254,
        "nodeType": "ImportDirective",
        "src": "94:45:128",
        "nodes": [],
        "absolutePath": "src/libraries/ImmutableClone.sol",
        "file": "../src/libraries/ImmutableClone.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 89286,
        "sourceUnit": 73584,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 89285,
        "nodeType": "ContractDefinition",
        "src": "142:23215:128",
        "nodes": [
          {
            "id": 86259,
            "nodeType": "UsingForDirective",
            "src": "186:36:128",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 86257,
              "name": "PackedUint128Math",
              "nameLocations": [
                "192:17:128"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 76517,
              "src": "192:17:128"
            },
            "typeName": {
              "id": 86258,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "214:7:128",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            }
          },
          {
            "id": 86262,
            "nodeType": "VariableDeclaration",
            "src": "228:31:128",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "amountX",
            "nameLocation": "245:7:128",
            "scope": 89285,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86260,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "228:7:128",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 86261,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "255:4:128",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 86265,
            "nodeType": "VariableDeclaration",
            "src": "265:31:128",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "amountY",
            "nameLocation": "282:7:128",
            "scope": 89285,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 86263,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "265:7:128",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 86264,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "292:4:128",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "internal"
          },
          {
            "id": 86310,
            "nodeType": "FunctionDefinition",
            "src": "303:281:128",
            "nodes": [],
            "body": {
              "id": 86309,
              "nodeType": "Block",
              "src": "336:248:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86269,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "346:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_LBPairFeesTest_$89285_$",
                          "typeString": "type(contract super LBPairFeesTest)"
                        }
                      },
                      "id": 86271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "352:5:128",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 105749,
                      "src": "346:11:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 86272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86273,
                  "nodeType": "ExpressionStatement",
                  "src": "346:13:128"
                },
                {
                  "expression": {
                    "id": 86279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 86274,
                      "name": "pairWnative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105112,
                      "src": "370:11:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86276,
                          "name": "wnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105079,
                          "src": "397:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          }
                        },
                        {
                          "id": 86277,
                          "name": "usdc",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105082,
                          "src": "406:4:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_WNATIVE_$123990",
                            "typeString": "contract WNATIVE"
                          },
                          {
                            "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                            "typeString": "contract ERC20Mock"
                          }
                        ],
                        "id": 86275,
                        "name": "createLBPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105969,
                        "src": "384:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42288_$_t_contract$_IERC20_$42288_$returns$_t_contract$_LBPair_$62123_$",
                          "typeString": "function (contract IERC20,contract IERC20) returns (contract LBPair)"
                        }
                      },
                      "id": 86278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "384:27:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "src": "370:41:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPair_$62123",
                      "typeString": "contract LBPair"
                    }
                  },
                  "id": 86280,
                  "nodeType": "ExpressionStatement",
                  "src": "370:41:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86282,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "435:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86283,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "440:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86284,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "445:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86285,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "458:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 86286,
                        "name": "amountX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86262,
                        "src": "466:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86287,
                        "name": "amountY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "475:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 86288,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "484:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "488:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86281,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "422:12:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "422:69:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86291,
                  "nodeType": "ExpressionStatement",
                  "src": "422:69:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 86295,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "527:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "id": 86293,
                                "name": "wnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105079,
                                "src": "509:7:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_WNATIVE_$123990",
                                  "typeString": "contract WNATIVE"
                                }
                              },
                              "id": 86294,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "517:9:128",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41796,
                              "src": "509:17:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 86296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "509:22:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "535:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "509:27:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 86301,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "555:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "expression": {
                                "id": 86299,
                                "name": "usdc",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105082,
                                "src": "540:4:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                                  "typeString": "contract ERC20Mock"
                                }
                              },
                              "id": 86300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "545:9:128",
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 41796,
                              "src": "540:14:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 86302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "540:19:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86303,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "563:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "540:24:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "509:55:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73657455703a3a31",
                        "id": 86306,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "566:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fe786b386e8d40a95d7d6bed8eebe8f3b687f8417e973aca2d242eeb8f76a89a",
                          "typeString": "literal_string \"setUp::1\""
                        },
                        "value": "setUp::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fe786b386e8d40a95d7d6bed8eebe8f3b687f8417e973aca2d242eeb8f76a89a",
                          "typeString": "literal_string \"setUp::1\""
                        }
                      ],
                      "id": 86292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "501:7:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 86307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "501:76:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86308,
                  "nodeType": "ExpressionStatement",
                  "src": "501:76:128"
                }
              ]
            },
            "baseFunctions": [
              105749
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "312:5:128",
            "overrides": {
              "id": 86267,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "327:8:128"
            },
            "parameters": {
              "id": 86266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "317:2:128"
            },
            "returnParameters": {
              "id": 86268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "336:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 86442,
            "nodeType": "FunctionDefinition",
            "src": "590:984:128",
            "nodes": [],
            "body": {
              "id": 86441,
              "nodeType": "Block",
              "src": "644:930:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86318,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86312,
                            "src": "664:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "676:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "664:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86321,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86312,
                            "src": "681:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 86322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "694:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "681:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "664:34:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86315,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "654:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "657:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "654:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "654:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86326,
                  "nodeType": "ExpressionStatement",
                  "src": "654:45:128"
                },
                {
                  "assignments": [
                    86328,
                    86330,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86328,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "719:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86441,
                      "src": "711:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86327,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "711:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86330,
                      "mutability": "mutable",
                      "name": "amountOutLeft",
                      "nameLocation": "737:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86441,
                      "src": "729:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86329,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "729:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86336,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86333,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86312,
                        "src": "777:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "788:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86331,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "755:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86332,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "767:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "755:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:38:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "710:83:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86338,
                        "name": "amountOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86330,
                        "src": "812:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "827:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e583a3a31",
                        "id": 86340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "830:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98cbc360f8530c3b9431f0e71f56baa1991bc69e92fb462a836e918b4b36212d",
                          "typeString": "literal_string \"testFuzz_SwapInX::1\""
                        },
                        "value": "testFuzz_SwapInX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98cbc360f8530c3b9431f0e71f56baa1991bc69e92fb462a836e918b4b36212d",
                          "typeString": "literal_string \"testFuzz_SwapInX::1\""
                        }
                      ],
                      "id": 86337,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "803:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "803:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86342,
                  "nodeType": "ExpressionStatement",
                  "src": "803:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86346,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "876:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 86345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "868:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "868:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "868:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86348,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "886:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86349,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86328,
                        "src": "893:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86343,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "863:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "863:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86351,
                  "nodeType": "ExpressionStatement",
                  "src": "863:39:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86355,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "922:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86352,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "913:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "916:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "913:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "913:15:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86357,
                  "nodeType": "ExpressionStatement",
                  "src": "913:15:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86363,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "963:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "955:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86361,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "955:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "955:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86365,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86328,
                        "src": "977:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86358,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "938:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "946:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "938:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "938:48:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86367,
                  "nodeType": "ExpressionStatement",
                  "src": "938:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 86371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1013:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 86372,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "1019:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86368,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "996:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86370,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1008:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "996:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "996:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86374,
                  "nodeType": "ExpressionStatement",
                  "src": "996:29:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86378,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "1063:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86376,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "1045:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1053:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "1045:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1045:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1071:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e583a3a32",
                        "id": 86381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1074:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a970f93c6e57d6c2110f5be2b90933a9d15f93c7f14c402dec10789989c7513",
                          "typeString": "literal_string \"testFuzz_SwapInX::2\""
                        },
                        "value": "testFuzz_SwapInX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a970f93c6e57d6c2110f5be2b90933a9d15f93c7f14c402dec10789989c7513",
                          "typeString": "literal_string \"testFuzz_SwapInX::2\""
                        }
                      ],
                      "id": 86375,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1036:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1036:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86383,
                  "nodeType": "ExpressionStatement",
                  "src": "1036:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86387,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "1130:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86385,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "1115:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1120:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "1115:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1115:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86389,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86312,
                        "src": "1138:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e583a3a33",
                        "id": 86390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1149:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_014761ea0c226efc338bb13cdde3cd0c01f48e11e249567aebbf88f4a886ca6e",
                          "typeString": "literal_string \"testFuzz_SwapInX::3\""
                        },
                        "value": "testFuzz_SwapInX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_014761ea0c226efc338bb13cdde3cd0c01f48e11e249567aebbf88f4a886ca6e",
                          "typeString": "literal_string \"testFuzz_SwapInX::3\""
                        }
                      ],
                      "id": 86384,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1106:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1106:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86392,
                  "nodeType": "ExpressionStatement",
                  "src": "1106:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86394,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1198:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86395,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1203:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86396,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1208:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86397,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "1221:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1229:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1235:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1239:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86393,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "1182:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1182:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86402,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:60:128"
                },
                {
                  "assignments": [
                    86404,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86404,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "1262:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86441,
                      "src": "1254:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86403,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1254:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86408,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86405,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1279:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86406,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1291:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "1279:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 86407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1279:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1253:55:128"
                },
                {
                  "assignments": [
                    86410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86410,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "1327:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86441,
                      "src": "1319:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1319:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86413,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1356:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86411,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "1338:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1346:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "1338:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1338:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1319:41:128"
                },
                {
                  "assignments": [
                    86417
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86417,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "1378:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86441,
                      "src": "1370:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86416,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1370:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86422,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86420,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "1404:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86418,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "1389:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1394:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "1389:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1389:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1370:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86424,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86410,
                        "src": "1428:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86425,
                            "name": "amountX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86262,
                            "src": "1438:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 86426,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86328,
                            "src": "1448:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "1438:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86428,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86404,
                          "src": "1459:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "1438:33:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e583a3a34",
                        "id": 86430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_710a584d8c5aaa0b5103e9e01fa4f765ac10f0a89c685f1385d227677669fffd",
                          "typeString": "literal_string \"testFuzz_SwapInX::4\""
                        },
                        "value": "testFuzz_SwapInX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_710a584d8c5aaa0b5103e9e01fa4f765ac10f0a89c685f1385d227677669fffd",
                          "typeString": "literal_string \"testFuzz_SwapInX::4\""
                        }
                      ],
                      "id": 86423,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1419:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1419:76:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86432,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86434,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86417,
                        "src": "1514:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86435,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "1524:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86436,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86312,
                          "src": "1534:9:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "1524:19:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e583a3a35",
                        "id": 86438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1545:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e712549753cc93bfcf53fe21f37b1e6534705e5b893d30eae156d28a38e45d3",
                          "typeString": "literal_string \"testFuzz_SwapInX::5\""
                        },
                        "value": "testFuzz_SwapInX::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e712549753cc93bfcf53fe21f37b1e6534705e5b893d30eae156d28a38e45d3",
                          "typeString": "literal_string \"testFuzz_SwapInX::5\""
                        }
                      ],
                      "id": 86433,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1505:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:62:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86440,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:62:128"
                }
              ]
            },
            "functionSelector": "ee2a4a05",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapInX",
            "nameLocation": "599:16:128",
            "parameters": {
              "id": 86313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86312,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "624:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 86442,
                  "src": "616:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86311,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:19:128"
            },
            "returnParameters": {
              "id": 86314,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86574,
            "nodeType": "FunctionDefinition",
            "src": "1580:981:128",
            "nodes": [],
            "body": {
              "id": 86573,
              "nodeType": "Block",
              "src": "1634:927:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86450,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86444,
                            "src": "1654:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1666:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1654:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86455,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86453,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86444,
                            "src": "1671:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 86454,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1684:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "1671:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1654:34:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86447,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1644:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1647:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "1644:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1644:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86458,
                  "nodeType": "ExpressionStatement",
                  "src": "1644:45:128"
                },
                {
                  "assignments": [
                    86460,
                    86462,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86460,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "1709:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86573,
                      "src": "1701:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86459,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1701:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86462,
                      "mutability": "mutable",
                      "name": "amountOutLeft",
                      "nameLocation": "1727:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86573,
                      "src": "1719:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86461,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86468,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86465,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86444,
                        "src": "1767:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 86466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1778:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86463,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1745:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1757:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "1745:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1745:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1700:84:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86470,
                        "name": "amountOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86462,
                        "src": "1803:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1818:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e593a3a31",
                        "id": 86472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1821:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e83ab1bf7abfbc467c0bfe8990f5682223aef64b33ff40f3632c611de10dd589",
                          "typeString": "literal_string \"testFuzz_SwapInY::1\""
                        },
                        "value": "testFuzz_SwapInY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e83ab1bf7abfbc467c0bfe8990f5682223aef64b33ff40f3632c611de10dd589",
                          "typeString": "literal_string \"testFuzz_SwapInY::1\""
                        }
                      ],
                      "id": 86469,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "1794:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1794:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86474,
                  "nodeType": "ExpressionStatement",
                  "src": "1794:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86478,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "1867:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 86477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1859:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86476,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1859:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1859:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86480,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "1874:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86481,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86460,
                        "src": "1881:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86475,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "1854:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:36:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86483,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:36:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86487,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "1910:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86484,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "1901:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1904:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "1901:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1901:15:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86489,
                  "nodeType": "ExpressionStatement",
                  "src": "1901:15:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86495,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "1948:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1940:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1940:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1940:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86497,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86460,
                        "src": "1962:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86490,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "1926:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1931:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "1926:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1926:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86499,
                  "nodeType": "ExpressionStatement",
                  "src": "1926:45:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 86503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1998:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 86504,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "2005:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86500,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "1981:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1993:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "1981:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1981:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86506,
                  "nodeType": "ExpressionStatement",
                  "src": "1981:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86510,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "2046:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86508,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "2031:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2036:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "2031:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2031:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2054:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e593a3a32",
                        "id": 86513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25d00416bfc69fef743359b68ed6cb3914ea561204a0322a11a40ddecd90cc42",
                          "typeString": "literal_string \"testFuzz_SwapInY::2\""
                        },
                        "value": "testFuzz_SwapInY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25d00416bfc69fef743359b68ed6cb3914ea561204a0322a11a40ddecd90cc42",
                          "typeString": "literal_string \"testFuzz_SwapInY::2\""
                        }
                      ],
                      "id": 86507,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2022:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:57:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86515,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:57:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86519,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "2116:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86517,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "2098:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2106:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "2098:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2098:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86521,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86444,
                        "src": "2124:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e593a3a33",
                        "id": 86522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2135:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3d3c6620a660b06c2634a265f9504b85616b93145bcaa44bb98d2666534c2d26",
                          "typeString": "literal_string \"testFuzz_SwapInY::3\""
                        },
                        "value": "testFuzz_SwapInY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3d3c6620a660b06c2634a265f9504b85616b93145bcaa44bb98d2666534c2d26",
                          "typeString": "literal_string \"testFuzz_SwapInY::3\""
                        }
                      ],
                      "id": 86516,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2089:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2089:68:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86524,
                  "nodeType": "ExpressionStatement",
                  "src": "2089:68:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86526,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "2184:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86527,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "2189:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86528,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "2194:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86529,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "2207:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2215:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2225:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86525,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "2168:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2168:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86534,
                  "nodeType": "ExpressionStatement",
                  "src": "2168:60:128"
                },
                {
                  "assignments": [
                    null,
                    86536
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 86536,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "2250:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86573,
                      "src": "2242:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86535,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2242:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86540,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86537,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "2266:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2278:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "2266:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 86539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2266:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2239:56:128"
                },
                {
                  "assignments": [
                    86542
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86542,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "2314:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86573,
                      "src": "2306:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2306:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86547,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86545,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "2343:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86543,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "2325:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2333:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "2325:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2306:41:128"
                },
                {
                  "assignments": [
                    86549
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86549,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "2365:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86573,
                      "src": "2357:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86548,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2357:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86554,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86552,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "2391:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86550,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "2376:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2381:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "2376:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2357:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86556,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86542,
                        "src": "2415:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86557,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "2425:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86558,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86444,
                          "src": "2435:9:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2425:19:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e593a3a34",
                        "id": 86560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6c761873ff5b0868e9beeebb3578294587cc964928cc03a37adcbba632274342",
                          "typeString": "literal_string \"testFuzz_SwapInY::4\""
                        },
                        "value": "testFuzz_SwapInY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6c761873ff5b0868e9beeebb3578294587cc964928cc03a37adcbba632274342",
                          "typeString": "literal_string \"testFuzz_SwapInY::4\""
                        }
                      ],
                      "id": 86555,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2406:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2406:62:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86562,
                  "nodeType": "ExpressionStatement",
                  "src": "2406:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86564,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86549,
                        "src": "2487:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86565,
                            "name": "amountY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86265,
                            "src": "2497:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 86566,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86460,
                            "src": "2507:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "2497:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86568,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86536,
                          "src": "2518:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "2497:33:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e593a3a35",
                        "id": 86570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2532:21:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43f703bfd39a1c3bef5dd3c67faf3efc7471aa817865ee4341c48ce86a29fdfe",
                          "typeString": "literal_string \"testFuzz_SwapInY::5\""
                        },
                        "value": "testFuzz_SwapInY::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43f703bfd39a1c3bef5dd3c67faf3efc7471aa817865ee4341c48ce86a29fdfe",
                          "typeString": "literal_string \"testFuzz_SwapInY::5\""
                        }
                      ],
                      "id": 86563,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2478:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:76:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86572,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:76:128"
                }
              ]
            },
            "functionSelector": "891432ed",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapInY",
            "nameLocation": "1589:16:128",
            "parameters": {
              "id": 86445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86444,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "1614:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 86574,
                  "src": "1606:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86443,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1605:19:128"
            },
            "returnParameters": {
              "id": 86446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1634:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86700,
            "nodeType": "FunctionDefinition",
            "src": "2567:928:128",
            "nodes": [],
            "body": {
              "id": 86699,
              "nodeType": "Block",
              "src": "2621:874:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86580,
                    86582,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86580,
                      "mutability": "mutable",
                      "name": "amountInLeft",
                      "nameLocation": "2640:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86699,
                      "src": "2632:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86579,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2632:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86582,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "2662:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86699,
                      "src": "2654:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86581,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2654:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86588,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86585,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86576,
                        "src": "2699:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2709:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86583,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "2676:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2688:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "2676:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2676:38:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2631:83:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86592,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86582,
                            "src": "2734:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2746:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2734:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86597,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86595,
                            "name": "amountInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86580,
                            "src": "2751:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2767:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2751:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2734:34:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86589,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2724:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2727:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "2724:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86599,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2724:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86600,
                  "nodeType": "ExpressionStatement",
                  "src": "2724:45:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86604,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "2793:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 86603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2785:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86602,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2785:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2785:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86606,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "2803:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86607,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86576,
                        "src": "2810:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86601,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "2780:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2780:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86609,
                  "nodeType": "ExpressionStatement",
                  "src": "2780:39:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86613,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "2839:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86610,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "2830:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2833:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "2830:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2830:15:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86615,
                  "nodeType": "ExpressionStatement",
                  "src": "2830:15:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86621,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "2880:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2872:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86619,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2872:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2872:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86623,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86576,
                        "src": "2894:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86616,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "2855:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2863:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "2855:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2855:48:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86625,
                  "nodeType": "ExpressionStatement",
                  "src": "2855:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 86629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2930:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 86630,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "2936:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86626,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "2913:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2925:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "2913:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2913:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86632,
                  "nodeType": "ExpressionStatement",
                  "src": "2913:29:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86636,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "2980:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86634,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "2962:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2970:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "2962:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2962:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2988:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574583a3a31",
                        "id": 86639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2991:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ebfe988e89f1f27c3326cb59c3acead7917917622d68de8d6044aa4ca05818a",
                          "typeString": "literal_string \"testFuzz_SwapOutX::1\""
                        },
                        "value": "testFuzz_SwapOutX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ebfe988e89f1f27c3326cb59c3acead7917917622d68de8d6044aa4ca05818a",
                          "typeString": "literal_string \"testFuzz_SwapOutX::1\""
                        }
                      ],
                      "id": 86633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "2953:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2953:61:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86641,
                  "nodeType": "ExpressionStatement",
                  "src": "2953:61:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86645,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "3048:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86643,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "3033:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3038:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "3033:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3033:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86647,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86582,
                        "src": "3056:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574583a3a32",
                        "id": 86648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3067:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3789f3783975184e0d5344475ecbf310d6b87628b4fe574577ab60c59a7db1c",
                          "typeString": "literal_string \"testFuzz_SwapOutX::2\""
                        },
                        "value": "testFuzz_SwapOutX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3789f3783975184e0d5344475ecbf310d6b87628b4fe574577ab60c59a7db1c",
                          "typeString": "literal_string \"testFuzz_SwapOutX::2\""
                        }
                      ],
                      "id": 86642,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3024:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3024:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86650,
                  "nodeType": "ExpressionStatement",
                  "src": "3024:66:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86652,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "3117:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86653,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "3122:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86654,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3127:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86655,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "3140:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3148:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3154:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3158:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86651,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "3101:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3101:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86660,
                  "nodeType": "ExpressionStatement",
                  "src": "3101:60:128"
                },
                {
                  "assignments": [
                    86662,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86662,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "3181:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86699,
                      "src": "3173:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86661,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3173:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86666,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86663,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3198:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3210:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "3198:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 86665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3198:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3172:55:128"
                },
                {
                  "assignments": [
                    86668
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86668,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "3246:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86699,
                      "src": "3238:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86667,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3238:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86673,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86671,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "3275:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86669,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "3257:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3265:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "3257:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3257:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3238:41:128"
                },
                {
                  "assignments": [
                    86675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86675,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "3297:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86699,
                      "src": "3289:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86674,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3289:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86680,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86678,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "3323:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86676,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "3308:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3313:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "3308:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3308:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3289:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86682,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86668,
                        "src": "3347:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86683,
                            "name": "amountX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86262,
                            "src": "3357:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 86684,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86576,
                            "src": "3367:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "3357:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86686,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86662,
                          "src": "3378:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3357:33:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574583a3a33",
                        "id": 86688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3392:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d8edac67dd356670cd1ec25e2594d58ca05a9ddb09abaec8f37ac2da30ea976e",
                          "typeString": "literal_string \"testFuzz_SwapOutX::3\""
                        },
                        "value": "testFuzz_SwapOutX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d8edac67dd356670cd1ec25e2594d58ca05a9ddb09abaec8f37ac2da30ea976e",
                          "typeString": "literal_string \"testFuzz_SwapOutX::3\""
                        }
                      ],
                      "id": 86681,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3338:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3338:77:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86690,
                  "nodeType": "ExpressionStatement",
                  "src": "3338:77:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86692,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86675,
                        "src": "3434:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86693,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "3444:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86694,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86582,
                          "src": "3454:9:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "3444:19:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574583a3a34",
                        "id": 86696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3465:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a725251f34998c23b2c7881eb9a166f4d50479d7504a6ee2b745c78d11c4a39",
                          "typeString": "literal_string \"testFuzz_SwapOutX::4\""
                        },
                        "value": "testFuzz_SwapOutX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a725251f34998c23b2c7881eb9a166f4d50479d7504a6ee2b745c78d11c4a39",
                          "typeString": "literal_string \"testFuzz_SwapOutX::4\""
                        }
                      ],
                      "id": 86691,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3425:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3425:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86698,
                  "nodeType": "ExpressionStatement",
                  "src": "3425:63:128"
                }
              ]
            },
            "functionSelector": "17e5786d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapOutX",
            "nameLocation": "2576:17:128",
            "parameters": {
              "id": 86577,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86576,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "2602:8:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 86700,
                  "src": "2594:16:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86575,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2593:18:128"
            },
            "returnParameters": {
              "id": 86578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 86826,
            "nodeType": "FunctionDefinition",
            "src": "3501:925:128",
            "nodes": [],
            "body": {
              "id": 86825,
              "nodeType": "Block",
              "src": "3555:871:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    86706,
                    86708,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86706,
                      "mutability": "mutable",
                      "name": "amountInLeft",
                      "nameLocation": "3574:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86825,
                      "src": "3566:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86705,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3566:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86708,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "nameLocation": "3596:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86825,
                      "src": "3588:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86707,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3588:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86714,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86711,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86702,
                        "src": "3633:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 86712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3643:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86709,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3610:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3622:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "3610:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86713,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3610:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3565:84:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86718,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86708,
                            "src": "3669:9:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3681:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3669:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86721,
                            "name": "amountInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86706,
                            "src": "3686:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 86722,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3702:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3686:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3669:34:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86715,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3659:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3662:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "3659:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3659:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86726,
                  "nodeType": "ExpressionStatement",
                  "src": "3659:45:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86730,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "3728:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 86729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3720:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86728,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3720:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3720:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86732,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3735:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86733,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86702,
                        "src": "3742:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 86727,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "3715:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:36:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86735,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:36:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86739,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3771:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86736,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "3762:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3765:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "3762:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3762:15:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86741,
                  "nodeType": "ExpressionStatement",
                  "src": "3762:15:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86747,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "3809:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3801:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3801:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3801:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86749,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86702,
                        "src": "3823:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86742,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "3787:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3792:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "3787:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3787:45:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86751,
                  "nodeType": "ExpressionStatement",
                  "src": "3787:45:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 86755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 86756,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "3866:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86752,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "3842:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3854:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "3842:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86758,
                  "nodeType": "ExpressionStatement",
                  "src": "3842:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86762,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "3907:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86760,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "3892:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3897:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "3892:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3892:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3915:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574593a3a31",
                        "id": 86765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3918:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce1f5d4fc08d0f767a33b66e15e5a1b72302f01cb308c36ec363aa0cd090b0c2",
                          "typeString": "literal_string \"testFuzz_SwapOutY::1\""
                        },
                        "value": "testFuzz_SwapOutY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce1f5d4fc08d0f767a33b66e15e5a1b72302f01cb308c36ec363aa0cd090b0c2",
                          "typeString": "literal_string \"testFuzz_SwapOutY::1\""
                        }
                      ],
                      "id": 86759,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3883:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:58:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86767,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:58:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86771,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "3978:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86769,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "3960:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3968:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "3960:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3960:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86773,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86708,
                        "src": "3986:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574593a3a32",
                        "id": 86774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3997:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_572c4fab58c479ca874e5db5aadafe7280cf5886937b1d3858f21d1e1d612f4a",
                          "typeString": "literal_string \"testFuzz_SwapOutY::2\""
                        },
                        "value": "testFuzz_SwapOutY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_572c4fab58c479ca874e5db5aadafe7280cf5886937b1d3858f21d1e1d612f4a",
                          "typeString": "literal_string \"testFuzz_SwapOutY::2\""
                        }
                      ],
                      "id": 86768,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "3951:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3951:69:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86776,
                  "nodeType": "ExpressionStatement",
                  "src": "3951:69:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86778,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "4047:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86779,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "4052:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86780,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "4057:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86781,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "4070:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4078:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4084:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4088:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86777,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "4031:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4031:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86786,
                  "nodeType": "ExpressionStatement",
                  "src": "4031:60:128"
                },
                {
                  "assignments": [
                    null,
                    86788
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 86788,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "4113:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86825,
                      "src": "4105:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86787,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4105:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86792,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86789,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "4129:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4141:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "4129:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 86791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4129:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4102:56:128"
                },
                {
                  "assignments": [
                    86794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86794,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "4177:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86825,
                      "src": "4169:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4169:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86799,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86797,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "4206:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86795,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "4188:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86796,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4196:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "4188:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4188:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4169:41:128"
                },
                {
                  "assignments": [
                    86801
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86801,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "4228:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 86825,
                      "src": "4220:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86800,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4220:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86806,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86804,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "4254:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86802,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "4239:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86803,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4244:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "4239:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4239:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4220:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86808,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86794,
                        "src": "4278:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 86809,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "4288:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86810,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86708,
                          "src": "4298:9:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "4288:19:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574593a3a33",
                        "id": 86812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4309:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f14e651fc946910446fe38a79c0be2ab5f1b0e47a1746d538641b83ca546c7f0",
                          "typeString": "literal_string \"testFuzz_SwapOutY::3\""
                        },
                        "value": "testFuzz_SwapOutY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f14e651fc946910446fe38a79c0be2ab5f1b0e47a1746d538641b83ca546c7f0",
                          "typeString": "literal_string \"testFuzz_SwapOutY::3\""
                        }
                      ],
                      "id": 86807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4269:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4269:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86814,
                  "nodeType": "ExpressionStatement",
                  "src": "4269:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86816,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86801,
                        "src": "4351:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 86821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 86819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86817,
                            "name": "amountY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86265,
                            "src": "4361:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 86818,
                            "name": "amountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86702,
                            "src": "4371:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "4361:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 86820,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86788,
                          "src": "4382:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "4361:33:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f7574593a3a34",
                        "id": 86822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4396:22:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6235790b36cad243534f2313e40bb711c9d128be10d6638caeb982d9c86d4264",
                          "typeString": "literal_string \"testFuzz_SwapOutY::4\""
                        },
                        "value": "testFuzz_SwapOutY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6235790b36cad243534f2313e40bb711c9d128be10d6638caeb982d9c86d4264",
                          "typeString": "literal_string \"testFuzz_SwapOutY::4\""
                        }
                      ],
                      "id": 86815,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4342:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4342:77:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86824,
                  "nodeType": "ExpressionStatement",
                  "src": "4342:77:128"
                }
              ]
            },
            "functionSelector": "958493b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapOutY",
            "nameLocation": "3510:17:128",
            "parameters": {
              "id": 86703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86702,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "3536:8:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 86826,
                  "src": "3528:16:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86701,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "3528:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3527:18:128"
            },
            "returnParameters": {
              "id": 86704,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3555:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87052,
            "nodeType": "FunctionDefinition",
            "src": "4432:1715:128",
            "nodes": [],
            "body": {
              "id": 87051,
              "nodeType": "Block",
              "src": "4511:1636:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 86850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 86846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 86842,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 86838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86836,
                                "name": "amountXOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86828,
                                "src": "4531:10:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 86837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4544:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4531:14:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 86841,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 86839,
                                "name": "amountXOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 86828,
                                "src": "4549:10:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 86840,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4563:4:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "4549:18:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "4531:36:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 86845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 86843,
                              "name": "amountYOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86830,
                              "src": "4571:10:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 86844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4584:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4571:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4531:54:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 86849,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 86847,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86830,
                            "src": "4589:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 86848,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4603:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4589:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4531:76:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86833,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4521:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86835,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4524:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "4521:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 86851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4521:87:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86852,
                  "nodeType": "ExpressionStatement",
                  "src": "4521:87:128"
                },
                {
                  "assignments": [
                    86854,
                    86856,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86854,
                      "mutability": "mutable",
                      "name": "amountXIn",
                      "nameLocation": "4628:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "4620:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86853,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4620:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86856,
                      "mutability": "mutable",
                      "name": "amountYOutLeft",
                      "nameLocation": "4647:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "4639:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86855,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "4639:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86862,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86859,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86830,
                        "src": "4688:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 86860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4700:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86857,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "4666:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4678:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "4666:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4666:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4619:86:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86864,
                        "name": "amountYOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86856,
                        "src": "4724:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4740:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a31",
                        "id": 86866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4743:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f8db7d8ad52bdac1ca5c623458059f1f39356fc8f250464734485b66da8cf37",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::1\""
                        },
                        "value": "testFuzz_SwapInXAndY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f8db7d8ad52bdac1ca5c623458059f1f39356fc8f250464734485b66da8cf37",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::1\""
                        }
                      ],
                      "id": 86863,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4715:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4715:54:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86868,
                  "nodeType": "ExpressionStatement",
                  "src": "4715:54:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86872,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "4793:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 86871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4785:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4785:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4785:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86874,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "4803:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 86875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4808:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 86869,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "4780:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4780:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86877,
                  "nodeType": "ExpressionStatement",
                  "src": "4780:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86881,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "4836:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 86880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4828:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86879,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4828:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4828:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86883,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "4843:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 86884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4848:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 86878,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "4823:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 86885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4823:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86886,
                  "nodeType": "ExpressionStatement",
                  "src": "4823:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86890,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "4873:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86887,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "4864:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4867:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "4864:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4864:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86892,
                  "nodeType": "ExpressionStatement",
                  "src": "4864:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86898,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "4912:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86897,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4904:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86896,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4904:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4904:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86900,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86854,
                        "src": "4926:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86893,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "4887:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4895:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "4887:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4887:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86902,
                  "nodeType": "ExpressionStatement",
                  "src": "4887:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 86906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4963:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 86907,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "4969:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86903,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "4946:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4958:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "4946:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4946:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86909,
                  "nodeType": "ExpressionStatement",
                  "src": "4946:29:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86913,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "5010:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 86911,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "4995:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 86912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5000:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "4995:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4995:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86915,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86830,
                        "src": "5018:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a32",
                        "id": 86916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5030:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff0677d4f8b20f813a4719936c3c565a5e129abee1f2f1461254d1a843be7057",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::2\""
                        },
                        "value": "testFuzz_SwapInXAndY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff0677d4f8b20f813a4719936c3c565a5e129abee1f2f1461254d1a843be7057",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::2\""
                        }
                      ],
                      "id": 86910,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "4986:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4986:70:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86918,
                  "nodeType": "ExpressionStatement",
                  "src": "4986:70:128"
                },
                {
                  "assignments": [
                    86920,
                    86922,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86920,
                      "mutability": "mutable",
                      "name": "amountYIn",
                      "nameLocation": "5076:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5068:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86919,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5068:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86922,
                      "mutability": "mutable",
                      "name": "amountXOutLeft",
                      "nameLocation": "5095:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5087:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86921,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5087:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 86928,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86925,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86828,
                        "src": "5136:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 86926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5148:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 86923,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "5114:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5126:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "5114:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 86927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5114:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5067:87:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86930,
                        "name": "amountXOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86922,
                        "src": "5173:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 86931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5189:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a33",
                        "id": 86932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5192:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb721623e21fea52c15c4ee04b818ab242f4d233d1a1e103b49eee7a72a58eaf",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::3\""
                        },
                        "value": "testFuzz_SwapInXAndY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb721623e21fea52c15c4ee04b818ab242f4d233d1a1e103b49eee7a72a58eaf",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::3\""
                        }
                      ],
                      "id": 86929,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5164:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5164:54:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86934,
                  "nodeType": "ExpressionStatement",
                  "src": "5164:54:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86938,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "5238:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86935,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "5229:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 86937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5232:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "5229:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 86939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5229:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86940,
                  "nodeType": "ExpressionStatement",
                  "src": "5229:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 86946,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "5274:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 86945,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5266:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 86944,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5266:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 86947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5266:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 86948,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86920,
                        "src": "5288:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 86941,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "5252:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 86943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5257:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "5252:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 86949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5252:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 86950,
                  "nodeType": "ExpressionStatement",
                  "src": "5252:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 86954,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5325:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 86955,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "5332:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86951,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "5308:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86953,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5320:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "5308:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 86956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5308:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 86957,
                  "nodeType": "ExpressionStatement",
                  "src": "5308:30:128"
                },
                {
                  "assignments": [
                    86959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86959,
                      "mutability": "mutable",
                      "name": "realAmountXOut",
                      "nameLocation": "5357:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5349:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 86958,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5349:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86964,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 86962,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "5392:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 86960,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "5374:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 86961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5382:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "5374:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 86963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:24:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5349:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86966,
                        "name": "realAmountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86959,
                        "src": "5417:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86967,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86828,
                        "src": "5433:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a34",
                        "id": 86968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5445:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f79ebfba1f17809548365553cfc6e26728abdcee2eb18e94ba3d083c66e4302e",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::4\""
                        },
                        "value": "testFuzz_SwapInXAndY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f79ebfba1f17809548365553cfc6e26728abdcee2eb18e94ba3d083c66e4302e",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::4\""
                        }
                      ],
                      "id": 86965,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2022,
                        2040,
                        2094,
                        2112
                      ],
                      "referencedDeclaration": 2040,
                      "src": "5408:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5408:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86970,
                  "nodeType": "ExpressionStatement",
                  "src": "5408:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 86972,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "5498:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86973,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "5503:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 86974,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "5508:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 86975,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "5521:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 86976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5529:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5535:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 86978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5539:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 86971,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "5482:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 86979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5482:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86980,
                  "nodeType": "ExpressionStatement",
                  "src": "5482:60:128"
                },
                {
                  "assignments": [
                    86982,
                    86984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 86982,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "5562:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5554:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86981,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5554:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86984,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "5584:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5576:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 86983,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "5576:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 86988,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 86985,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "5600:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 86986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5612:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "5600:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 86987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5600:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5553:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 86994,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "5675:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 86993,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5667:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 86992,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5667:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 86995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5667:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 86990,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "5649:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 86991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5657:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "5649:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 86996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5649:39:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 86997,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86982,
                        "src": "5690:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a35",
                        "id": 86998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5704:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e26356c11ac15233d5fb4cd805d6505b0182e20411d3035df41f3a05cac17802",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::5\""
                        },
                        "value": "testFuzz_SwapInXAndY::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e26356c11ac15233d5fb4cd805d6505b0182e20411d3035df41f3a05cac17802",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::5\""
                        }
                      ],
                      "id": 86989,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5640:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 86999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5640:90:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87000,
                  "nodeType": "ExpressionStatement",
                  "src": "5640:90:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87006,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "5772:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87005,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5764:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87004,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5764:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5764:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87002,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "5749:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5754:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "5749:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5749:36:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87009,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86984,
                        "src": "5787:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a36",
                        "id": 87010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5801:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a0739ec338414f2602e8d82dfdd977ec07276322f7dff301b3e35050bf4e789",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::6\""
                        },
                        "value": "testFuzz_SwapInXAndY::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a0739ec338414f2602e8d82dfdd977ec07276322f7dff301b3e35050bf4e789",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::6\""
                        }
                      ],
                      "id": 87001,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5740:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5740:87:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87012,
                  "nodeType": "ExpressionStatement",
                  "src": "5740:87:128"
                },
                {
                  "assignments": [
                    87014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87014,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "5846:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5838:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87013,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5838:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87019,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87017,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "5875:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87015,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "5857:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5865:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "5857:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5857:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5838:41:128"
                },
                {
                  "assignments": [
                    87021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87021,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "5897:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87051,
                      "src": "5889:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87020,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5889:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87026,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87024,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "5923:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87022,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "5908:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5913:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "5908:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5908:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5889:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87028,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87014,
                        "src": "5947:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87029,
                              "name": "amountX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86262,
                              "src": "5957:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87030,
                              "name": "amountXIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86854,
                              "src": "5967:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "5957:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87032,
                            "name": "realAmountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86959,
                            "src": "5979:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5957:36:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87034,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86982,
                          "src": "5996:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "5957:51:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a37",
                        "id": 87036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6010:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_02fdf583f2182f348cc34951cb216a0731ad5a2f2d4121b99996c10e4b7585b8",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::7\""
                        },
                        "value": "testFuzz_SwapInXAndY::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_02fdf583f2182f348cc34951cb216a0731ad5a2f2d4121b99996c10e4b7585b8",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::7\""
                        }
                      ],
                      "id": 87027,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "5938:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5938:98:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87038,
                  "nodeType": "ExpressionStatement",
                  "src": "5938:98:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87040,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87021,
                        "src": "6055:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87047,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87041,
                              "name": "amountY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86265,
                              "src": "6065:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87042,
                              "name": "amountYIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86920,
                              "src": "6075:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "6065:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87044,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86830,
                            "src": "6087:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "6065:32:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87046,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86984,
                          "src": "6100:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "6065:47:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e58416e64593a3a38",
                        "id": 87048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6114:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_802c0686f9dc6639cb94103f314a3a5369a8fd777630fe6560cd0c2b998d6641",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::8\""
                        },
                        "value": "testFuzz_SwapInXAndY::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_802c0686f9dc6639cb94103f314a3a5369a8fd777630fe6560cd0c2b998d6641",
                          "typeString": "literal_string \"testFuzz_SwapInXAndY::8\""
                        }
                      ],
                      "id": 87039,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6046:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6046:94:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87050,
                  "nodeType": "ExpressionStatement",
                  "src": "6046:94:128"
                }
              ]
            },
            "functionSelector": "8eafd734",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapInXAndY",
            "nameLocation": "4441:20:128",
            "parameters": {
              "id": 86831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 86828,
                  "mutability": "mutable",
                  "name": "amountXOut",
                  "nameLocation": "4470:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87052,
                  "src": "4462:18:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86827,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4462:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 86830,
                  "mutability": "mutable",
                  "name": "amountYOut",
                  "nameLocation": "4490:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87052,
                  "src": "4482:18:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 86829,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4461:40:128"
            },
            "returnParameters": {
              "id": 86832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4511:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87278,
            "nodeType": "FunctionDefinition",
            "src": "6153:1715:128",
            "nodes": [],
            "body": {
              "id": 87277,
              "nodeType": "Block",
              "src": "6232:1636:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 87072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 87068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 87064,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 87062,
                                "name": "amountXOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87056,
                                "src": "6252:10:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 87063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6265:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "6252:14:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 87067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 87065,
                                "name": "amountXOut",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 87056,
                                "src": "6270:10:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "31653138",
                                "id": 87066,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6284:4:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1e18"
                              },
                              "src": "6270:18:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "6252:36:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            "id": 87071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87069,
                              "name": "amountYOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87054,
                              "src": "6292:10:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 87070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6305:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6292:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6252:54:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87073,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87054,
                            "src": "6310:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 87074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6324:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "6310:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "6252:76:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87059,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6242:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6245:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "6242:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 87077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6242:87:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87078,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:87:128"
                },
                {
                  "assignments": [
                    87080,
                    87082,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87080,
                      "mutability": "mutable",
                      "name": "amountYIn",
                      "nameLocation": "6349:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "6341:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87079,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6341:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87082,
                      "mutability": "mutable",
                      "name": "amountXOutLeft",
                      "nameLocation": "6368:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "6360:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87081,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6360:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87088,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87085,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87056,
                        "src": "6409:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 87086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6421:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87083,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "6387:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6399:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "6387:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6340:87:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87090,
                        "name": "amountXOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87082,
                        "src": "6446:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 87091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6462:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a31",
                        "id": 87092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6465:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ee8ac25ffb3a62dc424e82c8bf0e0f3a32014180477d9f4b6f4fe3a6bc88ef6",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::1\""
                        },
                        "value": "testFuzz_SwapInYandX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ee8ac25ffb3a62dc424e82c8bf0e0f3a32014180477d9f4b6f4fe3a6bc88ef6",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::1\""
                        }
                      ],
                      "id": 87089,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6437:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6437:54:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87094,
                  "nodeType": "ExpressionStatement",
                  "src": "6437:54:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87098,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "6515:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6507:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6507:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6507:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87100,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "6525:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6530:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87095,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "6502:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6502:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87103,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87107,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "6558:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6550:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6550:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6550:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87109,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "6565:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6570:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87104,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "6545:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6545:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87112,
                  "nodeType": "ExpressionStatement",
                  "src": "6545:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87116,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "6595:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87113,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6586:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6589:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "6586:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6586:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87118,
                  "nodeType": "ExpressionStatement",
                  "src": "6586:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87124,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "6631:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6623:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6623:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6623:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87126,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87080,
                        "src": "6645:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87119,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "6609:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6614:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "6609:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6609:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87128,
                  "nodeType": "ExpressionStatement",
                  "src": "6609:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6682:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 87133,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "6689:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87129,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "6665:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6677:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "6665:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6665:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87135,
                  "nodeType": "ExpressionStatement",
                  "src": "6665:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87139,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "6733:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87137,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "6715:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6723:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "6715:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6715:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87141,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87056,
                        "src": "6741:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a32",
                        "id": 87142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6753:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37cece35404d3b88a83e45296883aa3acbb4ec635b58b706b3ec5f61f5f2b2d3",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::2\""
                        },
                        "value": "testFuzz_SwapInYandX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37cece35404d3b88a83e45296883aa3acbb4ec635b58b706b3ec5f61f5f2b2d3",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::2\""
                        }
                      ],
                      "id": 87136,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6706:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6706:73:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87144,
                  "nodeType": "ExpressionStatement",
                  "src": "6706:73:128"
                },
                {
                  "assignments": [
                    87146,
                    87148,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87146,
                      "mutability": "mutable",
                      "name": "amountXIn",
                      "nameLocation": "6799:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "6791:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87145,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6791:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87148,
                      "mutability": "mutable",
                      "name": "amountYOutLeft",
                      "nameLocation": "6818:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "6810:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87147,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "6810:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87154,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87151,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87054,
                        "src": "6859:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6871:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87149,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "6837:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6849:9:128",
                      "memberName": "getSwapIn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60169,
                      "src": "6837:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6837:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6790:86:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87156,
                        "name": "amountYOutLeft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87148,
                        "src": "6895:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 87157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6911:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a33",
                        "id": 87158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6914:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5406a0a265d6a7144d7d54d94eb565673c6feb929968fbdfb0cea1edb3649077",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::3\""
                        },
                        "value": "testFuzz_SwapInYandX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5406a0a265d6a7144d7d54d94eb565673c6feb929968fbdfb0cea1edb3649077",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::3\""
                        }
                      ],
                      "id": 87155,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "6886:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6886:54:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87160,
                  "nodeType": "ExpressionStatement",
                  "src": "6886:54:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87164,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "6960:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87161,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "6951:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6954:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "6951:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6951:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87166,
                  "nodeType": "ExpressionStatement",
                  "src": "6951:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87172,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "6999:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6991:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87170,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6991:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6991:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87174,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87146,
                        "src": "7013:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87167,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "6974:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6982:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "6974:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6974:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87176,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 87180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7050:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 87181,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "7056:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87177,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "7033:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87179,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7045:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "7033:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7033:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87183,
                  "nodeType": "ExpressionStatement",
                  "src": "7033:29:128"
                },
                {
                  "assignments": [
                    87185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87185,
                      "mutability": "mutable",
                      "name": "realAmountYOut",
                      "nameLocation": "7081:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "7073:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87184,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7073:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87190,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87188,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "7113:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87186,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "7098:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7103:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "7098:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7098:21:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7073:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87192,
                        "name": "realAmountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87185,
                        "src": "7138:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87193,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87054,
                        "src": "7154:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a34",
                        "id": 87194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7166:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452d7203852f585df23916f80a072d976a936507268b708a411c10f62dd72778",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::4\""
                        },
                        "value": "testFuzz_SwapInYandX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452d7203852f585df23916f80a072d976a936507268b708a411c10f62dd72778",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::4\""
                        }
                      ],
                      "id": 87191,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2022,
                        2040,
                        2094,
                        2112
                      ],
                      "referencedDeclaration": 2040,
                      "src": "7129:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7129:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87196,
                  "nodeType": "ExpressionStatement",
                  "src": "7129:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87198,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "7219:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87199,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "7224:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87200,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "7229:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87201,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "7242:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7250:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7256:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7260:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87197,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "7203:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7203:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87206,
                  "nodeType": "ExpressionStatement",
                  "src": "7203:60:128"
                },
                {
                  "assignments": [
                    87208,
                    87210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87208,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "7283:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "7275:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87207,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7275:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87210,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "7305:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "7297:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87209,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7297:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87214,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87211,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "7321:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7333:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "7321:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 87213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7321:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7274:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87220,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "7396:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7388:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87218,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7388:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7388:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87216,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "7370:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7378:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "7370:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7370:39:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87223,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87208,
                        "src": "7411:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a35",
                        "id": 87224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7425:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45732ad84d7e82c5f9b342695cd73adf9fca4c0aa92ba07e67facdfb5a8d480f",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::5\""
                        },
                        "value": "testFuzz_SwapInYandX::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45732ad84d7e82c5f9b342695cd73adf9fca4c0aa92ba07e67facdfb5a8d480f",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::5\""
                        }
                      ],
                      "id": 87215,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7361:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7361:90:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87226,
                  "nodeType": "ExpressionStatement",
                  "src": "7361:90:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87232,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "7493:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7485:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87230,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7485:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7485:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87228,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "7470:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87229,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7475:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "7470:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7470:36:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87235,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87210,
                        "src": "7508:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a36",
                        "id": 87236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7522:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9650d1f3440afcef8fd1b6f98d0a1d02835d7033e92503eb2c33738ef77052ad",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::6\""
                        },
                        "value": "testFuzz_SwapInYandX::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9650d1f3440afcef8fd1b6f98d0a1d02835d7033e92503eb2c33738ef77052ad",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::6\""
                        }
                      ],
                      "id": 87227,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7461:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7461:87:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87238,
                  "nodeType": "ExpressionStatement",
                  "src": "7461:87:128"
                },
                {
                  "assignments": [
                    87240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87240,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "7567:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "7559:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7559:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87245,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87243,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "7596:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87241,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "7578:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7586:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "7578:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7578:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7559:41:128"
                },
                {
                  "assignments": [
                    87247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87247,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "7618:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87277,
                      "src": "7610:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7610:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87252,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87250,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "7644:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87248,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "7629:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7634:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "7629:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7629:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7610:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87254,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87240,
                        "src": "7668:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87259,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87255,
                              "name": "amountX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86262,
                              "src": "7678:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87256,
                              "name": "amountXIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87146,
                              "src": "7688:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "7678:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87258,
                            "name": "amountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87056,
                            "src": "7700:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "7678:32:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87260,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87208,
                          "src": "7713:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "7678:47:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a37",
                        "id": 87262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7727:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1e2ed3b3ba8f324991239eb6a45f68b9dcf933b29abc429eacf5a9ad908f583",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::7\""
                        },
                        "value": "testFuzz_SwapInYandX::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1e2ed3b3ba8f324991239eb6a45f68b9dcf933b29abc429eacf5a9ad908f583",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::7\""
                        }
                      ],
                      "id": 87253,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7659:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7659:94:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87264,
                  "nodeType": "ExpressionStatement",
                  "src": "7659:94:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87266,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87247,
                        "src": "7772:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87267,
                              "name": "amountY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86265,
                              "src": "7782:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87268,
                              "name": "amountYIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87080,
                              "src": "7792:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "7782:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87270,
                            "name": "realAmountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87185,
                            "src": "7804:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7782:36:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87272,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87210,
                          "src": "7821:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "7782:51:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f53776170496e59616e64583a3a38",
                        "id": 87274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7835:25:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb87d7eeb1054ec71f14865adb70ac828012729e976a33e275c83c70b4c00424",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::8\""
                        },
                        "value": "testFuzz_SwapInYandX::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb87d7eeb1054ec71f14865adb70ac828012729e976a33e275c83c70b4c00424",
                          "typeString": "literal_string \"testFuzz_SwapInYandX::8\""
                        }
                      ],
                      "id": 87265,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "7763:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7763:98:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87276,
                  "nodeType": "ExpressionStatement",
                  "src": "7763:98:128"
                }
              ]
            },
            "functionSelector": "befbe28b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapInYandX",
            "nameLocation": "6162:20:128",
            "parameters": {
              "id": 87057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87054,
                  "mutability": "mutable",
                  "name": "amountYOut",
                  "nameLocation": "6191:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87278,
                  "src": "6183:18:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87053,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6183:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87056,
                  "mutability": "mutable",
                  "name": "amountXOut",
                  "nameLocation": "6211:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87278,
                  "src": "6203:18:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87055,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "6203:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6182:40:128"
            },
            "returnParameters": {
              "id": 87058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6232:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87496,
            "nodeType": "FunctionDefinition",
            "src": "7874:1608:128",
            "nodes": [],
            "body": {
              "id": 87495,
              "nodeType": "Block",
              "src": "7952:1530:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87286,
                    87288,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87286,
                      "mutability": "mutable",
                      "name": "amountXInLeft",
                      "nameLocation": "7971:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "7963:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87285,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7963:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87288,
                      "mutability": "mutable",
                      "name": "amountYOut",
                      "nameLocation": "7994:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "7986:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87287,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "7986:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87294,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87291,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87280,
                        "src": "8032:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8043:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87289,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8009:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8021:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "8009:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7962:86:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87298,
                            "name": "amountXInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87286,
                            "src": "8068:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8085:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8068:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87301,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87288,
                            "src": "8090:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8103:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8090:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8068:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87295,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8058:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8061:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "8058:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 87305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8058:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87306,
                  "nodeType": "ExpressionStatement",
                  "src": "8058:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87310,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "8129:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8121:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87308,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8121:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8121:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87312,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "8139:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8144:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87307,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "8116:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8116:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87315,
                  "nodeType": "ExpressionStatement",
                  "src": "8116:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87319,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "8172:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8164:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8164:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8164:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87321,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "8179:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8184:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87316,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "8159:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8159:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87324,
                  "nodeType": "ExpressionStatement",
                  "src": "8159:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87328,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "8209:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87325,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8200:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87327,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8203:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "8200:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87330,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87336,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "8248:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8240:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87334,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8240:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8240:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87338,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87280,
                        "src": "8262:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87331,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "8223:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8231:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "8223:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8223:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87340,
                  "nodeType": "ExpressionStatement",
                  "src": "8223:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 87344,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8299:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 87345,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8305:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87341,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8282:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8294:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "8282:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8282:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87347,
                  "nodeType": "ExpressionStatement",
                  "src": "8282:29:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87351,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "8346:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87349,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "8331:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8336:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "8331:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8331:21:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87353,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87288,
                        "src": "8354:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a31",
                        "id": 87354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8366:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_175e86486b7fae9be39e39bfbf20d7e69a4b9eb696e4b5d8f09ba907b29c7e82",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::1\""
                        },
                        "value": "testFuzz_SwapOutXAndY::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_175e86486b7fae9be39e39bfbf20d7e69a4b9eb696e4b5d8f09ba907b29c7e82",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::1\""
                        }
                      ],
                      "id": 87348,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8322:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8322:71:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87356,
                  "nodeType": "ExpressionStatement",
                  "src": "8322:71:128"
                },
                {
                  "assignments": [
                    87358,
                    87360,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87358,
                      "mutability": "mutable",
                      "name": "amountYInLeft",
                      "nameLocation": "8413:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "8405:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87357,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8405:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87360,
                      "mutability": "mutable",
                      "name": "amountXOut",
                      "nameLocation": "8436:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "8428:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87359,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8428:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87366,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87363,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87282,
                        "src": "8474:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 87364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8485:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87361,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8451:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8463:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "8451:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8451:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8404:87:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87370,
                            "name": "amountYInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87358,
                            "src": "8511:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8528:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8511:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87373,
                            "name": "amountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87360,
                            "src": "8533:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8546:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8533:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8511:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87367,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8501:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8504:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "8501:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 87377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8501:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87378,
                  "nodeType": "ExpressionStatement",
                  "src": "8501:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87382,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "8568:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87379,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "8559:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8562:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "8559:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8559:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87384,
                  "nodeType": "ExpressionStatement",
                  "src": "8559:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87390,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "8604:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8596:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87388,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8596:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8596:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87392,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87282,
                        "src": "8618:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87385,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "8582:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8587:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "8582:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8582:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87394,
                  "nodeType": "ExpressionStatement",
                  "src": "8582:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8655:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 87399,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8662:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87395,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8638:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8650:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "8638:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8638:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87401,
                  "nodeType": "ExpressionStatement",
                  "src": "8638:30:128"
                },
                {
                  "assignments": [
                    87403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87403,
                      "mutability": "mutable",
                      "name": "realAmountXOut",
                      "nameLocation": "8687:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "8679:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87402,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8679:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87406,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "8722:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87404,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "8704:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8712:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "8704:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8704:24:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8679:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87410,
                        "name": "realAmountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87403,
                        "src": "8747:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87411,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87360,
                        "src": "8763:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a32",
                        "id": 87412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8775:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f53a6c6e68c8ca7c4a8241baf35389c9e19385a2aa859d7f8b7f7722ab7937ef",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::2\""
                        },
                        "value": "testFuzz_SwapOutXAndY::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f53a6c6e68c8ca7c4a8241baf35389c9e19385a2aa859d7f8b7f7722ab7937ef",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::2\""
                        }
                      ],
                      "id": 87409,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2022,
                        2040,
                        2094,
                        2112
                      ],
                      "referencedDeclaration": 2040,
                      "src": "8738:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8738:64:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87414,
                  "nodeType": "ExpressionStatement",
                  "src": "8738:64:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87416,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "8829:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87417,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "8834:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87418,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8839:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87419,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "8852:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8860:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8866:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8870:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87415,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "8813:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8813:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87424,
                  "nodeType": "ExpressionStatement",
                  "src": "8813:60:128"
                },
                {
                  "assignments": [
                    87426,
                    87428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87426,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "8893:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "8885:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87425,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8885:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87428,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "8915:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "8907:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87427,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "8907:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87432,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87429,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "8931:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8943:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "8931:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 87431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8931:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8884:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87438,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "9006:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8998:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87436,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8998:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8998:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87434,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "8980:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8988:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "8980:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8980:39:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87441,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87426,
                        "src": "9021:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a33",
                        "id": 87442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9035:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58296c25c6291f83d7ae38b465e0c7c4fad919f31b85f5c29a6c28a2eee80c4e",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::3\""
                        },
                        "value": "testFuzz_SwapOutXAndY::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58296c25c6291f83d7ae38b465e0c7c4fad919f31b85f5c29a6c28a2eee80c4e",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::3\""
                        }
                      ],
                      "id": 87433,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "8971:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8971:91:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87444,
                  "nodeType": "ExpressionStatement",
                  "src": "8971:91:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87450,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "9104:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9096:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87448,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9096:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9096:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87446,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "9081:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9086:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "9081:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9081:36:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87453,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87428,
                        "src": "9119:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a34",
                        "id": 87454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9133:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_530c4c1f32a12c2e9aa6b61e7915af2350740388b51e916ac248d8ead95dbfce",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::4\""
                        },
                        "value": "testFuzz_SwapOutXAndY::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_530c4c1f32a12c2e9aa6b61e7915af2350740388b51e916ac248d8ead95dbfce",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::4\""
                        }
                      ],
                      "id": 87445,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9072:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9072:88:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87456,
                  "nodeType": "ExpressionStatement",
                  "src": "9072:88:128"
                },
                {
                  "assignments": [
                    87458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87458,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "9179:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "9171:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87457,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9171:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87463,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87461,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "9208:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87459,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "9190:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9198:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "9190:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9190:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9171:41:128"
                },
                {
                  "assignments": [
                    87465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87465,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "9230:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87495,
                      "src": "9222:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87464,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9222:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87470,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87468,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "9256:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87466,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "9241:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9246:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "9241:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9241:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9222:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87472,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87458,
                        "src": "9280:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87473,
                              "name": "amountX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86262,
                              "src": "9290:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87474,
                              "name": "amountXIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87280,
                              "src": "9300:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "9290:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87476,
                            "name": "realAmountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87403,
                            "src": "9312:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9290:36:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87478,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87426,
                          "src": "9329:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "9290:51:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a35",
                        "id": 87480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9343:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_80ebbb12a1a19347f03fbbd28b66493f0d38ee01629430af7c206a8cbee9ac66",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::5\""
                        },
                        "value": "testFuzz_SwapOutXAndY::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_80ebbb12a1a19347f03fbbd28b66493f0d38ee01629430af7c206a8cbee9ac66",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::5\""
                        }
                      ],
                      "id": 87471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9271:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9271:99:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87482,
                  "nodeType": "ExpressionStatement",
                  "src": "9271:99:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87484,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87465,
                        "src": "9389:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87485,
                              "name": "amountY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86265,
                              "src": "9399:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87486,
                              "name": "amountYIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87282,
                              "src": "9409:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "9399:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87488,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87288,
                            "src": "9421:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "9399:32:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87490,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87428,
                          "src": "9434:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "9399:47:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757458416e64593a3a36",
                        "id": 87492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9448:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b2b2238fd0aa31f29c8819f564c2c3043822d0f932eba407a45276ecfb88b273",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::6\""
                        },
                        "value": "testFuzz_SwapOutXAndY::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b2b2238fd0aa31f29c8819f564c2c3043822d0f932eba407a45276ecfb88b273",
                          "typeString": "literal_string \"testFuzz_SwapOutXAndY::6\""
                        }
                      ],
                      "id": 87483,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9380:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9380:95:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87494,
                  "nodeType": "ExpressionStatement",
                  "src": "9380:95:128"
                }
              ]
            },
            "functionSelector": "7b921e8f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapOutXAndY",
            "nameLocation": "7883:21:128",
            "parameters": {
              "id": 87283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87280,
                  "mutability": "mutable",
                  "name": "amountXIn",
                  "nameLocation": "7913:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87496,
                  "src": "7905:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87279,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7905:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87282,
                  "mutability": "mutable",
                  "name": "amountYIn",
                  "nameLocation": "7932:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87496,
                  "src": "7924:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87281,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "7924:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7904:38:128"
            },
            "returnParameters": {
              "id": 87284,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7952:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87714,
            "nodeType": "FunctionDefinition",
            "src": "9488:1608:128",
            "nodes": [],
            "body": {
              "id": 87713,
              "nodeType": "Block",
              "src": "9566:1530:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    87504,
                    87506,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87504,
                      "mutability": "mutable",
                      "name": "amountYInLeft",
                      "nameLocation": "9585:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "9577:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87503,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9577:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87506,
                      "mutability": "mutable",
                      "name": "amountXOut",
                      "nameLocation": "9608:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "9600:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87505,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "9600:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87512,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87509,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87500,
                        "src": "9646:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 87510,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9657:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87507,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "9623:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9635:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "9623:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9623:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9576:87:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87516,
                            "name": "amountYInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87504,
                            "src": "9683:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9700:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9683:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87519,
                            "name": "amountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87506,
                            "src": "9705:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9718:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9705:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9683:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87513,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9673:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9676:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "9673:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 87523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9673:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87524,
                  "nodeType": "ExpressionStatement",
                  "src": "9673:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87528,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "9744:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9736:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87526,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9736:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9736:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87530,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "9754:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9759:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87525,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "9731:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9731:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87533,
                  "nodeType": "ExpressionStatement",
                  "src": "9731:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87537,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "9787:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9779:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9779:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9779:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87539,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "9794:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 87540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9799:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 87534,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "9774:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9774:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87542,
                  "nodeType": "ExpressionStatement",
                  "src": "9774:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87546,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "9824:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87543,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "9815:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9818:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "9815:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9815:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87548,
                  "nodeType": "ExpressionStatement",
                  "src": "9815:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87554,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "9860:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9852:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9852:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9852:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87556,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87500,
                        "src": "9874:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87549,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "9838:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87551,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9843:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "9838:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9838:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87558,
                  "nodeType": "ExpressionStatement",
                  "src": "9838:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9911:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 87563,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "9918:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87559,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "9894:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9906:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "9894:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9894:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87565,
                  "nodeType": "ExpressionStatement",
                  "src": "9894:30:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87569,
                            "name": "ALICE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105068,
                            "src": "9962:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "expression": {
                            "id": 87567,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "9944:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9952:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "9944:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9944:24:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87571,
                        "name": "amountXOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87506,
                        "src": "9970:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a31",
                        "id": 87572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9982:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f391d0562d24b8cdd4d7f34b5a294655366ab240beae29c24f4c228d9669c07",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::1\""
                        },
                        "value": "testFuzz_SwapOutYAndX::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f391d0562d24b8cdd4d7f34b5a294655366ab240beae29c24f4c228d9669c07",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::1\""
                        }
                      ],
                      "id": 87566,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "9935:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9935:74:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87574,
                  "nodeType": "ExpressionStatement",
                  "src": "9935:74:128"
                },
                {
                  "assignments": [
                    87576,
                    87578,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87576,
                      "mutability": "mutable",
                      "name": "amountXInLeft",
                      "nameLocation": "10029:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10021:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87575,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10021:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87578,
                      "mutability": "mutable",
                      "name": "amountYOut",
                      "nameLocation": "10052:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10044:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87577,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10044:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87584,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87581,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87498,
                        "src": "10090:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10101:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87579,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "10067:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10079:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "10067:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10067:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10020:86:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 87594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87588,
                            "name": "amountXInLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87576,
                            "src": "10126:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87589,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10143:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10126:18:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 87591,
                            "name": "amountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87578,
                            "src": "10148:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 87592,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10161:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10148:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10126:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87585,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10116:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10119:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "10116:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 87595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10116:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87596,
                  "nodeType": "ExpressionStatement",
                  "src": "10116:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87600,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "10183:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87597,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "10174:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10177:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "10174:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10174:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87602,
                  "nodeType": "ExpressionStatement",
                  "src": "10174:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87608,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "10222:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10214:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87606,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10214:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10214:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87610,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87498,
                        "src": "10236:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87603,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "10197:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10205:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "10197:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10197:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87612,
                  "nodeType": "ExpressionStatement",
                  "src": "10197:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 87616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10273:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 87617,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "10279:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87613,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "10256:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87615,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10268:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "10256:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10256:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87619,
                  "nodeType": "ExpressionStatement",
                  "src": "10256:29:128"
                },
                {
                  "assignments": [
                    87621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87621,
                      "mutability": "mutable",
                      "name": "realAmountYOut",
                      "nameLocation": "10304:14:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10296:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87620,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10296:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87626,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87624,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "10336:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87622,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "10321:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10326:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "10321:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10321:21:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10296:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87628,
                        "name": "realAmountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87621,
                        "src": "10361:14:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87629,
                        "name": "amountYOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87578,
                        "src": "10377:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a32",
                        "id": 87630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10389:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f299588dbb58ee107aa530151073af7bb11c8feb687bb5802d29b8209f4ee761",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::2\""
                        },
                        "value": "testFuzz_SwapOutYAndX::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f299588dbb58ee107aa530151073af7bb11c8feb687bb5802d29b8209f4ee761",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::2\""
                        }
                      ],
                      "id": 87627,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2022,
                        2040,
                        2094,
                        2112
                      ],
                      "referencedDeclaration": 2040,
                      "src": "10352:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10352:64:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87632,
                  "nodeType": "ExpressionStatement",
                  "src": "10352:64:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87634,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "10443:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87635,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "10448:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87636,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "10453:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87637,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "10466:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10474:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10480:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10484:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87633,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "10427:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10427:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87642,
                  "nodeType": "ExpressionStatement",
                  "src": "10427:60:128"
                },
                {
                  "assignments": [
                    87644,
                    87646
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87644,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "10507:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10499:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87643,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10499:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87646,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "10529:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10521:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87645,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "10521:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87650,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87647,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "10545:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87648,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10557:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "10545:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 87649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10545:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10498:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87656,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "10620:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10612:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87654,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10612:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10612:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87652,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "10594:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10602:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "10594:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87658,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10594:39:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87659,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87644,
                        "src": "10635:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a33",
                        "id": 87660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10649:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecffccafb14a431c477d9c72b74b92fd5a8fe9bb20b98c69e32df7ffd58444a2",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::3\""
                        },
                        "value": "testFuzz_SwapOutYAndX::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecffccafb14a431c477d9c72b74b92fd5a8fe9bb20b98c69e32df7ffd58444a2",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::3\""
                        }
                      ],
                      "id": 87651,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10585:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10585:91:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87662,
                  "nodeType": "ExpressionStatement",
                  "src": "10585:91:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87668,
                                "name": "pairWnative",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105112,
                                "src": "10718:11:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBPair_$62123",
                                  "typeString": "contract LBPair"
                                }
                              ],
                              "id": 87667,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10710:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87666,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10710:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10710:20:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87664,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "10695:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "10700:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "10695:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10695:36:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87671,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87646,
                        "src": "10733:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a34",
                        "id": 87672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10747:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad51ff0e51b7ce2e509983f21d9015aba2048ba6a13d3ca35316064b51e7a303",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::4\""
                        },
                        "value": "testFuzz_SwapOutYAndX::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad51ff0e51b7ce2e509983f21d9015aba2048ba6a13d3ca35316064b51e7a303",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::4\""
                        }
                      ],
                      "id": 87663,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10686:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10686:88:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87674,
                  "nodeType": "ExpressionStatement",
                  "src": "10686:88:128"
                },
                {
                  "assignments": [
                    87676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87676,
                      "mutability": "mutable",
                      "name": "balanceX",
                      "nameLocation": "10793:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10785:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87675,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10785:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87681,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87679,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "10822:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87677,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "10804:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10812:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "10804:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10804:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10785:41:128"
                },
                {
                  "assignments": [
                    87683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87683,
                      "mutability": "mutable",
                      "name": "balanceY",
                      "nameLocation": "10844:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87713,
                      "src": "10836:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 87682,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10836:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87688,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87686,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "10870:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87684,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "10855:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10860:9:128",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41796,
                      "src": "10855:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 87687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10855:19:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10836:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87690,
                        "name": "balanceX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87676,
                        "src": "10894:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87691,
                              "name": "amountX",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86262,
                              "src": "10904:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87692,
                              "name": "amountXIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87498,
                              "src": "10914:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "10904:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87694,
                            "name": "amountXOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87506,
                            "src": "10926:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "10904:32:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87696,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87644,
                          "src": "10939:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "10904:47:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a35",
                        "id": 87698,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10953:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_835fdec3b5b3ef04a33bec36b960671cac9d9d6fbd4e8bc9a51d6a7b53d18291",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::5\""
                        },
                        "value": "testFuzz_SwapOutYAndX::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_835fdec3b5b3ef04a33bec36b960671cac9d9d6fbd4e8bc9a51d6a7b53d18291",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::5\""
                        }
                      ],
                      "id": 87689,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10885:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10885:95:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87700,
                  "nodeType": "ExpressionStatement",
                  "src": "10885:95:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87702,
                        "name": "balanceY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87683,
                        "src": "10999:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 87707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 87705,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 87703,
                              "name": "amountY",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86265,
                              "src": "11009:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 87704,
                              "name": "amountYIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 87500,
                              "src": "11019:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "src": "11009:19:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 87706,
                            "name": "realAmountYOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 87621,
                            "src": "11031:14:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11009:36:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 87708,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 87646,
                          "src": "11048:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "11009:51:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "7465737446757a7a5f537761704f757459416e64583a3a36",
                        "id": 87710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11062:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_933b018a7feb45edb215afbe18d46f889479d2a8d543a9c86d2606e075edca97",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::6\""
                        },
                        "value": "testFuzz_SwapOutYAndX::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_933b018a7feb45edb215afbe18d46f889479d2a8d543a9c86d2606e075edca97",
                          "typeString": "literal_string \"testFuzz_SwapOutYAndX::6\""
                        }
                      ],
                      "id": 87701,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "10990:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10990:99:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87712,
                  "nodeType": "ExpressionStatement",
                  "src": "10990:99:128"
                }
              ]
            },
            "functionSelector": "20c2ff2c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_SwapOutYAndX",
            "nameLocation": "9497:21:128",
            "parameters": {
              "id": 87501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 87498,
                  "mutability": "mutable",
                  "name": "amountXIn",
                  "nameLocation": "9527:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87714,
                  "src": "9519:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87497,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9519:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87500,
                  "mutability": "mutable",
                  "name": "amountYIn",
                  "nameLocation": "9546:9:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 87714,
                  "src": "9538:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  },
                  "typeName": {
                    "id": 87499,
                    "name": "uint128",
                    "nodeType": "ElementaryTypeName",
                    "src": "9538:7:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9518:38:128"
            },
            "returnParameters": {
              "id": 87502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9566:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 87881,
            "nodeType": "FunctionDefinition",
            "src": "11102:1226:128",
            "nodes": [],
            "body": {
              "id": 87880,
              "nodeType": "Block",
              "src": "11136:1192:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87718,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11159:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87719,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11166:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87720,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11173:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87721,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "11186:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 87722,
                        "name": "amountX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86262,
                        "src": "11194:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87723,
                        "name": "amountY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "11203:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 87724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11212:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11216:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87717,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "11146:12:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11146:73:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87727,
                  "nodeType": "ExpressionStatement",
                  "src": "11146:73:128"
                },
                {
                  "assignments": [
                    87729
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87729,
                      "mutability": "mutable",
                      "name": "amountXIn",
                      "nameLocation": "11238:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87880,
                      "src": "11230:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87728,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11230:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87731,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 87730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "11250:4:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11230:24:128"
                },
                {
                  "assignments": [
                    null,
                    87733,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 87733,
                      "mutability": "mutable",
                      "name": "amountYOut",
                      "nameLocation": "11275:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87880,
                      "src": "11267:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87732,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11267:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87739,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87736,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87729,
                        "src": "11313:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 87737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11324:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87734,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11290:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11302:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "11290:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11290:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11264:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87743,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "11353:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 87742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11345:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87741,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11345:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11345:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87745,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "11363:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87746,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87729,
                        "src": "11368:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87740,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "11340:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11340:38:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87748,
                  "nodeType": "ExpressionStatement",
                  "src": "11340:38:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87752,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "11398:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87749,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "11389:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11392:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "11389:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11389:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87754,
                  "nodeType": "ExpressionStatement",
                  "src": "11389:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87760,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "11437:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11429:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87758,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11429:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11429:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87762,
                        "name": "amountXIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87729,
                        "src": "11451:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87755,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "11412:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 87757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11420:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "11412:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11412:49:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87764,
                  "nodeType": "ExpressionStatement",
                  "src": "11412:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 87768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11488:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 87769,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "11494:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87765,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11471:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11483:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "11471:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11471:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87771,
                  "nodeType": "ExpressionStatement",
                  "src": "11471:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87773,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11525:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87774,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "11532:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87775,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11539:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87776,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "11552:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11560:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11566:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11570:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87772,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "11509:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11509:64:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87781,
                  "nodeType": "ExpressionStatement",
                  "src": "11509:64:128"
                },
                {
                  "assignments": [
                    87783,
                    87785
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87783,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "11593:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87880,
                      "src": "11585:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87782,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11585:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87785,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "11615:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 87880,
                      "src": "11607:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87784,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "11607:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87789,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87786,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11631:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11643:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "11631:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 87788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11631:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11584:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87795,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "11728:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87794,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11720:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87793,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11720:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11720:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87791,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "11702:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11710:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "11702:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11702:33:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87798,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "11737:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87799,
                                  "name": "amountXIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87729,
                                  "src": "11748:9:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 87800,
                                  "name": "protocolFeeX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87783,
                                  "src": "11760:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "11748:24:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87802,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11747:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11776:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "11747:30:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "11737:40:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11779:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657358324c503a3a31",
                        "id": 87807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11782:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a9f9cfec9d65ff2ead6f150337789ffaa4ba79386b66d9cc5756ede27f18a516",
                          "typeString": "literal_string \"test_FeesX2LP::1\""
                        },
                        "value": "test_FeesX2LP::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a9f9cfec9d65ff2ead6f150337789ffaa4ba79386b66d9cc5756ede27f18a516",
                          "typeString": "literal_string \"test_FeesX2LP::1\""
                        }
                      ],
                      "id": 87790,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "11671:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11671:139:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87809,
                  "nodeType": "ExpressionStatement",
                  "src": "11671:139:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87815,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "11874:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87814,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11866:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87813,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11866:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11866:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87811,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "11851:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "11856:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "11851:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11851:30:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87818,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "11883:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87824,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87819,
                                  "name": "amountYOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87733,
                                  "src": "11894:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 87820,
                                  "name": "protocolFeeY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87785,
                                  "src": "11907:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "11894:25:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87822,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11893:27:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87823,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11923:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "11893:31:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "11883:41:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11926:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657358324c503a3a32",
                        "id": 87827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11929:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ba3d0d0d3bf4163125192b9307e460573dda06f6bd0e89d92bde6e0552501b6",
                          "typeString": "literal_string \"test_FeesX2LP::2\""
                        },
                        "value": "test_FeesX2LP::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ba3d0d0d3bf4163125192b9307e460573dda06f6bd0e89d92bde6e0552501b6",
                          "typeString": "literal_string \"test_FeesX2LP::2\""
                        }
                      ],
                      "id": 87810,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "11820:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11820:137:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87829,
                  "nodeType": "ExpressionStatement",
                  "src": "11820:137:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87831,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "11984:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87832,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "11989:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87833,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "11994:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87834,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "12007:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12015:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12021:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12025:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87830,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "11968:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11968:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87839,
                  "nodeType": "ExpressionStatement",
                  "src": "11968:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87845,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "12096:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12088:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87843,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12088:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12088:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87841,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "12070:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12078:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "12070:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12070:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87848,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "12103:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87849,
                                  "name": "amountXIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87729,
                                  "src": "12114:9:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 87850,
                                  "name": "protocolFeeX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87783,
                                  "src": "12126:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "12114:24:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87852,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12113:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87853,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12142:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12113:30:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12103:40:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12145:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657358324c503a3a33",
                        "id": 87857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12148:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8936ac0b6df9950f037ceddb667841e6e322cc777969ecc56a00ddfa161ffdfd",
                          "typeString": "literal_string \"test_FeesX2LP::3\""
                        },
                        "value": "test_FeesX2LP::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8936ac0b6df9950f037ceddb667841e6e322cc777969ecc56a00ddfa161ffdfd",
                          "typeString": "literal_string \"test_FeesX2LP::3\""
                        }
                      ],
                      "id": 87840,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "12039:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12039:137:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87859,
                  "nodeType": "ExpressionStatement",
                  "src": "12039:137:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87865,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "12240:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12232:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87863,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12232:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12232:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87861,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "12217:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12222:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "12217:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12217:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87868,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "12247:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87869,
                                  "name": "amountYOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87733,
                                  "src": "12258:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 87870,
                                  "name": "protocolFeeY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87785,
                                  "src": "12271:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "12258:25:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87872,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12257:27:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12287:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12257:31:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12247:41:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12290:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657358324c503a3a34",
                        "id": 87877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12293:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df7833fbb50160b99455ac44e4056cdcc7789857d0db68fad157aec4c9805f54",
                          "typeString": "literal_string \"test_FeesX2LP::4\""
                        },
                        "value": "test_FeesX2LP::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df7833fbb50160b99455ac44e4056cdcc7789857d0db68fad157aec4c9805f54",
                          "typeString": "literal_string \"test_FeesX2LP::4\""
                        }
                      ],
                      "id": 87860,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "12186:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12186:135:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87879,
                  "nodeType": "ExpressionStatement",
                  "src": "12186:135:128"
                }
              ]
            },
            "functionSelector": "13f1994a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_FeesX2LP",
            "nameLocation": "11111:13:128",
            "parameters": {
              "id": 87715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11124:2:128"
            },
            "returnParameters": {
              "id": 87716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11136:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88048,
            "nodeType": "FunctionDefinition",
            "src": "12334:1200:128",
            "nodes": [],
            "body": {
              "id": 88047,
              "nodeType": "Block",
              "src": "12368:1166:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87885,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "12391:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87886,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "12398:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87887,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "12405:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87888,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "12418:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 87889,
                        "name": "amountX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86262,
                        "src": "12426:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 87890,
                        "name": "amountY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "12435:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 87891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12444:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12448:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87884,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "12378:12:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12378:73:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87894,
                  "nodeType": "ExpressionStatement",
                  "src": "12378:73:128"
                },
                {
                  "assignments": [
                    87896
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87896,
                      "mutability": "mutable",
                      "name": "amountYIn",
                      "nameLocation": "12470:9:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88047,
                      "src": "12462:17:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87895,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12462:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87898,
                  "initialValue": {
                    "hexValue": "31653138",
                    "id": 87897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12482:4:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12462:24:128"
                },
                {
                  "assignments": [
                    null,
                    87900,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 87900,
                      "mutability": "mutable",
                      "name": "amountXOut",
                      "nameLocation": "12507:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88047,
                      "src": "12499:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87899,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12499:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 87906,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 87903,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87896,
                        "src": "12545:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 87904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12556:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 87901,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "12522:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12534:10:128",
                      "memberName": "getSwapOut",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60319,
                      "src": "12522:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint128_$_t_bool_$returns$_t_uint128_$_t_uint128_$_t_uint128_$",
                        "typeString": "function (uint128,bool) view external returns (uint128,uint128,uint128)"
                      }
                    },
                    "id": 87905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12522:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12496:66:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87910,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "12586:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 87909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12578:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87908,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12578:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12578:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87912,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "12593:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87913,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87896,
                        "src": "12598:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 87907,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "12573:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 87914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12573:35:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87915,
                  "nodeType": "ExpressionStatement",
                  "src": "12573:35:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87919,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "12628:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87916,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "12619:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 87918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12622:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "12619:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 87920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12619:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87921,
                  "nodeType": "ExpressionStatement",
                  "src": "12619:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 87927,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "12664:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 87926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12656:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 87925,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12656:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 87928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12656:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 87929,
                        "name": "amountYIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87896,
                        "src": "12678:9:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 87922,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "12642:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 87924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12647:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "12642:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 87930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12642:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 87931,
                  "nodeType": "ExpressionStatement",
                  "src": "12642:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 87935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12715:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 87936,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "12722:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 87932,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "12698:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12710:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "12698:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 87937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12698:28:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 87938,
                  "nodeType": "ExpressionStatement",
                  "src": "12698:28:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87940,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "12753:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87941,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "12760:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87942,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "12767:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 87943,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "12780:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 87944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12788:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12794:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 87946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12798:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87939,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "12737:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 87947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12737:64:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87948,
                  "nodeType": "ExpressionStatement",
                  "src": "12737:64:128"
                },
                {
                  "assignments": [
                    87950,
                    87952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 87950,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "12821:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88047,
                      "src": "12813:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87949,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12813:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 87952,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "12843:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88047,
                      "src": "12835:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 87951,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "12835:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 87956,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 87953,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "12859:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 87954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12871:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "12859:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 87955,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12859:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12812:76:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87962,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "12956:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87961,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12948:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87960,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12948:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12948:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87958,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "12930:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 87959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12938:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "12930:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12930:33:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87965,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "12965:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87968,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87966,
                                  "name": "amountXOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87900,
                                  "src": "12976:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 87967,
                                  "name": "protocolFeeX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87950,
                                  "src": "12989:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "12976:25:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87969,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "12975:27:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13005:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "12975:31:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "12965:41:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13008:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657359324c503a3a31",
                        "id": 87974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13011:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f157231d4c6d0fc9899e368194bac9d432fea58366369b8eb8486b8e4f62fb4f",
                          "typeString": "literal_string \"test_FeesY2LP::1\""
                        },
                        "value": "test_FeesY2LP::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f157231d4c6d0fc9899e368194bac9d432fea58366369b8eb8486b8e4f62fb4f",
                          "typeString": "literal_string \"test_FeesY2LP::1\""
                        }
                      ],
                      "id": 87957,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "12899:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12899:140:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87976,
                  "nodeType": "ExpressionStatement",
                  "src": "12899:140:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 87982,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "13103:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 87981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13095:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 87980,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13095:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 87983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13095:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 87978,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "13080:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 87979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13085:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "13080:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 87984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13080:30:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 87992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 87985,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "13112:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 87991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 87988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 87986,
                                  "name": "amountYIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87896,
                                  "src": "13123:9:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 87987,
                                  "name": "protocolFeeY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87952,
                                  "src": "13135:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "13123:24:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 87989,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13122:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 87990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13151:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13122:30:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13112:40:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 87993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13154:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657359324c503a3a32",
                        "id": 87994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13157:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f38d375c8754d34e756027c67734d202be3dd36c29c67e109f9a5590e8f232b",
                          "typeString": "literal_string \"test_FeesY2LP::2\""
                        },
                        "value": "test_FeesY2LP::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f38d375c8754d34e756027c67734d202be3dd36c29c67e109f9a5590e8f232b",
                          "typeString": "literal_string \"test_FeesY2LP::2\""
                        }
                      ],
                      "id": 87977,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "13049:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 87995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13049:136:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87996,
                  "nodeType": "ExpressionStatement",
                  "src": "13049:136:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 87998,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13212:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 87999,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13217:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88000,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "13222:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88001,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "13235:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13243:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 88003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13249:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 88004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13253:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 87997,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "13196:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13196:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88006,
                  "nodeType": "ExpressionStatement",
                  "src": "13196:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88012,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "13324:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88011,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13316:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88010,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13316:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13316:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88008,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "13298:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13306:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "13298:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88014,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13298:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88015,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "13331:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 88018,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88016,
                                  "name": "amountXOut",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87900,
                                  "src": "13342:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 88017,
                                  "name": "protocolFeeX",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87950,
                                  "src": "13355:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "13342:25:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 88019,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13341:27:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 88020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13371:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13341:31:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13331:41:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 88023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13374:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657359324c503a3a33",
                        "id": 88024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13377:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ae9792426b030063ace246c325b1475c40b582832b6ab304ac51475b5647647",
                          "typeString": "literal_string \"test_FeesY2LP::3\""
                        },
                        "value": "test_FeesY2LP::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ae9792426b030063ace246c325b1475c40b582832b6ab304ac51475b5647647",
                          "typeString": "literal_string \"test_FeesY2LP::3\""
                        }
                      ],
                      "id": 88007,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "13267:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13267:138:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88026,
                  "nodeType": "ExpressionStatement",
                  "src": "13267:138:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88032,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "13456:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88031,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13448:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88030,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13448:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88033,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13448:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88028,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "13433:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13438:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "13433:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13433:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88035,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "13463:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                },
                                "id": 88038,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88036,
                                  "name": "amountYIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87896,
                                  "src": "13474:9:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 88037,
                                  "name": "protocolFeeY",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 87952,
                                  "src": "13486:12:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                },
                                "src": "13474:24:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              }
                            ],
                            "id": 88039,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "13473:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "32",
                            "id": 88040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13502:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          },
                          "src": "13473:30:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "src": "13463:40:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 88043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13505:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "hexValue": "746573745f4665657359324c503a3a34",
                        "id": 88044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13508:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9080a95b8f0acc013f7e611c83f4ebc097893425c06eb98e2a07572c62d839df",
                          "typeString": "literal_string \"test_FeesY2LP::4\""
                        },
                        "value": "test_FeesY2LP::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9080a95b8f0acc013f7e611c83f4ebc097893425c06eb98e2a07572c62d839df",
                          "typeString": "literal_string \"test_FeesY2LP::4\""
                        }
                      ],
                      "id": 88027,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "13415:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13415:112:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88046,
                  "nodeType": "ExpressionStatement",
                  "src": "13415:112:128"
                }
              ]
            },
            "functionSelector": "aabdebad",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_FeesY2LP",
            "nameLocation": "12343:13:128",
            "parameters": {
              "id": 87882,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12356:2:128"
            },
            "returnParameters": {
              "id": 87883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12368:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88378,
            "nodeType": "FunctionDefinition",
            "src": "13540:2407:128",
            "nodes": [],
            "body": {
              "id": 88377,
              "nodeType": "Block",
              "src": "13582:2365:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88052,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13608:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88053,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13613:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88054,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "13618:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88055,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "13631:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13639:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "3130",
                        "id": 88057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13645:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "3130",
                        "id": 88058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13649:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        }
                      ],
                      "id": 88051,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "13592:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13592:60:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88060,
                  "nodeType": "ExpressionStatement",
                  "src": "13592:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88062,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13675:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88063,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "13680:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88064,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "13685:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88065,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "13698:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 88066,
                        "name": "amountX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86262,
                        "src": "13706:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88067,
                        "name": "amountY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "13715:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13724:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 88069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13727:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88061,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "13662:12:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13662:67:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88071,
                  "nodeType": "ExpressionStatement",
                  "src": "13662:67:128"
                },
                {
                  "assignments": [
                    88074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88074,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "13754:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "13740:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                        "typeString": "contract FlashBorrower"
                      },
                      "typeName": {
                        "id": 88073,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88072,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "13740:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "13740:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "13740:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88080,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88078,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "13783:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      ],
                      "id": 88077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "13765:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ILBPair_$69932_$returns$_t_contract$_FlashBorrower_$123680_$",
                        "typeString": "function (contract ILBPair) returns (contract FlashBorrower)"
                      },
                      "typeName": {
                        "id": 88076,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88075,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "13769:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "13769:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "13769:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      }
                    },
                    "id": 88079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13765:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13740:55:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88084,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "13819:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13811:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13811:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13811:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88088,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88074,
                            "src": "13837:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13829:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88086,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13829:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13829:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32653138",
                        "id": 88090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13848:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 88081,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "13806:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13806:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88092,
                  "nodeType": "ExpressionStatement",
                  "src": "13806:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88096,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "13876:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13868:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88094,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13868:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13868:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88100,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88074,
                            "src": "13891:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13883:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13883:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13883:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32653138",
                        "id": 88102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13902:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 88093,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "13863:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13863:44:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88104,
                  "nodeType": "ExpressionStatement",
                  "src": "13863:44:128"
                },
                {
                  "assignments": [
                    88106,
                    88108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88106,
                      "mutability": "mutable",
                      "name": "feeX1",
                      "nameLocation": "13927:5:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "13919:13:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88105,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "13919:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88108,
                      "mutability": "mutable",
                      "name": "feeY1",
                      "nameLocation": "13942:5:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "13934:13:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88107,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "13934:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88114,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000001_by_1",
                          "typeString": "int_const 1000000000000000001"
                        },
                        "id": 88111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 88109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13952:4:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13959:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13952:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000001_by_1",
                          "typeString": "int_const 1000000000000000001"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13962:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "id": 88113,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "13951:16:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1000000000000000001_by_1_$_t_rational_1000000000000000000_by_1_$",
                      "typeString": "tuple(int_const 1000000000000000001,int_const 1000000000000000000)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13918:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88120,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88074,
                            "src": "13995:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13987:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88118,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13987:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13987:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88115,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "13978:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13981:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "13978:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13978:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88123,
                  "nodeType": "ExpressionStatement",
                  "src": "13978:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88127,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88074,
                        "src": "14037:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14063:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88131,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14055:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 88130,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14055:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14055:10:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14047:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 88128,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14047:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14047:19:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88137,
                            "name": "feeX1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88106,
                            "src": "14079:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 88138,
                            "name": "feeY1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88108,
                            "src": "14086:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "id": 88139,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72438,
                              "src": "14093:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 88140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14103:16:128",
                            "memberName": "CALLBACK_SUCCESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72437,
                            "src": "14093:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14121:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 88135,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14068:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14072:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "14068:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14068:55:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88124,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "14015:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14027:9:128",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "14015:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14015:109:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88144,
                  "nodeType": "ExpressionStatement",
                  "src": "14015:109:128"
                },
                {
                  "assignments": [
                    88146,
                    88148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88146,
                      "mutability": "mutable",
                      "name": "protocolFeeX1",
                      "nameLocation": "14144:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14136:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88145,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14136:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88148,
                      "mutability": "mutable",
                      "name": "protocolFeeY1",
                      "nameLocation": "14167:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14159:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88147,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14159:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88152,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88149,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "14184:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14196:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "14184:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14184:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14135:78:128"
                },
                {
                  "expression": {
                    "id": 88163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88153,
                          "name": "feeX1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88106,
                          "src": "14224:5:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88154,
                          "name": "feeY1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88108,
                          "src": "14231:5:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88155,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14223:14:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88156,
                            "name": "feeX1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88106,
                            "src": "14241:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 88157,
                            "name": "protocolFeeX1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88146,
                            "src": "14249:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "14241:21:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 88161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88159,
                            "name": "feeY1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88108,
                            "src": "14264:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 88160,
                            "name": "protocolFeeY1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88148,
                            "src": "14272:13:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "14264:21:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88162,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "14240:46:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "14223:63:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88164,
                  "nodeType": "ExpressionStatement",
                  "src": "14223:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88166,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "14310:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88167,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "14317:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88168,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "14324:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88169,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "14337:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "id": 88170,
                        "name": "amountX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86262,
                        "src": "14345:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 88171,
                        "name": "amountY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 86265,
                        "src": "14354:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88172,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14363:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 88173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14366:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88165,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106428,
                      "src": "14297:12:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14297:71:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88175,
                  "nodeType": "ExpressionStatement",
                  "src": "14297:71:128"
                },
                {
                  "assignments": [
                    88177,
                    88179
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88177,
                      "mutability": "mutable",
                      "name": "feeX2",
                      "nameLocation": "14388:5:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14380:13:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88176,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14380:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88179,
                      "mutability": "mutable",
                      "name": "feeY2",
                      "nameLocation": "14403:5:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14395:13:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88178,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "14395:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88185,
                  "initialValue": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000001_by_1",
                          "typeString": "int_const 1000000000000000001"
                        },
                        "id": 88182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31653138",
                          "id": 88180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14413:4:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1e18"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14420:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "14413:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000001_by_1",
                          "typeString": "int_const 1000000000000000001"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14423:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "id": 88184,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14412:16:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1000000000000000001_by_1_$_t_rational_1000000000000000000_by_1_$",
                      "typeString": "tuple(int_const 1000000000000000001,int_const 1000000000000000000)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14379:49:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88191,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88074,
                            "src": "14456:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14448:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88189,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14448:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14448:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88186,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "14439:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14442:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "14439:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14439:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88194,
                  "nodeType": "ExpressionStatement",
                  "src": "14439:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88198,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88074,
                        "src": "14498:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14524:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14516:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 88201,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "14516:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14516:10:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 88200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14508:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 88199,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "14508:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14508:19:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88208,
                            "name": "feeX2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88177,
                            "src": "14540:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "id": 88209,
                            "name": "feeY2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88179,
                            "src": "14547:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          {
                            "expression": {
                              "id": 88210,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72438,
                              "src": "14554:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 88211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "14564:16:128",
                            "memberName": "CALLBACK_SUCCESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72437,
                            "src": "14554:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14582:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 88206,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "14529:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "14533:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "14529:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14529:55:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88195,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "14476:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88197,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14488:9:128",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "14476:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14476:109:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88215,
                  "nodeType": "ExpressionStatement",
                  "src": "14476:109:128"
                },
                {
                  "id": 88242,
                  "nodeType": "Block",
                  "src": "14596:216:128",
                  "statements": [
                    {
                      "assignments": [
                        88217,
                        88219
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 88217,
                          "mutability": "mutable",
                          "name": "protocolFeeX2",
                          "nameLocation": "14619:13:128",
                          "nodeType": "VariableDeclaration",
                          "scope": 88242,
                          "src": "14611:21:128",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 88216,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "14611:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 88219,
                          "mutability": "mutable",
                          "name": "protocolFeeY2",
                          "nameLocation": "14642:13:128",
                          "nodeType": "VariableDeclaration",
                          "scope": 88242,
                          "src": "14634:21:128",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "typeName": {
                            "id": 88218,
                            "name": "uint128",
                            "nodeType": "ElementaryTypeName",
                            "src": "14634:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 88223,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 88220,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "14659:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14671:15:128",
                          "memberName": "getProtocolFees",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 59655,
                          "src": "14659:27:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                            "typeString": "function () view external returns (uint128,uint128)"
                          }
                        },
                        "id": 88222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14659:29:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                          "typeString": "tuple(uint128,uint128)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "14610:78:128"
                    },
                    {
                      "expression": {
                        "id": 88240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "components": [
                            {
                              "id": 88224,
                              "name": "feeX2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88177,
                              "src": "14703:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "id": 88225,
                              "name": "feeY2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88179,
                              "src": "14710:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "id": 88226,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "14702:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint128,uint128)"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 88232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 88227,
                                "name": "feeX2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88177,
                                "src": "14720:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 88230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 88228,
                                      "name": "protocolFeeX2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88217,
                                      "src": "14729:13:128",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 88229,
                                      "name": "protocolFeeX1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88146,
                                      "src": "14745:13:128",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "src": "14729:29:128",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "id": 88231,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14728:31:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "14720:39:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              },
                              "id": 88238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 88233,
                                "name": "feeY2",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 88179,
                                "src": "14761:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    },
                                    "id": 88236,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 88234,
                                      "name": "protocolFeeY2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88219,
                                      "src": "14770:13:128",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "id": 88235,
                                      "name": "protocolFeeY1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 88148,
                                      "src": "14786:13:128",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint128",
                                        "typeString": "uint128"
                                      }
                                    },
                                    "src": "14770:29:128",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint128",
                                      "typeString": "uint128"
                                    }
                                  }
                                ],
                                "id": 88237,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14769:31:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint128",
                                  "typeString": "uint128"
                                }
                              },
                              "src": "14761:39:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            }
                          ],
                          "id": 88239,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "14719:82:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                            "typeString": "tuple(uint128,uint128)"
                          }
                        },
                        "src": "14702:99:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 88241,
                      "nodeType": "ExpressionStatement",
                      "src": "14702:99:128"
                    }
                  ]
                },
                {
                  "assignments": [
                    88244,
                    88246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88244,
                      "mutability": "mutable",
                      "name": "shareAlice",
                      "nameLocation": "14831:10:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14823:18:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14823:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88246,
                      "mutability": "mutable",
                      "name": "shareDev",
                      "nameLocation": "14851:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88377,
                      "src": "14843:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 88245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14843:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88264,
                  "initialValue": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88251,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "14906:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14898:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88249,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14898:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88252,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14898:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 88253,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105018,
                            "src": "14914:6:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "id": 88247,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "14876:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14888:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "14876:21:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14876:45:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88259,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "14953:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88258,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14945:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88257,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14945:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14945:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 88261,
                            "name": "ID_ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105018,
                            "src": "14959:6:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          ],
                          "expression": {
                            "id": 88255,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "14923:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          },
                          "id": 88256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14935:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 67087,
                          "src": "14923:21:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (address,uint256) view external returns (uint256)"
                          }
                        },
                        "id": 88262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14923:43:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 88263,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "14875:92:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14822:145:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88266,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "14994:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88267,
                        "name": "ALICE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105068,
                        "src": "15001:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88268,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "15008:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88269,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "15021:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15029:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 88271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15035:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 88272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15038:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88265,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "14978:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14978:62:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88274,
                  "nodeType": "ExpressionStatement",
                  "src": "14978:62:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88276,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "15066:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88277,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "15071:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 88278,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "15076:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      {
                        "id": 88279,
                        "name": "ID_ONE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105018,
                        "src": "15089:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15097:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      },
                      {
                        "hexValue": "31",
                        "id": 88281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15103:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 88282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15106:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 88275,
                      "name": "removeLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 106543,
                      "src": "15050:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_contract$_LBPair_$62123_$_t_uint24_$_t_uint256_$_t_uint8_$_t_uint8_$returns$__$",
                        "typeString": "function (address,address,contract LBPair,uint24,uint256,uint8,uint8)"
                      }
                    },
                    "id": 88283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15050:58:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88284,
                  "nodeType": "ExpressionStatement",
                  "src": "15050:58:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88290,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "15176:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15168:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88288,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15168:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15168:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88286,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "15150:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15158:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15150:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15150:33:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88293,
                          "name": "amountX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86262,
                          "src": "15197:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 88296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 88294,
                              "name": "feeX2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88177,
                              "src": "15207:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88295,
                              "name": "shareAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88244,
                              "src": "15215:10:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15207:18:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 88299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88297,
                                  "name": "shareAlice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88244,
                                  "src": "15229:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 88298,
                                  "name": "shareDev",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88246,
                                  "src": "15242:8:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15229:21:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 88300,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15228:23:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15207:44:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15197:54:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15265:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f46656573324c50466c6173686c6f616e3a3a31",
                        "id": 88304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15280:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f34697e0a3e311a250a2dc13f83a0bcc938b6a3be4b50e3e74a773191ca9cadb",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::1\""
                        },
                        "value": "test_Fees2LPFlashloan::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f34697e0a3e311a250a2dc13f83a0bcc938b6a3be4b50e3e74a773191ca9cadb",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::1\""
                        }
                      ],
                      "id": 88285,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "15119:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15119:197:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88306,
                  "nodeType": "ExpressionStatement",
                  "src": "15119:197:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88312,
                                "name": "ALICE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105068,
                                "src": "15380:5:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15372:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88310,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15372:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15372:14:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88308,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "15357:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15362:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15357:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15357:30:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88315,
                          "name": "amountY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 86265,
                          "src": "15401:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 88318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 88316,
                              "name": "feeY2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88179,
                              "src": "15411:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88317,
                              "name": "shareAlice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88244,
                              "src": "15419:10:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15411:18:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 88321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88319,
                                  "name": "shareAlice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88244,
                                  "src": "15433:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 88320,
                                  "name": "shareDev",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88246,
                                  "src": "15446:8:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15433:21:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 88322,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15432:23:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15411:44:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15401:54:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15469:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f46656573324c50466c6173686c6f616e3a3a32",
                        "id": 88326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15484:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_147968ec6afa3b41e903e2a668e9b637b5ca0370f1de940d1f83efffc1a72719",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::2\""
                        },
                        "value": "test_Fees2LPFlashloan::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_147968ec6afa3b41e903e2a668e9b637b5ca0370f1de940d1f83efffc1a72719",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::2\""
                        }
                      ],
                      "id": 88307,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "15326:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15326:194:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88328,
                  "nodeType": "ExpressionStatement",
                  "src": "15326:194:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88334,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "15588:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15580:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88332,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15580:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88335,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15580:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88330,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "15562:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15570:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15562:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15562:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88337,
                            "name": "amountX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86262,
                            "src": "15607:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 88338,
                            "name": "feeX1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88106,
                            "src": "15617:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "15607:15:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 88342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 88340,
                              "name": "feeX2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88177,
                              "src": "15625:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88341,
                              "name": "shareDev",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88246,
                              "src": "15633:8:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15625:16:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 88345,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88343,
                                  "name": "shareAlice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88244,
                                  "src": "15645:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 88344,
                                  "name": "shareDev",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88246,
                                  "src": "15658:8:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15645:21:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 88346,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15644:23:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15625:42:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15607:60:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88349,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15681:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f46656573324c50466c6173686c6f616e3a3a33",
                        "id": 88350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15696:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e838b368175a221feda0b40ba6c6ca2741463d165f8c2c293d6e340b54543eab",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::3\""
                        },
                        "value": "test_Fees2LPFlashloan::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e838b368175a221feda0b40ba6c6ca2741463d165f8c2c293d6e340b54543eab",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::3\""
                        }
                      ],
                      "id": 88329,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "15531:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15531:201:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88352,
                  "nodeType": "ExpressionStatement",
                  "src": "15531:201:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 88358,
                                "name": "DEV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105060,
                                "src": "15796:3:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "id": 88357,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15788:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 88356,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15788:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15788:12:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88354,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "15773:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15778:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "15773:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15773:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 88372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 88361,
                            "name": "amountY",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 86265,
                            "src": "15815:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 88362,
                            "name": "feeY1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88108,
                            "src": "15825:5:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "src": "15815:15:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 88371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 88366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 88364,
                              "name": "feeY2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88179,
                              "src": "15833:5:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint128",
                                "typeString": "uint128"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 88365,
                              "name": "shareDev",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 88246,
                              "src": "15841:8:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15833:16:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 88369,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 88367,
                                  "name": "shareAlice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88244,
                                  "src": "15853:10:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 88368,
                                  "name": "shareDev",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 88246,
                                  "src": "15866:8:128",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15853:21:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 88370,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "15852:23:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15833:42:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15815:60:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15889:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f46656573324c50466c6173686c6f616e3a3a34",
                        "id": 88374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15904:26:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5742f8cc3876a7da3a3b0ea4c0847288f0c17999687cc04ab3ce6a91e54b4081",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::4\""
                        },
                        "value": "test_Fees2LPFlashloan::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5742f8cc3876a7da3a3b0ea4c0847288f0c17999687cc04ab3ce6a91e54b4081",
                          "typeString": "literal_string \"test_Fees2LPFlashloan::4\""
                        }
                      ],
                      "id": 88353,
                      "name": "assertApproxEqAbs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2169,
                        2190,
                        2253,
                        2274
                      ],
                      "referencedDeclaration": 2190,
                      "src": "15742:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15742:198:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88376,
                  "nodeType": "ExpressionStatement",
                  "src": "15742:198:128"
                }
              ]
            },
            "functionSelector": "9cac290a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Fees2LPFlashloan",
            "nameLocation": "13549:21:128",
            "parameters": {
              "id": 88049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13570:2:128"
            },
            "returnParameters": {
              "id": 88050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13582:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88512,
            "nodeType": "FunctionDefinition",
            "src": "15953:1030:128",
            "nodes": [],
            "body": {
              "id": 88511,
              "nodeType": "Block",
              "src": "16005:978:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88383
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88383,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "16029:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88511,
                      "src": "16015:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                        "typeString": "contract FlashBorrower"
                      },
                      "typeName": {
                        "id": 88382,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88381,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "16015:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "16015:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "16015:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88389,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88387,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16058:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      ],
                      "id": 88386,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "16040:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ILBPair_$69932_$returns$_t_contract$_FlashBorrower_$123680_$",
                        "typeString": "function (contract ILBPair) returns (contract FlashBorrower)"
                      },
                      "typeName": {
                        "id": 88385,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88384,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "16044:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "16044:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "16044:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      }
                    },
                    "id": 88388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16040:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16015:55:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88393,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "16094:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16086:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16086:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16086:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88397,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88383,
                            "src": "16112:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16104:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88395,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16104:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16104:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16123:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88390,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "16081:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16081:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88401,
                  "nodeType": "ExpressionStatement",
                  "src": "16081:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88405,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "16151:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16143:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88403,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16143:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16143:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88409,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88383,
                            "src": "16166:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16158:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88407,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16158:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88410,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16158:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16177:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88402,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "16138:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16138:44:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88413,
                  "nodeType": "ExpressionStatement",
                  "src": "16138:44:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88419,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88383,
                            "src": "16210:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "16202:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88417,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "16202:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16202:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88414,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16193:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16196:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "16193:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16193:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88422,
                  "nodeType": "ExpressionStatement",
                  "src": "16193:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88426,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88383,
                        "src": "16252:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16280:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16270:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16262:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 88427,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "16262:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88430,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16262:10:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "id": 88431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16273:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76197,
                          "src": "16262:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$attached_to$_t_uint128_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 88433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16262:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            "id": 88438,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31653138",
                              "id": 88436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16295:4:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 88437,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16302:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "16295:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16305:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "id": 88440,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72438,
                              "src": "16308:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 88441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "16318:16:128",
                            "memberName": "CALLBACK_SUCCESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72437,
                            "src": "16308:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16336:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 88434,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "16284:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "16288:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "16284:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16284:54:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88423,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16230:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16242:9:128",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "16230:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16230:109:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88445,
                  "nodeType": "ExpressionStatement",
                  "src": "16230:109:128"
                },
                {
                  "assignments": [
                    88447,
                    88449
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88447,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "16359:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88511,
                      "src": "16351:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88446,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16351:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88449,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "16381:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88511,
                      "src": "16373:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88448,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "16373:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88453,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88450,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16397:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16409:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "16397:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16397:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16350:76:128"
                },
                {
                  "assignments": [
                    88455
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88455,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "16445:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88511,
                      "src": "16437:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88454,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16437:7:128",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88459,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88456,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "16460:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 88457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16468:15:128",
                      "memberName": "getFeeRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57766,
                      "src": "16460:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 88458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16460:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16437:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88463,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88455,
                        "src": "16505:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88460,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "16496:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16499:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "16496:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16496:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88465,
                  "nodeType": "ExpressionStatement",
                  "src": "16496:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88466,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "16528:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "16540:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "16528:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 88469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16528:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88470,
                  "nodeType": "ExpressionStatement",
                  "src": "16528:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88474,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88455,
                            "src": "16599:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88472,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "16581:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16589:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "16581:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16581:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88476,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88447,
                          "src": "16614:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16629:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "16614:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a31",
                        "id": 88479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16632:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6881a9906ff67b0c778777ccee95569118bf113c56fb23520e045a2273369d0a",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::1\""
                        },
                        "value": "test_CollectProtocolFeesXTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6881a9906ff67b0c778777ccee95569118bf113c56fb23520e045a2273369d0a",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::1\""
                        }
                      ],
                      "id": 88471,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16572:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16572:97:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88481,
                  "nodeType": "ExpressionStatement",
                  "src": "16572:97:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88485,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88455,
                            "src": "16703:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88483,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "16688:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16693:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "16688:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16688:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16718:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a32",
                        "id": 88488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16721:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_09f3e4c8dc80f176bb455aefa22073024e72d3ccfcde23426e0bbde5134fb2f3",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::2\""
                        },
                        "value": "test_CollectProtocolFeesXTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_09f3e4c8dc80f176bb455aefa22073024e72d3ccfcde23426e0bbde5134fb2f3",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::2\""
                        }
                      ],
                      "id": 88482,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16679:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16679:79:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88490,
                  "nodeType": "ExpressionStatement",
                  "src": "16679:79:128"
                },
                {
                  "expression": {
                    "id": 88497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88491,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88447,
                          "src": "16770:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88492,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88449,
                          "src": "16784:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88493,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "16769:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88494,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "16800:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16812:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "16800:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 88496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16800:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "16769:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88498,
                  "nodeType": "ExpressionStatement",
                  "src": "16769:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88500,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88447,
                        "src": "16849:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16863:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a33",
                        "id": 88502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16866:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cd8c257c48857175e81dadab85b8d1db445df08074a293abec41237b1eb081f5",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::3\""
                        },
                        "value": "test_CollectProtocolFeesXTokens::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cd8c257c48857175e81dadab85b8d1db445df08074a293abec41237b1eb081f5",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::3\""
                        }
                      ],
                      "id": 88499,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16840:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16840:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88504,
                  "nodeType": "ExpressionStatement",
                  "src": "16840:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88506,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88449,
                        "src": "16922:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16936:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657358546f6b656e733a3a34",
                        "id": 88508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16939:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8cb0ffd498eed63947b2e2633d237b5d6d683adc43cd0d962a9ecea8d68b889",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::4\""
                        },
                        "value": "test_CollectProtocolFeesXTokens::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8cb0ffd498eed63947b2e2633d237b5d6d683adc43cd0d962a9ecea8d68b889",
                          "typeString": "literal_string \"test_CollectProtocolFeesXTokens::4\""
                        }
                      ],
                      "id": 88505,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "16913:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16913:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88510,
                  "nodeType": "ExpressionStatement",
                  "src": "16913:63:128"
                }
              ]
            },
            "functionSelector": "b9651243",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CollectProtocolFeesXTokens",
            "nameLocation": "15962:31:128",
            "parameters": {
              "id": 88379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15993:2:128"
            },
            "returnParameters": {
              "id": 88380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16005:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88646,
            "nodeType": "FunctionDefinition",
            "src": "16989:1030:128",
            "nodes": [],
            "body": {
              "id": 88645,
              "nodeType": "Block",
              "src": "17041:978:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88517
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88517,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "17065:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88645,
                      "src": "17051:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                        "typeString": "contract FlashBorrower"
                      },
                      "typeName": {
                        "id": 88516,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88515,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "17051:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "17051:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "17051:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88523,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88521,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "17094:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      ],
                      "id": 88520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "17076:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ILBPair_$69932_$returns$_t_contract$_FlashBorrower_$123680_$",
                        "typeString": "function (contract ILBPair) returns (contract FlashBorrower)"
                      },
                      "typeName": {
                        "id": 88519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88518,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "17080:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "17080:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "17080:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      }
                    },
                    "id": 88522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17076:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17051:55:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88527,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "17130:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17122:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88525,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17122:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17122:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88531,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88517,
                            "src": "17148:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17140:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88529,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17140:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17140:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17159:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88524,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "17117:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17117:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88535,
                  "nodeType": "ExpressionStatement",
                  "src": "17117:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88539,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "17187:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17179:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88537,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17179:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17179:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88543,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88517,
                            "src": "17202:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17194:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88541,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17194:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17194:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17213:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88536,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "17174:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17174:44:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88547,
                  "nodeType": "ExpressionStatement",
                  "src": "17174:44:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88553,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88517,
                            "src": "17246:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17238:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88551,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17238:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17238:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88548,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17229:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17232:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "17229:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17229:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88556,
                  "nodeType": "ExpressionStatement",
                  "src": "17229:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88560,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88517,
                        "src": "17288:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17316:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 88563,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17306:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 88562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "17298:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 88561,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "17298:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17298:10:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "id": 88565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17309:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76197,
                          "src": "17298:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$attached_to$_t_uint128_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 88567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17298:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 88570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17331:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            "id": 88573,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31653138",
                              "id": 88571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17334:4:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 88572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17341:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "17334:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            }
                          },
                          {
                            "expression": {
                              "id": 88574,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72438,
                              "src": "17344:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 88575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "17354:16:128",
                            "memberName": "CALLBACK_SUCCESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72437,
                            "src": "17344:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88576,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17372:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 88568,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17320:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "17324:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "17320:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17320:54:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88557,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "17266:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17278:9:128",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "17266:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17266:109:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88579,
                  "nodeType": "ExpressionStatement",
                  "src": "17266:109:128"
                },
                {
                  "assignments": [
                    88581,
                    88583
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88581,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "17395:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88645,
                      "src": "17387:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88580,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17387:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88583,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "17417:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88645,
                      "src": "17409:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88582,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "17409:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88587,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88584,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "17433:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17445:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "17433:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17433:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17386:76:128"
                },
                {
                  "assignments": [
                    88589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88589,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "17481:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88645,
                      "src": "17473:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88588,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17473:7:128",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88593,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88590,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "17496:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 88591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17504:15:128",
                      "memberName": "getFeeRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57766,
                      "src": "17496:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 88592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17496:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17473:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88597,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88589,
                        "src": "17541:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88594,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "17532:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17535:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "17532:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17532:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88599,
                  "nodeType": "ExpressionStatement",
                  "src": "17532:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88600,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "17564:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17576:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "17564:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 88603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17564:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88604,
                  "nodeType": "ExpressionStatement",
                  "src": "17564:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88608,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88589,
                            "src": "17635:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88606,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "17617:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17625:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "17617:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17617:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17650:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a31",
                        "id": 88611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17653:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_390d178c3cb2b0e69d0f32099b1f7fb432a0b10e08892dd38dabd7ca51e06964",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::1\""
                        },
                        "value": "test_CollectProtocolFeesYTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_390d178c3cb2b0e69d0f32099b1f7fb432a0b10e08892dd38dabd7ca51e06964",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::1\""
                        }
                      ],
                      "id": 88605,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17608:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17608:82:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88613,
                  "nodeType": "ExpressionStatement",
                  "src": "17608:82:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88617,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88589,
                            "src": "17724:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88615,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "17709:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17714:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "17709:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17709:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88619,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88583,
                          "src": "17739:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17754:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "17739:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a32",
                        "id": 88622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17757:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c1162202fe1f779e75df792d1af48acac71f277e810baf688679197fe2027d0",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::2\""
                        },
                        "value": "test_CollectProtocolFeesYTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c1162202fe1f779e75df792d1af48acac71f277e810baf688679197fe2027d0",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::2\""
                        }
                      ],
                      "id": 88614,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17700:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17700:94:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88624,
                  "nodeType": "ExpressionStatement",
                  "src": "17700:94:128"
                },
                {
                  "expression": {
                    "id": 88631,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88625,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88581,
                          "src": "17806:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88626,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88583,
                          "src": "17820:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88627,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "17805:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88628,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "17836:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17848:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "17836:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 88630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17836:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "17805:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88632,
                  "nodeType": "ExpressionStatement",
                  "src": "17805:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88634,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88581,
                        "src": "17885:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17899:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a33",
                        "id": 88636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17902:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c5ac3c79b01f9502e1b6e6a8dfc04916fb310f529f04871496edce261ada419",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::3\""
                        },
                        "value": "test_CollectProtocolFeesYTokens::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c5ac3c79b01f9502e1b6e6a8dfc04916fb310f529f04871496edce261ada419",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::3\""
                        }
                      ],
                      "id": 88633,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17876:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17876:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88638,
                  "nodeType": "ExpressionStatement",
                  "src": "17876:63:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88640,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88583,
                        "src": "17958:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17972:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c4665657359546f6b656e733a3a34",
                        "id": 88642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17975:36:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2aaca0f1a7f8ce367e1c418375d63409d907759c74601dadd4e649bb550f5ed2",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::4\""
                        },
                        "value": "test_CollectProtocolFeesYTokens::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2aaca0f1a7f8ce367e1c418375d63409d907759c74601dadd4e649bb550f5ed2",
                          "typeString": "literal_string \"test_CollectProtocolFeesYTokens::4\""
                        }
                      ],
                      "id": 88639,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "17949:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17949:63:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88644,
                  "nodeType": "ExpressionStatement",
                  "src": "17949:63:128"
                }
              ]
            },
            "functionSelector": "257fbfef",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CollectProtocolFeesYTokens",
            "nameLocation": "16998:31:128",
            "parameters": {
              "id": 88513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17029:2:128"
            },
            "returnParameters": {
              "id": 88514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17041:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 88784,
            "nodeType": "FunctionDefinition",
            "src": "18025:1089:128",
            "nodes": [],
            "body": {
              "id": 88783,
              "nodeType": "Block",
              "src": "18080:1034:128",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    88651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88651,
                      "mutability": "mutable",
                      "name": "borrower",
                      "nameLocation": "18104:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88783,
                      "src": "18090:22:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                        "typeString": "contract FlashBorrower"
                      },
                      "typeName": {
                        "id": 88650,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88649,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "18090:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "18090:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "18090:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88657,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 88655,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "18133:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      ],
                      "id": 88654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "18115:17:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ILBPair_$69932_$returns$_t_contract$_FlashBorrower_$123680_$",
                        "typeString": "function (contract ILBPair) returns (contract FlashBorrower)"
                      },
                      "typeName": {
                        "id": 88653,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 88652,
                          "name": "FlashBorrower",
                          "nameLocations": [
                            "18119:13:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 123680,
                          "src": "18119:13:128"
                        },
                        "referencedDeclaration": 123680,
                        "src": "18119:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      }
                    },
                    "id": 88656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18115:30:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                      "typeString": "contract FlashBorrower"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18090:55:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88661,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "18169:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18161:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88659,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18161:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18161:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88665,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88651,
                            "src": "18187:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18179:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88663,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18179:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18179:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18198:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88658,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "18156:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88668,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18156:47:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88669,
                  "nodeType": "ExpressionStatement",
                  "src": "18156:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88673,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "18226:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88672,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18218:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88671,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18218:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18218:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88677,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88651,
                            "src": "18241:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18233:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88675,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18233:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88678,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18233:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653336",
                        "id": 88679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18252:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "value": "1e36"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 88670,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "18213:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18213:44:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88681,
                  "nodeType": "ExpressionStatement",
                  "src": "18213:44:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88687,
                            "name": "borrower",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88651,
                            "src": "18285:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                              "typeString": "contract FlashBorrower"
                            }
                          ],
                          "id": 88686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18277:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88685,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18277:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18277:17:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88682,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18268:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18271:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "18268:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18268:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88690,
                  "nodeType": "ExpressionStatement",
                  "src": "18268:27:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88694,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88651,
                        "src": "18340:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 88700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18368:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 88697,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "18358:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 88696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "18350:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint128_$",
                                "typeString": "type(uint128)"
                              },
                              "typeName": {
                                "id": 88695,
                                "name": "uint128",
                                "nodeType": "ElementaryTypeName",
                                "src": "18350:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 88698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18350:10:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "id": 88699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18361:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 76197,
                          "src": "18350:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint128_$_t_uint128_$returns$_t_bytes32_$attached_to$_t_uint128_$",
                            "typeString": "function (uint128,uint128) pure returns (bytes32)"
                          }
                        },
                        "id": 88701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18350:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            "id": 88706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31653138",
                              "id": 88704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18383:4:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 88705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18390:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "18383:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            "id": 88709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31653138",
                              "id": 88707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18393:4:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1e18"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 88708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18400:1:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "18393:8:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            }
                          },
                          {
                            "expression": {
                              "id": 88710,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 72438,
                              "src": "18403:9:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$72438_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 88711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "18413:16:128",
                            "memberName": "CALLBACK_SUCCESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72437,
                            "src": "18403:26:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 88712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18431:1:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            {
                              "typeIdentifier": "t_rational_1000000000000000001_by_1",
                              "typeString": "int_const 1000000000000000001"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 88702,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "18372:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 88703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "18376:6:128",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "18372:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 88713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18372:61:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FlashBorrower_$123680",
                          "typeString": "contract FlashBorrower"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 88691,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "18305:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18317:9:128",
                      "memberName": "flashLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60808,
                      "src": "18305:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ILBFlashLoanCallback_$68006_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (contract ILBFlashLoanCallback,bytes32,bytes memory) external"
                      }
                    },
                    "id": 88714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18305:138:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88715,
                  "nodeType": "ExpressionStatement",
                  "src": "18305:138:128"
                },
                {
                  "assignments": [
                    88717,
                    88719
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88717,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "18463:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88783,
                      "src": "18455:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88716,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18455:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88719,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "18485:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88783,
                      "src": "18477:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88718,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "18477:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88723,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88720,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "18501:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88721,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18513:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "18501:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18501:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18454:76:128"
                },
                {
                  "assignments": [
                    88725
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88725,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "18549:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 88783,
                      "src": "18541:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88724,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18541:7:128",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88729,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88726,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "18564:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 88727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18572:15:128",
                      "memberName": "getFeeRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57766,
                      "src": "18564:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 88728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18564:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18541:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88733,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88725,
                        "src": "18609:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88730,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "18600:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88732,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18603:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "18600:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88734,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18600:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88735,
                  "nodeType": "ExpressionStatement",
                  "src": "18600:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88736,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "18632:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88738,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18644:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "18632:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 88739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18632:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88740,
                  "nodeType": "ExpressionStatement",
                  "src": "18632:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88744,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88725,
                            "src": "18703:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88742,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "18685:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18693:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18685:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18685:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88746,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88717,
                          "src": "18718:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18733:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18718:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a31",
                        "id": 88749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18736:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74123f55ede7721c0d8b611a539c2f3722bb437a097700746cb23ae3fbb20078",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::1\""
                        },
                        "value": "test_CollectProtocolFeesBothTokens::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74123f55ede7721c0d8b611a539c2f3722bb437a097700746cb23ae3fbb20078",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::1\""
                        }
                      ],
                      "id": 88741,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18676:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18676:100:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88751,
                  "nodeType": "ExpressionStatement",
                  "src": "18676:100:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88755,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88725,
                            "src": "18810:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88753,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "18795:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "18800:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "18795:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18795:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88757,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88719,
                          "src": "18825:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "18840:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "18825:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a32",
                        "id": 88760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18843:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddb58adf74ac9d1f08b68d521f8b00898d0a21028bbeffc0110ed6e851013226",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::2\""
                        },
                        "value": "test_CollectProtocolFeesBothTokens::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ddb58adf74ac9d1f08b68d521f8b00898d0a21028bbeffc0110ed6e851013226",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::2\""
                        }
                      ],
                      "id": 88752,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18786:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18786:97:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88762,
                  "nodeType": "ExpressionStatement",
                  "src": "18786:97:128"
                },
                {
                  "expression": {
                    "id": 88769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88763,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88717,
                          "src": "18895:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88764,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88719,
                          "src": "18909:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88765,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "18894:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88766,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "18925:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18937:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "18925:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 88768,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18925:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "18894:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88770,
                  "nodeType": "ExpressionStatement",
                  "src": "18894:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88772,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88717,
                        "src": "18974:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18988:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a33",
                        "id": 88774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18991:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f9342316e534ff977a5c56612597df1056f060d89b55addff543a9087a80fe7",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::3\""
                        },
                        "value": "test_CollectProtocolFeesBothTokens::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f9342316e534ff977a5c56612597df1056f060d89b55addff543a9087a80fe7",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::3\""
                        }
                      ],
                      "id": 88771,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "18965:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18965:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88776,
                  "nodeType": "ExpressionStatement",
                  "src": "18965:66:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88778,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88719,
                        "src": "19050:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19064:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c46656573426f7468546f6b656e733a3a34",
                        "id": 88780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19067:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45e08a8b61cc3e06a4e90cf52ed8401816516bbec7c35ff14b430d8222261d9e",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::4\""
                        },
                        "value": "test_CollectProtocolFeesBothTokens::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45e08a8b61cc3e06a4e90cf52ed8401816516bbec7c35ff14b430d8222261d9e",
                          "typeString": "literal_string \"test_CollectProtocolFeesBothTokens::4\""
                        }
                      ],
                      "id": 88777,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19041:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19041:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88782,
                  "nodeType": "ExpressionStatement",
                  "src": "19041:66:128"
                }
              ]
            },
            "functionSelector": "45fc1e89",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CollectProtocolFeesBothTokens",
            "nameLocation": "18034:34:128",
            "parameters": {
              "id": 88647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18068:2:128"
            },
            "returnParameters": {
              "id": 88648,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18080:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89110,
            "nodeType": "FunctionDefinition",
            "src": "19120:3010:128",
            "nodes": [],
            "body": {
              "id": 89109,
              "nodeType": "Block",
              "src": "19174:2956:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88790,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "19197:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 88789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19189:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88788,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19189:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19189:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88794,
                            "name": "BOB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105076,
                            "src": "19215:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 88793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19207:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88792,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19207:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19207:12:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19221:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 88787,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "19184:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19184:42:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88798,
                  "nodeType": "ExpressionStatement",
                  "src": "19184:42:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88802,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "19246:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88799,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19237:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19240:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "19237:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19237:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88804,
                  "nodeType": "ExpressionStatement",
                  "src": "19237:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88810,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "19285:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19277:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19277:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19277:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19299:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 88805,
                        "name": "wnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105079,
                        "src": "19260:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_WNATIVE_$123990",
                          "typeString": "contract WNATIVE"
                        }
                      },
                      "id": 88807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19268:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "19260:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 88813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19260:44:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88814,
                  "nodeType": "ExpressionStatement",
                  "src": "19260:44:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 88818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19331:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "id": 88819,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "19337:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88815,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19314:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19326:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "19314:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 88820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19314:27:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88821,
                  "nodeType": "ExpressionStatement",
                  "src": "19314:27:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88822,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19351:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88824,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19363:10:128",
                      "memberName": "getBinStep",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59561,
                      "src": "19351:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint16_$",
                        "typeString": "function () view external returns (uint16)"
                      }
                    },
                    "id": 88825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19351:24:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 88826,
                  "nodeType": "ExpressionStatement",
                  "src": "19351:24:128"
                },
                {
                  "assignments": [
                    88828,
                    88830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88828,
                      "mutability": "mutable",
                      "name": "protocolFeeX",
                      "nameLocation": "19395:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19387:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88827,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19387:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88830,
                      "mutability": "mutable",
                      "name": "protocolFeeY",
                      "nameLocation": "19417:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19409:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88829,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19409:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88834,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88831,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19433:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19445:15:128",
                      "memberName": "getProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59655,
                      "src": "19433:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19433:29:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19386:76:128"
                },
                {
                  "assignments": [
                    88836
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88836,
                      "mutability": "mutable",
                      "name": "previousProtocolFeeX",
                      "nameLocation": "19480:20:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19472:28:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88835,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19472:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88838,
                  "initialValue": {
                    "id": 88837,
                    "name": "protocolFeeX",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88828,
                    "src": "19503:12:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19472:43:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88840,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88828,
                        "src": "19535:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19549:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a31",
                        "id": 88842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19552:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05dcfcea63f28408f4265e07505d23a06fcc3f1ed7d868a7c3d5c62d59fa4c22",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::1\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_05dcfcea63f28408f4265e07505d23a06fcc3f1ed7d868a7c3d5c62d59fa4c22",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::1\""
                        }
                      ],
                      "id": 88839,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "19526:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19526:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88844,
                  "nodeType": "ExpressionStatement",
                  "src": "19526:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88846,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88830,
                        "src": "19610:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19624:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a32",
                        "id": 88848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19627:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f3b26bfdf20bf317b5fcd04ebaaadcb4651727bd12d61ad09d5672887f4156b",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::2\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f3b26bfdf20bf317b5fcd04ebaaadcb4651727bd12d61ad09d5672887f4156b",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::2\""
                        }
                      ],
                      "id": 88845,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19601:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19601:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88850,
                  "nodeType": "ExpressionStatement",
                  "src": "19601:65:128"
                },
                {
                  "assignments": [
                    88852,
                    88854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88852,
                      "mutability": "mutable",
                      "name": "reserveX",
                      "nameLocation": "19686:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19678:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88851,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19678:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88854,
                      "mutability": "mutable",
                      "name": "reserveY",
                      "nameLocation": "19704:8:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19696:16:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88853,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19696:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88858,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88855,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19716:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19728:11:128",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59582,
                      "src": "19716:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88857,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19716:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19677:64:128"
                },
                {
                  "assignments": [
                    88860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88860,
                      "mutability": "mutable",
                      "name": "feeRecipient",
                      "nameLocation": "19760:12:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19752:20:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 88859,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19752:7:128",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88864,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88861,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105103,
                        "src": "19775:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBFactory_$59243",
                          "typeString": "contract LBFactory"
                        }
                      },
                      "id": 88862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19783:15:128",
                      "memberName": "getFeeRecipient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57766,
                      "src": "19775:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 88863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19775:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19752:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88868,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88860,
                        "src": "19820:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 88865,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "19811:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19814:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "19811:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19811:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88870,
                  "nodeType": "ExpressionStatement",
                  "src": "19811:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88871,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19843:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19855:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "19843:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 88874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19843:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88875,
                  "nodeType": "ExpressionStatement",
                  "src": "19843:33:128"
                },
                {
                  "assignments": [
                    88877,
                    88879
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88877,
                      "mutability": "mutable",
                      "name": "reserveXAfter",
                      "nameLocation": "19896:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19888:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88876,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19888:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 88879,
                      "mutability": "mutable",
                      "name": "reserveYAfter",
                      "nameLocation": "19919:13:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "19911:21:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88878,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "19911:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88883,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 88880,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "19936:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19948:11:128",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59582,
                      "src": "19936:23:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                        "typeString": "function () view external returns (uint128,uint128)"
                      }
                    },
                    "id": 88882,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19936:25:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                      "typeString": "tuple(uint128,uint128)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19887:74:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88885,
                        "name": "reserveXAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88877,
                        "src": "19981:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 88886,
                        "name": "reserveX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88852,
                        "src": "19996:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a33",
                        "id": 88887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20006:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8e6cd5b4b8cd892dce97fe495587714ea5bffd8b0b4c5ccbe604ff96892483c",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::3\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8e6cd5b4b8cd892dce97fe495587714ea5bffd8b0b4c5ccbe604ff96892483c",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::3\""
                        }
                      ],
                      "id": 88884,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "19972:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19972:73:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88889,
                  "nodeType": "ExpressionStatement",
                  "src": "19972:73:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88891,
                        "name": "reserveYAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88879,
                        "src": "20064:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 88892,
                        "name": "reserveY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88854,
                        "src": "20079:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a34",
                        "id": 88893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20089:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cac3b962d481b691d8b75681971f467b1cf0fdd29d35c4e475543e5b23b6abfa",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::4\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::4"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cac3b962d481b691d8b75681971f467b1cf0fdd29d35c4e475543e5b23b6abfa",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::4\""
                        }
                      ],
                      "id": 88890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20055:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20055:73:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88895,
                  "nodeType": "ExpressionStatement",
                  "src": "20055:73:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88899,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "20166:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88897,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "20148:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 88898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20156:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20148:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20148:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 88903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 88901,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88828,
                          "src": "20181:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 88902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20196:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "20181:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a35",
                        "id": 88904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20199:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c950eb929b4996305151aa762aaf3ab98ce1901529530feca1494f27dcf4712a",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::5\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c950eb929b4996305151aa762aaf3ab98ce1901529530feca1494f27dcf4712a",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::5\""
                        }
                      ],
                      "id": 88896,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20139:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20139:99:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88906,
                  "nodeType": "ExpressionStatement",
                  "src": "20139:99:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88910,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "20272:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 88908,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "20257:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 88909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "20262:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "20257:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 88911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20257:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20287:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a36",
                        "id": 88913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20290:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_43c053e787c596dfedcc4f54efda9a75ef425438981ea500d8ef88ec04a6d8df",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::6\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::6"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_43c053e787c596dfedcc4f54efda9a75ef425438981ea500d8ef88ec04a6d8df",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::6\""
                        }
                      ],
                      "id": 88907,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20248:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20248:81:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88915,
                  "nodeType": "ExpressionStatement",
                  "src": "20248:81:128"
                },
                {
                  "expression": {
                    "id": 88922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88916,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88828,
                          "src": "20341:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88917,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88830,
                          "src": "20355:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88918,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "20340:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88919,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "20371:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20383:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "20371:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 88921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20371:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "20340:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88923,
                  "nodeType": "ExpressionStatement",
                  "src": "20340:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88925,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88828,
                        "src": "20420:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20434:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a37",
                        "id": 88927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20437:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2ce34871262c63afed70f74cbae8ca67d19be1b65d7b132af7562b7a3d674c3",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::7\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::7"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2ce34871262c63afed70f74cbae8ca67d19be1b65d7b132af7562b7a3d674c3",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::7\""
                        }
                      ],
                      "id": 88924,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20411:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20411:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88929,
                  "nodeType": "ExpressionStatement",
                  "src": "20411:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88931,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88830,
                        "src": "20495:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20509:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a38",
                        "id": 88933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20512:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_88c0c9473b67892f2cbff876c3459d6b185cf3052069d995261b4e7f01dc4a2f",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::8\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::8"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_88c0c9473b67892f2cbff876c3459d6b185cf3052069d995261b4e7f01dc4a2f",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::8\""
                        }
                      ],
                      "id": 88930,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20486:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20486:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88935,
                  "nodeType": "ExpressionStatement",
                  "src": "20486:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88939,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "20575:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 88938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20567:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88937,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20567:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20567:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 88943,
                            "name": "BOB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105076,
                            "src": "20590:3:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 88942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20582:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88941,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20582:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20582:12:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20596:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 88936,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5916,
                        5933,
                        6056
                      ],
                      "referencedDeclaration": 5933,
                      "src": "20562:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 88946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20562:39:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88947,
                  "nodeType": "ExpressionStatement",
                  "src": "20562:39:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88951,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "20621:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88948,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "20612:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 88950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20615:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "20612:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 88952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20612:13:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88953,
                  "nodeType": "ExpressionStatement",
                  "src": "20612:13:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 88959,
                            "name": "pairWnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105112,
                            "src": "20657:11:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 88958,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "20649:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 88957,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "20649:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 88960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20649:20:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653138",
                        "id": 88961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20671:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1e18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 88954,
                        "name": "usdc",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105082,
                        "src": "20635:4:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                          "typeString": "contract ERC20Mock"
                        }
                      },
                      "id": 88956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20640:8:128",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41820,
                      "src": "20635:13:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 88962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20635:41:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 88963,
                  "nodeType": "ExpressionStatement",
                  "src": "20635:41:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 88967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20703:5:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 88968,
                        "name": "BOB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105076,
                        "src": "20710:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 88964,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "20686:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 88966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20698:4:128",
                      "memberName": "swap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60625,
                      "src": "20686:16:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (bool,address) external returns (bytes32)"
                      }
                    },
                    "id": 88969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20686:28:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 88970,
                  "nodeType": "ExpressionStatement",
                  "src": "20686:28:128"
                },
                {
                  "expression": {
                    "id": 88977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88971,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88828,
                          "src": "20726:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88972,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88830,
                          "src": "20740:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88973,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "20725:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88974,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "20756:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "20768:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "20756:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 88976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20756:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "20725:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88978,
                  "nodeType": "ExpressionStatement",
                  "src": "20725:60:128"
                },
                {
                  "assignments": [
                    88980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88980,
                      "mutability": "mutable",
                      "name": "previousProtocolFeeY",
                      "nameLocation": "20803:20:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89109,
                      "src": "20795:28:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 88979,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "20795:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 88982,
                  "initialValue": {
                    "id": 88981,
                    "name": "protocolFeeY",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 88830,
                    "src": "20826:12:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint128",
                      "typeString": "uint128"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20795:43:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88984,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88828,
                        "src": "20858:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 88985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20872:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a39",
                        "id": 88986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20875:38:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4496a944a2e7462d3eb007929bd0a997eae9b4aac905f58ed2f1bd28d1e65492",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::9\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::9"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4496a944a2e7462d3eb007929bd0a997eae9b4aac905f58ed2f1bd28d1e65492",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::9\""
                        }
                      ],
                      "id": 88983,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "20849:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20849:65:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88988,
                  "nodeType": "ExpressionStatement",
                  "src": "20849:65:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 88990,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88830,
                        "src": "20933:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 88991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20947:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3130",
                        "id": 88992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20950:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e7ff32e4dab34e0d6c9c3861deff50dbde56060e48747acf56c4a29abad4556",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::10\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e7ff32e4dab34e0d6c9c3861deff50dbde56060e48747acf56c4a29abad4556",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::10\""
                        }
                      ],
                      "id": 88989,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1734,
                        1752,
                        1806,
                        1824
                      ],
                      "referencedDeclaration": 1752,
                      "src": "20924:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 88993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20924:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88994,
                  "nodeType": "ExpressionStatement",
                  "src": "20924:66:128"
                },
                {
                  "expression": {
                    "id": 89001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 88995,
                          "name": "reserveX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88852,
                          "src": "21002:8:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 88996,
                          "name": "reserveY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88854,
                          "src": "21012:8:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 88997,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "21001:20:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 88998,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "21024:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 88999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21036:11:128",
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59582,
                        "src": "21024:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21024:25:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "21001:48:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89002,
                  "nodeType": "ExpressionStatement",
                  "src": "21001:48:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89006,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88860,
                        "src": "21069:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89003,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21060:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21063:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "21060:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21060:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89008,
                  "nodeType": "ExpressionStatement",
                  "src": "21060:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89009,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "21092:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 89011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21104:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "21092:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 89012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21092:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 89013,
                  "nodeType": "ExpressionStatement",
                  "src": "21092:33:128"
                },
                {
                  "expression": {
                    "id": 89020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 89014,
                          "name": "reserveXAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88877,
                          "src": "21137:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 89015,
                          "name": "reserveYAfter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88879,
                          "src": "21152:13:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 89016,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "21136:30:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89017,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "21169:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 89018,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21181:11:128",
                        "memberName": "getReserves",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59582,
                        "src": "21169:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89019,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21169:25:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "21136:58:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89021,
                  "nodeType": "ExpressionStatement",
                  "src": "21136:58:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89023,
                        "name": "reserveXAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88877,
                        "src": "21214:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 89024,
                        "name": "reserveX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88852,
                        "src": "21229:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3131",
                        "id": 89025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21239:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0a20c482c8d7eec791eb21c9627b155efa7d915a32b6b49acbd559a54f093ed",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::11\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::11"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0a20c482c8d7eec791eb21c9627b155efa7d915a32b6b49acbd559a54f093ed",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::11\""
                        }
                      ],
                      "id": 89022,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21205:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21205:74:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89027,
                  "nodeType": "ExpressionStatement",
                  "src": "21205:74:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89029,
                        "name": "reserveYAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88879,
                        "src": "21298:13:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 89030,
                        "name": "reserveY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88854,
                        "src": "21313:8:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3132",
                        "id": 89031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21323:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6d4fad16d5e5a2e0d1e31f001b2e9165cadb15c0ef83fd47a503e099f40b7db",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::12\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::12"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6d4fad16d5e5a2e0d1e31f001b2e9165cadb15c0ef83fd47a503e099f40b7db",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::12\""
                        }
                      ],
                      "id": 89028,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21289:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21289:74:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89033,
                  "nodeType": "ExpressionStatement",
                  "src": "21289:74:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89037,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "21401:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89035,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "21383:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 89036,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21391:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "21383:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21383:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 89041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89039,
                          "name": "previousProtocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88836,
                          "src": "21416:20:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 89040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21439:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "21416:24:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3133",
                        "id": 89042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21442:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4f021788e03faca80ae42d0b50332dd9fdaa56ad1b37d5fb2ca9f67b122f7b38",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::13\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::13"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4f021788e03faca80ae42d0b50332dd9fdaa56ad1b37d5fb2ca9f67b122f7b38",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::13\""
                        }
                      ],
                      "id": 89034,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21374:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21374:108:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89044,
                  "nodeType": "ExpressionStatement",
                  "src": "21374:108:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89048,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "21516:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89046,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "21501:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 89047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21506:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "21501:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21501:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 89052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89050,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88830,
                          "src": "21531:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 89051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21546:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "21531:16:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3134",
                        "id": 89053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21549:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3823d11b3fe5c8cecd1c28177ccc9e68021d4d4826b38e29f6a513dd1fc10f10",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::14\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::14"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3823d11b3fe5c8cecd1c28177ccc9e68021d4d4826b38e29f6a513dd1fc10f10",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::14\""
                        }
                      ],
                      "id": 89045,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21492:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21492:97:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89055,
                  "nodeType": "ExpressionStatement",
                  "src": "21492:97:128"
                },
                {
                  "expression": {
                    "id": 89062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 89056,
                          "name": "protocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88828,
                          "src": "21601:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "id": 89057,
                          "name": "protocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88830,
                          "src": "21615:12:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "id": 89058,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "21600:28:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 89059,
                          "name": "pairWnative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 105112,
                          "src": "21631:11:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LBPair_$62123",
                            "typeString": "contract LBPair"
                          }
                        },
                        "id": 89060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "21643:15:128",
                        "memberName": "getProtocolFees",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 59655,
                        "src": "21631:27:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint128_$",
                          "typeString": "function () view external returns (uint128,uint128)"
                        }
                      },
                      "id": 89061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "21631:29:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint128_$_t_uint128_$",
                        "typeString": "tuple(uint128,uint128)"
                      }
                    },
                    "src": "21600:60:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89063,
                  "nodeType": "ExpressionStatement",
                  "src": "21600:60:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89065,
                        "name": "protocolFeeX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88828,
                        "src": "21680:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21694:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3135",
                        "id": 89067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21697:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffc7164900730f496c1457f1e3b031db6d7ca5f6764a805a342a27a4d130e74e",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::15\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::15"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffc7164900730f496c1457f1e3b031db6d7ca5f6764a805a342a27a4d130e74e",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::15\""
                        }
                      ],
                      "id": 89064,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21671:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21671:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89069,
                  "nodeType": "ExpressionStatement",
                  "src": "21671:66:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89071,
                        "name": "protocolFeeY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88830,
                        "src": "21756:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21770:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3136",
                        "id": 89073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21773:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6eb1b52449f48cf2f62fd7acc9b67da201772756efb3891169be2020306bc96d",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::16\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::16"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6eb1b52449f48cf2f62fd7acc9b67da201772756efb3891169be2020306bc96d",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::16\""
                        }
                      ],
                      "id": 89070,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21747:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21747:66:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89075,
                  "nodeType": "ExpressionStatement",
                  "src": "21747:66:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89079,
                        "name": "feeRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88860,
                        "src": "21833:12:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89076,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "21824:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89078,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21827:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "21824:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21824:22:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89081,
                  "nodeType": "ExpressionStatement",
                  "src": "21824:22:128"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 89082,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "21856:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 89084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "21868:19:128",
                      "memberName": "collectProtocolFees",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61290,
                      "src": "21856:31:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bytes32_$",
                        "typeString": "function () external returns (bytes32)"
                      }
                    },
                    "id": 89085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21856:33:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 89086,
                  "nodeType": "ExpressionStatement",
                  "src": "21856:33:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89090,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "21927:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89088,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "21909:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          },
                          "id": 89089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "21917:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "21909:17:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21909:31:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 89094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89092,
                          "name": "previousProtocolFeeX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88836,
                          "src": "21942:20:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 89093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "21965:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "21942:24:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3137",
                        "id": 89095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21968:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a127ac715d4bb2b38bd245dd313490e5b84fc96eeb16c9adb07cdab4ad29db7",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::17\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::17"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a127ac715d4bb2b38bd245dd313490e5b84fc96eeb16c9adb07cdab4ad29db7",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::17\""
                        }
                      ],
                      "id": 89087,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "21900:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21900:108:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89097,
                  "nodeType": "ExpressionStatement",
                  "src": "21900:108:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89101,
                            "name": "feeRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 88860,
                            "src": "22042:12:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 89099,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "22027:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          },
                          "id": 89100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "22032:9:128",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41796,
                          "src": "22027:14:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 89102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22027:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 89105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89103,
                          "name": "previousProtocolFeeY",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 88980,
                          "src": "22057:20:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 89104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22080:1:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "22057:24:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "746573745f436f6c6c65637450726f746f636f6c466565734166746572537761703a3a3138",
                        "id": 89106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22083:39:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7c9e2b16882aaf9a82fdb70ef614a59a7ef01a45e569e18d7265a0a975c0bdc",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::18\""
                        },
                        "value": "test_CollectProtocolFeesAfterSwap::18"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c7c9e2b16882aaf9a82fdb70ef614a59a7ef01a45e569e18d7265a0a975c0bdc",
                          "typeString": "literal_string \"test_CollectProtocolFeesAfterSwap::18\""
                        }
                      ],
                      "id": 89098,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        383,
                        401,
                        416,
                        434,
                        488,
                        506,
                        560,
                        578,
                        593,
                        611,
                        655,
                        673,
                        688,
                        706,
                        723,
                        743,
                        760,
                        780,
                        797,
                        817,
                        834,
                        854,
                        871,
                        891,
                        908,
                        928,
                        945,
                        965
                      ],
                      "referencedDeclaration": 434,
                      "src": "22018:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory) pure"
                      }
                    },
                    "id": 89107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22018:105:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89108,
                  "nodeType": "ExpressionStatement",
                  "src": "22018:105:128"
                }
              ]
            },
            "functionSelector": "4ab64e48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_CollectProtocolFeesAfterSwap",
            "nameLocation": "19129:33:128",
            "parameters": {
              "id": 88785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19162:2:128"
            },
            "returnParameters": {
              "id": 88786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19174:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 89284,
            "nodeType": "FunctionDefinition",
            "src": "22136:1219:128",
            "nodes": [],
            "body": {
              "id": 89283,
              "nodeType": "Block",
              "src": "22316:1039:128",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 89124,
                          "name": "maxVolatilityAccumulator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 89118,
                          "src": "22336:24:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 89125,
                            "name": "Encoded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 75993,
                            "src": "22364:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Encoded_$75993_$",
                              "typeString": "type(library Encoded)"
                            }
                          },
                          "id": 89126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "22372:11:128",
                          "memberName": "MASK_UINT20",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 75807,
                          "src": "22364:19:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "22336:47:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89121,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "22326:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89123,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22329:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "22326:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 89128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22326:58:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89129,
                  "nodeType": "ExpressionStatement",
                  "src": "22326:58:128"
                },
                {
                  "assignments": [
                    89131
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89131,
                      "mutability": "mutable",
                      "name": "baseFee",
                      "nameLocation": "22403:7:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89283,
                      "src": "22395:15:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89130,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22395:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89140,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 89137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 89134,
                            "name": "baseFactor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89114,
                            "src": "22421:10:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          ],
                          "id": 89133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22413:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 89132,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "22413:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22413:19:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 89136,
                        "name": "binStep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89112,
                        "src": "22435:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "src": "22413:29:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "31653130",
                      "id": 89138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22445:4:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000_by_1",
                        "typeString": "int_const 10000000000"
                      },
                      "value": "1e10"
                    },
                    "src": "22413:36:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22395:54:128"
                },
                {
                  "assignments": [
                    89142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89142,
                      "mutability": "mutable",
                      "name": "varFee",
                      "nameLocation": "22467:6:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89283,
                      "src": "22459:14:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 89141,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "22459:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89159,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 89158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 89153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 89151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 89148,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 89145,
                                          "name": "binStep",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 89112,
                                          "src": "22486:7:128",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint16",
                                            "typeString": "uint16"
                                          }
                                        ],
                                        "id": 89144,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "22478:7:128",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 89143,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "22478:7:128",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 89146,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "22478:16:128",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 89147,
                                      "name": "maxVolatilityAccumulator",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 89118,
                                      "src": "22497:24:128",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint24",
                                        "typeString": "uint24"
                                      }
                                    },
                                    "src": "22478:43:128",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 89149,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "22477:45:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 89150,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "22526:1:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "22477:50:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 89152,
                              "name": "variableFeeControl",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89116,
                              "src": "22530:18:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            "src": "22477:71:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "3939",
                            "id": 89154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22551:2:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_99_by_1",
                              "typeString": "int_const 99"
                            },
                            "value": "99"
                          },
                          "src": "22477:76:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 89156,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "22476:78:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 89157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22557:3:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "22476:84:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22459:101:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 89167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 89165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 89163,
                            "name": "baseFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89131,
                            "src": "22581:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 89164,
                            "name": "varFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89142,
                            "src": "22591:6:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "22581:16:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "31653137",
                          "id": 89166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22600:4:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "1e17"
                        },
                        "src": "22581:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 89160,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "22571:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "22574:6:128",
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14919,
                      "src": "22571:9:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 89168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22571:34:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89169,
                  "nodeType": "ExpressionStatement",
                  "src": "22571:34:128"
                },
                {
                  "assignments": [
                    89172
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89172,
                      "mutability": "mutable",
                      "name": "lbPairImplementation",
                      "nameLocation": "22623:20:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89283,
                      "src": "22616:27:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      },
                      "typeName": {
                        "id": 89171,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89170,
                          "name": "LBPair",
                          "nameLocations": [
                            "22616:6:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62123,
                          "src": "22616:6:128"
                        },
                        "referencedDeclaration": 62123,
                        "src": "22616:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89183,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 89179,
                                "name": "factory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 105103,
                                "src": "22676:7:128",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LBFactory_$59243",
                                  "typeString": "contract LBFactory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_LBFactory_$59243",
                                  "typeString": "contract LBFactory"
                                }
                              ],
                              "id": 89178,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "22668:7:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 89177,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "22668:7:128",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 89180,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22668:16:128",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 89176,
                          "name": "ILBFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67981,
                          "src": "22657:10:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILBFactory_$67981_$",
                            "typeString": "type(contract ILBFactory)"
                          }
                        },
                        "id": 89181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22657:28:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILBFactory_$67981",
                          "typeString": "contract ILBFactory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILBFactory_$67981",
                          "typeString": "contract ILBFactory"
                        }
                      ],
                      "id": 89175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22646:10:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ILBFactory_$67981_$returns$_t_contract$_LBPair_$62123_$",
                        "typeString": "function (contract ILBFactory) returns (contract LBPair)"
                      },
                      "typeName": {
                        "id": 89174,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89173,
                          "name": "LBPair",
                          "nameLocations": [
                            "22650:6:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62123,
                          "src": "22650:6:128"
                        },
                        "referencedDeclaration": 62123,
                        "src": "22650:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      }
                    },
                    "id": 89182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22646:40:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPair_$62123",
                      "typeString": "contract LBPair"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22616:70:128"
                },
                {
                  "assignments": [
                    89186
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89186,
                      "mutability": "mutable",
                      "name": "lbPairUpgradeableBeacon",
                      "nameLocation": "22720:23:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89283,
                      "src": "22696:47:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                        "typeString": "contract LBPairUpgradeableBeacon"
                      },
                      "typeName": {
                        "id": 89185,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89184,
                          "name": "LBPairUpgradeableBeacon",
                          "nameLocations": [
                            "22696:23:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62426,
                          "src": "22696:23:128"
                        },
                        "referencedDeclaration": 62426,
                        "src": "22696:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                          "typeString": "contract LBPairUpgradeableBeacon"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89200,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89192,
                            "name": "lbPairImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89172,
                            "src": "22782:20:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPair_$62123",
                              "typeString": "contract LBPair"
                            }
                          ],
                          "id": 89191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22774:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89190,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22774:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22774:29:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89194,
                        "name": "DEV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105060,
                        "src": "22805:3:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89197,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105103,
                            "src": "22818:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          ],
                          "id": 89196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22810:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22810:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22810:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 89189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22746:27:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$_t_address_$returns$_t_contract$_LBPairUpgradeableBeacon_$62426_$",
                        "typeString": "function (address,address,address) returns (contract LBPairUpgradeableBeacon)"
                      },
                      "typeName": {
                        "id": 89188,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89187,
                          "name": "LBPairUpgradeableBeacon",
                          "nameLocations": [
                            "22750:23:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62426,
                          "src": "22750:23:128"
                        },
                        "referencedDeclaration": 62426,
                        "src": "22750:23:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                          "typeString": "contract LBPairUpgradeableBeacon"
                        }
                      }
                    },
                    "id": 89199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22746:81:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                      "typeString": "contract LBPairUpgradeableBeacon"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22696:131:128"
                },
                {
                  "assignments": [
                    89203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 89203,
                      "mutability": "mutable",
                      "name": "lbDexBeaconProxy",
                      "nameLocation": "22855:16:128",
                      "nodeType": "VariableDeclaration",
                      "scope": 89283,
                      "src": "22837:34:128",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                        "typeString": "contract LBPairBeaconProxy"
                      },
                      "typeName": {
                        "id": 89202,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89201,
                          "name": "LBPairBeaconProxy",
                          "nameLocations": [
                            "22837:17:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62222,
                          "src": "22837:17:128"
                        },
                        "referencedDeclaration": 62222,
                        "src": "22837:17:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                          "typeString": "contract LBPairBeaconProxy"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 89222,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89209,
                            "name": "lbPairUpgradeableBeacon",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 89186,
                            "src": "22904:23:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                              "typeString": "contract LBPairUpgradeableBeacon"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBPairUpgradeableBeacon_$62426",
                              "typeString": "contract LBPairUpgradeableBeacon"
                            }
                          ],
                          "id": 89208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22896:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89207,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22896:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22896:32:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89213,
                            "name": "wnative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105079,
                            "src": "22938:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_WNATIVE_$123990",
                              "typeString": "contract WNATIVE"
                            }
                          ],
                          "id": 89212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22930:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89211,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22930:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22930:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 89217,
                            "name": "usdc",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105082,
                            "src": "22956:4:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mock_$122897",
                              "typeString": "contract ERC20Mock"
                            }
                          ],
                          "id": 89216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "22948:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "22948:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22948:13:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 89219,
                        "name": "binStep",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89112,
                        "src": "22963:7:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 89220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22972:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 89206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22874:21:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_address_$_t_address_$_t_address_$_t_uint16_$_t_bytes_memory_ptr_$returns$_t_contract$_LBPairBeaconProxy_$62222_$",
                        "typeString": "function (address,address,address,uint16,bytes memory) payable returns (contract LBPairBeaconProxy)"
                      },
                      "typeName": {
                        "id": 89205,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 89204,
                          "name": "LBPairBeaconProxy",
                          "nameLocations": [
                            "22878:17:128"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 62222,
                          "src": "22878:17:128"
                        },
                        "referencedDeclaration": 62222,
                        "src": "22878:17:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                          "typeString": "contract LBPairBeaconProxy"
                        }
                      }
                    },
                    "id": 89221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22874:101:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                      "typeString": "contract LBPairBeaconProxy"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22837:138:128"
                },
                {
                  "expression": {
                    "id": 89230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89223,
                      "name": "pairWnative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105112,
                      "src": "22986:11:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 89227,
                              "name": "lbDexBeaconProxy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 89203,
                              "src": "23015:16:128",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                                "typeString": "contract LBPairBeaconProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LBPairBeaconProxy_$62222",
                                "typeString": "contract LBPairBeaconProxy"
                              }
                            ],
                            "id": 89226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23007:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 89225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23007:7:128",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 89228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23007:25:128",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 89224,
                        "name": "LBPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 62123,
                        "src": "23000:6:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LBPair_$62123_$",
                          "typeString": "type(contract LBPair)"
                        }
                      },
                      "id": 89229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23000:33:128",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LBPair_$62123",
                        "typeString": "contract LBPair"
                      }
                    },
                    "src": "22986:47:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LBPair_$62123",
                      "typeString": "contract LBPair"
                    }
                  },
                  "id": 89231,
                  "nodeType": "ExpressionStatement",
                  "src": "22986:47:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89237,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105103,
                            "src": "23061:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          ],
                          "id": 89236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23053:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89235,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23053:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23053:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89232,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "23044:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23047:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "23044:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23044:26:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89240,
                  "nodeType": "ExpressionStatement",
                  "src": "23044:26:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 89244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23103:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23106:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23109:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23112:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23115:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23118:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23121:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23124:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "id": 89241,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "23080:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 89243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23092:10:128",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 59491,
                      "src": "23080:22:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint24_$_t_uint16_$_t_uint24_$_t_uint24_$returns$__$",
                        "typeString": "function (uint16,uint16,uint16,uint16,uint24,uint16,uint24,uint24) external"
                      }
                    },
                    "id": 89252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23080:46:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89253,
                  "nodeType": "ExpressionStatement",
                  "src": "23080:46:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 89257,
                            "name": "ILBPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69932,
                            "src": "23153:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILBPair_$69932_$",
                              "typeString": "type(contract ILBPair)"
                            }
                          },
                          "id": 89258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "23161:27:128",
                          "memberName": "LBPair__MaxTotalFeeExceeded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 69543,
                          "src": "23153:35:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_error_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 89259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "23189:8:128",
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "23153:44:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 89254,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "23137:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23140:12:128",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15956,
                      "src": "23137:15:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4) external"
                      }
                    },
                    "id": 89260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23137:61:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89261,
                  "nodeType": "ExpressionStatement",
                  "src": "23137:61:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 89267,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 105103,
                            "src": "23225:7:128",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LBFactory_$59243",
                              "typeString": "contract LBFactory"
                            }
                          ],
                          "id": 89266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23217:7:128",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 89265,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23217:7:128",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 89268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23217:16:128",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 89262,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "23208:2:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15989",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 89264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23211:5:128",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15636,
                      "src": "23208:8:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 89269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23208:26:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89270,
                  "nodeType": "ExpressionStatement",
                  "src": "23208:26:128"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 89274,
                        "name": "baseFactor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89114,
                        "src": "23279:10:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23291:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23294:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 89277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23297:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 89278,
                        "name": "variableFeeControl",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89116,
                        "src": "23300:18:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 89279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23320:1:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 89280,
                        "name": "maxVolatilityAccumulator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89118,
                        "src": "23323:24:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "expression": {
                        "id": 89271,
                        "name": "pairWnative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 105112,
                        "src": "23244:11:128",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LBPair_$62123",
                          "typeString": "contract LBPair"
                        }
                      },
                      "id": 89273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "23256:22:128",
                      "memberName": "setStaticFeeParameters",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61374,
                      "src": "23244:34:128",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint24_$_t_uint16_$_t_uint24_$returns$__$",
                        "typeString": "function (uint16,uint16,uint16,uint16,uint24,uint16,uint24) external"
                      }
                    },
                    "id": 89281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23244:104:128",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 89282,
                  "nodeType": "ExpressionStatement",
                  "src": "23244:104:128"
                }
              ]
            },
            "functionSelector": "d7f975b4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_revert_TotalFeeExceeded",
            "nameLocation": "22145:28:128",
            "parameters": {
              "id": 89119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 89112,
                  "mutability": "mutable",
                  "name": "binStep",
                  "nameLocation": "22190:7:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 89284,
                  "src": "22183:14:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 89111,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "22183:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89114,
                  "mutability": "mutable",
                  "name": "baseFactor",
                  "nameLocation": "22214:10:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 89284,
                  "src": "22207:17:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 89113,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "22207:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89116,
                  "mutability": "mutable",
                  "name": "variableFeeControl",
                  "nameLocation": "22241:18:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 89284,
                  "src": "22234:25:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 89115,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "22234:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89118,
                  "mutability": "mutable",
                  "name": "maxVolatilityAccumulator",
                  "nameLocation": "22276:24:128",
                  "nodeType": "VariableDeclaration",
                  "scope": 89284,
                  "src": "22269:31:128",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 89117,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "22269:6:128",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22173:133:128"
            },
            "returnParameters": {
              "id": 89120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22316:0:128"
            },
            "scope": 89285,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 86255,
              "name": "TestHelper",
              "nameLocations": [
                "169:10:128"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 106622,
              "src": "169:10:128"
            },
            "id": 86256,
            "nodeType": "InheritanceSpecifier",
            "src": "169:10:128"
          }
        ],
        "canonicalName": "LBPairFeesTest",
        "contractDependencies": [
          41441,
          59243,
          62123,
          62222,
          62426,
          63714,
          66964,
          122897,
          122951,
          123680,
          123990
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          89285,
          106622,
          12146,
          12094,
          6774,
          6414,
          5621,
          3561,
          2734,
          65,
          62
        ],
        "name": "LBPairFeesTest",
        "nameLocation": "151:14:128",
        "scope": 89286,
        "usedErrors": [
          76568,
          76578,
          78857
        ],
        "usedEvents": [
          139,
          143,
          147,
          151,
          155,
          159,
          163,
          167,
          173,
          179,
          187,
          195,
          201,
          207,
          213,
          219,
          224,
          229,
          234,
          241,
          248,
          255,
          7556,
          7562
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 128
}