{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_nativePerRequest",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "addFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "faucetTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "ERC20",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amountPerRequest",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfFaucetTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "setAmountPerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "name": "setRequestCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_unlockedRequest",
          "type": "bool"
        }
      ],
      "name": "setUnlockedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockedRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526040516200154d3803806200154d83398101604081905262000026916200023c565b826001600160a01b0381166200005757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000062816200009f565b506200006e81620000bd565b60408051808201909152600081526001600160601b0383166020820152620000969062000116565b5050506200029a565b600180546001600160a01b0319169055620000ba81620001ec565b50565b610e10811015620001115760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016200004e565b600355565b80516001600160a01b0316600090815260076020526040902054156200017f5760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016200004e565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200025257600080fd5b83516001600160a01b03811681146200026a57600080fd5b60208501519093506001600160601b03811681146200028857600080fd5b80925050604084015190509250925092565b6112a380620002aa6000396000f3fe6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea2646970667358221220262eb5cc4f92de832591ab4cbb1d0eb1d8c2bccab32a99cec33fb0333274640f64736f6c63430008140033",
    "sourceMap": "675:7958:166:-:0;;;2095:294;;;;;;;;;;;;;;;;;;:::i;:::-;2213:12;-1:-1:-1;;;;;1273:26:32;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:32;;1350:1;1322:31;;;689:51:170;662:18;;1322:31:32;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2241:37:166::1;2261:16:::0;2241:19:::1;:37::i;:::-;2304:77;::::0;;;;::::1;::::0;;;-1:-1:-1;2304:77:166;;-1:-1:-1;;;;;2304:77:166;::::1;;::::0;::::1;::::0;2288:94:::1;::::0;:15:::1;:94::i;:::-;2095:294:::0;;;675:7958;;1886:153:33;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:33;;;1998:34;2023:8;1998:24;:34::i;:::-;1886:153;:::o;7629:188:166:-;7730:7;7710:16;:27;;7702:63;;;;-1:-1:-1;;;7702:63:166;;953:2:170;7702:63:166;;;935:21:170;992:2;972:18;;;965:30;1031:25;1011:18;;;1004:53;1074:18;;7702:63:166;751:347:170;7702:63:166;7776:15;:34;7629:188::o;7194:241::-;7287:12;;-1:-1:-1;;;;;7272:28:166;;;;;:14;:28;;;;;;:33;7264:68;;;;-1:-1:-1;;;7264:68:166;;1305:2:170;7264:68:166;;;1287:21:170;1344:2;1324:18;;;1317:30;1383:24;1363:18;;;1356:52;1425:18;;7264:68:166;1103:346:170;7264:68:166;7343:12;:25;;;;;;;-1:-1:-1;7343:25:166;;;;;;;;;;-1:-1:-1;;;;;7343:25:166;-1:-1:-1;;;7343:25:166;-1:-1:-1;;;;;7343:25:166;;;;;;;;;;;;;;7409:19;;7378:28;;;:14;:28;;;;;;:50;7194:241::o;2912:187:32:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:32;;;-1:-1:-1;;;;;;3020:17:32;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:524:170:-;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;212:16;;-1:-1:-1;;;;;257:31:170;;247:42;;237:70;;303:1;300;293:12;237:70;376:2;361:18;;355:25;326:5;;-1:-1:-1;;;;;;411:32:170;;399:45;;389:73;;458:1;455;448:12;389:73;481:7;471:17;;;528:2;517:9;513:18;507:25;497:35;;14:524;;;;;:::o;1103:346::-;675:7958:166;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea2646970667358221220262eb5cc4f92de832591ab4cbb1d0eb1d8c2bccab32a99cec33fb0333274640f64736f6c63430008140033",
    "sourceMap": "675:7958:166:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5516:212;;;;;;;;;;-1:-1:-1;5516:212:166;;;;;:::i;:::-;;:::i;:::-;;2545:107;;;;;;;;;;-1:-1:-1;2626:12:166;:19;2545:107;;;820:25:170;;;808:2;793:18;2545:107:166;;;;;;;;5091:153;;;;;;;;;;-1:-1:-1;5091:153:166;;;;;:::i;:::-;;:::i;6080:121::-;;;;;;;;;;-1:-1:-1;6080:121:166;;;;;:::i;:::-;;:::i;3272:146::-;;;;;;;;;;-1:-1:-1;3272:146:166;;;;;:::i;:::-;;:::i;1108:27::-;;;;;;;;;;-1:-1:-1;1108:27:166;;;;;;;;;;;2114:14:170;;2107:22;2089:41;;2077:2;2062:18;1108:27:166;1949:187:170;2817:169:166;;;;;;;;;;;;;:::i;982:23::-;;;;;;;;;;-1:-1:-1;982:23:166;;;;-1:-1:-1;;;;;982:23:166;;;;;;-1:-1:-1;;;;;2305:55:170;;;2287:74;;2275:2;2260:18;982:23:166;2141:226:170;1196:46:166;;;;;;;;;;-1:-1:-1;1196:46:166;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:32;;;;;;;;;;;;;:::i;3652:183:166:-;;;;;;;;;;-1:-1:-1;3652:183:166;;;;;:::i;:::-;;:::i;2119:229:33:-;;;;;;;;;;;;;:::i;1638:85:32:-;;;;;;;;;;-1:-1:-1;1684:7:32;1710:6;-1:-1:-1;;;;;1710:6:32;1638:85;;1071:30:166;;;;;;;;;;;;;;;;5842:102;;;;;;;;;;-1:-1:-1;5842:102:166;;;;;:::i;:::-;;:::i;4703:127::-;;;;;;;;;;-1:-1:-1;4703:127:166;;;;;:::i;:::-;;:::i;1232:99:33:-;;;;;;;;;;-1:-1:-1;1311:13:33;;-1:-1:-1;;;;;1311:13:33;1232:99;;1524:178;;;;;;;;;;-1:-1:-1;1524:178:33;;;;;:::i;:::-;;:::i;4006:526:166:-;;;;;;;;;;-1:-1:-1;4006:526:166;;;;;:::i;:::-;;:::i;1320:33::-;;;;;;;;;;-1:-1:-1;1320:33:166;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3039:55:170;;;3021:74;;-1:-1:-1;;;;;3131:39:170;;;3126:2;3111:18;;3104:67;2994:18;1320:33:166;2833:344:170;5516:212:166;1531:13:32;:11;:13::i;:::-;-1:-1:-1;;;;;5617:29:166;::::1;5613:108;;5648:25;5660:3;5665:7;5648:11;:25::i;:::-;5516:212:::0;;;:::o;5613:108::-:1;5688:33;-1:-1:-1::0;;;;;5688:19:166;::::1;5708:3:::0;5713:7;5688:19:::1;:33::i;5091:153::-:0;1531:13:32;:11;:13::i;:::-;5190:47:166::1;5211:6;5219:17;5190:20;:47::i;:::-;5091:153:::0;;:::o;6080:121::-;1531:13:32;:11;:13::i;:::-;6160:15:166::1;:34:::0;;-1:-1:-1;;6160:34:166::1;::::0;::::1;;::::0;;;::::1;::::0;;6080:121::o;3272:146::-;1463:8;;-1:-1:-1;;;;;1463:8:166;1449:10;:22;1441:48;;;;-1:-1:-1;;;1441:48:166;;3384:2:170;1441:48:166;;;3366:21:170;3423:2;3403:18;;;3396:30;3462:15;3442:18;;;3435:43;3495:18;;1441:48:166;;;;;;;;;1607:15:::1;::::0;-1:-1:-1;;;;;1587:17:166;::::1;;::::0;;;:11:::1;:17;::::0;;;;;3338:3;;1587:35:::1;::::0;::::1;:::i;:::-;1568:15;:54;;1560:84;;;::::0;-1:-1:-1;;;1560:84:166;;3988:2:170;1560:84:166::1;::::0;::::1;3970:21:170::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1560:84:166::1;3786:341:170::0;1560:84:166::1;-1:-1:-1::0;;;;;3353:16:166;::::2;;::::0;;;:11:::2;:16;::::0;;;;3372:15:::2;3353:34:::0;;3398:13:::2;3365:3:::0;3398:8:::2;:13::i;2817:169::-:0;1705:9;1718:10;1705:23;1697:44;;;;-1:-1:-1;;;1697:44:166;;4334:2:170;1697:44:166;;;4316:21:170;4373:1;4353:18;;;4346:29;4411:10;4391:18;;;4384:38;4439:18;;1697:44:166;4132:331:170;1697:44:166;1812:15:::1;::::0;::::1;;1804:52;;;::::0;-1:-1:-1;;;1804:52:166;;4670:2:170;1804:52:166::1;::::0;::::1;4652:21:170::0;4709:2;4689:18;;;4682:30;4748:26;4728:18;;;4721:54;4792:18;;1804:52:166::1;4468:348:170::0;1804:52:166::1;1607:15:::2;::::0;2885:10:::2;1587:17;::::0;;;:11:::2;:17;::::0;;;;;2885:10;;1587:35:::2;::::0;::::2;:::i;:::-;1568:15;:54;;1560:84;;;::::0;-1:-1:-1;;;1560:84:166;;3988:2:170;1560:84:166::2;::::0;::::2;3970:21:170::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1560:84:166::2;3786:341:170::0;1560:84:166::2;2919:10:::3;2907:23;::::0;;;:11:::3;:23;::::0;;;;2933:15:::3;2907:41:::0;;2959:20:::3;::::0;:8:::3;:20::i;:::-;1866:1:::2;2817:169::o:0;2293:101:32:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3652:183:166:-;1531:13:32;:11;:13::i;:::-;3746:82:166::1;3762:65;;;;;;;;3782:6;-1:-1:-1::0;;;;;3762:65:166::1;;;;;3808:17;-1:-1:-1::0;;;;;3762:65:166::1;;;::::0;3746:15:::1;:82::i;2119:229:33:-:0;1311:13;;735:10:53;;-1:-1:-1;;;;;1311:13:33;2214:24;;2210:96;;2261:34;;-1:-1:-1;;;2261:34:33;;-1:-1:-1;;;;;2305:55:170;;2261:34:33;;;2287:74:170;2260:18;;2261:34:33;2141:226:170;2210:96:33;2315:26;2334:6;2315:18;:26::i;5842:102:166:-;1531:13:32;:11;:13::i;:::-;5914:8:166::1;:23:::0;;-1:-1:-1;;;;;;5914:23:166::1;-1:-1:-1::0;;;;;5914:23:166;;;::::1;::::0;;;::::1;::::0;;5842:102::o;4703:127::-;1531:13:32;:11;:13::i;:::-;4786:37:166::1;4806:16;4786:19;:37::i;1524:178:33:-:0;1531:13:32;:11;:13::i;:::-;1613::33::1;:24:::0;;-1:-1:-1;;;;;1613:24:33;::::1;-1:-1:-1::0;;;;;;1613:24:33;;::::1;::::0;::::1;::::0;;;1677:7:::1;1684::32::0;1710:6;-1:-1:-1;;;;;1710:6:32;;1638:85;1677:7:33::1;-1:-1:-1::0;;;;;1652:43:33::1;;;;;;;;;;;1524:178:::0;:::o;4006:526:166:-;1531:13:32;:11;:13::i;:::-;-1:-1:-1;;;;;4093:22:166;::::1;4077:13;4093:22:::0;;;:14:::1;:22;::::0;;;;;4143:1:::1;4134:10:::0;::::1;;4126:41;;;::::0;-1:-1:-1;;;4126:41:166;;5023:2:170;4126:41:166::1;::::0;::::1;5005:21:170::0;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;4126:41:166::1;4821:342:170::0;4126:41:166::1;4198:12;:19:::0;4178:17:::1;::::0;4198:23:::1;::::0;4220:1:::1;::::0;4198:23:::1;:::i;:::-;4178:43:::0;-1:-1:-1;4178:43:166;4235:7:::1;::::0;::::1;:::i;:::-;;;;:20;4231:215;;4271:30;4304:12;4317:9;4304:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;4271:56:::1;::::0;;;;::::1;::::0;;;4304:23;::::1;4271:56:::0;-1:-1:-1;;;;;4271:56:166;::::1;::::0;;-1:-1:-1;;;4271:56:166;::::1;-1:-1:-1::0;;;;;4271:56:166::1;::::0;;::::1;::::0;;;;4342:12:::1;:19:::0;;4271:56;;-1:-1:-1;4271:56:166;;4355:5;;4342:19;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:33;;;;;::::1;::::0;-1:-1:-1;;;;;4342:33:166::1;-1:-1:-1::0;;;4342:33:166::1;-1:-1:-1::0;;;;;4342:33:166;;::::1;::::0;;;::::1;:19:::0;::::1;:33:::0;4426:9:::1;:5:::0;4342:33;4426:9:::1;:::i;:::-;4405:17:::0;;-1:-1:-1;;;;;4390:33:166::1;;::::0;;;:14:::1;:33;::::0;;;;:45;4231:215:::1;4463:12;4476:9;4463:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;4456:30:::0;;;-1:-1:-1;;;;;4503:22:166;;;::::1;::::0;;:14:::1;:22:::0;;;-1:-1:-1;;4503:22:166;;;4496:29;4006:526::o;1320:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1320:33:166;;;-1:-1:-1;;;;1320:33:166;;-1:-1:-1;;;;;1320:33:166;;:::o;1796:162:32:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:32;735:10:53;1855:23:32;1851:101;;1901:40;;-1:-1:-1;;;1901:40:32;;735:10:53;1901:40:32;;;2287:74:170;2260:18;;1901:40:32;2141:226:170;8457:174:166;8527:12;8544:3;-1:-1:-1;;;;;8544:8:166;8560:7;8544:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8526:46;;;8590:7;8582:42;;;;-1:-1:-1;;;8582:42:166;;5986:2:170;8582:42:166;;;5968:21:170;6025:2;6005:18;;;5998:30;6064:24;6044:18;;;6037:52;6106:18;;8582:42:166;5784:346:170;1303:160:51;1412:43;;;-1:-1:-1;;;;;6327:55:170;;1412:43:51;;;6309:74:170;6399:18;;;;6392:34;;;1412:43:51;;;;;;;;;;6282:18:170;;;;1412:43:51;;;;;;;;;;-1:-1:-1;;;1412:43:51;;;1385:71;;1405:5;;1385:19;:71::i;8039:257:166:-;-1:-1:-1;;;;;8144:22:166;;8128:13;8144:22;;;:14;:22;;;;;;;8185:10;;;8177:41;;;;-1:-1:-1;;;8177:41:166;;5023:2:170;8177:41:166;;;5005:21:170;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;8177:41:166;4821:342:170;8177:41:166;8272:17;8229:12;8242:9;8250:1;8242:5;:9;:::i;:::-;8229:23;;;;;;;;:::i;:::-;;;;;;;;:40;;;:60;;;;;-1:-1:-1;;;;;8229:60:166;;;;;-1:-1:-1;;;;;8229:60:166;;;;;;8118:178;8039:257;;:::o;6408:590::-;6471:12;:19;;;6457:11;;;6528:15;;;;;:::i;:::-;;;;;;;;;;6501:42;;;;;;;;;6528:15;;6501:42;-1:-1:-1;;;;;6501:42:166;;;;-1:-1:-1;;;6501:42:166;;-1:-1:-1;;;;;6501:42:166;;;;;;;;-1:-1:-1;6558:26:166;;;;:77;;;6613:5;:22;;;-1:-1:-1;;;;;6588:47:166;:21;:47;;6558:77;6554:148;;;6651:40;6663:3;6668:5;:22;;;-1:-1:-1;;;;;6651:40:166;:11;:40::i;:::-;6729:1;6712:280;6736:3;6732:1;:7;6712:280;;;6768:12;6781:1;6768:15;;;;;;;;:::i;:::-;;;;;;;;;;6760:23;;;;;;;;;6768:15;;6760:23;-1:-1:-1;;;;;6760:23:166;;;;-1:-1:-1;;;6760:23:166;;-1:-1:-1;;;;;6760:23:166;;;;;;;;-1:-1:-1;6802:26:166;;;;:92;;-1:-1:-1;6872:22:166;;;;6832:11;;:36;;-1:-1:-1;;;6832:36:166;;6862:4;6832:36;;;2287:74:170;-1:-1:-1;;;;;6832:62:166;;;;-1:-1:-1;;;;;6832:21:166;;;;;;2260:18:170;;6832:36:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;6802:92;6798:184;;;6944:22;;;;6914:11;;:53;;-1:-1:-1;;;;;6914:24:166;;;;6939:3;;-1:-1:-1;;;;;6914:53:166;:24;:53::i;:::-;6741:3;;;:::i;:::-;;;6712:280;;;;6447:551;;6408:590;:::o;1886:153:33:-;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:33;;;1998:34;2023:8;1998:24;:34::i;7194:241:166:-;7287:12;;-1:-1:-1;;;;;7272:28:166;;;;;:14;:28;;;;;;:33;7264:68;;;;-1:-1:-1;;;7264:68:166;;6968:2:170;7264:68:166;;;6950:21:170;7007:2;6987:18;;;6980:30;7046:24;7026:18;;;7019:52;7088:18;;7264:68:166;6766:346:170;7264:68:166;7343:12;:25;;;;;;;-1:-1:-1;7343:25:166;;;;;;;;;;-1:-1:-1;;;;;7343:25:166;-1:-1:-1;;;7343:25:166;-1:-1:-1;;;;;7343:25:166;;;;;;;;;;;;;;7409:19;;7378:28;;;:14;:28;;;;;;:50;7194:241::o;7629:188::-;7730:7;7710:16;:27;;7702:63;;;;-1:-1:-1;;;7702:63:166;;7319:2:170;7702:63:166;;;7301:21:170;7358:2;7338:18;;;7331:30;7397:25;7377:18;;;7370:53;7440:18;;7702:63:166;7117:347:170;7702:63:166;7776:15;:34;7629:188::o;6468:629:51:-;6887:23;6913:33;-1:-1:-1;;;;;6913:27:51;;6941:4;6913:27;:33::i;:::-;6887:59;;6960:10;:17;6981:1;6960:22;;:57;;;;;6998:10;6987:30;;;;;;;;;;;;:::i;:::-;6986:31;6960:57;6956:135;;;7040:40;;-1:-1:-1;;;7040:40:51;;-1:-1:-1;;;;;2305:55:170;;7040:40:51;;;2287:74:170;2260:18;;7040:40:51;2141:226:170;2912:187:32;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:32;;;-1:-1:-1;;;;;;3020:17:32;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2705:151:52:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:52;;3394:4;3359:41;;;2287:74:170;2260:18;;3359:41:52;2141:226:170;3303:108:52;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:52;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:52;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:52;;-1:-1:-1;;;;;2305:55:170;;5121:24:52;;;2287:74:170;2260:18;;5121:24:52;2141:226:170;5041:119:52;-1:-1:-1;5180:10:52;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:52;;;;;;;;;;;14:162:170;-1:-1:-1;;;;;101:5:170;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:488;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;398:9;385:23;417:39;450:5;417:39;:::i;:::-;475:5;-1:-1:-1;532:2:170;517:18;;504:32;545:41;504:32;545:41;:::i;:::-;181:488;;605:7;;-1:-1:-1;;;659:2:170;644:18;;;;631:32;;181:488::o;856:459::-;939:6;947;1000:2;988:9;979:7;975:23;971:32;968:52;;;1016:1;1013;1006:12;968:52;1055:9;1042:23;1074:39;1107:5;1074:39;:::i;:::-;1132:5;-1:-1:-1;1189:2:170;1174:18;;1161:32;-1:-1:-1;;;;;1224:40:170;;1212:53;;1202:81;;1279:1;1276;1269:12;1202:81;1302:7;1292:17;;;856:459;;;;;:::o;1320:118::-;1406:5;1399:13;1392:21;1385:5;1382:32;1372:60;;1428:1;1425;1418:12;1443:241;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1607:9;1594:23;1626:28;1648:5;1626:28;:::i;1689:255::-;1748:6;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;1856:9;1843:23;1875:39;1908:5;1875:39;:::i;2372:180::-;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;-1:-1:-1;2523:23:170;;2372:180;-1:-1:-1;2372:180:170:o;3524:127::-;3585:10;3580:3;3576:20;3573:1;3566:31;3616:4;3613:1;3606:15;3640:4;3637:1;3630:15;3656:125;3721:9;;;3742:10;;;3739:36;;;3755:18;;:::i;5168:128::-;5235:9;;;5256:11;;;5253:37;;;5270:18;;:::i;5301:136::-;5340:3;5368:5;5358:39;;5377:18;;:::i;:::-;-1:-1:-1;;;5413:18:170;;5301:136::o;5442:127::-;5503:10;5498:3;5494:20;5491:1;5484:31;5534:4;5531:1;5524:15;5558:4;5555:1;5548:15;6437:184;6507:6;6560:2;6548:9;6539:7;6535:23;6531:32;6528:52;;;6576:1;6573;6566:12;6528:52;-1:-1:-1;6599:16:170;;6437:184;-1:-1:-1;6437:184:170:o;6626:135::-;6665:3;6686:17;;;6683:43;;6706:18;;:::i;:::-;-1:-1:-1;6753:1:170;6742:13;;6626:135::o;7469:245::-;7536:6;7589:2;7577:9;7568:7;7564:23;7560:32;7557:52;;;7605:1;7602;7595:12;7557:52;7637:9;7631:16;7656:28;7678:5;7656:28;:::i;7719:412::-;7848:3;7886:6;7880:13;7911:1;7921:129;7935:6;7932:1;7929:13;7921:129;;;8033:4;8017:14;;;8013:25;;8007:32;7994:11;;;7987:53;7950:12;7921:129;;;-1:-1:-1;8105:1:170;8069:16;;8094:13;;;-1:-1:-1;8069:16:170;7719:412;-1:-1:-1;7719:412:170:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addFaucetToken(address,uint96)": "7380f6bd",
    "faucetTokens(uint256)": "fbedbe62",
    "lastRequest(address)": "6fb9584f",
    "numberOfFaucetTokens()": "0d639e03",
    "operator()": "570ca735",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeFaucetToken(address)": "faf034e3",
    "renounceOwnership()": "715018a6",
    "request()": "338cdca1",
    "request(address)": "27c78c42",
    "requestCooldown()": "a9860c81",
    "setAmountPerRequest(address,uint96)": "0f737c82",
    "setOperator(address)": "b3ab15fb",
    "setRequestCooldown(uint256)": "bc3bc404",
    "setUnlockedRequest(bool)": "20cca627",
    "transferOwnership(address)": "f2fde38b",
    "unlockedRequest()": "29954f43",
    "withdrawToken(address,address,uint256)": "01e33667"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_nativePerRequest\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"addFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"faucetTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ERC20\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amountPerRequest\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfFaucetTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"setAmountPerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"name\":\"setRequestCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_unlockedRequest\",\"type\":\"bool\"}],\"name\":\"setUnlockedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract should only be used for testnet\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addFaucetToken(address,uint96)\":{\"details\":\"Tokens need to be owned by the faucet, and only mintable by the owner\",\"params\":{\"_amountPerRequest\":\"The amount per request\",\"_token\":\"The address of the token\"}},\"constructor\":{\"params\":{\"_nativePerRequest\":\"The native received per request\",\"_requestCooldown\":\"The request cooldown\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeFaucetToken(address)\":{\"details\":\"Token needs to be in the set, and NATIVE can't be removed\",\"params\":{\"_token\":\"The address of the token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"request()\":{\"details\":\"Can be called only once per `requestCooldown` seconds\"},\"request(address)\":{\"details\":\"Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator\",\"params\":{\"_to\":\"The address that will receive the tokens\"}},\"setAmountPerRequest(address,uint96)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amountPerRequest\":\"The new amount per request\",\"_token\":\"The address of the token\"}},\"setOperator(address)\":{\"params\":{\"_newOperator\":\"The address of the new operator\"}},\"setRequestCooldown(uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_requestCooldown\":\"The new cooldown\"}},\"setUnlockedRequest(bool)\":{\"params\":{\"_unlockedRequest\":\"The address of the new operator\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"withdrawToken(address,address,uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amount\":\"The token amount to send\",\"_to\":\"The recipient address\",\"_token\":\"The address of the token to withdraw\"}}},\"title\":\"Faucet contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFaucetToken(address,uint96)\":{\"notice\":\"Add a token to the faucet\"},\"constructor\":{\"notice\":\"Constructor of the faucet, set the request cooldown and add native to the faucet\"},\"faucetTokens(uint256)\":{\"notice\":\"faucet tokens set, custom to be able to use structures\"},\"lastRequest(address)\":{\"notice\":\"last time a user has requested tokens\"},\"numberOfFaucetTokens()\":{\"notice\":\"Returns the number of tokens given by the faucet\"},\"operator()\":{\"notice\":\"The address of the operator that can call request for other address\"},\"removeFaucetToken(address)\":{\"notice\":\"Remove a token from the faucet\"},\"request()\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"request(address)\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"requestCooldown()\":{\"notice\":\"The minimum time needed between 2 requests\"},\"setAmountPerRequest(address,uint96)\":{\"notice\":\"Set the amount per request of a specific token, designated by its symbol\"},\"setOperator(address)\":{\"notice\":\"Set the address of the operator\"},\"setRequestCooldown(uint256)\":{\"notice\":\"Set the request cooldown for every users\"},\"setUnlockedRequest(bool)\":{\"notice\":\"Set whether the direct request is unlocked or not\"},\"withdrawToken(address,address,uint256)\":{\"notice\":\"Withdraw `amount` of token `token` to `to`\"}},\"notice\":\"Create a faucet contract that create test tokens and allow user to request for tokens. This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after). This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/\",\":solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7\",\"dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"test/mocks/Faucet.sol\":{\"keccak256\":\"0x8dc5f822c350d04a2564e1cfc47eda571264801947fee34bbae6c48177b6453e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91f58d831a05698c4587cf79da32c4a1833a4235082fb74a27cfd1dc74ec2850\",\"dweb:/ipfs/QmPi3kTJHVaYxQ958KWNXq7d3tN6KQX3qBJLpn8BTerD7E\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_nativePerRequest",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFaucetToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "faucetTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "ERC20",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amountPerRequest",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numberOfFaucetTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFaucetToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestCooldown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAmountPerRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRequestCooldown"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_unlockedRequest",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnlockedRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockedRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addFaucetToken(address,uint96)": {
            "details": "Tokens need to be owned by the faucet, and only mintable by the owner",
            "params": {
              "_amountPerRequest": "The amount per request",
              "_token": "The address of the token"
            }
          },
          "constructor": {
            "params": {
              "_nativePerRequest": "The native received per request",
              "_requestCooldown": "The request cooldown"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeFaucetToken(address)": {
            "details": "Token needs to be in the set, and NATIVE can't be removed",
            "params": {
              "_token": "The address of the token"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "request()": {
            "details": "Can be called only once per `requestCooldown` seconds"
          },
          "request(address)": {
            "details": "Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator",
            "params": {
              "_to": "The address that will receive the tokens"
            }
          },
          "setAmountPerRequest(address,uint96)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amountPerRequest": "The new amount per request",
              "_token": "The address of the token"
            }
          },
          "setOperator(address)": {
            "params": {
              "_newOperator": "The address of the new operator"
            }
          },
          "setRequestCooldown(uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_requestCooldown": "The new cooldown"
            }
          },
          "setUnlockedRequest(bool)": {
            "params": {
              "_unlockedRequest": "The address of the new operator"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "withdrawToken(address,address,uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amount": "The token amount to send",
              "_to": "The recipient address",
              "_token": "The address of the token to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addFaucetToken(address,uint96)": {
            "notice": "Add a token to the faucet"
          },
          "constructor": {
            "notice": "Constructor of the faucet, set the request cooldown and add native to the faucet"
          },
          "faucetTokens(uint256)": {
            "notice": "faucet tokens set, custom to be able to use structures"
          },
          "lastRequest(address)": {
            "notice": "last time a user has requested tokens"
          },
          "numberOfFaucetTokens()": {
            "notice": "Returns the number of tokens given by the faucet"
          },
          "operator()": {
            "notice": "The address of the operator that can call request for other address"
          },
          "removeFaucetToken(address)": {
            "notice": "Remove a token from the faucet"
          },
          "request()": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "request(address)": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "requestCooldown()": {
            "notice": "The minimum time needed between 2 requests"
          },
          "setAmountPerRequest(address,uint96)": {
            "notice": "Set the amount per request of a specific token, designated by its symbol"
          },
          "setOperator(address)": {
            "notice": "Set the address of the operator"
          },
          "setRequestCooldown(uint256)": {
            "notice": "Set the request cooldown for every users"
          },
          "setUnlockedRequest(bool)": {
            "notice": "Set whether the direct request is unlocked or not"
          },
          "withdrawToken(address,address,uint256)": {
            "notice": "Withdraw `amount` of token `token` to `to`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin-foundry-upgrades/=lib/openzeppelin-foundry-upgrades/src/",
        "solidity-stringutils/=lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12",
        "urls": [
          "bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7",
          "dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "test/mocks/Faucet.sol": {
        "keccak256": "0x8dc5f822c350d04a2564e1cfc47eda571264801947fee34bbae6c48177b6453e",
        "urls": [
          "bzz-raw://91f58d831a05698c4587cf79da32c4a1833a4235082fb74a27cfd1dc74ec2850",
          "dweb:/ipfs/QmPi3kTJHVaYxQ958KWNXq7d3tN6KQX3qBJLpn8BTerD7E"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/Faucet.sol",
    "id": 123235,
    "exportedSymbols": {
      "Faucet": [
        123234
      ],
      "IERC20": [
        42297
      ],
      "Ownable": [
        40400
      ],
      "Ownable2Step": [
        40486
      ],
      "SafeERC20": [
        42746
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:8601:166",
    "nodes": [
      {
        "id": 122674,
        "nodeType": "PragmaDirective",
        "src": "33:24:166",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 122677,
        "nodeType": "ImportDirective",
        "src": "59:90:166",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 123235,
        "sourceUnit": 42747,
        "symbolAliases": [
          {
            "foreign": {
              "id": 122675,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42746,
              "src": "67:9:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 122676,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42297,
              "src": "78:6:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 122680,
        "nodeType": "ImportDirective",
        "src": "150:86:166",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 123235,
        "sourceUnit": 40487,
        "symbolAliases": [
          {
            "foreign": {
              "id": 122678,
              "name": "Ownable2Step",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40486,
              "src": "158:12:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 122679,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40400,
              "src": "172:7:166",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 123234,
        "nodeType": "ContractDefinition",
        "src": "675:7958:166",
        "nodes": [
          {
            "id": 122687,
            "nodeType": "UsingForDirective",
            "src": "713:27:166",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 122684,
              "name": "SafeERC20",
              "nameLocations": [
                "719:9:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42746,
              "src": "719:9:166"
            },
            "typeName": {
              "id": 122686,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 122685,
                "name": "IERC20",
                "nameLocations": [
                  "733:6:166"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42297,
                "src": "733:6:166"
              },
              "referencedDeclaration": 42297,
              "src": "733:6:166",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$42297",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 122694,
            "nodeType": "StructDefinition",
            "src": "811:81:166",
            "nodes": [],
            "canonicalName": "Faucet.FaucetToken",
            "documentation": {
              "id": 122688,
              "nodeType": "StructuredDocumentation",
              "src": "746:60:166",
              "text": "@dev Structure for faucet token, use only 1 storage slot"
            },
            "members": [
              {
                "constant": false,
                "id": 122691,
                "mutability": "mutable",
                "name": "ERC20",
                "nameLocation": "847:5:166",
                "nodeType": "VariableDeclaration",
                "scope": 122694,
                "src": "840:12:166",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$42297",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 122690,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 122689,
                    "name": "IERC20",
                    "nameLocations": [
                      "840:6:166"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 42297,
                    "src": "840:6:166"
                  },
                  "referencedDeclaration": 42297,
                  "src": "840:6:166",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 122693,
                "mutability": "mutable",
                "name": "amountPerRequest",
                "nameLocation": "869:16:166",
                "nodeType": "VariableDeclaration",
                "scope": 122694,
                "src": "862:23:166",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 122692,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "862:6:166",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FaucetToken",
            "nameLocation": "818:11:166",
            "scope": 123234,
            "visibility": "public"
          },
          {
            "id": 122697,
            "nodeType": "VariableDeclaration",
            "src": "982:23:166",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 122695,
              "nodeType": "StructuredDocumentation",
              "src": "898:79:166",
              "text": "@notice The address of the operator that can call request for other address"
            },
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "997:8:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 122696,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "982:7:166",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 122700,
            "nodeType": "VariableDeclaration",
            "src": "1071:30:166",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 122698,
              "nodeType": "StructuredDocumentation",
              "src": "1012:54:166",
              "text": "@notice The minimum time needed between 2 requests"
            },
            "functionSelector": "a9860c81",
            "mutability": "mutable",
            "name": "requestCooldown",
            "nameLocation": "1086:15:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 122699,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1071:7:166",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 122702,
            "nodeType": "VariableDeclaration",
            "src": "1108:27:166",
            "nodes": [],
            "constant": false,
            "functionSelector": "29954f43",
            "mutability": "mutable",
            "name": "unlockedRequest",
            "nameLocation": "1120:15:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 122701,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1108:4:166",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 122707,
            "nodeType": "VariableDeclaration",
            "src": "1196:46:166",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 122703,
              "nodeType": "StructuredDocumentation",
              "src": "1142:49:166",
              "text": "@notice last time a user has requested tokens"
            },
            "functionSelector": "6fb9584f",
            "mutability": "mutable",
            "name": "lastRequest",
            "nameLocation": "1231:11:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 122706,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 122704,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1204:7:166",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1196:27:166",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 122705,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1215:7:166",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 122712,
            "nodeType": "VariableDeclaration",
            "src": "1320:33:166",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 122708,
              "nodeType": "StructuredDocumentation",
              "src": "1249:66:166",
              "text": "@notice faucet tokens set, custom to be able to use structures"
            },
            "functionSelector": "fbedbe62",
            "mutability": "mutable",
            "name": "faucetTokens",
            "nameLocation": "1341:12:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
              "typeString": "struct Faucet.FaucetToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 122710,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 122709,
                  "name": "FaucetToken",
                  "nameLocations": [
                    "1320:11:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122694,
                  "src": "1320:11:166"
                },
                "referencedDeclaration": 122694,
                "src": "1320:11:166",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FaucetToken_$122694_storage_ptr",
                  "typeString": "struct Faucet.FaucetToken"
                }
              },
              "id": 122711,
              "nodeType": "ArrayTypeName",
              "src": "1320:13:166",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage_ptr",
                "typeString": "struct Faucet.FaucetToken[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 122717,
            "nodeType": "VariableDeclaration",
            "src": "1359:41:166",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenToIndices",
            "nameLocation": "1386:14:166",
            "scope": 123234,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 122716,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 122714,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 122713,
                  "name": "IERC20",
                  "nameLocations": [
                    "1367:6:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42297,
                  "src": "1367:6:166"
                },
                "referencedDeclaration": 42297,
                "src": "1367:6:166",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$42297",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1359:26:166",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 122715,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1377:7:166",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 122729,
            "nodeType": "ModifierDefinition",
            "src": "1407:100:166",
            "nodes": [],
            "body": {
              "id": 122728,
              "nodeType": "Block",
              "src": "1431:76:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 122723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 122720,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1449:3:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1453:6:166",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1449:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 122722,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122697,
                          "src": "1463:8:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1449:22:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f72",
                        "id": 122724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1473:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        },
                        "value": "Only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        }
                      ],
                      "id": 122719,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1441:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1441:48:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122726,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:48:166"
                },
                {
                  "id": 122727,
                  "nodeType": "PlaceholderStatement",
                  "src": "1499:1:166"
                }
              ]
            },
            "name": "onlyOperator",
            "nameLocation": "1416:12:166",
            "parameters": {
              "id": 122718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1428:2:166"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122747,
            "nodeType": "ModifierDefinition",
            "src": "1513:149:166",
            "nodes": [],
            "body": {
              "id": 122746,
              "nodeType": "Block",
              "src": "1550:112:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 122734,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1568:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 122735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1574:9:166",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1568:15:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 122740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 122736,
                              "name": "lastRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122707,
                              "src": "1587:11:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 122738,
                            "indexExpression": {
                              "id": 122737,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122731,
                              "src": "1599:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1587:17:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 122739,
                            "name": "requestCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122700,
                            "src": "1607:15:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1587:35:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1568:54:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d616e79207265717565737473",
                        "id": 122742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1624:19:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        },
                        "value": "Too many requests"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        }
                      ],
                      "id": 122733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1560:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1560:84:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122744,
                  "nodeType": "ExpressionStatement",
                  "src": "1560:84:166"
                },
                {
                  "id": 122745,
                  "nodeType": "PlaceholderStatement",
                  "src": "1654:1:166"
                }
              ]
            },
            "name": "verifyRequest",
            "nameLocation": "1522:13:166",
            "parameters": {
              "id": 122732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122731,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1544:4:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122747,
                  "src": "1536:12:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1536:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1535:14:166"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122760,
            "nodeType": "ModifierDefinition",
            "src": "1668:91:166",
            "nodes": [],
            "body": {
              "id": 122759,
              "nodeType": "Block",
              "src": "1687:72:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 122754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 122750,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1705:2:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 122751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1708:6:166",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1705:9:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 122752,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1718:3:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122753,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1722:6:166",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1718:10:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1705:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920454f41",
                        "id": 122755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        },
                        "value": "Only EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        }
                      ],
                      "id": 122749,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1697:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1697:44:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122757,
                  "nodeType": "ExpressionStatement",
                  "src": "1697:44:166"
                },
                {
                  "id": 122758,
                  "nodeType": "PlaceholderStatement",
                  "src": "1751:1:166"
                }
              ]
            },
            "name": "onlyEOA",
            "nameLocation": "1677:7:166",
            "parameters": {
              "id": 122748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1684:2:166"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122769,
            "nodeType": "ModifierDefinition",
            "src": "1765:109:166",
            "nodes": [],
            "body": {
              "id": 122768,
              "nodeType": "Block",
              "src": "1794:80:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122763,
                        "name": "unlockedRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122702,
                        "src": "1812:15:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469726563742072657175657374206973206c6f636b6564",
                        "id": 122764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1829:26:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        },
                        "value": "Direct request is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        }
                      ],
                      "id": 122762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1804:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1804:52:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122766,
                  "nodeType": "ExpressionStatement",
                  "src": "1804:52:166"
                },
                {
                  "id": 122767,
                  "nodeType": "PlaceholderStatement",
                  "src": "1866:1:166"
                }
              ]
            },
            "name": "isRequestUnlocked",
            "nameLocation": "1774:17:166",
            "parameters": {
              "id": 122761,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:166"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 122799,
            "nodeType": "FunctionDefinition",
            "src": "2095:294:166",
            "nodes": [],
            "body": {
              "id": 122798,
              "nodeType": "Block",
              "src": "2231:158:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122783,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122776,
                        "src": "2261:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122782,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123178,
                      "src": "2241:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 122784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122785,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:37:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 122791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2339:1:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 122790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2331:7:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 122789,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2331:7:166",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 122792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2331:10:166",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 122788,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42297,
                              "src": "2324:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$42297_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 122793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2324:18:166",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42297",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 122794,
                            "name": "_nativePerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122774,
                            "src": "2362:17:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$42297",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 122787,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122694,
                          "src": "2304:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$122694_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 122795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2317:5:166",
                          "2344:16:166"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2304:77:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 122786,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123160,
                      "src": "2288:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$122694_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 122796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2288:94:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122797,
                  "nodeType": "ExpressionStatement",
                  "src": "2288:94:166"
                }
              ]
            },
            "documentation": {
              "id": 122770,
              "nodeType": "StructuredDocumentation",
              "src": "1880:210:166",
              "text": "@notice Constructor of the faucet, set the request cooldown and add native to the faucet\n @param _nativePerRequest The native received per request\n @param _requestCooldown The request cooldown"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 122779,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 122772,
                    "src": "2213:12:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 122780,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 122778,
                  "name": "Ownable",
                  "nameLocations": [
                    "2205:7:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40400,
                  "src": "2205:7:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2205:21:166"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 122777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122772,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2115:12:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122799,
                  "src": "2107:20:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122774,
                  "mutability": "mutable",
                  "name": "_nativePerRequest",
                  "nameLocation": "2136:17:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122799,
                  "src": "2129:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 122773,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122776,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "2163:16:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122799,
                  "src": "2155:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2106:74:166"
            },
            "returnParameters": {
              "id": 122781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2231:0:166"
            },
            "scope": 123234,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 122804,
            "nodeType": "FunctionDefinition",
            "src": "2445:29:166",
            "nodes": [],
            "body": {
              "id": 122803,
              "nodeType": "Block",
              "src": "2472:2:166",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 122800,
              "nodeType": "StructuredDocumentation",
              "src": "2395:45:166",
              "text": "@notice Allows to receive NATIVE directly"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 122801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2452:2:166"
            },
            "returnParameters": {
              "id": 122802,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2472:0:166"
            },
            "scope": 123234,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122814,
            "nodeType": "FunctionDefinition",
            "src": "2545:107:166",
            "nodes": [],
            "body": {
              "id": 122813,
              "nodeType": "Block",
              "src": "2609:43:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 122810,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122712,
                      "src": "2626:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 122811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2639:6:166",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2626:19:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 122809,
                  "id": 122812,
                  "nodeType": "Return",
                  "src": "2619:26:166"
                }
              ]
            },
            "documentation": {
              "id": 122805,
              "nodeType": "StructuredDocumentation",
              "src": "2480:60:166",
              "text": "@notice Returns the number of tokens given by the faucet"
            },
            "functionSelector": "0d639e03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfFaucetTokens",
            "nameLocation": "2554:20:166",
            "parameters": {
              "id": 122806,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2574:2:166"
            },
            "returnParameters": {
              "id": 122809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122808,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 122814,
                  "src": "2600:7:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2600:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2599:9:166"
            },
            "scope": 123234,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122840,
            "nodeType": "FunctionDefinition",
            "src": "2817:169:166",
            "nodes": [],
            "body": {
              "id": 122839,
              "nodeType": "Block",
              "src": "2897:89:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 122832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122826,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122707,
                        "src": "2907:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 122829,
                      "indexExpression": {
                        "expression": {
                          "id": 122827,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2919:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2923:6:166",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2919:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2907:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 122830,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2933:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 122831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2939:9:166",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2933:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2907:41:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122833,
                  "nodeType": "ExpressionStatement",
                  "src": "2907:41:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 122835,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2968:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2972:6:166",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2968:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 122834,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123128,
                      "src": "2959:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 122837,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:20:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122838,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:20:166"
                }
              ]
            },
            "documentation": {
              "id": 122815,
              "nodeType": "StructuredDocumentation",
              "src": "2658:154:166",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds"
            },
            "functionSelector": "338cdca1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122818,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122817,
                  "name": "onlyEOA",
                  "nameLocations": [
                    "2845:7:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122760,
                  "src": "2845:7:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2845:7:166"
              },
              {
                "id": 122820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122819,
                  "name": "isRequestUnlocked",
                  "nameLocations": [
                    "2853:17:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122769,
                  "src": "2853:17:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2853:17:166"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 122822,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2885:3:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 122823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2889:6:166",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2885:10:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 122824,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122821,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "2871:13:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122747,
                  "src": "2871:13:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "2871:25:166"
              }
            ],
            "name": "request",
            "nameLocation": "2826:7:166",
            "parameters": {
              "id": 122816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2833:2:166"
            },
            "returnParameters": {
              "id": 122825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2897:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122863,
            "nodeType": "FunctionDefinition",
            "src": "3272:146:166",
            "nodes": [],
            "body": {
              "id": 122862,
              "nodeType": "Block",
              "src": "3343:75:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 122856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 122851,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122707,
                        "src": "3353:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 122853,
                      "indexExpression": {
                        "id": 122852,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122843,
                        "src": "3365:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3353:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 122854,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3372:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 122855,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3378:9:166",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3372:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3353:34:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 122857,
                  "nodeType": "ExpressionStatement",
                  "src": "3353:34:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122859,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122843,
                        "src": "3407:3:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 122858,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123128,
                      "src": "3398:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 122860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3398:13:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122861,
                  "nodeType": "ExpressionStatement",
                  "src": "3398:13:166"
                }
              ]
            },
            "documentation": {
              "id": 122841,
              "nodeType": "StructuredDocumentation",
              "src": "2992:275:166",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds for every address\n Can only be called by the operator\n @param _to The address that will receive the tokens"
            },
            "functionSelector": "27c78c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122845,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3311:12:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122729,
                  "src": "3311:12:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "3311:12:166"
              },
              {
                "arguments": [
                  {
                    "id": 122848,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 122843,
                    "src": "3338:3:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 122849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122847,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "3324:13:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 122747,
                  "src": "3324:13:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "3324:18:166"
              }
            ],
            "name": "request",
            "nameLocation": "3281:7:166",
            "parameters": {
              "id": 122844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122843,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3297:3:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122863,
                  "src": "3289:11:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:13:166"
            },
            "returnParameters": {
              "id": 122850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3343:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122882,
            "nodeType": "FunctionDefinition",
            "src": "3652:183:166",
            "nodes": [],
            "body": {
              "id": 122881,
              "nodeType": "Block",
              "src": "3736:99:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 122876,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122867,
                            "src": "3782:6:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42297",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 122877,
                            "name": "_amountPerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122869,
                            "src": "3808:17:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$42297",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 122875,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122694,
                          "src": "3762:11:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$122694_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 122878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3775:5:166",
                          "3790:16:166"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3762:65:166",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 122874,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123160,
                      "src": "3746:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$122694_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 122879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:82:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122880,
                  "nodeType": "ExpressionStatement",
                  "src": "3746:82:166"
                }
              ]
            },
            "documentation": {
              "id": 122864,
              "nodeType": "StructuredDocumentation",
              "src": "3424:223:166",
              "text": "@notice Add a token to the faucet\n @dev Tokens need to be owned by the faucet, and only mintable by the owner\n @param _token The address of the token\n @param _amountPerRequest The amount per request"
            },
            "functionSelector": "7380f6bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122872,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122871,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3726:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "3726:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "3726:9:166"
              }
            ],
            "name": "addFaucetToken",
            "nameLocation": "3661:14:166",
            "parameters": {
              "id": 122870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122867,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3683:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122882,
                  "src": "3676:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 122866,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 122865,
                      "name": "IERC20",
                      "nameLocations": [
                        "3676:6:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42297,
                      "src": "3676:6:166"
                    },
                    "referencedDeclaration": 42297,
                    "src": "3676:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42297",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122869,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "3698:17:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122882,
                  "src": "3691:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 122868,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3691:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3675:41:166"
            },
            "returnParameters": {
              "id": 122873,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3736:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122950,
            "nodeType": "FunctionDefinition",
            "src": "4006:526:166",
            "nodes": [],
            "body": {
              "id": 122949,
              "nodeType": "Block",
              "src": "4067:465:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    122892
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122892,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4085:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 122949,
                      "src": "4077:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122891,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4077:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122896,
                  "initialValue": {
                    "baseExpression": {
                      "id": 122893,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122717,
                      "src": "4093:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 122895,
                    "indexExpression": {
                      "id": 122894,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122886,
                      "src": "4108:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42297",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4093:22:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4077:38:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 122900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 122898,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122892,
                          "src": "4134:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 122899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4143:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4134:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 122901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4146:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 122897,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4126:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 122902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4126:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122903,
                  "nodeType": "ExpressionStatement",
                  "src": "4126:41:166"
                },
                {
                  "assignments": [
                    122905
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 122905,
                      "mutability": "mutable",
                      "name": "lastIndex",
                      "nameLocation": "4186:9:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 122949,
                      "src": "4178:17:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 122904,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4178:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 122910,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 122909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 122906,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122712,
                        "src": "4198:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 122907,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4211:6:166",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4198:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 122908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4220:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4198:23:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4178:43:166"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 122914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 122912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "4235:7:166",
                      "subExpression": {
                        "id": 122911,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122892,
                        "src": "4237:5:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 122913,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122905,
                      "src": "4246:9:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4235:20:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 122938,
                  "nodeType": "IfStatement",
                  "src": "4231:215:166",
                  "trueBody": {
                    "id": 122937,
                    "nodeType": "Block",
                    "src": "4257:189:166",
                    "statements": [
                      {
                        "assignments": [
                          122917
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 122917,
                            "mutability": "mutable",
                            "name": "faucetToken",
                            "nameLocation": "4290:11:166",
                            "nodeType": "VariableDeclaration",
                            "scope": 122937,
                            "src": "4271:30:166",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken"
                            },
                            "typeName": {
                              "id": 122916,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 122915,
                                "name": "FaucetToken",
                                "nameLocations": [
                                  "4271:11:166"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 122694,
                                "src": "4271:11:166"
                              },
                              "referencedDeclaration": 122694,
                              "src": "4271:11:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$122694_storage_ptr",
                                "typeString": "struct Faucet.FaucetToken"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 122921,
                        "initialValue": {
                          "baseExpression": {
                            "id": 122918,
                            "name": "faucetTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122712,
                            "src": "4304:12:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                            }
                          },
                          "id": 122920,
                          "indexExpression": {
                            "id": 122919,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122905,
                            "src": "4317:9:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4304:23:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4271:56:166"
                      },
                      {
                        "expression": {
                          "id": 122926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 122922,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122712,
                              "src": "4342:12:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 122924,
                            "indexExpression": {
                              "id": 122923,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122892,
                              "src": "4355:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4342:19:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 122925,
                            "name": "faucetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122917,
                            "src": "4364:11:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "src": "4342:33:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "id": 122927,
                        "nodeType": "ExpressionStatement",
                        "src": "4342:33:166"
                      },
                      {
                        "expression": {
                          "id": 122935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 122928,
                              "name": "tokenToIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122717,
                              "src": "4390:14:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 122931,
                            "indexExpression": {
                              "expression": {
                                "id": 122929,
                                "name": "faucetToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122917,
                                "src": "4405:11:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 122930,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4417:5:166",
                              "memberName": "ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122691,
                              "src": "4405:17:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$42297",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4390:33:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 122934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 122932,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122892,
                              "src": "4426:5:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 122933,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4434:1:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4426:9:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4390:45:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 122936,
                        "nodeType": "ExpressionStatement",
                        "src": "4390:45:166"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 122942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4456:30:166",
                    "subExpression": {
                      "baseExpression": {
                        "id": 122939,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122712,
                        "src": "4463:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 122941,
                      "indexExpression": {
                        "id": 122940,
                        "name": "lastIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122905,
                        "src": "4476:9:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4463:23:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122943,
                  "nodeType": "ExpressionStatement",
                  "src": "4456:30:166"
                },
                {
                  "expression": {
                    "id": 122947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4496:29:166",
                    "subExpression": {
                      "baseExpression": {
                        "id": 122944,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122717,
                        "src": "4503:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 122946,
                      "indexExpression": {
                        "id": 122945,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122886,
                        "src": "4518:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42297",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4503:22:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122948,
                  "nodeType": "ExpressionStatement",
                  "src": "4496:29:166"
                }
              ]
            },
            "documentation": {
              "id": 122883,
              "nodeType": "StructuredDocumentation",
              "src": "3841:160:166",
              "text": "@notice Remove a token from the faucet\n @dev Token needs to be in the set, and NATIVE can't be removed\n @param _token The address of the token"
            },
            "functionSelector": "faf034e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122888,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4057:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "4057:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "4057:9:166"
              }
            ],
            "name": "removeFaucetToken",
            "nameLocation": "4015:17:166",
            "parameters": {
              "id": 122887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122886,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4040:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122950,
                  "src": "4033:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 122885,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 122884,
                      "name": "IERC20",
                      "nameLocations": [
                        "4033:6:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42297,
                      "src": "4033:6:166"
                    },
                    "referencedDeclaration": 42297,
                    "src": "4033:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42297",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4032:15:166"
            },
            "returnParameters": {
              "id": 122890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4067:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122963,
            "nodeType": "FunctionDefinition",
            "src": "4703:127:166",
            "nodes": [],
            "body": {
              "id": 122962,
              "nodeType": "Block",
              "src": "4776:54:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122959,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122953,
                        "src": "4806:16:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 122958,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123178,
                      "src": "4786:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 122960,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4786:37:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122961,
                  "nodeType": "ExpressionStatement",
                  "src": "4786:37:166"
                }
              ]
            },
            "documentation": {
              "id": 122951,
              "nodeType": "StructuredDocumentation",
              "src": "4538:160:166",
              "text": "@notice Set the request cooldown for every users\n @dev This function needs to be called by the owner\n @param _requestCooldown The new cooldown"
            },
            "functionSelector": "bc3bc404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122956,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122955,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4766:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "4766:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "4766:9:166"
              }
            ],
            "name": "setRequestCooldown",
            "nameLocation": "4712:18:166",
            "parameters": {
              "id": 122954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122953,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "4739:16:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122963,
                  "src": "4731:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4731:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4730:26:166"
            },
            "returnParameters": {
              "id": 122957,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4776:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 122980,
            "nodeType": "FunctionDefinition",
            "src": "5091:153:166",
            "nodes": [],
            "body": {
              "id": 122979,
              "nodeType": "Block",
              "src": "5180:64:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 122975,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122967,
                        "src": "5211:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42297",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 122976,
                        "name": "_amountPerRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122969,
                        "src": "5219:17:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$42297",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 122974,
                      "name": "_setAmountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123210,
                      "src": "5190:20:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42297_$_t_uint96_$returns$__$",
                        "typeString": "function (contract IERC20,uint96)"
                      }
                    },
                    "id": 122977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5190:47:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 122978,
                  "nodeType": "ExpressionStatement",
                  "src": "5190:47:166"
                }
              ]
            },
            "documentation": {
              "id": 122964,
              "nodeType": "StructuredDocumentation",
              "src": "4836:250:166",
              "text": "@notice Set the amount per request of a specific token, designated by its symbol\n @dev This function needs to be called by the owner\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "functionSelector": "0f737c82",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122972,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122971,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5170:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "5170:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "5170:9:166"
              }
            ],
            "name": "setAmountPerRequest",
            "nameLocation": "5100:19:166",
            "parameters": {
              "id": 122970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122967,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5127:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122980,
                  "src": "5120:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 122966,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 122965,
                      "name": "IERC20",
                      "nameLocations": [
                        "5120:6:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42297,
                      "src": "5120:6:166"
                    },
                    "referencedDeclaration": 42297,
                    "src": "5120:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42297",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122969,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "5142:17:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 122980,
                  "src": "5135:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 122968,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5135:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5119:41:166"
            },
            "returnParameters": {
              "id": 122973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5180:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123016,
            "nodeType": "FunctionDefinition",
            "src": "5516:212:166",
            "nodes": [],
            "body": {
              "id": 123015,
              "nodeType": "Block",
              "src": "5603:125:166",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 123001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 122995,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122984,
                          "src": "5625:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$42297",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$42297",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 122994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5617:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 122993,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5617:7:166",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 122996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5617:15:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 122999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5644:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 122998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5636:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 122997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5636:7:166",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 123000,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5636:10:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5617:29:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 123010,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122986,
                          "src": "5708:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 123011,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122988,
                          "src": "5713:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 123007,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122984,
                          "src": "5688:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$42297",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 123009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5695:12:166",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42373,
                        "src": "5688:19:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42297_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42297_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 123012,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5688:33:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 123013,
                    "nodeType": "ExpressionStatement",
                    "src": "5688:33:166"
                  },
                  "id": 123014,
                  "nodeType": "IfStatement",
                  "src": "5613:108:166",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 123003,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122986,
                          "src": "5660:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 123004,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122988,
                          "src": "5665:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 123002,
                        "name": "_sendNative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123233,
                        "src": "5648:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 123005,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5648:25:166",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 123006,
                    "nodeType": "ExpressionStatement",
                    "src": "5648:25:166"
                  }
                }
              ]
            },
            "documentation": {
              "id": 122981,
              "nodeType": "StructuredDocumentation",
              "src": "5250:261:166",
              "text": "@notice Withdraw `amount` of token `token` to `to`\n @dev This function needs to be called by the owner\n @param _token The address of the token to withdraw\n @param _to The recipient address\n @param _amount The token amount to send"
            },
            "functionSelector": "01e33667",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122991,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 122990,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5593:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "5593:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "5593:9:166"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "5525:13:166",
            "parameters": {
              "id": 122989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 122984,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5546:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123016,
                  "src": "5539:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 122983,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 122982,
                      "name": "IERC20",
                      "nameLocations": [
                        "5539:6:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42297,
                      "src": "5539:6:166"
                    },
                    "referencedDeclaration": 42297,
                    "src": "5539:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42297",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122986,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5562:3:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123016,
                  "src": "5554:11:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 122985,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5554:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 122988,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5575:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123016,
                  "src": "5567:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122987,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5538:45:166"
            },
            "returnParameters": {
              "id": 122992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5603:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123029,
            "nodeType": "FunctionDefinition",
            "src": "5842:102:166",
            "nodes": [],
            "body": {
              "id": 123028,
              "nodeType": "Block",
              "src": "5904:40:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 123026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123024,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122697,
                      "src": "5914:8:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123025,
                      "name": "_newOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123019,
                      "src": "5925:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5914:23:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 123027,
                  "nodeType": "ExpressionStatement",
                  "src": "5914:23:166"
                }
              ]
            },
            "documentation": {
              "id": 123017,
              "nodeType": "StructuredDocumentation",
              "src": "5734:103:166",
              "text": "@notice Set the address of the operator\n @param _newOperator The address of the new operator"
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123022,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 123021,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5894:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "5894:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "5894:9:166"
              }
            ],
            "name": "setOperator",
            "nameLocation": "5851:11:166",
            "parameters": {
              "id": 123020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123019,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "5871:12:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123029,
                  "src": "5863:20:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5863:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5862:22:166"
            },
            "returnParameters": {
              "id": 123023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5904:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123042,
            "nodeType": "FunctionDefinition",
            "src": "6080:121:166",
            "nodes": [],
            "body": {
              "id": 123041,
              "nodeType": "Block",
              "src": "6150:51:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 123039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123037,
                      "name": "unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122702,
                      "src": "6160:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123038,
                      "name": "_unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123032,
                      "src": "6178:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6160:34:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123040,
                  "nodeType": "ExpressionStatement",
                  "src": "6160:34:166"
                }
              ]
            },
            "documentation": {
              "id": 123030,
              "nodeType": "StructuredDocumentation",
              "src": "5950:125:166",
              "text": "@notice Set whether the direct request is unlocked or not\n @param _unlockedRequest The address of the new operator"
            },
            "functionSelector": "20cca627",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 123035,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 123034,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6140:9:166"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40311,
                  "src": "6140:9:166"
                },
                "nodeType": "ModifierInvocation",
                "src": "6140:9:166"
              }
            ],
            "name": "setUnlockedRequest",
            "nameLocation": "6089:18:166",
            "parameters": {
              "id": 123033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123032,
                  "mutability": "mutable",
                  "name": "_unlockedRequest",
                  "nameLocation": "6113:16:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123042,
                  "src": "6108:21:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123031,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6108:4:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6107:23:166"
            },
            "returnParameters": {
              "id": 123036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6150:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 123128,
            "nodeType": "FunctionDefinition",
            "src": "6408:590:166",
            "nodes": [],
            "body": {
              "id": 123127,
              "nodeType": "Block",
              "src": "6447:551:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    123049
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123049,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "6465:3:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 123127,
                      "src": "6457:11:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123048,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6457:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123052,
                  "initialValue": {
                    "expression": {
                      "id": 123050,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122712,
                      "src": "6471:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 123051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6484:6:166",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6471:19:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6457:33:166"
                },
                {
                  "assignments": [
                    123055
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123055,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "6520:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 123127,
                      "src": "6501:24:166",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                        "typeString": "struct Faucet.FaucetToken"
                      },
                      "typeName": {
                        "id": 123054,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 123053,
                          "name": "FaucetToken",
                          "nameLocations": [
                            "6501:11:166"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 122694,
                          "src": "6501:11:166"
                        },
                        "referencedDeclaration": 122694,
                        "src": "6501:11:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_storage_ptr",
                          "typeString": "struct Faucet.FaucetToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123059,
                  "initialValue": {
                    "baseExpression": {
                      "id": 123056,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122712,
                      "src": "6528:12:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 123058,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 123057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6541:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6528:15:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                      "typeString": "struct Faucet.FaucetToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6501:42:166"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 123072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 123063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 123060,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123055,
                          "src": "6558:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 123061,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6564:16:166",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122693,
                        "src": "6558:22:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 123062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6583:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6558:26:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 123071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 123066,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6596:4:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Faucet_$123234",
                                "typeString": "contract Faucet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Faucet_$123234",
                                "typeString": "contract Faucet"
                              }
                            ],
                            "id": 123065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6588:7:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 123064,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6588:7:166",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 123067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6588:13:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 123068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6602:7:166",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6588:21:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 123069,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123055,
                          "src": "6613:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 123070,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6619:16:166",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122693,
                        "src": "6613:22:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "src": "6588:47:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6558:77:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123080,
                  "nodeType": "IfStatement",
                  "src": "6554:148:166",
                  "trueBody": {
                    "id": 123079,
                    "nodeType": "Block",
                    "src": "6637:65:166",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 123074,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123045,
                              "src": "6663:3:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 123075,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123055,
                                "src": "6668:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 123076,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6674:16:166",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122693,
                              "src": "6668:22:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 123073,
                            "name": "_sendNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123233,
                            "src": "6651:11:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 123077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6651:40:166",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 123078,
                        "nodeType": "ExpressionStatement",
                        "src": "6651:40:166"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 123125,
                    "nodeType": "Block",
                    "src": "6746:246:166",
                    "statements": [
                      {
                        "expression": {
                          "id": 123095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 123091,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123055,
                            "src": "6760:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 123092,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 122712,
                              "src": "6768:12:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 123094,
                            "indexExpression": {
                              "id": 123093,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123082,
                              "src": "6781:1:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6768:15:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "src": "6760:23:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 123096,
                        "nodeType": "ExpressionStatement",
                        "src": "6760:23:166"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 123112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 123100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 123097,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123055,
                                "src": "6802:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 123098,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6808:16:166",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122693,
                              "src": "6802:22:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 123099,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6827:1:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6802:26:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 123111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 123106,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6862:4:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$123234",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$123234",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 123105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6854:7:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 123104,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6854:7:166",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 123107,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6854:13:166",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 123101,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 123055,
                                    "src": "6832:5:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                      "typeString": "struct Faucet.FaucetToken memory"
                                    }
                                  },
                                  "id": 123102,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6838:5:166",
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 122691,
                                  "src": "6832:11:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$42297",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 123103,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6844:9:166",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42254,
                                "src": "6832:21:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 123108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6832:36:166",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 123109,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123055,
                                "src": "6872:5:166",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 123110,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6878:16:166",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 122693,
                              "src": "6872:22:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "6832:62:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6802:92:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 123124,
                        "nodeType": "IfStatement",
                        "src": "6798:184:166",
                        "trueBody": {
                          "id": 123123,
                          "nodeType": "Block",
                          "src": "6896:86:166",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 123118,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 123045,
                                    "src": "6939:3:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 123119,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 123055,
                                      "src": "6944:5:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 123120,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6950:16:166",
                                    "memberName": "amountPerRequest",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 122693,
                                    "src": "6944:22:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 123113,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 123055,
                                      "src": "6914:5:166",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 123116,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6920:5:166",
                                    "memberName": "ERC20",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 122691,
                                    "src": "6914:11:166",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$42297",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 123117,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6926:12:166",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 42373,
                                  "src": "6914:24:166",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$42297_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$42297_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 123121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6914:53:166",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 123122,
                              "nodeType": "ExpressionStatement",
                              "src": "6914:53:166"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 123087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 123085,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123082,
                      "src": "6732:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 123086,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123049,
                      "src": "6736:3:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6732:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123126,
                  "initializationExpression": {
                    "assignments": [
                      123082
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 123082,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6725:1:166",
                        "nodeType": "VariableDeclaration",
                        "scope": 123126,
                        "src": "6717:9:166",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123081,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6717:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 123084,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 123083,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6729:1:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6717:13:166"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 123089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6741:3:166",
                      "subExpression": {
                        "id": 123088,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123082,
                        "src": "6743:1:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 123090,
                    "nodeType": "ExpressionStatement",
                    "src": "6741:3:166"
                  },
                  "nodeType": "ForStatement",
                  "src": "6712:280:166"
                }
              ]
            },
            "documentation": {
              "id": 123043,
              "nodeType": "StructuredDocumentation",
              "src": "6207:196:166",
              "text": "@notice Private function to send faucet tokens to the user\n @dev Will only send tokens if the faucet has a sufficient balance\n @param _to The address that will receive the tokens"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_request",
            "nameLocation": "6417:8:166",
            "parameters": {
              "id": 123046,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123045,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6434:3:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123128,
                  "src": "6426:11:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123044,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6426:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6425:13:166"
            },
            "returnParameters": {
              "id": 123047,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6447:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 123160,
            "nodeType": "FunctionDefinition",
            "src": "7194:241:166",
            "nodes": [],
            "body": {
              "id": 123159,
              "nodeType": "Block",
              "src": "7254:181:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 123136,
                            "name": "tokenToIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 122717,
                            "src": "7272:14:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                              "typeString": "mapping(contract IERC20 => uint256)"
                            }
                          },
                          "id": 123139,
                          "indexExpression": {
                            "expression": {
                              "id": 123137,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123132,
                              "src": "7287:6:166",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                                "typeString": "struct Faucet.FaucetToken memory"
                              }
                            },
                            "id": 123138,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7294:5:166",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 122691,
                            "src": "7287:12:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$42297",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7272:28:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 123140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7304:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7272:33:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920612066617563657420746f6b656e",
                        "id": 123142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7307:24:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        },
                        "value": "Already a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        }
                      ],
                      "id": 123135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7264:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7264:68:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123144,
                  "nodeType": "ExpressionStatement",
                  "src": "7264:68:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123148,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123132,
                        "src": "7361:6:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "expression": {
                        "id": 123145,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122712,
                        "src": "7343:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 123147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7356:4:166",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7343:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage_ptr_$_t_struct$_FaucetToken_$122694_storage_$returns$__$attached_to$_t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Faucet.FaucetToken storage ref[] storage pointer,struct Faucet.FaucetToken storage ref)"
                      }
                    },
                    "id": 123149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7343:25:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123150,
                  "nodeType": "ExpressionStatement",
                  "src": "7343:25:166"
                },
                {
                  "expression": {
                    "id": 123157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 123151,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122717,
                        "src": "7378:14:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 123154,
                      "indexExpression": {
                        "expression": {
                          "id": 123152,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123132,
                          "src": "7393:6:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 123153,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7400:5:166",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 122691,
                        "src": "7393:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$42297",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7378:28:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 123155,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 122712,
                        "src": "7409:12:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 123156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7422:6:166",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7409:19:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7378:50:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 123158,
                  "nodeType": "ExpressionStatement",
                  "src": "7378:50:166"
                }
              ]
            },
            "documentation": {
              "id": 123129,
              "nodeType": "StructuredDocumentation",
              "src": "7004:185:166",
              "text": "@notice Private function to add a token to the faucet\n @dev Token needs to be not added to the set yet\n @param _token The token to add, using the FaucetToken structure"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addFaucetToken",
            "nameLocation": "7203:15:166",
            "parameters": {
              "id": 123133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123132,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7238:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123160,
                  "src": "7219:25:166",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FaucetToken_$122694_memory_ptr",
                    "typeString": "struct Faucet.FaucetToken"
                  },
                  "typeName": {
                    "id": 123131,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 123130,
                      "name": "FaucetToken",
                      "nameLocations": [
                        "7219:11:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 122694,
                      "src": "7219:11:166"
                    },
                    "referencedDeclaration": 122694,
                    "src": "7219:11:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$122694_storage_ptr",
                      "typeString": "struct Faucet.FaucetToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7218:27:166"
            },
            "returnParameters": {
              "id": 123134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7254:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 123178,
            "nodeType": "FunctionDefinition",
            "src": "7629:188:166",
            "nodes": [],
            "body": {
              "id": 123177,
              "nodeType": "Block",
              "src": "7692:125:166",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 123167,
                          "name": "_requestCooldown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123163,
                          "src": "7710:16:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 123168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7730:7:166",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        "src": "7710:27:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e73616665207265717565737420636f6f6c646f776e",
                        "id": 123170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7739:25:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        },
                        "value": "Unsafe request cooldown"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        }
                      ],
                      "id": 123166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7702:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7702:63:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123172,
                  "nodeType": "ExpressionStatement",
                  "src": "7702:63:166"
                },
                {
                  "expression": {
                    "id": 123175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 123173,
                      "name": "requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122700,
                      "src": "7776:15:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123174,
                      "name": "_requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123163,
                      "src": "7794:16:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7776:34:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 123176,
                  "nodeType": "ExpressionStatement",
                  "src": "7776:34:166"
                }
              ]
            },
            "documentation": {
              "id": 123161,
              "nodeType": "StructuredDocumentation",
              "src": "7441:183:166",
              "text": "@notice Private function to set the request cooldown for every users\n @dev The new cooldown needs to be greater than 1 hour\n @param _requestCooldown The new cooldown"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRequestCooldown",
            "nameLocation": "7638:19:166",
            "parameters": {
              "id": 123164,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123163,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "7666:16:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123178,
                  "src": "7658:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123162,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7658:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7657:26:166"
            },
            "returnParameters": {
              "id": 123165,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7692:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 123210,
            "nodeType": "FunctionDefinition",
            "src": "8039:257:166",
            "nodes": [],
            "body": {
              "id": 123209,
              "nodeType": "Block",
              "src": "8118:178:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    123188
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123188,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "8136:5:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 123209,
                      "src": "8128:13:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 123187,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8128:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 123192,
                  "initialValue": {
                    "baseExpression": {
                      "id": 123189,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 122717,
                      "src": "8144:14:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$42297_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 123191,
                    "indexExpression": {
                      "id": 123190,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123182,
                      "src": "8159:6:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$42297",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8144:22:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8128:38:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 123196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 123194,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123188,
                          "src": "8185:5:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 123195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8194:1:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8185:10:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 123197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8197:20:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 123193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8177:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8177:41:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123199,
                  "nodeType": "ExpressionStatement",
                  "src": "8177:41:166"
                },
                {
                  "expression": {
                    "id": 123207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 123200,
                          "name": "faucetTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 122712,
                          "src": "8229:12:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FaucetToken_$122694_storage_$dyn_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                          }
                        },
                        "id": 123204,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 123203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 123201,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 123188,
                            "src": "8242:5:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 123202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8250:1:166",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8242:9:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8229:23:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$122694_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref"
                        }
                      },
                      "id": 123205,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8253:16:166",
                      "memberName": "amountPerRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 122693,
                      "src": "8229:40:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 123206,
                      "name": "_amountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 123184,
                      "src": "8272:17:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8229:60:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 123208,
                  "nodeType": "ExpressionStatement",
                  "src": "8229:60:166"
                }
              ]
            },
            "documentation": {
              "id": 123179,
              "nodeType": "StructuredDocumentation",
              "src": "7823:211:166",
              "text": "@notice Private function to set the amount per request of a specific token, designated by its symbol\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAmountPerRequest",
            "nameLocation": "8048:20:166",
            "parameters": {
              "id": 123185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123182,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8076:6:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123210,
                  "src": "8069:13:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$42297",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 123181,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 123180,
                      "name": "IERC20",
                      "nameLocations": [
                        "8069:6:166"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42297,
                      "src": "8069:6:166"
                    },
                    "referencedDeclaration": 42297,
                    "src": "8069:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$42297",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123184,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "8091:17:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123210,
                  "src": "8084:24:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 123183,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8084:6:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8068:41:166"
            },
            "returnParameters": {
              "id": 123186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8118:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 123233,
            "nodeType": "FunctionDefinition",
            "src": "8457:174:166",
            "nodes": [],
            "body": {
              "id": 123232,
              "nodeType": "Block",
              "src": "8516:115:166",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    123219,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 123219,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8532:7:166",
                      "nodeType": "VariableDeclaration",
                      "scope": 123232,
                      "src": "8527:12:166",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 123218,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8527:4:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 123226,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 123224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8569:2:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 123220,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123213,
                          "src": "8544:3:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 123221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8548:4:166",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8544:8:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 123223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 123222,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 123215,
                          "src": "8560:7:166",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8544:24:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 123225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:28:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8526:46:166"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 123228,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 123219,
                        "src": "8590:7:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4154495645207472616e73666572206661696c6564",
                        "id": 123229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8599:24:166",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        },
                        "value": "NATIVE transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        }
                      ],
                      "id": 123227,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8582:7:166",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8582:42:166",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 123231,
                  "nodeType": "ExpressionStatement",
                  "src": "8582:42:166"
                }
              ]
            },
            "documentation": {
              "id": 123211,
              "nodeType": "StructuredDocumentation",
              "src": "8302:150:166",
              "text": "@notice Private function to send `amount` NATIVE to `to`\n @param _to The recipient address\n @param _amount The NATIVE amount to send"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendNative",
            "nameLocation": "8466:11:166",
            "parameters": {
              "id": 123216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123213,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8486:3:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123233,
                  "src": "8478:11:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 123212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:166",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123215,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8499:7:166",
                  "nodeType": "VariableDeclaration",
                  "scope": 123233,
                  "src": "8491:15:166",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123214,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8491:7:166",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8477:30:166"
            },
            "returnParameters": {
              "id": 123217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8516:0:166"
            },
            "scope": 123234,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 122682,
              "name": "Ownable2Step",
              "nameLocations": [
                "694:12:166"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40486,
              "src": "694:12:166"
            },
            "id": 122683,
            "nodeType": "InheritanceSpecifier",
            "src": "694:12:166"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 122681,
          "nodeType": "StructuredDocumentation",
          "src": "238:437:166",
          "text": "@title Faucet contract\n @dev This contract should only be used for testnet\n @notice Create a faucet contract that create test tokens and allow user to request for tokens.\n This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after).\n This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          123234,
          40486,
          40400,
          43029
        ],
        "name": "Faucet",
        "nameLocation": "684:6:166",
        "scope": 123235,
        "usedErrors": [
          40266,
          40271,
          42340,
          42754,
          42759,
          42762
        ],
        "usedEvents": [
          40277,
          40415
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 166
}