{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_nativePerRequest",
          "type": "uint96"
        },
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferStarted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "addFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "faucetTokens",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "ERC20",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "amountPerRequest",
          "type": "uint96"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastRequest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfFaucetTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "operator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeFaucetToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "request",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestCooldown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "_amountPerRequest",
          "type": "uint96"
        }
      ],
      "name": "setAmountPerRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOperator",
          "type": "address"
        }
      ],
      "name": "setOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestCooldown",
          "type": "uint256"
        }
      ],
      "name": "setRequestCooldown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_unlockedRequest",
          "type": "bool"
        }
      ],
      "name": "setUnlockedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unlockedRequest",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526040516200154d3803806200154d83398101604081905262000026916200023c565b826001600160a01b0381166200005757604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b62000062816200009f565b506200006e81620000bd565b60408051808201909152600081526001600160601b0383166020820152620000969062000116565b5050506200029a565b600180546001600160a01b0319169055620000ba81620001ec565b50565b610e10811015620001115760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016200004e565b600355565b80516001600160a01b0316600090815260076020526040902054156200017f5760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016200004e565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000606084860312156200025257600080fd5b83516001600160a01b03811681146200026a57600080fd5b60208501519093506001600160601b03811681146200028857600080fd5b80925050604084015190509250925092565b6112a380620002aa6000396000f3fe6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea26469706673582212205a0b2792dfe0e61631c41134ea2810d388b22515015eacce66dc035ad77da63b64736f6c63430008140033",
    "sourceMap": "698:7958:127:-:0;;;2118:294;;;;;;;;;;;;;;;;;;:::i;:::-;2236:12;-1:-1:-1;;;;;1273:26:26;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:26;;1350:1;1322:31;;;689:51:131;662:18;;1322:31:26;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2264:37:127::1;2284:16:::0;2264:19:::1;:37::i;:::-;2327:77;::::0;;;;::::1;::::0;;;-1:-1:-1;2327:77:127;;-1:-1:-1;;;;;2327:77:127;::::1;;::::0;::::1;::::0;2311:94:::1;::::0;:15:::1;:94::i;:::-;2118:294:::0;;;698:7958;;1886:153:27;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:27;;;1998:34;2023:8;1998:24;:34::i;:::-;1886:153;:::o;7652:188:127:-;7753:7;7733:16;:27;;7725:63;;;;-1:-1:-1;;;7725:63:127;;953:2:131;7725:63:127;;;935:21:131;992:2;972:18;;;965:30;1031:25;1011:18;;;1004:53;1074:18;;7725:63:127;751:347:131;7725:63:127;7799:15;:34;7652:188::o;7217:241::-;7310:12;;-1:-1:-1;;;;;7295:28:127;;;;;:14;:28;;;;;;:33;7287:68;;;;-1:-1:-1;;;7287:68:127;;1305:2:131;7287:68:127;;;1287:21:131;1344:2;1324:18;;;1317:30;1383:24;1363:18;;;1356:52;1425:18;;7287:68:127;1103:346:131;7287:68:127;7366:12;:25;;;;;;;-1:-1:-1;7366:25:127;;;;;;;;;;-1:-1:-1;;;;;7366:25:127;-1:-1:-1;;;7366:25:127;-1:-1:-1;;;;;7366:25:127;;;;;;;;;;;;;;7432:19;;7401:28;;;:14;:28;;;;;;:50;7217:241::o;2912:187:26:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:26;;;-1:-1:-1;;;;;;3020:17:26;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:524:131:-;101:6;109;117;170:2;158:9;149:7;145:23;141:32;138:52;;;186:1;183;176:12;138:52;212:16;;-1:-1:-1;;;;;257:31:131;;247:42;;237:70;;303:1;300;293:12;237:70;376:2;361:18;;355:25;326:5;;-1:-1:-1;;;;;;411:32:131;;399:45;;389:73;;458:1;455;448:12;389:73;481:7;471:17;;;528:2;517:9;513:18;507:25;497:35;;14:524;;;;;:::o;1103:346::-;698:7958:127;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101635760003560e01c80637380f6bd116100c0578063bc3bc40411610074578063f2fde38b11610059578063f2fde38b14610395578063faf034e3146103b5578063fbedbe62146103d557600080fd5b8063bc3bc40414610357578063e30c39781461037757600080fd5b80638da5cb5b116100a55780638da5cb5b14610303578063a9860c8114610321578063b3ab15fb1461033757600080fd5b80637380f6bd146102ce57806379ba5097146102ee57600080fd5b806329954f4311610117578063570ca735116100fc578063570ca735146102545780636fb9584f1461028c578063715018a6146102b957600080fd5b806329954f4314610215578063338cdca11461023f57600080fd5b80630f737c82116101485780630f737c82146101b557806320cca627146101d557806327c78c42146101f557600080fd5b806301e336671461016f5780630d639e031461019157600080fd5b3661016a57005b600080fd5b34801561017b57600080fd5b5061018f61018a36600461109f565b61041c565b005b34801561019d57600080fd5b506006545b6040519081526020015b60405180910390f35b3480156101c157600080fd5b5061018f6101d03660046110e0565b610455565b3480156101e157600080fd5b5061018f6101f0366004611133565b61046b565b34801561020157600080fd5b5061018f610210366004611150565b610486565b34801561022157600080fd5b5060045461022f9060ff1681565b60405190151581526020016101ac565b34801561024b57600080fd5b5061018f61057f565b34801561026057600080fd5b50600254610274906001600160a01b031681565b6040516001600160a01b0390911681526020016101ac565b34801561029857600080fd5b506101a26102a7366004611150565b60056020526000908152604090205481565b3480156102c557600080fd5b5061018f6106ab565b3480156102da57600080fd5b5061018f6102e93660046110e0565b6106bf565b3480156102fa57600080fd5b5061018f6106f6565b34801561030f57600080fd5b506000546001600160a01b0316610274565b34801561032d57600080fd5b506101a260035481565b34801561034357600080fd5b5061018f610352366004611150565b610737565b34801561036357600080fd5b5061018f61037236600461116d565b610761565b34801561038357600080fd5b506001546001600160a01b0316610274565b3480156103a157600080fd5b5061018f6103b0366004611150565b610772565b3480156103c157600080fd5b5061018f6103d0366004611150565b6107e3565b3480156103e157600080fd5b506103f56103f036600461116d565b61097c565b604080516001600160a01b0390931683526001600160601b039091166020830152016101ac565b6104246109b7565b6001600160a01b0383166104415761043c82826109e4565b505050565b61043c6001600160a01b0384168383610a87565b61045d6109b7565b6104678282610aee565b5050565b6104736109b7565b6004805460ff1916911515919091179055565b6002546001600160a01b031633146104e55760405162461bcd60e51b815260206004820152600d60248201527f4f6e6c79206f70657261746f720000000000000000000000000000000000000060448201526064015b60405180910390fd5b6003546001600160a01b038216600090815260056020526040902054829161050c9161119c565b42101561055b5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b6001600160a01b038216600090815260056020526040902042905561046782610bab565b3233146105ce5760405162461bcd60e51b815260206004820152600860248201527f4f6e6c7920454f4100000000000000000000000000000000000000000000000060448201526064016104dc565b60045460ff166106205760405162461bcd60e51b815260206004820152601860248201527f4469726563742072657175657374206973206c6f636b6564000000000000000060448201526064016104dc565b60035433600081815260056020526040902054909161063e9161119c565b42101561068d5760405162461bcd60e51b815260206004820152601160248201527f546f6f206d616e7920726571756573747300000000000000000000000000000060448201526064016104dc565b3360008181526005602052604090204290556106a890610bab565b50565b6106b36109b7565b6106bd6000610d58565b565b6106c76109b7565b6104676040518060400160405280846001600160a01b03168152602001836001600160601b0316815250610d71565b60015433906001600160a01b0316811461072e5760405163118cdaa760e01b81526001600160a01b03821660048201526024016104dc565b6106a881610d58565b61073f6109b7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6107696109b7565b6106a881610e45565b61077a6109b7565b600180546001600160a01b0383166001600160a01b031990911681179091556107ab6000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6107eb6109b7565b6001600160a01b03811660009081526007602052604090205460028110156108555760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b600654600090610867906001906111af565b905080610873836111c2565b9250821461093d57600060068281548110610890576108906111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b031691810191909152600680549192508291859081106108e4576108e46111d9565b6000918252602091829020835193909201516001600160601b0316600160a01b026001600160a01b039093169290921791015561092283600161119c565b90516001600160a01b03166000908152600760205260409020555b60068181548110610950576109506111d9565b600091825260208083209091018290556001600160a01b03949094168152600790935250506040812055565b6006818154811061098c57600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b90046001600160601b031682565b6000546001600160a01b031633146106bd5760405163118cdaa760e01b81523360048201526024016104dc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610a31576040519150601f19603f3d011682016040523d82523d6000602084013e610a36565b606091505b505090508061043c5760405162461bcd60e51b815260206004820152601660248201527f4e4154495645207472616e73666572206661696c65640000000000000000000060448201526064016104dc565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b17905261043c908490610e9c565b6001600160a01b03821660009081526007602052604081205490819003610b575760405162461bcd60e51b815260206004820152601260248201527f4e6f7420612066617563657420746f6b656e000000000000000000000000000060448201526064016104dc565b816006610b656001846111af565b81548110610b7557610b756111d9565b9060005260206000200160000160146101000a8154816001600160601b0302191690836001600160601b03160217905550505050565b60068054906000908183610bc157610bc16111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052915015801590610c18575080602001516001600160601b03164710155b15610c3457610c348382602001516001600160601b03166109e4565b60015b82811015610d525760068181548110610c5257610c526111d9565b6000918252602091829020604080518082019091529101546001600160a01b0381168252600160a01b90046001600160601b0316918101829052925015801590610d165750602082015182516040516370a0823160e01b81523060048201526001600160601b03909216916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610cef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d1391906111ef565b10155b15610d425760208201518251610d42916001600160a01b039091169086906001600160601b0316610a87565b610d4b81611208565b9050610c37565b50505050565b600180546001600160a01b03191690556106a881610eff565b80516001600160a01b031660009081526007602052604090205415610dd85760405162461bcd60e51b815260206004820152601660248201527f416c726561647920612066617563657420746f6b656e0000000000000000000060448201526064016104dc565b60068054600181018255600082815283516020948501516001600160601b0316600160a01b026001600160a01b039091169081177ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90930192909255915490825260079092526040902055565b610e10811015610e975760405162461bcd60e51b815260206004820152601760248201527f556e73616665207265717565737420636f6f6c646f776e00000000000000000060448201526064016104dc565b600355565b6000610eb16001600160a01b03841683610f4f565b90508051600014158015610ed6575080806020019051810190610ed49190611221565b155b1561043c57604051635274afe760e01b81526001600160a01b03841660048201526024016104dc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060610f5d83836000610f66565b90505b92915050565b606081471015610f8b5760405163cd78605960e01b81523060048201526024016104dc565b600080856001600160a01b03168486604051610fa7919061123e565b60006040518083038185875af1925050503d8060008114610fe4576040519150601f19603f3d011682016040523d82523d6000602084013e610fe9565b606091505b5091509150610ff9868383611005565b925050505b9392505050565b60608261101a5761101582611061565b610ffe565b815115801561103157506001600160a01b0384163b155b1561105a57604051639996b31560e01b81526001600160a01b03851660048201526024016104dc565b5080610ffe565b8051156110715780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b6001600160a01b03811681146106a857600080fd5b6000806000606084860312156110b457600080fd5b83356110bf8161108a565b925060208401356110cf8161108a565b929592945050506040919091013590565b600080604083850312156110f357600080fd5b82356110fe8161108a565b915060208301356001600160601b038116811461111a57600080fd5b809150509250929050565b80151581146106a857600080fd5b60006020828403121561114557600080fd5b8135610ffe81611125565b60006020828403121561116257600080fd5b8135610ffe8161108a565b60006020828403121561117f57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b80820180821115610f6057610f60611186565b81810381811115610f6057610f60611186565b6000816111d1576111d1611186565b506000190190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561120157600080fd5b5051919050565b60006001820161121a5761121a611186565b5060010190565b60006020828403121561123357600080fd5b8151610ffe81611125565b6000825160005b8181101561125f5760208186018101518583015201611245565b50600092019182525091905056fea26469706673582212205a0b2792dfe0e61631c41134ea2810d388b22515015eacce66dc035ad77da63b64736f6c63430008140033",
    "sourceMap": "698:7958:127:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5539:212;;;;;;;;;;-1:-1:-1;5539:212:127;;;;;:::i;:::-;;:::i;:::-;;2568:107;;;;;;;;;;-1:-1:-1;2649:12:127;:19;2568:107;;;820:25:131;;;808:2;793:18;2568:107:127;;;;;;;;5114:153;;;;;;;;;;-1:-1:-1;5114:153:127;;;;;:::i;:::-;;:::i;6103:121::-;;;;;;;;;;-1:-1:-1;6103:121:127;;;;;:::i;:::-;;:::i;3295:146::-;;;;;;;;;;-1:-1:-1;3295:146:127;;;;;:::i;:::-;;:::i;1131:27::-;;;;;;;;;;-1:-1:-1;1131:27:127;;;;;;;;;;;2114:14:131;;2107:22;2089:41;;2077:2;2062:18;1131:27:127;1949:187:131;2840:169:127;;;;;;;;;;;;;:::i;1005:23::-;;;;;;;;;;-1:-1:-1;1005:23:127;;;;-1:-1:-1;;;;;1005:23:127;;;;;;-1:-1:-1;;;;;2305:55:131;;;2287:74;;2275:2;2260:18;1005:23:127;2141:226:131;1219:46:127;;;;;;;;;;-1:-1:-1;1219:46:127;;;;;:::i;:::-;;;;;;;;;;;;;;2293:101:26;;;;;;;;;;;;;:::i;3675:183:127:-;;;;;;;;;;-1:-1:-1;3675:183:127;;;;;:::i;:::-;;:::i;2119:229:27:-;;;;;;;;;;;;;:::i;1638:85:26:-;;;;;;;;;;-1:-1:-1;1684:7:26;1710:6;-1:-1:-1;;;;;1710:6:26;1638:85;;1094:30:127;;;;;;;;;;;;;;;;5865:102;;;;;;;;;;-1:-1:-1;5865:102:127;;;;;:::i;:::-;;:::i;4726:127::-;;;;;;;;;;-1:-1:-1;4726:127:127;;;;;:::i;:::-;;:::i;1232:99:27:-;;;;;;;;;;-1:-1:-1;1311:13:27;;-1:-1:-1;;;;;1311:13:27;1232:99;;1524:178;;;;;;;;;;-1:-1:-1;1524:178:27;;;;;:::i;:::-;;:::i;4029:526:127:-;;;;;;;;;;-1:-1:-1;4029:526:127;;;;;:::i;:::-;;:::i;1343:33::-;;;;;;;;;;-1:-1:-1;1343:33:127;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;3039:55:131;;;3021:74;;-1:-1:-1;;;;;3131:39:131;;;3126:2;3111:18;;3104:67;2994:18;1343:33:127;2833:344:131;5539:212:127;1531:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;5640:29:127;::::1;5636:108;;5671:25;5683:3;5688:7;5671:11;:25::i;:::-;5539:212:::0;;;:::o;5636:108::-:1;5711:33;-1:-1:-1::0;;;;;5711:19:127;::::1;5731:3:::0;5736:7;5711:19:::1;:33::i;5114:153::-:0;1531:13:26;:11;:13::i;:::-;5213:47:127::1;5234:6;5242:17;5213:20;:47::i;:::-;5114:153:::0;;:::o;6103:121::-;1531:13:26;:11;:13::i;:::-;6183:15:127::1;:34:::0;;-1:-1:-1;;6183:34:127::1;::::0;::::1;;::::0;;;::::1;::::0;;6103:121::o;3295:146::-;1486:8;;-1:-1:-1;;;;;1486:8:127;1472:10;:22;1464:48;;;;-1:-1:-1;;;1464:48:127;;3384:2:131;1464:48:127;;;3366:21:131;3423:2;3403:18;;;3396:30;3462:15;3442:18;;;3435:43;3495:18;;1464:48:127;;;;;;;;;1630:15:::1;::::0;-1:-1:-1;;;;;1610:17:127;::::1;;::::0;;;:11:::1;:17;::::0;;;;;3361:3;;1610:35:::1;::::0;::::1;:::i;:::-;1591:15;:54;;1583:84;;;::::0;-1:-1:-1;;;1583:84:127;;3988:2:131;1583:84:127::1;::::0;::::1;3970:21:131::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1583:84:127::1;3786:341:131::0;1583:84:127::1;-1:-1:-1::0;;;;;3376:16:127;::::2;;::::0;;;:11:::2;:16;::::0;;;;3395:15:::2;3376:34:::0;;3421:13:::2;3388:3:::0;3421:8:::2;:13::i;2840:169::-:0;1728:9;1741:10;1728:23;1720:44;;;;-1:-1:-1;;;1720:44:127;;4334:2:131;1720:44:127;;;4316:21:131;4373:1;4353:18;;;4346:29;4411:10;4391:18;;;4384:38;4439:18;;1720:44:127;4132:331:131;1720:44:127;1835:15:::1;::::0;::::1;;1827:52;;;::::0;-1:-1:-1;;;1827:52:127;;4670:2:131;1827:52:127::1;::::0;::::1;4652:21:131::0;4709:2;4689:18;;;4682:30;4748:26;4728:18;;;4721:54;4792:18;;1827:52:127::1;4468:348:131::0;1827:52:127::1;1630:15:::2;::::0;2908:10:::2;1610:17;::::0;;;:11:::2;:17;::::0;;;;;2908:10;;1610:35:::2;::::0;::::2;:::i;:::-;1591:15;:54;;1583:84;;;::::0;-1:-1:-1;;;1583:84:127;;3988:2:131;1583:84:127::2;::::0;::::2;3970:21:131::0;4027:2;4007:18;;;4000:30;4066:19;4046:18;;;4039:47;4103:18;;1583:84:127::2;3786:341:131::0;1583:84:127::2;2942:10:::3;2930:23;::::0;;;:11:::3;:23;::::0;;;;2956:15:::3;2930:41:::0;;2982:20:::3;::::0;:8:::3;:20::i;:::-;1889:1:::2;2840:169::o:0;2293:101:26:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3675:183:127:-;1531:13:26;:11;:13::i;:::-;3769:82:127::1;3785:65;;;;;;;;3805:6;-1:-1:-1::0;;;;;3785:65:127::1;;;;;3831:17;-1:-1:-1::0;;;;;3785:65:127::1;;;::::0;3769:15:::1;:82::i;2119:229:27:-:0;1311:13;;735:10:38;;-1:-1:-1;;;;;1311:13:27;2214:24;;2210:96;;2261:34;;-1:-1:-1;;;2261:34:27;;-1:-1:-1;;;;;2305:55:131;;2261:34:27;;;2287:74:131;2260:18;;2261:34:27;2141:226:131;2210:96:27;2315:26;2334:6;2315:18;:26::i;5865:102:127:-;1531:13:26;:11;:13::i;:::-;5937:8:127::1;:23:::0;;-1:-1:-1;;;;;;5937:23:127::1;-1:-1:-1::0;;;;;5937:23:127;;;::::1;::::0;;;::::1;::::0;;5865:102::o;4726:127::-;1531:13:26;:11;:13::i;:::-;4809:37:127::1;4829:16;4809:19;:37::i;1524:178:27:-:0;1531:13:26;:11;:13::i;:::-;1613::27::1;:24:::0;;-1:-1:-1;;;;;1613:24:27;::::1;-1:-1:-1::0;;;;;;1613:24:27;;::::1;::::0;::::1;::::0;;;1677:7:::1;1684::26::0;1710:6;-1:-1:-1;;;;;1710:6:26;;1638:85;1677:7:27::1;-1:-1:-1::0;;;;;1652:43:27::1;;;;;;;;;;;1524:178:::0;:::o;4029:526:127:-;1531:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;4116:22:127;::::1;4100:13;4116:22:::0;;;:14:::1;:22;::::0;;;;;4166:1:::1;4157:10:::0;::::1;;4149:41;;;::::0;-1:-1:-1;;;4149:41:127;;5023:2:131;4149:41:127::1;::::0;::::1;5005:21:131::0;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;4149:41:127::1;4821:342:131::0;4149:41:127::1;4221:12;:19:::0;4201:17:::1;::::0;4221:23:::1;::::0;4243:1:::1;::::0;4221:23:::1;:::i;:::-;4201:43:::0;-1:-1:-1;4201:43:127;4258:7:::1;::::0;::::1;:::i;:::-;;;;:20;4254:215;;4294:30;4327:12;4340:9;4327:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;4294:56:::1;::::0;;;;::::1;::::0;;;4327:23;::::1;4294:56:::0;-1:-1:-1;;;;;4294:56:127;::::1;::::0;;-1:-1:-1;;;4294:56:127;::::1;-1:-1:-1::0;;;;;4294:56:127::1;::::0;;::::1;::::0;;;;4365:12:::1;:19:::0;;4294:56;;-1:-1:-1;4294:56:127;;4378:5;;4365:19;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;:33;;;;;::::1;::::0;-1:-1:-1;;;;;4365:33:127::1;-1:-1:-1::0;;;4365:33:127::1;-1:-1:-1::0;;;;;4365:33:127;;::::1;::::0;;;::::1;:19:::0;::::1;:33:::0;4449:9:::1;:5:::0;4365:33;4449:9:::1;:::i;:::-;4428:17:::0;;-1:-1:-1;;;;;4413:33:127::1;;::::0;;;:14:::1;:33;::::0;;;;:45;4254:215:::1;4486:12;4499:9;4486:23;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;::::1;4479:30:::0;;;-1:-1:-1;;;;;4526:22:127;;;::::1;::::0;;:14:::1;:22:::0;;;-1:-1:-1;;4526:22:127;;;4519:29;4029:526::o;1343:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1343:33:127;;;-1:-1:-1;;;;1343:33:127;;-1:-1:-1;;;;;1343:33:127;;:::o;1796:162:26:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:26;735:10:38;1855:23:26;1851:101;;1901:40;;-1:-1:-1;;;1901:40:26;;735:10:38;1901:40:26;;;2287:74:131;2260:18;;1901:40:26;2141:226:131;8480:174:127;8550:12;8567:3;-1:-1:-1;;;;;8567:8:127;8583:7;8567:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8549:46;;;8613:7;8605:42;;;;-1:-1:-1;;;8605:42:127;;5986:2:131;8605:42:127;;;5968:21:131;6025:2;6005:18;;;5998:30;6064:24;6044:18;;;6037:52;6106:18;;8605:42:127;5784:346:131;1303:160:36;1412:43;;;-1:-1:-1;;;;;6327:55:131;;1412:43:36;;;6309:74:131;6399:18;;;;6392:34;;;1412:43:36;;;;;;;;;;6282:18:131;;;;1412:43:36;;;;;;;;;;-1:-1:-1;;;1412:43:36;;;1385:71;;1405:5;;1385:19;:71::i;8062:257:127:-;-1:-1:-1;;;;;8167:22:127;;8151:13;8167:22;;;:14;:22;;;;;;;8208:10;;;8200:41;;;;-1:-1:-1;;;8200:41:127;;5023:2:131;8200:41:127;;;5005:21:131;5062:2;5042:18;;;5035:30;5101:20;5081:18;;;5074:48;5139:18;;8200:41:127;4821:342:131;8200:41:127;8295:17;8252:12;8265:9;8273:1;8265:5;:9;:::i;:::-;8252:23;;;;;;;;:::i;:::-;;;;;;;;:40;;;:60;;;;;-1:-1:-1;;;;;8252:60:127;;;;;-1:-1:-1;;;;;8252:60:127;;;;;;8141:178;8062:257;;:::o;6431:590::-;6494:12;:19;;;6480:11;;;6551:15;;;;;:::i;:::-;;;;;;;;;;6524:42;;;;;;;;;6551:15;;6524:42;-1:-1:-1;;;;;6524:42:127;;;;-1:-1:-1;;;6524:42:127;;-1:-1:-1;;;;;6524:42:127;;;;;;;;-1:-1:-1;6581:26:127;;;;:77;;;6636:5;:22;;;-1:-1:-1;;;;;6611:47:127;:21;:47;;6581:77;6577:148;;;6674:40;6686:3;6691:5;:22;;;-1:-1:-1;;;;;6674:40:127;:11;:40::i;:::-;6752:1;6735:280;6759:3;6755:1;:7;6735:280;;;6791:12;6804:1;6791:15;;;;;;;;:::i;:::-;;;;;;;;;;6783:23;;;;;;;;;6791:15;;6783:23;-1:-1:-1;;;;;6783:23:127;;;;-1:-1:-1;;;6783:23:127;;-1:-1:-1;;;;;6783:23:127;;;;;;;;-1:-1:-1;6825:26:127;;;;:92;;-1:-1:-1;6895:22:127;;;;6855:11;;:36;;-1:-1:-1;;;6855:36:127;;6885:4;6855:36;;;2287:74:131;-1:-1:-1;;;;;6855:62:127;;;;-1:-1:-1;;;;;6855:21:127;;;;;;2260:18:131;;6855:36:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:62;;6825:92;6821:184;;;6967:22;;;;6937:11;;:53;;-1:-1:-1;;;;;6937:24:127;;;;6962:3;;-1:-1:-1;;;;;6937:53:127;:24;:53::i;:::-;6764:3;;;:::i;:::-;;;6735:280;;;;6470:551;;6431:590;:::o;1886:153:27:-;1975:13;1968:20;;-1:-1:-1;;;;;;1968:20:27;;;1998:34;2023:8;1998:24;:34::i;7217:241:127:-;7310:12;;-1:-1:-1;;;;;7295:28:127;;;;;:14;:28;;;;;;:33;7287:68;;;;-1:-1:-1;;;7287:68:127;;6968:2:131;7287:68:127;;;6950:21:131;7007:2;6987:18;;;6980:30;7046:24;7026:18;;;7019:52;7088:18;;7287:68:127;6766:346:131;7287:68:127;7366:12;:25;;;;;;;-1:-1:-1;7366:25:127;;;;;;;;;;-1:-1:-1;;;;;7366:25:127;-1:-1:-1;;;7366:25:127;-1:-1:-1;;;;;7366:25:127;;;;;;;;;;;;;;7432:19;;7401:28;;;:14;:28;;;;;;:50;7217:241::o;7652:188::-;7753:7;7733:16;:27;;7725:63;;;;-1:-1:-1;;;7725:63:127;;7319:2:131;7725:63:127;;;7301:21:131;7358:2;7338:18;;;7331:30;7397:25;7377:18;;;7370:53;7440:18;;7725:63:127;7117:347:131;7725:63:127;7799:15;:34;7652:188::o;6468:629:36:-;6887:23;6913:33;-1:-1:-1;;;;;6913:27:36;;6941:4;6913:27;:33::i;:::-;6887:59;;6960:10;:17;6981:1;6960:22;;:57;;;;;6998:10;6987:30;;;;;;;;;;;;:::i;:::-;6986:31;6960:57;6956:135;;;7040:40;;-1:-1:-1;;;7040:40:36;;-1:-1:-1;;;;;2305:55:131;;7040:40:36;;;2287:74:131;2260:18;;7040:40:36;2141:226:131;2912:187:26;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:26;;;-1:-1:-1;;;;;;3020:17:26;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;2705:151:37:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:37;;3394:4;3359:41;;;2287:74:131;2260:18;;3359:41:37;2141:226:131;3303:108:37;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:37;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:37;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:37;;-1:-1:-1;;;;;2305:55:131;;5121:24:37;;;2287:74:131;2260:18;;5121:24:37;2141:226:131;5041:119:37;-1:-1:-1;5180:10:37;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:37;;;;;;;;;;;14:162:131;-1:-1:-1;;;;;101:5:131;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:488;274:6;282;290;343:2;331:9;322:7;318:23;314:32;311:52;;;359:1;356;349:12;311:52;398:9;385:23;417:39;450:5;417:39;:::i;:::-;475:5;-1:-1:-1;532:2:131;517:18;;504:32;545:41;504:32;545:41;:::i;:::-;181:488;;605:7;;-1:-1:-1;;;659:2:131;644:18;;;;631:32;;181:488::o;856:459::-;939:6;947;1000:2;988:9;979:7;975:23;971:32;968:52;;;1016:1;1013;1006:12;968:52;1055:9;1042:23;1074:39;1107:5;1074:39;:::i;:::-;1132:5;-1:-1:-1;1189:2:131;1174:18;;1161:32;-1:-1:-1;;;;;1224:40:131;;1212:53;;1202:81;;1279:1;1276;1269:12;1202:81;1302:7;1292:17;;;856:459;;;;;:::o;1320:118::-;1406:5;1399:13;1392:21;1385:5;1382:32;1372:60;;1428:1;1425;1418:12;1443:241;1499:6;1552:2;1540:9;1531:7;1527:23;1523:32;1520:52;;;1568:1;1565;1558:12;1520:52;1607:9;1594:23;1626:28;1648:5;1626:28;:::i;1689:255::-;1748:6;1801:2;1789:9;1780:7;1776:23;1772:32;1769:52;;;1817:1;1814;1807:12;1769:52;1856:9;1843:23;1875:39;1908:5;1875:39;:::i;2372:180::-;2431:6;2484:2;2472:9;2463:7;2459:23;2455:32;2452:52;;;2500:1;2497;2490:12;2452:52;-1:-1:-1;2523:23:131;;2372:180;-1:-1:-1;2372:180:131:o;3524:127::-;3585:10;3580:3;3576:20;3573:1;3566:31;3616:4;3613:1;3606:15;3640:4;3637:1;3630:15;3656:125;3721:9;;;3742:10;;;3739:36;;;3755:18;;:::i;5168:128::-;5235:9;;;5256:11;;;5253:37;;;5270:18;;:::i;5301:136::-;5340:3;5368:5;5358:39;;5377:18;;:::i;:::-;-1:-1:-1;;;5413:18:131;;5301:136::o;5442:127::-;5503:10;5498:3;5494:20;5491:1;5484:31;5534:4;5531:1;5524:15;5558:4;5555:1;5548:15;6437:184;6507:6;6560:2;6548:9;6539:7;6535:23;6531:32;6528:52;;;6576:1;6573;6566:12;6528:52;-1:-1:-1;6599:16:131;;6437:184;-1:-1:-1;6437:184:131:o;6626:135::-;6665:3;6686:17;;;6683:43;;6706:18;;:::i;:::-;-1:-1:-1;6753:1:131;6742:13;;6626:135::o;7469:245::-;7536:6;7589:2;7577:9;7568:7;7564:23;7560:32;7557:52;;;7605:1;7602;7595:12;7557:52;7637:9;7631:16;7656:28;7678:5;7656:28;:::i;7719:412::-;7848:3;7886:6;7880:13;7911:1;7921:129;7935:6;7932:1;7929:13;7921:129;;;8033:4;8017:14;;;8013:25;;8007:32;7994:11;;;7987:53;7950:12;7921:129;;;-1:-1:-1;8105:1:131;8069:16;;8094:13;;;-1:-1:-1;8069:16:131;7719:412;-1:-1:-1;7719:412:131:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "acceptOwnership()": "79ba5097",
    "addFaucetToken(address,uint96)": "7380f6bd",
    "faucetTokens(uint256)": "fbedbe62",
    "lastRequest(address)": "6fb9584f",
    "numberOfFaucetTokens()": "0d639e03",
    "operator()": "570ca735",
    "owner()": "8da5cb5b",
    "pendingOwner()": "e30c3978",
    "removeFaucetToken(address)": "faf034e3",
    "renounceOwnership()": "715018a6",
    "request()": "338cdca1",
    "request(address)": "27c78c42",
    "requestCooldown()": "a9860c81",
    "setAmountPerRequest(address,uint96)": "0f737c82",
    "setOperator(address)": "b3ab15fb",
    "setRequestCooldown(uint256)": "bc3bc404",
    "setUnlockedRequest(bool)": "20cca627",
    "transferOwnership(address)": "f2fde38b",
    "unlockedRequest()": "29954f43",
    "withdrawToken(address,address,uint256)": "01e33667"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_nativePerRequest\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"addFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"faucetTokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"ERC20\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amountPerRequest\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfFaucetTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeFaucetToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"request\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestCooldown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_amountPerRequest\",\"type\":\"uint96\"}],\"name\":\"setAmountPerRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestCooldown\",\"type\":\"uint256\"}],\"name\":\"setRequestCooldown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_unlockedRequest\",\"type\":\"bool\"}],\"name\":\"setUnlockedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockedRequest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Trader Joe\",\"details\":\"This contract should only be used for testnet\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"addFaucetToken(address,uint96)\":{\"details\":\"Tokens need to be owned by the faucet, and only mintable by the owner\",\"params\":{\"_amountPerRequest\":\"The amount per request\",\"_token\":\"The address of the token\"}},\"constructor\":{\"params\":{\"_nativePerRequest\":\"The native received per request\",\"_requestCooldown\":\"The request cooldown\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"removeFaucetToken(address)\":{\"details\":\"Token needs to be in the set, and NATIVE can't be removed\",\"params\":{\"_token\":\"The address of the token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"request()\":{\"details\":\"Can be called only once per `requestCooldown` seconds\"},\"request(address)\":{\"details\":\"Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator\",\"params\":{\"_to\":\"The address that will receive the tokens\"}},\"setAmountPerRequest(address,uint96)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amountPerRequest\":\"The new amount per request\",\"_token\":\"The address of the token\"}},\"setOperator(address)\":{\"params\":{\"_newOperator\":\"The address of the new operator\"}},\"setRequestCooldown(uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_requestCooldown\":\"The new cooldown\"}},\"setUnlockedRequest(bool)\":{\"params\":{\"_unlockedRequest\":\"The address of the new operator\"}},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner.\"},\"withdrawToken(address,address,uint256)\":{\"details\":\"This function needs to be called by the owner\",\"params\":{\"_amount\":\"The token amount to send\",\"_to\":\"The recipient address\",\"_token\":\"The address of the token to withdraw\"}}},\"title\":\"Faucet contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addFaucetToken(address,uint96)\":{\"notice\":\"Add a token to the faucet\"},\"constructor\":{\"notice\":\"Constructor of the faucet, set the request cooldown and add native to the faucet\"},\"faucetTokens(uint256)\":{\"notice\":\"faucet tokens set, custom to be able to use structures\"},\"lastRequest(address)\":{\"notice\":\"last time a user has requested tokens\"},\"numberOfFaucetTokens()\":{\"notice\":\"Returns the number of tokens given by the faucet\"},\"operator()\":{\"notice\":\"The address of the operator that can call request for other address\"},\"removeFaucetToken(address)\":{\"notice\":\"Remove a token from the faucet\"},\"request()\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"request(address)\":{\"notice\":\"User needs to call this function in order to receive test tokens and native\"},\"requestCooldown()\":{\"notice\":\"The minimum time needed between 2 requests\"},\"setAmountPerRequest(address,uint96)\":{\"notice\":\"Set the amount per request of a specific token, designated by its symbol\"},\"setOperator(address)\":{\"notice\":\"Set the address of the operator\"},\"setRequestCooldown(uint256)\":{\"notice\":\"Set the request cooldown for every users\"},\"setUnlockedRequest(bool)\":{\"notice\":\"Set whether the direct request is unlocked or not\"},\"withdrawToken(address,address,uint256)\":{\"notice\":\"Withdraw `amount` of token `token` to `to`\"}},\"notice\":\"Create a faucet contract that create test tokens and allow user to request for tokens. This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after). This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/mocks/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7\",\"dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73\",\"dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009\",\"dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488\",\"dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e\",\"dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX\"]},\"test/mocks/Faucet.sol\":{\"keccak256\":\"0x8e27e749610bd7f9e90a370767a46047b2135f44262944d072d091b10a764ab1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8b169b0a582ad726c40ea4b01dd242c30c12dc9480de917b22898633f436537\",\"dweb:/ipfs/QmWNuNBfqhgZQkMMigsJQsMzcUuL8neRaySvATNK9WVnya\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_nativePerRequest",
              "type": "uint96"
            },
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "acceptOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addFaucetToken"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "faucetTokens",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "ERC20",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "amountPerRequest",
              "type": "uint96"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastRequest",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numberOfFaucetTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "operator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeFaucetToken"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "request"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "requestCooldown",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_amountPerRequest",
              "type": "uint96"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAmountPerRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_newOperator",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOperator"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_requestCooldown",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setRequestCooldown"
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "_unlockedRequest",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUnlockedRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "unlockedRequest",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawToken"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "acceptOwnership()": {
            "details": "The new owner accepts the ownership transfer."
          },
          "addFaucetToken(address,uint96)": {
            "details": "Tokens need to be owned by the faucet, and only mintable by the owner",
            "params": {
              "_amountPerRequest": "The amount per request",
              "_token": "The address of the token"
            }
          },
          "constructor": {
            "params": {
              "_nativePerRequest": "The native received per request",
              "_requestCooldown": "The request cooldown"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pendingOwner()": {
            "details": "Returns the address of the pending owner."
          },
          "removeFaucetToken(address)": {
            "details": "Token needs to be in the set, and NATIVE can't be removed",
            "params": {
              "_token": "The address of the token"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "request()": {
            "details": "Can be called only once per `requestCooldown` seconds"
          },
          "request(address)": {
            "details": "Can be called only once per `requestCooldown` seconds for every address Can only be called by the operator",
            "params": {
              "_to": "The address that will receive the tokens"
            }
          },
          "setAmountPerRequest(address,uint96)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amountPerRequest": "The new amount per request",
              "_token": "The address of the token"
            }
          },
          "setOperator(address)": {
            "params": {
              "_newOperator": "The address of the new operator"
            }
          },
          "setRequestCooldown(uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_requestCooldown": "The new cooldown"
            }
          },
          "setUnlockedRequest(bool)": {
            "params": {
              "_unlockedRequest": "The address of the new operator"
            }
          },
          "transferOwnership(address)": {
            "details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner."
          },
          "withdrawToken(address,address,uint256)": {
            "details": "This function needs to be called by the owner",
            "params": {
              "_amount": "The token amount to send",
              "_to": "The recipient address",
              "_token": "The address of the token to withdraw"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addFaucetToken(address,uint96)": {
            "notice": "Add a token to the faucet"
          },
          "constructor": {
            "notice": "Constructor of the faucet, set the request cooldown and add native to the faucet"
          },
          "faucetTokens(uint256)": {
            "notice": "faucet tokens set, custom to be able to use structures"
          },
          "lastRequest(address)": {
            "notice": "last time a user has requested tokens"
          },
          "numberOfFaucetTokens()": {
            "notice": "Returns the number of tokens given by the faucet"
          },
          "operator()": {
            "notice": "The address of the operator that can call request for other address"
          },
          "removeFaucetToken(address)": {
            "notice": "Remove a token from the faucet"
          },
          "request()": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "request(address)": {
            "notice": "User needs to call this function in order to receive test tokens and native"
          },
          "requestCooldown()": {
            "notice": "The minimum time needed between 2 requests"
          },
          "setAmountPerRequest(address,uint96)": {
            "notice": "Set the amount per request of a specific token, designated by its symbol"
          },
          "setOperator(address)": {
            "notice": "Set the address of the operator"
          },
          "setRequestCooldown(uint256)": {
            "notice": "Set the request cooldown for every users"
          },
          "setUnlockedRequest(bool)": {
            "notice": "Set whether the direct request is unlocked or not"
          },
          "withdrawToken(address,address,uint256)": {
            "notice": "Withdraw `amount` of token `token` to `to`"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/mocks/Faucet.sol": "Faucet"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol": {
        "keccak256": "0x08b074ae1b12e70ce24d1335086ec5a418934311a6771d9f61fe24d392050e12",
        "urls": [
          "bzz-raw://e2fd900a8f8244fc0a49bae1ca1bd5815884f248a2306b8e7dc68011c25803b7",
          "dweb:/ipfs/Qmd4EaujSR74x7EqziRDfqgc6Tv2nzRQDSaxKXcU1ybxbA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol": {
        "keccak256": "0x9f21f1bcc51daf7fe3998608d7eeb96b16a9c3816898a0cf6a9407bd105c9253",
        "urls": [
          "bzz-raw://71cd1acb2370851314e9e2fc84123228e468037435eea0ed1c459346a214ce73",
          "dweb:/ipfs/QmXw5XVVnrjX3m224Zs9jdQVY3abwiCEVBjk9w24DXsFSi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol": {
        "keccak256": "0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c",
        "urls": [
          "bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba",
          "dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xee2337af2dc162a973b4be6d3f7c16f06298259e0af48c5470d2839bfa8a22f4",
        "urls": [
          "bzz-raw://30c476b4b2f405c1bb3f0bae15b006d129c80f1bfd9d0f2038160a3bb9745009",
          "dweb:/ipfs/Qmb3VcuDufv6xbHeVgksC4tHpc5gKYVqBEwjEXW72XzSvN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xde02e3a80c5c3b3a2187fbfbdfc7ed7c8c0d5b2e4a0ff5671611674b6c96bd91",
        "urls": [
          "bzz-raw://44b4a6161c6b718c37229643c8e6881b82b14dbcf7ea1b0b081fbc7b810e3488",
          "dweb:/ipfs/QmUAxfrzeBusBHRkCfgzvD8axBKvdmtWz9rb52rYBH5K1w"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xc859863e3bda7ec3cddf6dafe2ffe91bcbe648d1395b856b839c32ee9617c44c",
        "urls": [
          "bzz-raw://a9d5417888b873cf2225ed5d50b2a67be97c1504134a2a580512168d587ad82e",
          "dweb:/ipfs/QmNr5fTb2heFW658NZn7dDnofZgFvQTnNxKRJ3wdnR1skX"
        ],
        "license": "MIT"
      },
      "test/mocks/Faucet.sol": {
        "keccak256": "0x8e27e749610bd7f9e90a370767a46047b2135f44262944d072d091b10a764ab1",
        "urls": [
          "bzz-raw://b8b169b0a582ad726c40ea4b01dd242c30c12dc9480de917b22898633f436537",
          "dweb:/ipfs/QmWNuNBfqhgZQkMMigsJQsMzcUuL8neRaySvATNK9WVnya"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/mocks/Faucet.sol",
    "id": 116814,
    "exportedSymbols": {
      "Faucet": [
        116813
      ],
      "IERC20": [
        47419
      ],
      "Ownable": [
        46259
      ],
      "Ownable2Step": [
        46345
      ],
      "SafeERC20": [
        47868
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:8624:127",
    "nodes": [
      {
        "id": 116253,
        "nodeType": "PragmaDirective",
        "src": "33:24:127",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 116256,
        "nodeType": "ImportDirective",
        "src": "59:90:127",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116814,
        "sourceUnit": 47869,
        "symbolAliases": [
          {
            "foreign": {
              "id": 116254,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47868,
              "src": "67:9:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 116255,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47419,
              "src": "78:6:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 116259,
        "nodeType": "ImportDirective",
        "src": "150:86:127",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable2Step.sol",
        "file": "@openzeppelin/contracts/access/Ownable2Step.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 116814,
        "sourceUnit": 46346,
        "symbolAliases": [
          {
            "foreign": {
              "id": 116257,
              "name": "Ownable2Step",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46345,
              "src": "158:12:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 116258,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46259,
              "src": "172:7:127",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 116813,
        "nodeType": "ContractDefinition",
        "src": "698:7958:127",
        "nodes": [
          {
            "id": 116266,
            "nodeType": "UsingForDirective",
            "src": "736:27:127",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 116263,
              "name": "SafeERC20",
              "nameLocations": [
                "742:9:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47868,
              "src": "742:9:127"
            },
            "typeName": {
              "id": 116265,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 116264,
                "name": "IERC20",
                "nameLocations": [
                  "756:6:127"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47419,
                "src": "756:6:127"
              },
              "referencedDeclaration": 47419,
              "src": "756:6:127",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$47419",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 116273,
            "nodeType": "StructDefinition",
            "src": "834:81:127",
            "nodes": [],
            "canonicalName": "Faucet.FaucetToken",
            "documentation": {
              "id": 116267,
              "nodeType": "StructuredDocumentation",
              "src": "769:60:127",
              "text": "@dev Structure for faucet token, use only 1 storage slot"
            },
            "members": [
              {
                "constant": false,
                "id": 116270,
                "mutability": "mutable",
                "name": "ERC20",
                "nameLocation": "870:5:127",
                "nodeType": "VariableDeclaration",
                "scope": 116273,
                "src": "863:12:127",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$47419",
                  "typeString": "contract IERC20"
                },
                "typeName": {
                  "id": 116269,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 116268,
                    "name": "IERC20",
                    "nameLocations": [
                      "863:6:127"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 47419,
                    "src": "863:6:127"
                  },
                  "referencedDeclaration": 47419,
                  "src": "863:6:127",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 116272,
                "mutability": "mutable",
                "name": "amountPerRequest",
                "nameLocation": "892:16:127",
                "nodeType": "VariableDeclaration",
                "scope": 116273,
                "src": "885:23:127",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 116271,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "885:6:127",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FaucetToken",
            "nameLocation": "841:11:127",
            "scope": 116813,
            "visibility": "public"
          },
          {
            "id": 116276,
            "nodeType": "VariableDeclaration",
            "src": "1005:23:127",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 116274,
              "nodeType": "StructuredDocumentation",
              "src": "921:79:127",
              "text": "@notice The address of the operator that can call request for other address"
            },
            "functionSelector": "570ca735",
            "mutability": "mutable",
            "name": "operator",
            "nameLocation": "1020:8:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 116275,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1005:7:127",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 116279,
            "nodeType": "VariableDeclaration",
            "src": "1094:30:127",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 116277,
              "nodeType": "StructuredDocumentation",
              "src": "1035:54:127",
              "text": "@notice The minimum time needed between 2 requests"
            },
            "functionSelector": "a9860c81",
            "mutability": "mutable",
            "name": "requestCooldown",
            "nameLocation": "1109:15:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 116278,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1094:7:127",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 116281,
            "nodeType": "VariableDeclaration",
            "src": "1131:27:127",
            "nodes": [],
            "constant": false,
            "functionSelector": "29954f43",
            "mutability": "mutable",
            "name": "unlockedRequest",
            "nameLocation": "1143:15:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 116280,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1131:4:127",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 116286,
            "nodeType": "VariableDeclaration",
            "src": "1219:46:127",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 116282,
              "nodeType": "StructuredDocumentation",
              "src": "1165:49:127",
              "text": "@notice last time a user has requested tokens"
            },
            "functionSelector": "6fb9584f",
            "mutability": "mutable",
            "name": "lastRequest",
            "nameLocation": "1254:11:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 116285,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 116283,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1227:7:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1219:27:127",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 116284,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1238:7:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 116291,
            "nodeType": "VariableDeclaration",
            "src": "1343:33:127",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 116287,
              "nodeType": "StructuredDocumentation",
              "src": "1272:66:127",
              "text": "@notice faucet tokens set, custom to be able to use structures"
            },
            "functionSelector": "fbedbe62",
            "mutability": "mutable",
            "name": "faucetTokens",
            "nameLocation": "1364:12:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
              "typeString": "struct Faucet.FaucetToken[]"
            },
            "typeName": {
              "baseType": {
                "id": 116289,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 116288,
                  "name": "FaucetToken",
                  "nameLocations": [
                    "1343:11:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116273,
                  "src": "1343:11:127"
                },
                "referencedDeclaration": 116273,
                "src": "1343:11:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FaucetToken_$116273_storage_ptr",
                  "typeString": "struct Faucet.FaucetToken"
                }
              },
              "id": 116290,
              "nodeType": "ArrayTypeName",
              "src": "1343:13:127",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage_ptr",
                "typeString": "struct Faucet.FaucetToken[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 116296,
            "nodeType": "VariableDeclaration",
            "src": "1382:41:127",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "tokenToIndices",
            "nameLocation": "1409:14:127",
            "scope": 116813,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
              "typeString": "mapping(contract IERC20 => uint256)"
            },
            "typeName": {
              "id": 116295,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 116293,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 116292,
                  "name": "IERC20",
                  "nameLocations": [
                    "1390:6:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47419,
                  "src": "1390:6:127"
                },
                "referencedDeclaration": 47419,
                "src": "1390:6:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$47419",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "1382:26:127",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                "typeString": "mapping(contract IERC20 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 116294,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1400:7:127",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 116308,
            "nodeType": "ModifierDefinition",
            "src": "1430:100:127",
            "nodes": [],
            "body": {
              "id": 116307,
              "nodeType": "Block",
              "src": "1454:76:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 116302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1472:3:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1476:6:127",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1472:10:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 116301,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116276,
                          "src": "1486:8:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1472:22:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f70657261746f72",
                        "id": 116303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1496:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        },
                        "value": "Only operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eefd2a3fee92e43a5cb56befe80064087eb828178c352ddb526fc45b3f058a25",
                          "typeString": "literal_string \"Only operator\""
                        }
                      ],
                      "id": 116298,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1464:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1464:48:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116305,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:48:127"
                },
                {
                  "id": 116306,
                  "nodeType": "PlaceholderStatement",
                  "src": "1522:1:127"
                }
              ]
            },
            "name": "onlyOperator",
            "nameLocation": "1439:12:127",
            "parameters": {
              "id": 116297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1451:2:127"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 116326,
            "nodeType": "ModifierDefinition",
            "src": "1536:149:127",
            "nodes": [],
            "body": {
              "id": 116325,
              "nodeType": "Block",
              "src": "1573:112:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116313,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1591:5:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 116314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1597:9:127",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1591:15:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 116319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 116315,
                              "name": "lastRequest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116286,
                              "src": "1610:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 116317,
                            "indexExpression": {
                              "id": 116316,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116310,
                              "src": "1622:4:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1610:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 116318,
                            "name": "requestCooldown",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116279,
                            "src": "1630:15:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1610:35:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1591:54:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6f206d616e79207265717565737473",
                        "id": 116321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1647:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        },
                        "value": "Too many requests"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3dcba881b1cfa9bda911ca3eaa41380e0ee0b9ac620274c359d61cdd5ba4fe30",
                          "typeString": "literal_string \"Too many requests\""
                        }
                      ],
                      "id": 116312,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1583:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1583:84:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116323,
                  "nodeType": "ExpressionStatement",
                  "src": "1583:84:127"
                },
                {
                  "id": 116324,
                  "nodeType": "PlaceholderStatement",
                  "src": "1677:1:127"
                }
              ]
            },
            "name": "verifyRequest",
            "nameLocation": "1545:13:127",
            "parameters": {
              "id": 116311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116310,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1567:4:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116326,
                  "src": "1559:12:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1558:14:127"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 116339,
            "nodeType": "ModifierDefinition",
            "src": "1691:91:127",
            "nodes": [],
            "body": {
              "id": 116338,
              "nodeType": "Block",
              "src": "1710:72:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 116333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 116329,
                            "name": "tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -26,
                            "src": "1728:2:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_transaction",
                              "typeString": "tx"
                            }
                          },
                          "id": 116330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1731:6:127",
                          "memberName": "origin",
                          "nodeType": "MemberAccess",
                          "src": "1728:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 116331,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1741:3:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 116332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1745:6:127",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1741:10:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1728:23:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c7920454f41",
                        "id": 116334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1753:10:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        },
                        "value": "Only EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_34db4db51712b904eff14e0d798b5cfced0ebf7fcecfd05d567e4ce1d1aa9861",
                          "typeString": "literal_string \"Only EOA\""
                        }
                      ],
                      "id": 116328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1720:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1720:44:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116336,
                  "nodeType": "ExpressionStatement",
                  "src": "1720:44:127"
                },
                {
                  "id": 116337,
                  "nodeType": "PlaceholderStatement",
                  "src": "1774:1:127"
                }
              ]
            },
            "name": "onlyEOA",
            "nameLocation": "1700:7:127",
            "parameters": {
              "id": 116327,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1707:2:127"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 116348,
            "nodeType": "ModifierDefinition",
            "src": "1788:109:127",
            "nodes": [],
            "body": {
              "id": 116347,
              "nodeType": "Block",
              "src": "1817:80:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116342,
                        "name": "unlockedRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116281,
                        "src": "1835:15:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469726563742072657175657374206973206c6f636b6564",
                        "id": 116343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:26:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        },
                        "value": "Direct request is locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_214d25077fa70a33160d2f152e7f0234b605cce3e491b45b7cd4d8384a40015f",
                          "typeString": "literal_string \"Direct request is locked\""
                        }
                      ],
                      "id": 116341,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1827:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:52:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116345,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:52:127"
                },
                {
                  "id": 116346,
                  "nodeType": "PlaceholderStatement",
                  "src": "1889:1:127"
                }
              ]
            },
            "name": "isRequestUnlocked",
            "nameLocation": "1797:17:127",
            "parameters": {
              "id": 116340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1814:2:127"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 116378,
            "nodeType": "FunctionDefinition",
            "src": "2118:294:127",
            "nodes": [],
            "body": {
              "id": 116377,
              "nodeType": "Block",
              "src": "2254:158:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116362,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116355,
                        "src": "2284:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116361,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116757,
                      "src": "2264:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 116363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:37:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116364,
                  "nodeType": "ExpressionStatement",
                  "src": "2264:37:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 116370,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2362:1:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 116369,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2354:7:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 116368,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2354:7:127",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 116371,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2354:10:127",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 116367,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47419,
                              "src": "2347:6:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$47419_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 116372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2347:18:127",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$47419",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 116373,
                            "name": "_nativePerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116353,
                            "src": "2385:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$47419",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 116366,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116273,
                          "src": "2327:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$116273_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 116374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "2340:5:127",
                          "2367:16:127"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "2327:77:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 116365,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116739,
                      "src": "2311:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$116273_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 116375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2311:94:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116376,
                  "nodeType": "ExpressionStatement",
                  "src": "2311:94:127"
                }
              ]
            },
            "documentation": {
              "id": 116349,
              "nodeType": "StructuredDocumentation",
              "src": "1903:210:127",
              "text": "@notice Constructor of the faucet, set the request cooldown and add native to the faucet\n @param _nativePerRequest The native received per request\n @param _requestCooldown The request cooldown"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 116358,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116351,
                    "src": "2236:12:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 116359,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 116357,
                  "name": "Ownable",
                  "nameLocations": [
                    "2228:7:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46259,
                  "src": "2228:7:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "2228:21:127"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 116356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116351,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "2138:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116378,
                  "src": "2130:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2130:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116353,
                  "mutability": "mutable",
                  "name": "_nativePerRequest",
                  "nameLocation": "2159:17:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116378,
                  "src": "2152:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 116352,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2152:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116355,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "2186:16:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116378,
                  "src": "2178:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2178:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2129:74:127"
            },
            "returnParameters": {
              "id": 116360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:0:127"
            },
            "scope": 116813,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 116383,
            "nodeType": "FunctionDefinition",
            "src": "2468:29:127",
            "nodes": [],
            "body": {
              "id": 116382,
              "nodeType": "Block",
              "src": "2495:2:127",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 116379,
              "nodeType": "StructuredDocumentation",
              "src": "2418:45:127",
              "text": "@notice Allows to receive NATIVE directly"
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 116380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2475:2:127"
            },
            "returnParameters": {
              "id": 116381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2495:0:127"
            },
            "scope": 116813,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116393,
            "nodeType": "FunctionDefinition",
            "src": "2568:107:127",
            "nodes": [],
            "body": {
              "id": 116392,
              "nodeType": "Block",
              "src": "2632:43:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 116389,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116291,
                      "src": "2649:12:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 116390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2662:6:127",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2649:19:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 116388,
                  "id": 116391,
                  "nodeType": "Return",
                  "src": "2642:26:127"
                }
              ]
            },
            "documentation": {
              "id": 116384,
              "nodeType": "StructuredDocumentation",
              "src": "2503:60:127",
              "text": "@notice Returns the number of tokens given by the faucet"
            },
            "functionSelector": "0d639e03",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberOfFaucetTokens",
            "nameLocation": "2577:20:127",
            "parameters": {
              "id": 116385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2597:2:127"
            },
            "returnParameters": {
              "id": 116388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116387,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 116393,
                  "src": "2623:7:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116386,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2623:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2622:9:127"
            },
            "scope": 116813,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116419,
            "nodeType": "FunctionDefinition",
            "src": "2840:169:127",
            "nodes": [],
            "body": {
              "id": 116418,
              "nodeType": "Block",
              "src": "2920:89:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 116411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116405,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116286,
                        "src": "2930:11:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 116408,
                      "indexExpression": {
                        "expression": {
                          "id": 116406,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2942:3:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2946:6:127",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2942:10:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2930:23:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 116409,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2956:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 116410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2962:9:127",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2956:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2930:41:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116412,
                  "nodeType": "ExpressionStatement",
                  "src": "2930:41:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 116414,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2991:3:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 116415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2995:6:127",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2991:10:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 116413,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116707,
                      "src": "2982:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 116416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2982:20:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116417,
                  "nodeType": "ExpressionStatement",
                  "src": "2982:20:127"
                }
              ]
            },
            "documentation": {
              "id": 116394,
              "nodeType": "StructuredDocumentation",
              "src": "2681:154:127",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds"
            },
            "functionSelector": "338cdca1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116397,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116396,
                  "name": "onlyEOA",
                  "nameLocations": [
                    "2868:7:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116339,
                  "src": "2868:7:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "2868:7:127"
              },
              {
                "id": 116399,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116398,
                  "name": "isRequestUnlocked",
                  "nameLocations": [
                    "2876:17:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116348,
                  "src": "2876:17:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "2876:17:127"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 116401,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "2908:3:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 116402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2912:6:127",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "2908:10:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 116403,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116400,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "2894:13:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116326,
                  "src": "2894:13:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "2894:25:127"
              }
            ],
            "name": "request",
            "nameLocation": "2849:7:127",
            "parameters": {
              "id": 116395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2856:2:127"
            },
            "returnParameters": {
              "id": 116404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2920:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116442,
            "nodeType": "FunctionDefinition",
            "src": "3295:146:127",
            "nodes": [],
            "body": {
              "id": 116441,
              "nodeType": "Block",
              "src": "3366:75:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 116435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116430,
                        "name": "lastRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116286,
                        "src": "3376:11:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 116432,
                      "indexExpression": {
                        "id": 116431,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116422,
                        "src": "3388:3:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3376:16:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 116433,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "3395:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 116434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3401:9:127",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "3395:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3376:34:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116436,
                  "nodeType": "ExpressionStatement",
                  "src": "3376:34:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116438,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116422,
                        "src": "3430:3:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 116437,
                      "name": "_request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116707,
                      "src": "3421:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 116439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3421:13:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116440,
                  "nodeType": "ExpressionStatement",
                  "src": "3421:13:127"
                }
              ]
            },
            "documentation": {
              "id": 116420,
              "nodeType": "StructuredDocumentation",
              "src": "3015:275:127",
              "text": "@notice User needs to call this function in order to receive test tokens and native\n @dev Can be called only once per `requestCooldown` seconds for every address\n Can only be called by the operator\n @param _to The address that will receive the tokens"
            },
            "functionSelector": "27c78c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116424,
                  "name": "onlyOperator",
                  "nameLocations": [
                    "3334:12:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116308,
                  "src": "3334:12:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "3334:12:127"
              },
              {
                "arguments": [
                  {
                    "id": 116427,
                    "name": "_to",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 116422,
                    "src": "3361:3:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 116428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116426,
                  "name": "verifyRequest",
                  "nameLocations": [
                    "3347:13:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116326,
                  "src": "3347:13:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "3347:18:127"
              }
            ],
            "name": "request",
            "nameLocation": "3304:7:127",
            "parameters": {
              "id": 116423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116422,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3320:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116442,
                  "src": "3312:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3312:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:13:127"
            },
            "returnParameters": {
              "id": 116429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3366:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116461,
            "nodeType": "FunctionDefinition",
            "src": "3675:183:127",
            "nodes": [],
            "body": {
              "id": 116460,
              "nodeType": "Block",
              "src": "3759:99:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 116455,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116446,
                            "src": "3805:6:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$47419",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 116456,
                            "name": "_amountPerRequest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116448,
                            "src": "3831:17:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$47419",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 116454,
                          "name": "FaucetToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116273,
                          "src": "3785:11:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_FaucetToken_$116273_storage_ptr_$",
                            "typeString": "type(struct Faucet.FaucetToken storage pointer)"
                          }
                        },
                        "id": 116457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "3798:5:127",
                          "3813:16:127"
                        ],
                        "names": [
                          "ERC20",
                          "amountPerRequest"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "3785:65:127",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "id": 116453,
                      "name": "_addFaucetToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116739,
                      "src": "3769:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FaucetToken_$116273_memory_ptr_$returns$__$",
                        "typeString": "function (struct Faucet.FaucetToken memory)"
                      }
                    },
                    "id": 116458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3769:82:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116459,
                  "nodeType": "ExpressionStatement",
                  "src": "3769:82:127"
                }
              ]
            },
            "documentation": {
              "id": 116443,
              "nodeType": "StructuredDocumentation",
              "src": "3447:223:127",
              "text": "@notice Add a token to the faucet\n @dev Tokens need to be owned by the faucet, and only mintable by the owner\n @param _token The address of the token\n @param _amountPerRequest The amount per request"
            },
            "functionSelector": "7380f6bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116450,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3749:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "3749:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "3749:9:127"
              }
            ],
            "name": "addFaucetToken",
            "nameLocation": "3684:14:127",
            "parameters": {
              "id": 116449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116446,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3706:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116461,
                  "src": "3699:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 116445,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116444,
                      "name": "IERC20",
                      "nameLocations": [
                        "3699:6:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47419,
                      "src": "3699:6:127"
                    },
                    "referencedDeclaration": 47419,
                    "src": "3699:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$47419",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116448,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "3721:17:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116461,
                  "src": "3714:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 116447,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3714:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3698:41:127"
            },
            "returnParameters": {
              "id": 116452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3759:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116529,
            "nodeType": "FunctionDefinition",
            "src": "4029:526:127",
            "nodes": [],
            "body": {
              "id": 116528,
              "nodeType": "Block",
              "src": "4090:465:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    116471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116471,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4108:5:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116528,
                      "src": "4100:13:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 116470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4100:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116475,
                  "initialValue": {
                    "baseExpression": {
                      "id": 116472,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116296,
                      "src": "4116:14:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 116474,
                    "indexExpression": {
                      "id": 116473,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116465,
                      "src": "4131:6:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$47419",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4116:22:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4100:38:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116477,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116471,
                          "src": "4157:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 116478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4166:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "4157:10:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 116480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4169:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 116476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4149:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4149:41:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116482,
                  "nodeType": "ExpressionStatement",
                  "src": "4149:41:127"
                },
                {
                  "assignments": [
                    116484
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116484,
                      "mutability": "mutable",
                      "name": "lastIndex",
                      "nameLocation": "4209:9:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116528,
                      "src": "4201:17:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 116483,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4201:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116489,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 116485,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116291,
                        "src": "4221:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 116486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4234:6:127",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4221:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 116487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4243:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4221:23:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4201:43:127"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "--",
                      "prefix": true,
                      "src": "4258:7:127",
                      "subExpression": {
                        "id": 116490,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116471,
                        "src": "4260:5:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 116492,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116484,
                      "src": "4269:9:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4258:20:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116517,
                  "nodeType": "IfStatement",
                  "src": "4254:215:127",
                  "trueBody": {
                    "id": 116516,
                    "nodeType": "Block",
                    "src": "4280:189:127",
                    "statements": [
                      {
                        "assignments": [
                          116496
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 116496,
                            "mutability": "mutable",
                            "name": "faucetToken",
                            "nameLocation": "4313:11:127",
                            "nodeType": "VariableDeclaration",
                            "scope": 116516,
                            "src": "4294:30:127",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken"
                            },
                            "typeName": {
                              "id": 116495,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 116494,
                                "name": "FaucetToken",
                                "nameLocations": [
                                  "4294:11:127"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 116273,
                                "src": "4294:11:127"
                              },
                              "referencedDeclaration": 116273,
                              "src": "4294:11:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$116273_storage_ptr",
                                "typeString": "struct Faucet.FaucetToken"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 116500,
                        "initialValue": {
                          "baseExpression": {
                            "id": 116497,
                            "name": "faucetTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116291,
                            "src": "4327:12:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                            }
                          },
                          "id": 116499,
                          "indexExpression": {
                            "id": 116498,
                            "name": "lastIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116484,
                            "src": "4340:9:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4327:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4294:56:127"
                      },
                      {
                        "expression": {
                          "id": 116505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 116501,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116291,
                              "src": "4365:12:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 116503,
                            "indexExpression": {
                              "id": 116502,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116471,
                              "src": "4378:5:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4365:19:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 116504,
                            "name": "faucetToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116496,
                            "src": "4387:11:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "src": "4365:33:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref"
                          }
                        },
                        "id": 116506,
                        "nodeType": "ExpressionStatement",
                        "src": "4365:33:127"
                      },
                      {
                        "expression": {
                          "id": 116514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 116507,
                              "name": "tokenToIndices",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116296,
                              "src": "4413:14:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                                "typeString": "mapping(contract IERC20 => uint256)"
                              }
                            },
                            "id": 116510,
                            "indexExpression": {
                              "expression": {
                                "id": 116508,
                                "name": "faucetToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116496,
                                "src": "4428:11:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 116509,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4440:5:127",
                              "memberName": "ERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 116270,
                              "src": "4428:17:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$47419",
                                "typeString": "contract IERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4413:33:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 116513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 116511,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116471,
                              "src": "4449:5:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 116512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4457:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4449:9:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4413:45:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 116515,
                        "nodeType": "ExpressionStatement",
                        "src": "4413:45:127"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 116521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4479:30:127",
                    "subExpression": {
                      "baseExpression": {
                        "id": 116518,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116291,
                        "src": "4486:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 116520,
                      "indexExpression": {
                        "id": 116519,
                        "name": "lastIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116484,
                        "src": "4499:9:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4486:23:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116522,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:30:127"
                },
                {
                  "expression": {
                    "id": 116526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4519:29:127",
                    "subExpression": {
                      "baseExpression": {
                        "id": 116523,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116296,
                        "src": "4526:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 116525,
                      "indexExpression": {
                        "id": 116524,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116465,
                        "src": "4541:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47419",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4526:22:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116527,
                  "nodeType": "ExpressionStatement",
                  "src": "4519:29:127"
                }
              ]
            },
            "documentation": {
              "id": 116462,
              "nodeType": "StructuredDocumentation",
              "src": "3864:160:127",
              "text": "@notice Remove a token from the faucet\n @dev Token needs to be in the set, and NATIVE can't be removed\n @param _token The address of the token"
            },
            "functionSelector": "faf034e3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116467,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4080:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "4080:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "4080:9:127"
              }
            ],
            "name": "removeFaucetToken",
            "nameLocation": "4038:17:127",
            "parameters": {
              "id": 116466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116465,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4063:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116529,
                  "src": "4056:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 116464,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116463,
                      "name": "IERC20",
                      "nameLocations": [
                        "4056:6:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47419,
                      "src": "4056:6:127"
                    },
                    "referencedDeclaration": 47419,
                    "src": "4056:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$47419",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4055:15:127"
            },
            "returnParameters": {
              "id": 116469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4090:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116542,
            "nodeType": "FunctionDefinition",
            "src": "4726:127:127",
            "nodes": [],
            "body": {
              "id": 116541,
              "nodeType": "Block",
              "src": "4799:54:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116538,
                        "name": "_requestCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116532,
                        "src": "4829:16:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 116537,
                      "name": "_setRequestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116757,
                      "src": "4809:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 116539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4809:37:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116540,
                  "nodeType": "ExpressionStatement",
                  "src": "4809:37:127"
                }
              ]
            },
            "documentation": {
              "id": 116530,
              "nodeType": "StructuredDocumentation",
              "src": "4561:160:127",
              "text": "@notice Set the request cooldown for every users\n @dev This function needs to be called by the owner\n @param _requestCooldown The new cooldown"
            },
            "functionSelector": "bc3bc404",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116535,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116534,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4789:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "4789:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "4789:9:127"
              }
            ],
            "name": "setRequestCooldown",
            "nameLocation": "4735:18:127",
            "parameters": {
              "id": 116533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116532,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "4762:16:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116542,
                  "src": "4754:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4753:26:127"
            },
            "returnParameters": {
              "id": 116536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4799:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116559,
            "nodeType": "FunctionDefinition",
            "src": "5114:153:127",
            "nodes": [],
            "body": {
              "id": 116558,
              "nodeType": "Block",
              "src": "5203:64:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116554,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116546,
                        "src": "5234:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47419",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 116555,
                        "name": "_amountPerRequest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116548,
                        "src": "5242:17:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$47419",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      ],
                      "id": 116553,
                      "name": "_setAmountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116789,
                      "src": "5213:20:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47419_$_t_uint96_$returns$__$",
                        "typeString": "function (contract IERC20,uint96)"
                      }
                    },
                    "id": 116556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5213:47:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116557,
                  "nodeType": "ExpressionStatement",
                  "src": "5213:47:127"
                }
              ]
            },
            "documentation": {
              "id": 116543,
              "nodeType": "StructuredDocumentation",
              "src": "4859:250:127",
              "text": "@notice Set the amount per request of a specific token, designated by its symbol\n @dev This function needs to be called by the owner\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "functionSelector": "0f737c82",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116551,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116550,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5193:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "5193:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "5193:9:127"
              }
            ],
            "name": "setAmountPerRequest",
            "nameLocation": "5123:19:127",
            "parameters": {
              "id": 116549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116546,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5150:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116559,
                  "src": "5143:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 116545,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116544,
                      "name": "IERC20",
                      "nameLocations": [
                        "5143:6:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47419,
                      "src": "5143:6:127"
                    },
                    "referencedDeclaration": 47419,
                    "src": "5143:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$47419",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116548,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "5165:17:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116559,
                  "src": "5158:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 116547,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5142:41:127"
            },
            "returnParameters": {
              "id": 116552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5203:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116595,
            "nodeType": "FunctionDefinition",
            "src": "5539:212:127",
            "nodes": [],
            "body": {
              "id": 116594,
              "nodeType": "Block",
              "src": "5626:125:127",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 116580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 116574,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116563,
                          "src": "5648:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$47419",
                            "typeString": "contract IERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$47419",
                            "typeString": "contract IERC20"
                          }
                        ],
                        "id": 116573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5640:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 116572,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5640:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 116575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5640:15:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 116578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5667:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 116577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5659:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 116576,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5659:7:127",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 116579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5659:10:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5640:29:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 116589,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116565,
                          "src": "5731:3:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 116590,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116567,
                          "src": "5736:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 116586,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116563,
                          "src": "5711:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$47419",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 116588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5718:12:127",
                        "memberName": "safeTransfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 47495,
                        "src": "5711:19:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47419_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$47419_$",
                          "typeString": "function (contract IERC20,address,uint256)"
                        }
                      },
                      "id": 116591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5711:33:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 116592,
                    "nodeType": "ExpressionStatement",
                    "src": "5711:33:127"
                  },
                  "id": 116593,
                  "nodeType": "IfStatement",
                  "src": "5636:108:127",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 116582,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116565,
                          "src": "5683:3:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 116583,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116567,
                          "src": "5688:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 116581,
                        "name": "_sendNative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116812,
                        "src": "5671:11:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint256)"
                        }
                      },
                      "id": 116584,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5671:25:127",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 116585,
                    "nodeType": "ExpressionStatement",
                    "src": "5671:25:127"
                  }
                }
              ]
            },
            "documentation": {
              "id": 116560,
              "nodeType": "StructuredDocumentation",
              "src": "5273:261:127",
              "text": "@notice Withdraw `amount` of token `token` to `to`\n @dev This function needs to be called by the owner\n @param _token The address of the token to withdraw\n @param _to The recipient address\n @param _amount The token amount to send"
            },
            "functionSelector": "01e33667",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116570,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116569,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5616:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "5616:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "5616:9:127"
              }
            ],
            "name": "withdrawToken",
            "nameLocation": "5548:13:127",
            "parameters": {
              "id": 116568,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116563,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5569:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116595,
                  "src": "5562:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 116562,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116561,
                      "name": "IERC20",
                      "nameLocations": [
                        "5562:6:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47419,
                      "src": "5562:6:127"
                    },
                    "referencedDeclaration": 47419,
                    "src": "5562:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$47419",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116565,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5585:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116595,
                  "src": "5577:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5577:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116567,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5598:7:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116595,
                  "src": "5590:15:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116566,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5590:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5561:45:127"
            },
            "returnParameters": {
              "id": 116571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5626:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116608,
            "nodeType": "FunctionDefinition",
            "src": "5865:102:127",
            "nodes": [],
            "body": {
              "id": 116607,
              "nodeType": "Block",
              "src": "5927:40:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 116605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116603,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116276,
                      "src": "5937:8:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116604,
                      "name": "_newOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116598,
                      "src": "5948:12:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5937:23:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 116606,
                  "nodeType": "ExpressionStatement",
                  "src": "5937:23:127"
                }
              ]
            },
            "documentation": {
              "id": 116596,
              "nodeType": "StructuredDocumentation",
              "src": "5757:103:127",
              "text": "@notice Set the address of the operator\n @param _newOperator The address of the new operator"
            },
            "functionSelector": "b3ab15fb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116601,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116600,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5917:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "5917:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "5917:9:127"
              }
            ],
            "name": "setOperator",
            "nameLocation": "5874:11:127",
            "parameters": {
              "id": 116599,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116598,
                  "mutability": "mutable",
                  "name": "_newOperator",
                  "nameLocation": "5894:12:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116608,
                  "src": "5886:20:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5886:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5885:22:127"
            },
            "returnParameters": {
              "id": 116602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5927:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116621,
            "nodeType": "FunctionDefinition",
            "src": "6103:121:127",
            "nodes": [],
            "body": {
              "id": 116620,
              "nodeType": "Block",
              "src": "6173:51:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 116618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116616,
                      "name": "unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116281,
                      "src": "6183:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116617,
                      "name": "_unlockedRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116611,
                      "src": "6201:16:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6183:34:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116619,
                  "nodeType": "ExpressionStatement",
                  "src": "6183:34:127"
                }
              ]
            },
            "documentation": {
              "id": 116609,
              "nodeType": "StructuredDocumentation",
              "src": "5973:125:127",
              "text": "@notice Set whether the direct request is unlocked or not\n @param _unlockedRequest The address of the new operator"
            },
            "functionSelector": "20cca627",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 116614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116613,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6163:9:127"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46170,
                  "src": "6163:9:127"
                },
                "nodeType": "ModifierInvocation",
                "src": "6163:9:127"
              }
            ],
            "name": "setUnlockedRequest",
            "nameLocation": "6112:18:127",
            "parameters": {
              "id": 116612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116611,
                  "mutability": "mutable",
                  "name": "_unlockedRequest",
                  "nameLocation": "6136:16:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116621,
                  "src": "6131:21:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 116610,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:4:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6130:23:127"
            },
            "returnParameters": {
              "id": 116615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6173:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 116707,
            "nodeType": "FunctionDefinition",
            "src": "6431:590:127",
            "nodes": [],
            "body": {
              "id": 116706,
              "nodeType": "Block",
              "src": "6470:551:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    116628
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116628,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "6488:3:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116706,
                      "src": "6480:11:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 116627,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6480:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116631,
                  "initialValue": {
                    "expression": {
                      "id": 116629,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116291,
                      "src": "6494:12:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 116630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6507:6:127",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "6494:19:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6480:33:127"
                },
                {
                  "assignments": [
                    116634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116634,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "6543:5:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116706,
                      "src": "6524:24:127",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                        "typeString": "struct Faucet.FaucetToken"
                      },
                      "typeName": {
                        "id": 116633,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 116632,
                          "name": "FaucetToken",
                          "nameLocations": [
                            "6524:11:127"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 116273,
                          "src": "6524:11:127"
                        },
                        "referencedDeclaration": 116273,
                        "src": "6524:11:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_storage_ptr",
                          "typeString": "struct Faucet.FaucetToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116638,
                  "initialValue": {
                    "baseExpression": {
                      "id": 116635,
                      "name": "faucetTokens",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116291,
                      "src": "6551:12:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                        "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                      }
                    },
                    "id": 116637,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 116636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6564:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6551:15:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                      "typeString": "struct Faucet.FaucetToken storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6524:42:127"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 116651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "id": 116642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 116639,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116634,
                          "src": "6581:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 116640,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6587:16:127",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116272,
                        "src": "6581:22:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 116641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6606:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "6581:26:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 116650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 116645,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "6619:4:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Faucet_$116813",
                                "typeString": "contract Faucet"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Faucet_$116813",
                                "typeString": "contract Faucet"
                              }
                            ],
                            "id": 116644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6611:7:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 116643,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6611:7:127",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 116646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6611:13:127",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 116647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6625:7:127",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6611:21:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "expression": {
                          "id": 116648,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116634,
                          "src": "6636:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 116649,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6642:16:127",
                        "memberName": "amountPerRequest",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116272,
                        "src": "6636:22:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "src": "6611:47:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6581:77:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116659,
                  "nodeType": "IfStatement",
                  "src": "6577:148:127",
                  "trueBody": {
                    "id": 116658,
                    "nodeType": "Block",
                    "src": "6660:65:127",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 116653,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116624,
                              "src": "6686:3:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 116654,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116634,
                                "src": "6691:5:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 116655,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6697:16:127",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 116272,
                              "src": "6691:22:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            ],
                            "id": 116652,
                            "name": "_sendNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116812,
                            "src": "6674:11:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 116656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6674:40:127",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 116657,
                        "nodeType": "ExpressionStatement",
                        "src": "6674:40:127"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 116704,
                    "nodeType": "Block",
                    "src": "6769:246:127",
                    "statements": [
                      {
                        "expression": {
                          "id": 116674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 116670,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116634,
                            "src": "6783:5:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                              "typeString": "struct Faucet.FaucetToken memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 116671,
                              "name": "faucetTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116291,
                              "src": "6791:12:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                                "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                              }
                            },
                            "id": 116673,
                            "indexExpression": {
                              "id": 116672,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116661,
                              "src": "6804:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6791:15:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                              "typeString": "struct Faucet.FaucetToken storage ref"
                            }
                          },
                          "src": "6783:23:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 116675,
                        "nodeType": "ExpressionStatement",
                        "src": "6783:23:127"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 116691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 116679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 116676,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116634,
                                "src": "6825:5:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 116677,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6831:16:127",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 116272,
                              "src": "6825:22:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 116678,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6850:1:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "6825:26:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 116690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 116685,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "6885:4:127",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Faucet_$116813",
                                        "typeString": "contract Faucet"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_Faucet_$116813",
                                        "typeString": "contract Faucet"
                                      }
                                    ],
                                    "id": 116684,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6877:7:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 116683,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6877:7:127",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 116686,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6877:13:127",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "expression": {
                                    "id": 116680,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116634,
                                    "src": "6855:5:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                      "typeString": "struct Faucet.FaucetToken memory"
                                    }
                                  },
                                  "id": 116681,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6861:5:127",
                                  "memberName": "ERC20",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 116270,
                                  "src": "6855:11:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$47419",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 116682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6867:9:127",
                                "memberName": "balanceOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 47376,
                                "src": "6855:21:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view external returns (uint256)"
                                }
                              },
                              "id": 116687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6855:36:127",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 116688,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116634,
                                "src": "6895:5:127",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                  "typeString": "struct Faucet.FaucetToken memory"
                                }
                              },
                              "id": 116689,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6901:16:127",
                              "memberName": "amountPerRequest",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 116272,
                              "src": "6895:22:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "6855:62:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "6825:92:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 116703,
                        "nodeType": "IfStatement",
                        "src": "6821:184:127",
                        "trueBody": {
                          "id": 116702,
                          "nodeType": "Block",
                          "src": "6919:86:127",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 116697,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 116624,
                                    "src": "6962:3:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 116698,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 116634,
                                      "src": "6967:5:127",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 116699,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6973:16:127",
                                    "memberName": "amountPerRequest",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 116272,
                                    "src": "6967:22:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  ],
                                  "expression": {
                                    "expression": {
                                      "id": 116692,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 116634,
                                      "src": "6937:5:127",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                        "typeString": "struct Faucet.FaucetToken memory"
                                      }
                                    },
                                    "id": 116695,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6943:5:127",
                                    "memberName": "ERC20",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 116270,
                                    "src": "6937:11:127",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$47419",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 116696,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6949:12:127",
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 47495,
                                  "src": "6937:24:127",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47419_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$47419_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 116700,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6937:53:127",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 116701,
                              "nodeType": "ExpressionStatement",
                              "src": "6937:53:127"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 116666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 116664,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116661,
                      "src": "6755:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 116665,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116628,
                      "src": "6759:3:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6755:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 116705,
                  "initializationExpression": {
                    "assignments": [
                      116661
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 116661,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6748:1:127",
                        "nodeType": "VariableDeclaration",
                        "scope": 116705,
                        "src": "6740:9:127",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6740:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 116663,
                    "initialValue": {
                      "hexValue": "31",
                      "id": 116662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6752:1:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6740:13:127"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 116668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6764:3:127",
                      "subExpression": {
                        "id": 116667,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116661,
                        "src": "6766:1:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 116669,
                    "nodeType": "ExpressionStatement",
                    "src": "6764:3:127"
                  },
                  "nodeType": "ForStatement",
                  "src": "6735:280:127"
                }
              ]
            },
            "documentation": {
              "id": 116622,
              "nodeType": "StructuredDocumentation",
              "src": "6230:196:127",
              "text": "@notice Private function to send faucet tokens to the user\n @dev Will only send tokens if the faucet has a sufficient balance\n @param _to The address that will receive the tokens"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_request",
            "nameLocation": "6440:8:127",
            "parameters": {
              "id": 116625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116624,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6457:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116707,
                  "src": "6449:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116623,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6449:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6448:13:127"
            },
            "returnParameters": {
              "id": 116626,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6470:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 116739,
            "nodeType": "FunctionDefinition",
            "src": "7217:241:127",
            "nodes": [],
            "body": {
              "id": 116738,
              "nodeType": "Block",
              "src": "7277:181:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 116715,
                            "name": "tokenToIndices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116296,
                            "src": "7295:14:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                              "typeString": "mapping(contract IERC20 => uint256)"
                            }
                          },
                          "id": 116718,
                          "indexExpression": {
                            "expression": {
                              "id": 116716,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 116711,
                              "src": "7310:6:127",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                                "typeString": "struct Faucet.FaucetToken memory"
                              }
                            },
                            "id": 116717,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7317:5:127",
                            "memberName": "ERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 116270,
                            "src": "7310:12:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$47419",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7295:28:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 116719,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7327:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7295:33:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920612066617563657420746f6b656e",
                        "id": 116721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7330:24:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        },
                        "value": "Already a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e4942d2d26b3690543431687aa0b41cd33d60c80e561e495cbaf9de8f7207d4",
                          "typeString": "literal_string \"Already a faucet token\""
                        }
                      ],
                      "id": 116714,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7287:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7287:68:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116723,
                  "nodeType": "ExpressionStatement",
                  "src": "7287:68:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116727,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116711,
                        "src": "7384:6:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                          "typeString": "struct Faucet.FaucetToken memory"
                        }
                      ],
                      "expression": {
                        "id": 116724,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116291,
                        "src": "7366:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 116726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7379:4:127",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7366:17:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage_ptr_$_t_struct$_FaucetToken_$116273_storage_$returns$__$attached_to$_t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Faucet.FaucetToken storage ref[] storage pointer,struct Faucet.FaucetToken storage ref)"
                      }
                    },
                    "id": 116728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7366:25:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116729,
                  "nodeType": "ExpressionStatement",
                  "src": "7366:25:127"
                },
                {
                  "expression": {
                    "id": 116736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 116730,
                        "name": "tokenToIndices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116296,
                        "src": "7401:14:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                          "typeString": "mapping(contract IERC20 => uint256)"
                        }
                      },
                      "id": 116733,
                      "indexExpression": {
                        "expression": {
                          "id": 116731,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116711,
                          "src": "7416:6:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                            "typeString": "struct Faucet.FaucetToken memory"
                          }
                        },
                        "id": 116732,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7423:5:127",
                        "memberName": "ERC20",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 116270,
                        "src": "7416:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$47419",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7401:28:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 116734,
                        "name": "faucetTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116291,
                        "src": "7432:12:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                        }
                      },
                      "id": 116735,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7445:6:127",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "7432:19:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7401:50:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116737,
                  "nodeType": "ExpressionStatement",
                  "src": "7401:50:127"
                }
              ]
            },
            "documentation": {
              "id": 116708,
              "nodeType": "StructuredDocumentation",
              "src": "7027:185:127",
              "text": "@notice Private function to add a token to the faucet\n @dev Token needs to be not added to the set yet\n @param _token The token to add, using the FaucetToken structure"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addFaucetToken",
            "nameLocation": "7226:15:127",
            "parameters": {
              "id": 116712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116711,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "7261:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116739,
                  "src": "7242:25:127",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FaucetToken_$116273_memory_ptr",
                    "typeString": "struct Faucet.FaucetToken"
                  },
                  "typeName": {
                    "id": 116710,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116709,
                      "name": "FaucetToken",
                      "nameLocations": [
                        "7242:11:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 116273,
                      "src": "7242:11:127"
                    },
                    "referencedDeclaration": 116273,
                    "src": "7242:11:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FaucetToken_$116273_storage_ptr",
                      "typeString": "struct Faucet.FaucetToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7241:27:127"
            },
            "returnParameters": {
              "id": 116713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7277:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 116757,
            "nodeType": "FunctionDefinition",
            "src": "7652:188:127",
            "nodes": [],
            "body": {
              "id": 116756,
              "nodeType": "Block",
              "src": "7715:125:127",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116746,
                          "name": "_requestCooldown",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116742,
                          "src": "7733:16:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 116747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7753:7:127",
                          "subdenomination": "hours",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3600_by_1",
                            "typeString": "int_const 3600"
                          },
                          "value": "1"
                        },
                        "src": "7733:27:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e73616665207265717565737420636f6f6c646f776e",
                        "id": 116749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7762:25:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        },
                        "value": "Unsafe request cooldown"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cabd3c44c9bb20914e4a399085579484a140e5871cdf9b2a89a98248a8f2b8bf",
                          "typeString": "literal_string \"Unsafe request cooldown\""
                        }
                      ],
                      "id": 116745,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7725:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7725:63:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116751,
                  "nodeType": "ExpressionStatement",
                  "src": "7725:63:127"
                },
                {
                  "expression": {
                    "id": 116754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116752,
                      "name": "requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116279,
                      "src": "7799:15:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116753,
                      "name": "_requestCooldown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116742,
                      "src": "7817:16:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7799:34:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 116755,
                  "nodeType": "ExpressionStatement",
                  "src": "7799:34:127"
                }
              ]
            },
            "documentation": {
              "id": 116740,
              "nodeType": "StructuredDocumentation",
              "src": "7464:183:127",
              "text": "@notice Private function to set the request cooldown for every users\n @dev The new cooldown needs to be greater than 1 hour\n @param _requestCooldown The new cooldown"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setRequestCooldown",
            "nameLocation": "7661:19:127",
            "parameters": {
              "id": 116743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116742,
                  "mutability": "mutable",
                  "name": "_requestCooldown",
                  "nameLocation": "7689:16:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116757,
                  "src": "7681:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7681:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7680:26:127"
            },
            "returnParameters": {
              "id": 116744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7715:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 116789,
            "nodeType": "FunctionDefinition",
            "src": "8062:257:127",
            "nodes": [],
            "body": {
              "id": 116788,
              "nodeType": "Block",
              "src": "8141:178:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    116767
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116767,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "8159:5:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116788,
                      "src": "8151:13:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 116766,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8151:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 116771,
                  "initialValue": {
                    "baseExpression": {
                      "id": 116768,
                      "name": "tokenToIndices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116296,
                      "src": "8167:14:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$47419_$_t_uint256_$",
                        "typeString": "mapping(contract IERC20 => uint256)"
                      }
                    },
                    "id": 116770,
                    "indexExpression": {
                      "id": 116769,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116761,
                      "src": "8182:6:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$47419",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8167:22:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8151:38:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 116775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 116773,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116767,
                          "src": "8208:5:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 116774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8217:1:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8208:10:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420612066617563657420746f6b656e",
                        "id": 116776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8220:20:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        },
                        "value": "Not a faucet token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_51acbb0137dbfad630444fa7750127f3c1454547984d6c2362f0bc9f382d6ea0",
                          "typeString": "literal_string \"Not a faucet token\""
                        }
                      ],
                      "id": 116772,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8200:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8200:41:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116778,
                  "nodeType": "ExpressionStatement",
                  "src": "8200:41:127"
                },
                {
                  "expression": {
                    "id": 116786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 116779,
                          "name": "faucetTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116291,
                          "src": "8252:12:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_FaucetToken_$116273_storage_$dyn_storage",
                            "typeString": "struct Faucet.FaucetToken storage ref[] storage ref"
                          }
                        },
                        "id": 116783,
                        "indexExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 116782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 116780,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 116767,
                            "src": "8265:5:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 116781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8273:1:127",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "8265:9:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8252:23:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FaucetToken_$116273_storage",
                          "typeString": "struct Faucet.FaucetToken storage ref"
                        }
                      },
                      "id": 116784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "8276:16:127",
                      "memberName": "amountPerRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 116272,
                      "src": "8252:40:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 116785,
                      "name": "_amountPerRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116763,
                      "src": "8295:17:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "src": "8252:60:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "id": 116787,
                  "nodeType": "ExpressionStatement",
                  "src": "8252:60:127"
                }
              ]
            },
            "documentation": {
              "id": 116758,
              "nodeType": "StructuredDocumentation",
              "src": "7846:211:127",
              "text": "@notice Private function to set the amount per request of a specific token, designated by its symbol\n @param _token The address of the token\n @param _amountPerRequest The new amount per request"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAmountPerRequest",
            "nameLocation": "8071:20:127",
            "parameters": {
              "id": 116764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116761,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "8099:6:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116789,
                  "src": "8092:13:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$47419",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 116760,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 116759,
                      "name": "IERC20",
                      "nameLocations": [
                        "8092:6:127"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 47419,
                      "src": "8092:6:127"
                    },
                    "referencedDeclaration": 47419,
                    "src": "8092:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$47419",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116763,
                  "mutability": "mutable",
                  "name": "_amountPerRequest",
                  "nameLocation": "8114:17:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116789,
                  "src": "8107:24:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 116762,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "8107:6:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8091:41:127"
            },
            "returnParameters": {
              "id": 116765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8141:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 116812,
            "nodeType": "FunctionDefinition",
            "src": "8480:174:127",
            "nodes": [],
            "body": {
              "id": 116811,
              "nodeType": "Block",
              "src": "8539:115:127",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    116798,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 116798,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "8555:7:127",
                      "nodeType": "VariableDeclaration",
                      "scope": 116811,
                      "src": "8550:12:127",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 116797,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "8550:4:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 116805,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 116803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8592:2:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 116799,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116792,
                          "src": "8567:3:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 116800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "8571:4:127",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "8567:8:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 116802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 116801,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 116794,
                          "src": "8583:7:127",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "8567:24:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 116804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8567:28:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8549:46:127"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 116807,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 116798,
                        "src": "8613:7:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4154495645207472616e73666572206661696c6564",
                        "id": 116808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8622:24:127",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        },
                        "value": "NATIVE transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_accb95cda51b4f7c5df2ca881f7b95ec038afce74ac2b65c4f752659004ff53f",
                          "typeString": "literal_string \"NATIVE transfer failed\""
                        }
                      ],
                      "id": 116806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8605:7:127",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8605:42:127",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116810,
                  "nodeType": "ExpressionStatement",
                  "src": "8605:42:127"
                }
              ]
            },
            "documentation": {
              "id": 116790,
              "nodeType": "StructuredDocumentation",
              "src": "8325:150:127",
              "text": "@notice Private function to send `amount` NATIVE to `to`\n @param _to The recipient address\n @param _amount The NATIVE amount to send"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendNative",
            "nameLocation": "8489:11:127",
            "parameters": {
              "id": 116795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116792,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8509:3:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116812,
                  "src": "8501:11:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 116791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8501:7:127",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 116794,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8522:7:127",
                  "nodeType": "VariableDeclaration",
                  "scope": 116812,
                  "src": "8514:15:127",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 116793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8514:7:127",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8500:30:127"
            },
            "returnParameters": {
              "id": 116796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8539:0:127"
            },
            "scope": 116813,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 116261,
              "name": "Ownable2Step",
              "nameLocations": [
                "717:12:127"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46345,
              "src": "717:12:127"
            },
            "id": 116262,
            "nodeType": "InheritanceSpecifier",
            "src": "717:12:127"
          }
        ],
        "canonicalName": "Faucet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 116260,
          "nodeType": "StructuredDocumentation",
          "src": "238:460:127",
          "text": "@title Faucet contract\n @author Trader Joe\n @dev This contract should only be used for testnet\n @notice Create a faucet contract that create test tokens and allow user to request for tokens.\n This faucet will also provide NATIVE if native were sent to the contract (either during the construction or after).\n This contract will not fail if its native balance becomes too low, it will just not send NATIVE but will mint the different tokens."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          116813,
          46345,
          46259,
          48151
        ],
        "name": "Faucet",
        "nameLocation": "707:6:127",
        "scope": 116814,
        "usedErrors": [
          46125,
          46130,
          47462,
          47876,
          47881,
          47884
        ],
        "usedEvents": [
          46136,
          46274
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 127
}